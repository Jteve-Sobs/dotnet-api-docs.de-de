<Type Name="SecurityContext" FullName="System.Security.SecurityContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="deede5f5711f0e5c6d55042cdaff686a30670c86" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36423996" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6e4d7-101">Encapsulates and propagates all security-related data for execution contexts transferred across threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e4d7-101">Encapsulates and propagates all security-related data for execution contexts transferred across threads.</span>
      </span>
      <span data-ttu-id="6e4d7-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e4d7-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-103">Ein <xref:System.Security.SecurityContext> Objekt erfasst alle sicherheitsbezogene Informationen für einen logischen Thread, einschließlich der Informationen in den <xref:System.Security.Principal.WindowsIdentity> und <xref:System.Threading.CompressedStack> Objekte.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-103">A <xref:System.Security.SecurityContext> object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.</span></span>  <span data-ttu-id="6e4d7-104">Diese Konfiguration ermöglicht die Windows-Identität und die Sicherheitselemente im Stapel automatisch weitergegeben werden, wenn die <xref:System.Security.SecurityContext> kopiert und über asynchrone Threads übertragen wird.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-104">This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the <xref:System.Security.SecurityContext> is copied and transferred across asynchronous threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e4d7-105">Die common Language Runtime (CLR) ist bekannt, des Identitätswechsels, die Operationen mit nur verwaltetem Code, nicht des Identitätswechsels, die außerhalb von verwaltetem Code, z. B. über Plattform ausgeführt zu nicht verwaltetem Code oder durch direkte Aufrufe für Win32-Funktionen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-105">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="6e4d7-106">Nur verwaltete <xref:System.Security.Principal.WindowsIdentity> Objekte können über asynchrone Punkte übergeben, es sei denn, die `alwaysFlowImpersonationPolicy` Element vorsieht `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span><span class="sxs-lookup"><span data-stu-id="6e4d7-106">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="6e4d7-107">Festlegen der `alwaysFlowImpersonationPolicy` Element `true` gibt an, dass die Windows-Identität immer über asynchrone Punkte, unabhängig davon, wie Identitätswechsel durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-107">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="6e4d7-108">Weitere Informationen finden Sie Informationen zur Übergabe von nicht verwaltetem Identitätswechsel über asynchrone Punkte [ &lt;AlwaysFlowImpersonationPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span><span class="sxs-lookup"><span data-stu-id="6e4d7-108">For more information about flowing unmanaged impersonation across asynchronous points, see [&lt;alwaysFlowImpersonationPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 <span data-ttu-id="6e4d7-109">Die <xref:System.Security.SecurityContext> ist Teil der größeren <xref:System.Threading.ExecutionContext> und fließt oder migriert bei der <xref:System.Threading.ExecutionContext> fließt oder migriert.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-109">The <xref:System.Security.SecurityContext> is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e4d7-110">Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="6e4d7-111">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-111">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="6e4d7-112">Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="6e4d7-113">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6e4d7-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="6e4d7-114">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityContext ^ Capture();" />
      <MemberSignature Language="F#" Value="static member Capture : unit -&gt; System.Security.SecurityContext" Usage="System.Security.SecurityContext.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-115">Captures the security context for the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-115">Captures the security context for the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e4d7-116">The security context for the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-116">The security context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-117">Die erfassten Sicherheitskontext kann an einen anderen Thread angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-117">The captured security context can be applied to another thread.</span></span> <span data-ttu-id="6e4d7-118">Die <xref:System.Security.SecurityContext> besteht aus den <xref:System.Threading.CompressedStack> und <xref:System.Security.Principal.WindowsIdentity> des ausgeführten Threads.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-118">The <xref:System.Security.SecurityContext> consists of the <xref:System.Threading.CompressedStack> and the <xref:System.Security.Principal.WindowsIdentity> for the executing thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="member this.CreateCopy : unit -&gt; System.Security.SecurityContext" Usage="securityContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-119">Creates a copy of the current security context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-119">Creates a copy of the current security context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e4d7-120">The security context for the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-120">The security context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-121">Der aktuelle Kontext muss über eine Erfassung oder eines Kopiervorgangs abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-121">The current context must have been acquired through a capture or a copy operation.</span></span> <span data-ttu-id="6e4d7-122">Diese Methode ist nützlich für die Anwendung einen erfassten <xref:System.Security.SecurityContext> auf mehrere Threads.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-122">This method is useful for applying a captured <xref:System.Security.SecurityContext> to multiple threads.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6e4d7-123">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-123">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-124">Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-124">Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-125">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Security.SecurityContext> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-125">Call `Dispose` when you are finished using the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="6e4d7-126">Die `Dispose`-Methode bewirkt, dass <xref:System.Security.SecurityContext> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-126">The `Dispose` method leaves the <xref:System.Security.SecurityContext> in an unusable state.</span></span> <span data-ttu-id="6e4d7-127">Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.Security.SecurityContext> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Security.SecurityContext> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-127">After calling `Dispose`, you must release all references to the <xref:System.Security.SecurityContext> so the garbage collector can reclaim the memory that the <xref:System.Security.SecurityContext> was occupying.</span></span>  
  
 <span data-ttu-id="6e4d7-128">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="6e4d7-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e4d7-129">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Security.SecurityContext> freigeben.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-129">Always call `Dispose` before you release your last reference to the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="6e4d7-130">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.SecurityContext>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.SecurityContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-131">Determines whether the flow of the security context has been suppressed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-131">Determines whether the flow of the security context has been suppressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e4d7-132">
            <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-132">
              <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-133">Die <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> Methode wird von Infrastrukturkomponenten verwendet, um festzustellen, ob die Übertragung der <xref:System.Security.SecurityContext> Informationen während der asynchronen Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-133">The <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Security.SecurityContext> information during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowsIdentityFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsWindowsIdentityFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWindowsIdentityFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWindowsIdentityFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWindowsIdentityFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsWindowsIdentityFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-134">Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-134">Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e4d7-135">
            <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-135">
              <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-136">Die <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> Methode wird von Infrastrukturkomponenten verwendet, um festzustellen, ob die Windows-Identitätsinformationen übertragen bei der <xref:System.Security.SecurityContext> migriert, während der asynchronen Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-136">The <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the Windows identity information when the <xref:System.Security.SecurityContext> migrates during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberSignature Language="F#" Value="static member RestoreFlow : unit -&gt; unit" Usage="System.Security.SecurityContext.RestoreFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-137">Restores the flow of the security context across asynchronous threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-137">Restores the flow of the security context across asynchronous threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-138">Die <xref:System.Security.SecurityContext.RestoreFlow%2A> Methode wird aufgerufen, indem Sie die <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> Methode, um die Wirkung von einer früheren stornieren <xref:System.Security.SecurityContext.SuppressFlow%2A> -Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-138">The <xref:System.Security.SecurityContext.RestoreFlow%2A> method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> method to reverse the effect of a prior <xref:System.Security.SecurityContext.SuppressFlow%2A> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6e4d7-139">The security context is <see langword="null" /> or an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-139">The security context is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Security.SecurityContext securityContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Security::SecurityContext ^ securityContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member Run : System.Security.SecurityContext * System.Threading.ContextCallback * obj -&gt; unit" Usage="System.Security.SecurityContext.Run (securityContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityContext" Type="System.Security.SecurityContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="securityContext">
          <span data-ttu-id="6e4d7-140">The security context to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-140">The security context to set.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="6e4d7-141">The delegate that represents the method to run in the specified security context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-141">The delegate that represents the method to run in the specified security context.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="6e4d7-142">The object to pass to the callback method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-142">The object to pass to the callback method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e4d7-143">Runs the specified method in the specified security context on the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-143">Runs the specified method in the specified security context on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-144">Der Sicherheitskontext für den aktuellen Thread wird den ursprünglichen Zustand zurückgegeben, wenn der Methodenaufruf abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-144">The security context for the current thread is returned to its previous state when the method call is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4d7-145">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.SecurityContext.Run%2A> Methode, um eine Methode in einem angegebenen Sicherheitskontext ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-145">The following code example shows how to use the <xref:System.Security.SecurityContext.Run%2A> method to execute a method in a specified security context.</span></span>  
  
 [!code-csharp[System.Security.SecurityContext.Run#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/CS/form1.cs#1)]
 [!code-vb[System.Security.SecurityContext.Run#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6e4d7-146">
            <paramref name="securityContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-146">
              <paramref name="securityContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6e4d7-147">-or-  <paramref name="securityContext" /> was not acquired through a capture operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-147">-or-  <paramref name="securityContext" /> was not acquired through a capture operation.</span>
          </span>
          <span data-ttu-id="6e4d7-148">-or-  <paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-148">-or-  <paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6e4d7-149">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-149">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6e4d7-150">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-150">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberSignature Language="F#" Value="static member SuppressFlow : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-151">Suppresses the flow of the security context across asynchronous threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-151">Suppresses the flow of the security context across asynchronous threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e4d7-152">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-152">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-153">Mit dieser Methode können Sie den Fluss der unterdrücken <xref:System.Security.SecurityContext> Informationen für den aktuellen Thread für asynchrone Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-153">Use this method to suppress the flow of <xref:System.Security.SecurityContext> information on the current thread for asynchronous operations.</span></span>  
  
 <span data-ttu-id="6e4d7-154">Die common Language Runtime (CLR) ist nur Beachten Sie die Identitätswechsel-Vorgänge, die mit verwaltetem Code durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-154">The common language runtime (CLR) is only aware of the impersonation operations performed using managed code.</span></span> <span data-ttu-id="6e4d7-155">Die CLR besitzt keine Kenntnis des Identitätswechsels, die außerhalb von verwaltetem Code ausgeführt, wie Plattformaufrufe an nicht verwalteten Code, der die Identitätswechsel ausführt, oder durch Aufrufen von Win32-Funktionen.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-155">The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions.</span></span> <span data-ttu-id="6e4d7-156">Fluss Identität über asynchrone Punkte müssen Sie die verwaltete verwenden <xref:System.Security.Principal.WindowsIdentity> und <xref:System.Security.Principal.WindowsImpersonationContext> Methoden.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-156">To flow identity across asynchronous points you must use the managed <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Security.Principal.WindowsImpersonationContext> methods.</span></span>  
  
 <span data-ttu-id="6e4d7-157">Verwenden der <xref:System.Threading.AsyncFlowControl.Undo%2A> Methode für das zurückgegebene <xref:System.Threading.AsyncFlowControl> Struktur zurückzugebenden der <xref:System.Security.SecurityContext> Objekt, das den ursprünglichen Zustand.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-157">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
 <span data-ttu-id="6e4d7-158">Diese Methode wird geschützt, mit einem <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> für <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-158">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="6e4d7-159">Eine vollständig vertrauenswürdige Komponente kann diese Methode unterdrückt den Fluss von Aufrufen der <xref:System.Security.SecurityContext> Informationen bei asynchronen Aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-159">A fully trusted component can call this method to suppress the flow of the <xref:System.Security.SecurityContext> information during asynchronous calls.</span></span> <span data-ttu-id="6e4d7-160">Wenn der Fluss unterdrückt wird, die <xref:System.Security.SecurityContext.Capture%2A> -Methode zurückkehrt `null`.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-160">When the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6e4d7-161">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-161">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6e4d7-162">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-162">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlowWindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlowWindowsIdentity () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlowWindowsIdentity();" />
      <MemberSignature Language="F#" Value="static member SuppressFlowWindowsIdentity : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlowWindowsIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e4d7-163">Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-163">Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e4d7-164">A structure for restoring the flow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-164">A structure for restoring the flow.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4d7-165">Verwenden Sie diese Methode, um den Fluss der Windows-Identität zu unterdrücken. wenn die <xref:System.Security.SecurityContext> über asynchrone Threads migriert.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-165">Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.</span></span>  
  
 <span data-ttu-id="6e4d7-166">Verwenden der <xref:System.Threading.AsyncFlowControl.Undo%2A> Methode für das zurückgegebene <xref:System.Threading.AsyncFlowControl> Struktur zurückzugebenden der <xref:System.Security.SecurityContext> Objekt, das den ursprünglichen Zustand.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-166">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e4d7-167">Die common Language Runtime (CLR) ist bekannt, des Identitätswechsels, die Operationen mit nur verwaltetem Code, nicht des Identitätswechsels, die außerhalb von verwaltetem Code, z. B. über Plattform ausgeführt zu nicht verwaltetem Code oder durch direkte Aufrufe für Win32-Funktionen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-167">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="6e4d7-168">Nur verwaltete <xref:System.Security.Principal.WindowsIdentity> Objekte können über asynchrone Punkte übergeben, es sei denn, die `alwaysFlowImpersonationPolicy` Element vorsieht `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span><span class="sxs-lookup"><span data-stu-id="6e4d7-168">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="6e4d7-169">Festlegen der `alwaysFlowImpersonationPolicy` Element `true` gibt an, dass die Windows-Identität immer über asynchrone Punkte, unabhängig davon, wie Identitätswechsel durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="6e4d7-169">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="6e4d7-170">Weitere Informationen finden Sie Informationen zur Übergabe von nicht verwaltetem Identitätswechsel über asynchrone Punkte [ \<AlwaysFlowImpersonationPolicy >-Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span><span class="sxs-lookup"><span data-stu-id="6e4d7-170">For more information about flowing unmanaged impersonation across asynchronous points, see [\<alwaysFlowImpersonationPolicy> Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6e4d7-171">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-171">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6e4d7-172">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e4d7-172">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>