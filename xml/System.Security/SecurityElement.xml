<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec7af69e8387feb777d27fd236565f8d063b8341" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36527508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ff92-101">Represents the XML object model for encoding security objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ff92-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="1ff92-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ff92-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-103">Diese Klasse dient eine einfache Implementierung eines einfachen XML-Objektmodells für die Verwendung in das Sicherheitssystem und nicht für die Verwendung als eine allgemeine XML-Objektmodell werden.</span><span class="sxs-lookup"><span data-stu-id="1ff92-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="1ff92-104">Diese Dokumentation setzt grundlegende Kenntnisse des XML-Codes.</span><span class="sxs-lookup"><span data-stu-id="1ff92-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="1ff92-105">Das einfache XML-Objektmodell für ein Element besteht aus den folgenden Teilen:</span><span class="sxs-lookup"><span data-stu-id="1ff92-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="1ff92-106">Das Tag ist der Elementname.</span><span class="sxs-lookup"><span data-stu-id="1ff92-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="1ff92-107">Die Attribute sind NULL oder mehr Attributpaare aus Name-Wert für das Element.</span><span class="sxs-lookup"><span data-stu-id="1ff92-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="1ff92-108">Die untergeordneten Elemente sind 0 (null) oder mehr Elemente geschachtelt `<tag>` und `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="1ff92-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="1ff92-109">Es wird dringend empfohlen, dass die attributbasierte XML-Darstellung verwendet wird, um Sicherheitselemente und deren Werte auszudrücken.</span><span class="sxs-lookup"><span data-stu-id="1ff92-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="1ff92-110">Dies bedeutet, dass Eigenschaften eines Elements werden als Attribute und Eigenschaftswerte als Attributwerte ausgedrückt werden.</span><span class="sxs-lookup"><span data-stu-id="1ff92-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="1ff92-111">Vermeiden Sie die Schachtelung von Text innerhalb der Tags.</span><span class="sxs-lookup"><span data-stu-id="1ff92-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="1ff92-112">Für eine beliebige `<tag>text</tag>` Darstellung eine Darstellung des Typs `<tag value="text"/>` finden Sie in der Regel.</span><span class="sxs-lookup"><span data-stu-id="1ff92-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="1ff92-113">Mit diesem Attribut-basierter XML-Darstellung erhöht die Lesbarkeit und ermöglicht das einfache WMI-Portabilität der resultierenden XML-Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="1ff92-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="1ff92-114">Ein Attributname muss eine Zeichen- oder länger sein und darf nicht sein `null`.</span><span class="sxs-lookup"><span data-stu-id="1ff92-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="1ff92-115">Wenn Darstellung Element basierenden Wert verwendet wird, Elemente mit einer Zeichenfolge, die `null` dargestellt werden, der `<tag/>` bilden; andernfalls Text als Trennzeichen dienen die `<tag>` und `</tag>` Token.</span><span class="sxs-lookup"><span data-stu-id="1ff92-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="1ff92-116">Bei beiden Formen mit Attributen, die angezeigt werden können kombiniert werden, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="1ff92-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="1ff92-117">Die Tags, Attribute und Text von Elementen, sind angefordertes immer Groß-/Kleinschreibung beachtet.</span><span class="sxs-lookup"><span data-stu-id="1ff92-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="1ff92-118">Die XML-Form enthält Angebote und versieht bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="1ff92-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="1ff92-119">Zeichenfolgenwerte, die für die Verwendung ungültige Zeichen in XML enthalten führen eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1ff92-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1ff92-120">Diese Regeln gelten für alle Eigenschaften und Methoden.</span><span class="sxs-lookup"><span data-stu-id="1ff92-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1ff92-121">Aus Gründen der Leistung ist Gültigkeit nur aktiviert, wenn das Element in XML-Text-Format und nicht bei jedem Festlegen einer Eigenschaft oder Methode codiert ist.</span><span class="sxs-lookup"><span data-stu-id="1ff92-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="1ff92-122">Statische Methoden ermöglichen eine explizite Überprüfung bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="1ff92-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-123">Das folgende Beispiel zeigt die Verwendung von Membern der <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1ff92-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="1ff92-125">The tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-127">Die `tag` Parameter muss einem gültigen XML-Tagnamen bestehen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="1ff92-128">Verwendung <xref:System.Security.SecurityElement.Escape%2A> So entfernen Sie ungültige Zeichen aus der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1ff92-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-129">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.%23ctor%2A> Konstruktor zum Erstellen eines neuen <xref:System.Security.SecurityElement> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1ff92-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="1ff92-130">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ff92-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="1ff92-133">The tag name of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="1ff92-134">The text content within the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-136">Wenn die `text` Parameter ist `null` dieser Konstruktor erstellt ein Element mit dem Standardkonstruktor identisch.</span><span class="sxs-lookup"><span data-stu-id="1ff92-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ff92-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1ff92-139">The name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1ff92-140">The value of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-141">Adds a name/value attribute to an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-142">Namen und Werte in Attributen sollten nur gültige XML-Attributzeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="1ff92-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="1ff92-143">XML-Attributnamen müssen eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="1ff92-143">XML attribute names must be unique.</span></span> <span data-ttu-id="1ff92-144">Verwendung <xref:System.Security.SecurityElement.Escape%2A> So entfernen Sie ungültige Zeichen aus der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1ff92-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="1ff92-145">Es ist keine Unterstützung für Zeichenfolgen in Anführungszeichen, sodass Zeichenfolgen für Name/Wert-Paare nicht Anführungszeichen enthalten soll oder andere Zeichen, die Anführungszeichen erfordern.</span><span class="sxs-lookup"><span data-stu-id="1ff92-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-146">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.AddAttribute%2A> Methode, um ein XML-Element ein Name/Wert-Attribut hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="1ff92-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="1ff92-147">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ff92-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="1ff92-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="1ff92-151">The child element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-151">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-152">Adds a child element to the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-152">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-153">Das untergeordnete Element hinzugefügt wird, befolgen alle zuvor vorhandenen untergeordneten Elemente.</span><span class="sxs-lookup"><span data-stu-id="1ff92-153">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-154">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.AddChild%2A> Methode das XML-Element ein untergeordnetes Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="1ff92-154">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="1ff92-155">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-155">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1ff92-157">The name of the attribute for which to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-157">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-158">Finds an attribute by name in an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-158">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-160">Durch XML-Code wie folgt `Attribute("B")` "456" zurück.</span><span class="sxs-lookup"><span data-stu-id="1ff92-160">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-161">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.Attribute%2A> Methode, um ein Attribut nach Namen zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="1ff92-161">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="1ff92-162">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-162">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ff92-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ff92-165">Die <see cref="T:System.Collections.Hashtable" /> Objekt für die Attributwerte des XML-Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-165">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-166">Jedes Attribut befindet sich in der <xref:System.Collections.Hashtable> als Name/Wert-Paar.</span><span class="sxs-lookup"><span data-stu-id="1ff92-166">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="1ff92-167">Namen und Werte in Attribute sollten nur gültige XML-Attributzeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="1ff92-167">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="1ff92-168">Verwendung <xref:System.Security.SecurityElement.Escape%2A> So entfernen Sie ungültige Zeichen aus der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1ff92-168">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="1ff92-169">Es ist keine Unterstützung für Zeichenfolgen in Anführungszeichen, sodass Zeichenfolgen für Name/Wert-Paare nicht Anführungszeichen enthalten soll oder andere Zeichen, die Anführungszeichen erfordern.</span><span class="sxs-lookup"><span data-stu-id="1ff92-169">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-170">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.Attributes%2A> Eigenschaft, um ein Attribut eines XML-Elements abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-170">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="1ff92-171">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-171">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="1ff92-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ff92-173">The name is not a valid XML attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-173">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ff92-174">Gets or sets the array of child elements of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-174">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ff92-175">Die geordnete untergeordneten Elemente des XML-Elements als Sicherheitselemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-175">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-176">Wenn eine <xref:System.Security.SecurityElement> enthält sowohl <xref:System.Security.SecurityElement.Text%2A> und <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> zuerst angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1ff92-176">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-177">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.Children%2A> Eigenschaft, um das Array der untergeordneten Elemente des XML-Elements abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-177">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="1ff92-178">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-178">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ff92-179">A child of the XML parent node is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-179">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ff92-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-182">Die Kopie enthält sowohl die <xref:System.Security.SecurityElement.Children%2A> und <xref:System.Security.SecurityElement.Attributes%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1ff92-182">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1ff92-183">An XML element object to which to compare the current XML element object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-183">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-184">Compares two XML element objects for equality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-184">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-185">
            <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-185">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-186">Wenn untergeordnete Elemente vorhanden sind, wird der Vergleich rekursiv auf sie.</span><span class="sxs-lookup"><span data-stu-id="1ff92-186">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="1ff92-187">Es gibt keine Unterstützung für den Vergleich von verschiedenen XML-Darstellungen derselben Zeichen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-187">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-188">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.Equal%2A> Methode zum Vergleichen von zwei XML-Elementen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-188">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="1ff92-189">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-189">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="1ff92-190">The string within which to escape invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-190">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-192">The input string with invalid characters replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-192">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-193">Mit dieser Methode können um ungültige Zeichen in einer Zeichenfolge zu ersetzen, bevor Sie mit der Zeichenfolge in eine <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="1ff92-193">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="1ff92-194">Wenn ein ungültige Zeichen, in verwendet werden eine <xref:System.Security.SecurityElement> ohne mit Escapezeichen versehen wird, eine <xref:System.ArgumentException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1ff92-194">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="1ff92-195">Die folgende Tabelle zeigt die ungültigen XML-Zeichen und die entsprechenden Escapezeichen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-195">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="1ff92-196">Ungültiges XML-Zeichen</span><span class="sxs-lookup"><span data-stu-id="1ff92-196">Invalid XML character</span></span> | <span data-ttu-id="1ff92-197">Ersetzt durch</span><span class="sxs-lookup"><span data-stu-id="1ff92-197">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="1ff92-198">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.Escape%2A> -Methode zum Ersetzen ungültiger XML-Zeichen in einer Zeichenfolge durch das gültige XML-Äquivalent.</span><span class="sxs-lookup"><span data-stu-id="1ff92-198">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="1ff92-199">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-199">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="1ff92-200">The XML-encoded string from which to create the security element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-200">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-201">Creates a security element from an XML-encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-201">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-203">Verwenden Sie keine einfachen Anführungszeichen in der XML-Zeichenfolge. Verwenden Sie stattdessen mit Escapezeichen versehene doppelte Anführungszeichen ein.</span><span class="sxs-lookup"><span data-stu-id="1ff92-203">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="1ff92-204">Beispielsweise anstelle von "`<value name='Company'>Microsoft</value>"` verwenden"`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="1ff92-204">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="1ff92-205">Einfache Anführungszeichen können entweder eine Ausnahme ausgelöst wird, oder in einigen Fällen die einfachen Anführungszeichen als Text in der Zeichenfolge behandelt ergeben.</span><span class="sxs-lookup"><span data-stu-id="1ff92-205">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="1ff92-206">
            <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-206">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-207">
            <paramref name="xml" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-207">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1ff92-208">The attribute name to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-208">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-209">Determines whether a string is a valid attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-209">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-210">
            <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-210">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-211">Diese Methode kann verwendet werden, um ein Attribut zu testen, bevor es kein Element hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="1ff92-211">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-212">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.IsValidAttributeName%2A> Methode, um zu bestimmen, ob eine Zeichenfolge ein gültiger Attributname ist.</span><span class="sxs-lookup"><span data-stu-id="1ff92-212">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="1ff92-213">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-213">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ff92-214">The attribute value to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-214">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-215">Determines whether a string is a valid attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-215">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-216">
            <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-216">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-217">Diese Methode kann verwendet werden, um ein Attribut zu testen, bevor es kein Element hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="1ff92-217">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-218">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> Methode, um zu bestimmen, ob eine Zeichenfolge ein gültiges Attribut-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="1ff92-218">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="1ff92-219">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-219">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="1ff92-220">The tag to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-220">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-221">Determines whether a string is a valid tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-221">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-222">
            <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-222">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-223">Dies kann verwendet werden, um zu testen einer <xref:System.Security.SecurityElement.Tag%2A> vor dem festlegen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-223">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-224">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.IsValidTag%2A> Methode, um zu bestimmen, ob eine Zeichenfolge ein gültiges Attributtag ist.</span><span class="sxs-lookup"><span data-stu-id="1ff92-224">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="1ff92-225">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-225">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="1ff92-226">The text to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-226">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-227">Determines whether a string is valid as text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-227">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-228">
            <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-228">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-229">Diese Methode kann verwendet werden, um zu testen <xref:System.Security.SecurityElement.Text%2A> vor dem festlegen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-229">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-230">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.IsValidText%2A> Methode, um zu bestimmen, ob eine Zeichenfolge als XML-Element-Text ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="1ff92-230">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="1ff92-231">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-231">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="1ff92-232">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-232">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-233">Finds a child by its tag name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-233">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-235">Durch XML-Code wie folgt `SearchForChildByTag("second")` würde das untergeordnete Element zurückgeben `<second>`.</span><span class="sxs-lookup"><span data-stu-id="1ff92-235">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-236">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.SearchForChildByTag%2A> Methode, um ein untergeordnetes Element mit dem Tagnamen zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="1ff92-236">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="1ff92-237">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-237">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="1ff92-239">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-239">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ff92-240">Finds a child by its tag name and returns the contained text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-240">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-241">The text contents of the first child element with the specified tag value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-241">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-242">Diese Methode ist äquivalent zu folgendem:</span><span class="sxs-lookup"><span data-stu-id="1ff92-242">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="1ff92-243">Durch XML-Code wie folgt `SearchForTextOfTag("second")` "text2" zurück.</span><span class="sxs-lookup"><span data-stu-id="1ff92-243">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-244">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> Methode zum Suchen eines untergeordneten Elements mit dem Tagnamen und die darin enthaltenen Text zurück.</span><span class="sxs-lookup"><span data-stu-id="1ff92-244">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="1ff92-245">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-245">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-246">
            <paramref name="tag" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-246">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ff92-247">Gets or sets the tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-247">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ff92-248">Der Tagname eines XML-Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-248">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-249">In XML wird das Tag in das Skript wie unten angezeigt wird:</span><span class="sxs-lookup"><span data-stu-id="1ff92-249">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="1ff92-250">Wenn dieses Element über untergeordnete Elemente verfügt, ersetzt die untergeordneten Elemente `text`.</span><span class="sxs-lookup"><span data-stu-id="1ff92-250">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="1ff92-251">Diese Eigenschaft wird nur gültige XML-Tag-Zeichenfolgen zuweisen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-251">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="1ff92-252">Verwendung <xref:System.Security.SecurityElement.Escape%2A> So entfernen Sie ungültige Zeichen aus der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1ff92-252">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-253">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.Tag%2A> Eigenschaft, um den Tagnamen eines XML-Elements abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-253">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="1ff92-254">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-254">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ff92-255">The tag is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-255">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ff92-256">The tag is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-256">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ff92-257">Gets or sets the text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-257">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ff92-258">Der Wert des Texts in einem XML-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-258">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-259">Der Text darf keine XML-Sonderzeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="1ff92-259">The text should not contain XML special characters.</span></span> <span data-ttu-id="1ff92-260">Verwendung <xref:System.Security.SecurityElement.Escape%2A> So entfernen Sie ungültige Zeichen aus der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1ff92-260">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="1ff92-261">Wenn eine <xref:System.Security.SecurityElement> enthält sowohl <xref:System.Security.SecurityElement.Text%2A> und <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> zuerst angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1ff92-261">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ff92-262">Der folgende Code zeigt die Verwendung der <xref:System.Security.SecurityElement.Text%2A> Eigenschaft beim Abrufen des Texts eines XML-Elements.</span><span class="sxs-lookup"><span data-stu-id="1ff92-262">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="1ff92-263">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.SecurityElement> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1ff92-263">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ff92-264">The text is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-264">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ff92-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ff92-266">The XML element and its contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ff92-266">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ff92-267">Diese Methode ist hilfreich beim Debuggen, um die XML-Darstellung des Elements anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="1ff92-267">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>