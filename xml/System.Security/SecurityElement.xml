<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f4330dc218789968f8f4a1ad22ea0ae6e23a218" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399537" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="14fbf-101">Stellt das XML-Objektmodell zum Codieren von Sicherheitsobjekten dar.</span><span class="sxs-lookup"><span data-stu-id="14fbf-101">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="14fbf-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="14fbf-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-103">Diese Klasse soll eine einfache Implementierung eines einfachen XML-Objektmodells zur Verwendung innerhalb des Sicherheitssystems sein und nicht als allgemeines XML-Objektmodell verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="14fbf-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="14fbf-104">In dieser Dokumentation werden grundlegende Kenntnisse von XML vorausgesetzt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="14fbf-105">Das einfache XML-Objektmodell für ein Element besteht aus den folgenden Teilen:</span><span class="sxs-lookup"><span data-stu-id="14fbf-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="14fbf-106">Das-Tag ist der Elementname.</span><span class="sxs-lookup"><span data-stu-id="14fbf-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="14fbf-107">Die Attribute sind 0 (null) oder mehr Name/Wert-Attribut Paare im-Element.</span><span class="sxs-lookup"><span data-stu-id="14fbf-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="14fbf-108">Die untergeordneten Elemente sind NULL oder mehr Elemente, `<tag>` die `</tag>`in und geschachtelt sind.</span><span class="sxs-lookup"><span data-stu-id="14fbf-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="14fbf-109">Es wird dringend empfohlen, dass die Attribut basierte XML-Darstellung verwendet wird, um Sicherheitselemente und deren Werte auszudrücken.</span><span class="sxs-lookup"><span data-stu-id="14fbf-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="14fbf-110">Dies bedeutet, dass Eigenschaften eines Elements als Attribute ausgedrückt werden und Eigenschaftswerte als Attributwerte ausgedrückt werden.</span><span class="sxs-lookup"><span data-stu-id="14fbf-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="14fbf-111">Vermeiden Sie das Schachteln von Text in Tags.</span><span class="sxs-lookup"><span data-stu-id="14fbf-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="14fbf-112">Für jede `<tag>text</tag>` Darstellung ist eine Darstellung des `<tag value="text"/>` Typs normalerweise verfügbar.</span><span class="sxs-lookup"><span data-stu-id="14fbf-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="14fbf-113">Die Verwendung dieser Attribut basierten XML-Darstellung erhöht die Lesbarkeit und ermöglicht eine einfache WMI-Portabilität der resultierenden XML-Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="14fbf-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="14fbf-114">Ein Attribut Name muss ein Zeichen oder länger sein und darf nicht sein `null`.</span><span class="sxs-lookup"><span data-stu-id="14fbf-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="14fbf-115">Wenn die Darstellung eines Element basierten Werts `null` verwendet wird, werden Elemente mit einer Text Zeichenfolge, die `<tag/>` im Formular dargestellt werden, andernfalls durch das-Token und das `<tag>` - `</tag>` Token begrenzt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="14fbf-116">Beide Formulare können mit Attributen kombiniert werden, die angezeigt werden, wenn Sie vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="14fbf-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="14fbf-117">Bei den Tags, Attributen und Text von Elementen wird die Groß-/Kleinschreibung immer beachtet, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="14fbf-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="14fbf-118">Das XML-Formular enthält ggf. Anführungszeichen und Escapezeichen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="14fbf-119">Zeichen folgen Werte, die Zeichen enthalten, die für die <xref:System.ArgumentException>Verwendung in XML ungültig sind, resultieren in.</span><span class="sxs-lookup"><span data-stu-id="14fbf-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="14fbf-120">Diese Regeln gelten für alle Eigenschaften und Methoden.</span><span class="sxs-lookup"><span data-stu-id="14fbf-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14fbf-121">Aus Leistungsgründen wird die Zeichen Gültigkeit nur überprüft, wenn das Element in ein XML-Textformular codiert wird, nicht jedoch für jeden Satz einer Eigenschaft oder Methode.</span><span class="sxs-lookup"><span data-stu-id="14fbf-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="14fbf-122">Statische Methoden ermöglichen eine explizite Überprüfung bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="14fbf-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-123">Das folgende Beispiel zeigt die Verwendung von Membern der <xref:System.Security.SecurityElement> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="14fbf-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14fbf-124">Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="14fbf-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="14fbf-125">Der Tagname eines XML-Elements.</span><span class="sxs-lookup"><span data-stu-id="14fbf-125">The tag name of an XML element.</span></span></param>
        <summary><span data-ttu-id="14fbf-126">Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityElement" />-Klasse mit dem angegebenen Tag.</span><span class="sxs-lookup"><span data-stu-id="14fbf-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-127">Der `tag` -Parameter muss aus einem gültigen XML-Tagnamen bestehen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="14fbf-128">Verwenden <xref:System.Security.SecurityElement.Escape%2A> Sie, um ungültige Zeichen aus der Zeichenfolge zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-129">Der folgende Code zeigt die Verwendung des <xref:System.Security.SecurityElement.%23ctor%2A> -Konstruktors zum Erstellen eines neuen <xref:System.Security.SecurityElement> -Objekts.</span><span class="sxs-lookup"><span data-stu-id="14fbf-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="14fbf-130">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-131">Der <paramref name="tag" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14fbf-132">Der <paramref name="tag" />-Parameter ist in XML ungültig.</span><span class="sxs-lookup"><span data-stu-id="14fbf-132">The <paramref name="tag" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="14fbf-133">Der Tagname des XML-Elements.</span><span class="sxs-lookup"><span data-stu-id="14fbf-133">The tag name of the XML element.</span></span></param>
        <param name="text"><span data-ttu-id="14fbf-134">Der Textinhalt im Element.</span><span class="sxs-lookup"><span data-stu-id="14fbf-134">The text content within the element.</span></span></param>
        <summary><span data-ttu-id="14fbf-135">Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityElement" />-Klasse mit dem angegebenen Tag und Text.</span><span class="sxs-lookup"><span data-stu-id="14fbf-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-136">Wenn der `text` -Parameter `null` ist, erstellt dieser Konstruktor ein Element, das mit dem Parameter losen Konstruktor identisch ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-136">If the `text` parameter is `null` this constructor produces an element identical to the parameterless constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-137">Der <paramref name="tag" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14fbf-138">Der <paramref name="tag" />-Parameter bzw. <paramref name="text" />-Parameter is ist in XML ungültig.</span><span class="sxs-lookup"><span data-stu-id="14fbf-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="14fbf-139">Der Name des Attributs.</span><span class="sxs-lookup"><span data-stu-id="14fbf-139">The name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="14fbf-140">Der Wert des Attributs.</span><span class="sxs-lookup"><span data-stu-id="14fbf-140">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="14fbf-141">Fügt einem XML-Element ein Name-/Wert-Attribut hinzu.</span><span class="sxs-lookup"><span data-stu-id="14fbf-141">Adds a name/value attribute to an XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-142">Namen und Werte in Attributen sollten nur gültige XML-Attribut Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="14fbf-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="14fbf-143">XML-Attributnamen müssen eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="14fbf-143">XML attribute names must be unique.</span></span> <span data-ttu-id="14fbf-144">Verwenden <xref:System.Security.SecurityElement.Escape%2A> Sie, um ungültige Zeichen aus der Zeichenfolge zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="14fbf-145">Es gibt keine Unterstützung für Zeichen folgen in Anführungszeichen, sodass Zeichen folgen für Name-Wert-Paare keine Anführungszeichen oder andere Zeichen enthalten, die Anführungszeichen erfordern.</span><span class="sxs-lookup"><span data-stu-id="14fbf-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-146">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.AddAttribute%2A> der-Methode zum Hinzufügen eines Name-Wert-Attributs zu einem XML-Element.</span><span class="sxs-lookup"><span data-stu-id="14fbf-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="14fbf-147">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-148">Der <paramref name="name" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14fbf-149">Der <paramref name="name" />-Parameter bzw. <paramref name="value" />-Parameter is ist in XML ungültig.</span><span class="sxs-lookup"><span data-stu-id="14fbf-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span></span>  
  
<span data-ttu-id="14fbf-150">- oder -</span><span class="sxs-lookup"><span data-stu-id="14fbf-150">-or-</span></span> 
<span data-ttu-id="14fbf-151">Ein Attribut mit dem vom <paramref name="name" />-Parameter angegebenen Namen ist bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="14fbf-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="14fbf-152">Das hinzuzufügende untergeordnete Element.</span><span class="sxs-lookup"><span data-stu-id="14fbf-152">The child element to add.</span></span></param>
        <summary><span data-ttu-id="14fbf-153">Fügt dem XML-Element ein untergeordnetes Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="14fbf-153">Adds a child element to the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-154">Das untergeordnete Element wird nach allen zuvor vorhandenen untergeordneten Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-155">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.AddChild%2A> der-Methode, um dem XML-Element ein untergeordnetes Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="14fbf-156">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-157">Der <paramref name="child" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-157">The <paramref name="child" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="14fbf-158">Der Name des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="14fbf-158">The name of the attribute for which to search.</span></span></param>
        <summary><span data-ttu-id="14fbf-159">Sucht in einem XML-Element ein Attribut nach Namen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-159">Finds an attribute by name in an XML element.</span></span></summary>
        <returns><span data-ttu-id="14fbf-160">Der dem benannten Attribut zugeordnete Wert, oder <see langword="null" />, wenn kein Attribut mit <paramref name="name" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-161">Bei Verwendung von XML wird `Attribute("B")` wie folgt "456" zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="14fbf-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-162">Der folgende Code zeigt die Verwendung der- <xref:System.Security.SecurityElement.Attribute%2A> Methode, um ein Attribut anhand des Namens zu suchen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="14fbf-163">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-164">Der <paramref name="name" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-164">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14fbf-165">Ruft die Attribute eines XML-Elements als Name-/Wertpaare ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="14fbf-165">Gets or sets the attributes of an XML element as name/value pairs.</span></span></summary>
        <value><span data-ttu-id="14fbf-166">Das <see cref="T:System.Collections.Hashtable" />-Objekt für die Attributwerte des XML-Elements.</span><span class="sxs-lookup"><span data-stu-id="14fbf-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-167">Jedes Attribut wird in <xref:System.Collections.Hashtable> als Name/Wert-Paar gespeichert.</span><span class="sxs-lookup"><span data-stu-id="14fbf-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="14fbf-168">Namen und Werte in Attributen sollten nur gültige XML-Attribut Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="14fbf-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="14fbf-169">Verwenden <xref:System.Security.SecurityElement.Escape%2A> Sie, um ungültige Zeichen aus der Zeichenfolge zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="14fbf-170">Es gibt keine Unterstützung für Zeichen folgen in Anführungszeichen, sodass Zeichen folgen für Name-Wert-Paare keine Anführungszeichen oder andere Zeichen enthalten, die Anführungszeichen erfordern.</span><span class="sxs-lookup"><span data-stu-id="14fbf-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-171">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.Attributes%2A> der-Eigenschaft, um ein Attribut eines XML-Elements zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="14fbf-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="14fbf-172">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="14fbf-173">Der Name oder der Wert des <see cref="T:System.Collections.Hashtable" />-Objekts ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="14fbf-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14fbf-174">Der Name ist kein gültiger XML-Attributname.</span><span class="sxs-lookup"><span data-stu-id="14fbf-174">The name is not a valid XML attribute name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14fbf-175">Ruft das Array von untergeordneten Elementen des XML-Elements ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="14fbf-175">Gets or sets the array of child elements of the XML element.</span></span></summary>
        <value><span data-ttu-id="14fbf-176">Die geordneten untergeordneten Elemente des XML-Elements als Sicherheitselemente.</span><span class="sxs-lookup"><span data-stu-id="14fbf-176">The ordered child elements of the XML element as security elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-177">Wenn eine <xref:System.Security.SecurityElement> <xref:System.Security.SecurityElement.Text%2A> sowohl als auch <xref:System.Security.SecurityElement.Children%2A>enthält <xref:System.Security.SecurityElement.Text%2A> , wird zuerst angezeigt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-178">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.Children%2A> der-Eigenschaft, um das Array von untergeordneten Elementen des XML-Elements zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="14fbf-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="14fbf-179">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14fbf-180">Ein untergeordnetes Element des übergeordneten XML-Knotens ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-180">A child of the XML parent node is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14fbf-181">Erstellt eine identische Kopie des aktuellen <see cref="T:System.Security.SecurityElement" />-Objekts und gibt diese zurück.</span><span class="sxs-lookup"><span data-stu-id="14fbf-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></summary>
        <returns><span data-ttu-id="14fbf-182">Eine Kopie des aktuellen <see cref="T:System.Security.SecurityElement" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="14fbf-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-183">Die Kopie enthält sowohl die <xref:System.Security.SecurityElement.Children%2A> - <xref:System.Security.SecurityElement.Attributes%2A> als auch die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="14fbf-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="14fbf-184">Ein XML-Elementobjekt, mit dem das aktuelle XML-Elementobjekt verglichen wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-184">An XML element object to which to compare the current XML element object.</span></span></param>
        <summary><span data-ttu-id="14fbf-185">Prüft zwei XML-Elementobjekte auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="14fbf-185">Compares two XML element objects for equality.</span></span></summary>
        <returns><span data-ttu-id="14fbf-186"><see langword="true" />, wenn das Tag, die Attributnamen und -werte, die untergeordneten Elemente und die Textfelder im aktuellen XML-Element mit denen im <paramref name="other" />-Parameter identisch sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-186"><see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-187">Wenn untergeordnete Elemente vorhanden sind, wird der Vergleich rekursiv auf Sie ausgedehnt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="14fbf-188">Es wird nicht unterstützt, verschiedene XML-Darstellungen derselben Zeichen zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-189">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.Equal%2A> der-Methode, um zwei XML-Elemente zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="14fbf-190">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="14fbf-191">Die Zeichenfolge, in der ungültige Zeichen in Escapezeichen umzuwandeln sind.</span><span class="sxs-lookup"><span data-stu-id="14fbf-191">The string within which to escape invalid characters.</span></span></param>
        <summary><span data-ttu-id="14fbf-192">Ersetzt ungültige XML-Zeichen in einer Zeichenfolge durch die gültigen XML-Äquivalente.</span><span class="sxs-lookup"><span data-stu-id="14fbf-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span></span></summary>
        <returns><span data-ttu-id="14fbf-193">Die Eingabezeichenfolge mit den ersetzten ungültigen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-193">The input string with invalid characters replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-194">Verwenden Sie diese Methode, um ungültige Zeichen in einer Zeichenfolge zu ersetzen, <xref:System.Security.SecurityElement>bevor Sie die Zeichenfolge in einem verwenden</span><span class="sxs-lookup"><span data-stu-id="14fbf-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="14fbf-195">Wenn in einem <xref:System.Security.SecurityElement> ungültige Zeichen verwendet werden, ohne mit Escapezeichen versehen zu werden, wird eine <xref:System.ArgumentException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="14fbf-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="14fbf-196">In der folgenden Tabelle werden die ungültigen XML-Zeichen und deren Entsprechungen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="14fbf-197">Ungültiges XML-Zeichen</span><span class="sxs-lookup"><span data-stu-id="14fbf-197">Invalid XML character</span></span> | <span data-ttu-id="14fbf-198">Ersetzt durch</span><span class="sxs-lookup"><span data-stu-id="14fbf-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="14fbf-199">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.Escape%2A> der-Methode, um ungültige XML-Zeichen in einer Zeichenfolge durch ihre gültige XML-Entsprechung zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="14fbf-200">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="14fbf-201">Die XML-codierte Zeichenfolge, aus der das Sicherheitselement erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="14fbf-201">The XML-encoded string from which to create the security element.</span></span></param>
        <summary><span data-ttu-id="14fbf-202">Erstellt ein Sicherheitselement aus einer XML-codierten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="14fbf-202">Creates a security element from an XML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="14fbf-203">Ein aus dem XML-Code erstelltes <see cref="T:System.Security.SecurityElement" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-204">Verwenden Sie in der XML-Zeichenfolge keine einfachen Anführungszeichen. Verwenden Sie stattdessen doppelte Anführungszeichen mit Escapezeichen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="14fbf-205">Beispielsweise anstelle von "`<value name='Company'>Microsoft</value>"` use".`<value name=\"Company\">Microsoft</value>"`</span><span class="sxs-lookup"><span data-stu-id="14fbf-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="14fbf-206">Die Verwendung von einfachen Anführungszeichen kann dazu führen, dass entweder eine Ausnahme ausgelöst wird oder in einigen Fällen die einfachen Anführungszeichen als Text in der Zeichenfolge behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="14fbf-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException"><span data-ttu-id="14fbf-207"><paramref name="xml" /> enthält mindestens ein einfaches Anführungszeichen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-207"><paramref name="xml" /> contains one or more single quotation mark characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-208"><paramref name="xml" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-208"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="14fbf-209">Der Attributname, dessen Gültigkeit getestet werden soll.</span><span class="sxs-lookup"><span data-stu-id="14fbf-209">The attribute name to test for validity.</span></span></param>
        <summary><span data-ttu-id="14fbf-210">Bestimmt, ob eine Zeichenfolge ein gültiger Attributname ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-210">Determines whether a string is a valid attribute name.</span></span></summary>
        <returns><span data-ttu-id="14fbf-211"><see langword="true" />, wenn der <paramref name="name" />-Parameter ein gültiger XML-Attributname ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-211"><see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-212">Diese Methode kann verwendet werden, um ein Attribut zu testen, bevor es einem Sicherheitselement hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-213">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.IsValidAttributeName%2A> der-Methode, um zu bestimmen, ob eine Zeichenfolge ein gültiger Attribut Name ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="14fbf-214">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="14fbf-215">Der Attributwert, dessen Gültigkeit getestet werden soll.</span><span class="sxs-lookup"><span data-stu-id="14fbf-215">The attribute value to test for validity.</span></span></param>
        <summary><span data-ttu-id="14fbf-216">Bestimmt, ob eine Zeichenfolge ein gültiger Attributwert ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-216">Determines whether a string is a valid attribute value.</span></span></summary>
        <returns><span data-ttu-id="14fbf-217"><see langword="true" />, wenn der <paramref name="value" />-Parameter ein gültiger XML-Attributwert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-217"><see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-218">Diese Methode kann verwendet werden, um ein Attribut zu testen, bevor es einem Sicherheitselement hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-219">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> der-Methode, um zu bestimmen, ob eine Zeichenfolge ein gültiger Attribut Wert ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="14fbf-220">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="14fbf-221">Das Tag, dessen Gültigkeit getestet werden soll.</span><span class="sxs-lookup"><span data-stu-id="14fbf-221">The tag to test for validity.</span></span></param>
        <summary><span data-ttu-id="14fbf-222">Bestimmt, ob eine Zeichenfolge ein gültiges Tag ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-222">Determines whether a string is a valid tag.</span></span></summary>
        <returns><span data-ttu-id="14fbf-223"><see langword="true" />, wenn der <paramref name="tag" />-Parameter ein gültiges XML-Tag ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-223"><see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-224">Dies kann verwendet werden, um eine <xref:System.Security.SecurityElement.Tag%2A> zu testen, bevor Sie festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-225">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.IsValidTag%2A> der-Methode, um zu bestimmen, ob eine Zeichenfolge ein gültiges Attributtag ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="14fbf-226">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="14fbf-227">Der Text, dessen Gültigkeit getestet werden soll.</span><span class="sxs-lookup"><span data-stu-id="14fbf-227">The text to test for validity.</span></span></param>
        <summary><span data-ttu-id="14fbf-228">Bestimmt, ob eine Zeichenfolge als Text in einem XML-Element gültig ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-228">Determines whether a string is valid as text within an XML element.</span></span></summary>
        <returns><span data-ttu-id="14fbf-229"><see langword="true" />, wenn der <paramref name="text" />-Parameter ein gültiges XML-Textelement ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-229"><see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-230">Diese Methode kann verwendet werden, um <xref:System.Security.SecurityElement.Text%2A> zu testen, bevor Sie festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-231">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.IsValidText%2A> der-Methode, um zu bestimmen, ob eine Zeichenfolge als XML-Element Text gültig ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="14fbf-232">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="14fbf-233">Das Tag, nach dem in untergeordneten Elementen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="14fbf-233">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="14fbf-234">Sucht ein untergeordnetes Element anhand seines Tagnamens.</span><span class="sxs-lookup"><span data-stu-id="14fbf-234">Finds a child by its tag name.</span></span></summary>
        <returns><span data-ttu-id="14fbf-235">Das erste untergeordnete XML-Element mit dem angegebenen Tagwert, oder <see langword="null" />, wenn kein untergeordnetes Element mit <paramref name="tag" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="14fbf-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-236">Mit XML wie folgt `SearchForChildByTag("second")` gibt das untergeordnete-Element `<second>`zurück.</span><span class="sxs-lookup"><span data-stu-id="14fbf-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-237">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.SearchForChildByTag%2A> der-Methode, um ein untergeordnetes Element anhand seines Tagnamens zu suchen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="14fbf-238">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-239">Der <paramref name="tag" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="14fbf-240">Das Tag, nach dem in untergeordneten Elementen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="14fbf-240">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="14fbf-241">Sucht ein untergeordnetes Element anhand seines Tagnamens und gibt den enthaltenen Text zurück.</span><span class="sxs-lookup"><span data-stu-id="14fbf-241">Finds a child by its tag name and returns the contained text.</span></span></summary>
        <returns><span data-ttu-id="14fbf-242">Der Textinhalt des ersten untergeordneten Elements mit dem angegebenen Tagwert.</span><span class="sxs-lookup"><span data-stu-id="14fbf-242">The text contents of the first child element with the specified tag value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-243">Diese Methode entspricht Folgendem:</span><span class="sxs-lookup"><span data-stu-id="14fbf-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="14fbf-244">Wenn XML wie folgt lautet `SearchForTextOfTag("second")` , wird "Text2" zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="14fbf-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-245">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> der-Methode, um ein untergeordnetes Element anhand seines Tagnamens zu suchen und den enthaltenen Text zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="14fbf-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="14fbf-246">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-247"><paramref name="tag" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-247"><paramref name="tag" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14fbf-248">Ruft den Tagnamen eines XML-Elements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="14fbf-248">Gets or sets the tag name of an XML element.</span></span></summary>
        <value><span data-ttu-id="14fbf-249">Der Tagname eines XML-Elements.</span><span class="sxs-lookup"><span data-stu-id="14fbf-249">The tag name of an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-250">In XML wird das-Tag im Skript angezeigt, wie unten dargestellt:</span><span class="sxs-lookup"><span data-stu-id="14fbf-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="14fbf-251">Wenn dieses Element über untergeordnete Elemente verfügt, werden die `text`untergeordneten Elemente ersetzt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="14fbf-252">Weisen Sie dieser Eigenschaft nur gültige XML-tagzeichenfolgen zu.</span><span class="sxs-lookup"><span data-stu-id="14fbf-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="14fbf-253">Verwenden <xref:System.Security.SecurityElement.Escape%2A> Sie, um ungültige Zeichen aus der Zeichenfolge zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-254">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.Tag%2A> der-Eigenschaft, um den Tagnamen eines XML-Elements zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="14fbf-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="14fbf-255">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14fbf-256">Das Tag ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14fbf-256">The tag is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14fbf-257">Das Tag ist in XML nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="14fbf-257">The tag is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14fbf-258">Ruft den Text in einem XML-Element ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="14fbf-258">Gets or sets the text within an XML element.</span></span></summary>
        <value><span data-ttu-id="14fbf-259">Der Wert des Textes in einem XML-Element.</span><span class="sxs-lookup"><span data-stu-id="14fbf-259">The value of the text within an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-260">Der Text darf keine XML-Sonderzeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="14fbf-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="14fbf-261">Verwenden <xref:System.Security.SecurityElement.Escape%2A> Sie, um ungültige Zeichen aus der Zeichenfolge zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="14fbf-262">Wenn eine <xref:System.Security.SecurityElement> <xref:System.Security.SecurityElement.Text%2A> sowohl als auch <xref:System.Security.SecurityElement.Children%2A>enthält <xref:System.Security.SecurityElement.Text%2A> , wird zuerst angezeigt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14fbf-263">Der folgende Code zeigt die Verwendung <xref:System.Security.SecurityElement.Text%2A> der-Eigenschaft, um den Text eines XML-Elements zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="14fbf-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="14fbf-264">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.SecurityElement> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14fbf-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14fbf-265">Der Text ist in XML nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="14fbf-265">The text is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14fbf-266">Erstellt eine Zeichenfolgendarstellung eines XML-Elements mit den zugehörigen Attributen und untergeordneten Elementen sowie dem zugehörigen Text.</span><span class="sxs-lookup"><span data-stu-id="14fbf-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span></span></summary>
        <returns><span data-ttu-id="14fbf-267">Das XML-Element und sein Inhalt.</span><span class="sxs-lookup"><span data-stu-id="14fbf-267">The XML element and its contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14fbf-268">Diese Methode ist hilfreich beim Debuggen, um die XML-Darstellung des-Elements anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="14fbf-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>