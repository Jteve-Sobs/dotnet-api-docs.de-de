<Type Name="CodeAccessPermission" FullName="System.Security.CodeAccessPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0db6f622c9c8c143d57875ed3c232bf5b1d39578" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52913374" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeAccessPermission : System.Security.IPermission, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CodeAccessPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.CodeAccessPermission" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeAccessPermission&#xA;Implements IPermission, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeAccessPermission abstract : System::Security::IPermission, System::Security::IStackWalk" />
  <TypeSignature Language="F#" Value="type CodeAccessPermission = class&#xA;    interface IPermission&#xA;    interface ISecurityEncodable&#xA;    interface IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d6500-101">Definiert die zugrunde liegende Struktur aller Codezugriffsberechtigungen.</span><span class="sxs-lookup"><span data-stu-id="d6500-101">Defines the underlying structure of all code access permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-102">Codezugriffsberechtigungen verwenden einen Stapeldurchlauf, um sicherzustellen, dass alle Aufrufer des Codes eine Berechtigung erteilt wurde.</span><span class="sxs-lookup"><span data-stu-id="d6500-102">Code access permissions use a stack walk to ensure that all callers of the code have been granted a permission.</span></span> <span data-ttu-id="d6500-103">Wenn ein Berechtigungsobjekt `null`, es erfolgt ein Berechtigungsobjekt mit dem Status identisch <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d6500-103">If a permission object is `null`, it is handled the same as a permission object with the state <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d6500-104">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden, die in der Aufrufliste höher Methoden in der Aufrufliste niedrigere aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d6500-104">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="d6500-105">Erben von der <xref:System.Security.CodeAccessPermission> Klasse muss volle Vertrauenswürdigkeit, um korrekt zu funktionieren als Erweiterung der Sicherheitsinfrastruktur Berechtigungen gewährt werden.</span><span class="sxs-lookup"><span data-stu-id="d6500-105">Inheritors of the <xref:System.Security.CodeAccessPermission> class must be granted full trust to function correctly as permissions extending the security infrastructure.</span></span> <span data-ttu-id="d6500-106">Um zu ermitteln, die erben voll vertrauenswürdig ist, sind <xref:System.Security.CodeAccessPermission> Probleme eine <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> für <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence>  =  `true` und <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="d6500-106">To determine that the inheritors are fully trusted, <xref:System.Security.CodeAccessPermission> issues an <xref:System.Security.Permissions.SecurityAction.InheritanceDemand> for <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence> = `true` and <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy> = `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6500-107">Im folgenden Codebeispiel wird eine Berechtigung, die von abgeleiteten der <xref:System.Security.CodeAccessPermission> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-107">The following code example shows a permission derived from the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#1)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#1)]
 [!code-vb[System.Security.Permissions.NameIdPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="d6500-108">die Möglichkeit, erben, um das Bereitstellen von Beweisen und zum Anzeigen und Ändern von Richtlinien.</span><span class="sxs-lookup"><span data-stu-id="d6500-108">for the ability of inheritors to provide evidence and view and modify policy.</span></span> <span data-ttu-id="d6500-109">Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-109">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="d6500-110">Beim Erben von <see cref="T:System.Security.CodeAccessPermission" />, müssen Sie auch implementieren die <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="d6500-110">When you inherit from <see cref="T:System.Security.CodeAccessPermission" />, you must also implement the <see cref="T:System.Security.Permissions.IUnrestrictedPermission" /> interface.</span></span>  
  
<span data-ttu-id="d6500-111">Die folgenden <see cref="T:System.Security.CodeAccessPermission" /> Member müssen überschrieben werden: <see cref="M:System.Security.CodeAccessPermission.Copy" />, <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" />, <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />, und <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-111">The following <see cref="T:System.Security.CodeAccessPermission" /> members must be overridden: <see cref="M:System.Security.CodeAccessPermission.Copy" />, <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />, <see cref="M:System.Security.CodeAccessPermission.ToXml" />, <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />, and <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />.</span></span>  
  
<span data-ttu-id="d6500-112">Außerdem müssen Sie definieren, einen Konstruktor, akzeptiert eine <see cref="T:System.Security.Permissions.PermissionState" /> als deren einziger Parameter.</span><span class="sxs-lookup"><span data-stu-id="d6500-112">You must also define a constructor that takes a <see cref="T:System.Security.Permissions.PermissionState" /> as its only parameter.</span></span>  
  
<span data-ttu-id="d6500-113">Sie müssen anwenden, die <see cref="T:System.SerializableAttribute" /> -Attribut auf eine Klasse, die von erbt <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-113">You must apply the <see cref="T:System.SerializableAttribute" /> attribute to a class that inherits from <see cref="T:System.Security.CodeAccessPermission" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeAccessPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeAccessPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-114">Initialisiert eine neue Instanz der <see cref="T:System.Security.CodeAccessPermission" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-114">Initializes a new instance of the <see cref="T:System.Security.CodeAccessPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-115">Dieser Konstruktor wird aufgerufen, um den Status in den Typ zu initialisieren, wenn eine Instanz der abgeleiteten Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-115">This constructor is called to initialize state in the type whenever an instance of the derived class is created.</span></span> <span data-ttu-id="d6500-116">Obwohl Sie diesen Konstruktor explizit in der Konstruktordeklaration der Konstruktor der abgeleiteten Klasse aufrufen können, ist dies normalerweise nicht erforderlich; Die meisten Compiler generiert automatisch den Aufruf für Sie.</span><span class="sxs-lookup"><span data-stu-id="d6500-116">Although you can explicitly call this constructor in the constructor declaration of the derived class constructor, this is not usually necessary; most compilers will automatically generate the call for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit&#xA;override this.Assert : unit -&gt; unit" Usage="codeAccessPermission.Assert " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-117">Deklariert, dass der aufrufende Code auf die durch eine Berechtigungsforderung geschützte Ressource über den diese Methode aufrufenden Code zugreifen kann, auch wenn Aufrufern einer höheren Ebene im Stapel keine Berechtigung zum Zugreifen auf die Ressource erteilt wurde.</span><span class="sxs-lookup"><span data-stu-id="d6500-117">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span></span> <span data-ttu-id="d6500-118">Die Verwendung von <see cref="M:System.Security.CodeAccessPermission.Assert" /> kann zu Sicherheitsproblemen führen.</span><span class="sxs-lookup"><span data-stu-id="d6500-118">Using <see cref="M:System.Security.CodeAccessPermission.Assert" /> can create security issues.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-119">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden, die in der Aufrufliste höher Methoden in der Aufrufliste niedrigere aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d6500-119">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="d6500-120">Aufrufen von <xref:System.Security.CodeAccessPermission.Assert%2A> wird verhindert, dass einen Stackwalk von niedriger in der Aufrufliste aus der Aufrufliste über den Code, der diese Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="d6500-120">Calling <xref:System.Security.CodeAccessPermission.Assert%2A> prevents a stack walk originating lower in the call stack from proceeding up the call stack beyond the code that calls this method.</span></span> <span data-ttu-id="d6500-121">Aus diesem Grund, selbst wenn Aufrufern einer höheren Ebene in der Aufrufliste nicht über die erforderlichen Berechtigungen zum Zugriff auf eine Ressource verfügen, können sie weiterhin über den Code darauf zugreifen, die diese Methode für die erforderliche Berechtigung aufruft.</span><span class="sxs-lookup"><span data-stu-id="d6500-121">Therefore, even if callers higher on the call stack do not have the requisite permissions to access a resource, they can still access it through the code that calls this method on the necessary permission.</span></span> <span data-ttu-id="d6500-122">Eine Assertion ist nur wirksam, wenn der Code aufruft <xref:System.Security.CodeAccessPermission.Assert%2A> übergibt die sicherheitsüberprüfung für die Berechtigung, die sie übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-122">An assertion is effective only if the code that calls <xref:System.Security.CodeAccessPermission.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="d6500-123">Der Aufruf von <xref:System.Security.CodeAccessPermission.Assert%2A> bleibt wirksam, bis der aufrufende Code an den Aufrufer zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d6500-123">The call to <xref:System.Security.CodeAccessPermission.Assert%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="d6500-124">Nur ein <xref:System.Security.CodeAccessPermission.Assert%2A> kann auf einen Rahmen aktiv sein.</span><span class="sxs-lookup"><span data-stu-id="d6500-124">Only one <xref:System.Security.CodeAccessPermission.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="d6500-125">Ein Versuch des Aufrufs <xref:System.Security.CodeAccessPermission.Assert%2A> bei einer aktiven <xref:System.Security.CodeAccessPermission.Assert%2A> vorhanden ist, auf die Ergebnisse der Frame in einer <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="d6500-125">An attempt to call <xref:System.Security.CodeAccessPermission.Assert%2A> when an active <xref:System.Security.CodeAccessPermission.Assert%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="d6500-126">Rufen Sie <xref:System.Security.CodeAccessPermission.RevertAssert%2A> oder <xref:System.Security.CodeAccessPermission.RevertAll%2A> So entfernen Sie ein aktives <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-126">Call <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span>  
  
 <span data-ttu-id="d6500-127"><xref:System.Security.CodeAccessPermission.Assert%2A> wird für eine Berechtigung nicht erteilt werden, da eine Anforderung für diese Berechtigung nicht fehlschlagen wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d6500-127"><xref:System.Security.CodeAccessPermission.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="d6500-128">Aber wenn Code weiter unten auf der Aufrufliste aufgerufen <xref:System.Security.CodeAccessPermission.Demand%2A> für diese Berechtigung, eine <xref:System.Security.SecurityException> wird ausgelöst, wenn der Stapeldurchlauf der Code erreicht wird, die zum Aufrufen <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-128">However, if code lower on the call stack calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="d6500-129">Dies geschieht, weil der Code, der aufgerufen <xref:System.Security.CodeAccessPermission.Assert%2A> nicht wurde die Berechtigung erteilt hat, auch wenn sie versucht haben, zu <xref:System.Security.CodeAccessPermission.Assert%2A> es.</span><span class="sxs-lookup"><span data-stu-id="d6500-129">This happens because the code that called <xref:System.Security.CodeAccessPermission.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.CodeAccessPermission.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d6500-130">Da Aufrufen <xref:System.Security.CodeAccessPermission.Assert%2A> entfernt die Anforderung, dass der gesamte code in der Aufrufkette Berechtigung erteilt werden, auf die angegebene Ressource zuzugreifen, können Sie Sicherheitsprobleme bei falsch oder nicht ordnungsgemäß verwendet.</span><span class="sxs-lookup"><span data-stu-id="d6500-130">Because calling <xref:System.Security.CodeAccessPermission.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security issues if used incorrectly or inappropriately.</span></span> <span data-ttu-id="d6500-131">Aus diesem Grund sollten sie mit großer Vorsicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d6500-131">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6500-132">Der aufrufende Code verfügt nicht über <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-132">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span></span>  
  
<span data-ttu-id="d6500-133">- oder - </span><span class="sxs-lookup"><span data-stu-id="d6500-133">-or-</span></span> 
<span data-ttu-id="d6500-134">Es ist bereits eine aktive <see cref="M:System.Security.CodeAccessPermission.Assert" /> für den aktuellen Frame vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d6500-134">There is already an active <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6500-135">für die Möglichkeit zum Aufruf <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-135">for the ability to call <see cref="M:System.Security.CodeAccessPermission.Assert" />.</span></span> <span data-ttu-id="d6500-136">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span><span class="sxs-lookup"><span data-stu-id="d6500-136">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-137">Sie können nicht auf diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-137">You cannot override this method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md"><span data-ttu-id="d6500-138">Verwenden der Assert-Methode</span><span class="sxs-lookup"><span data-stu-id="d6500-138">Using the Assert Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission" Usage="codeAccessPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-139">Ist diese Methode durch eine abgeleitete Klasse implementiert, erstellt sie eine identische Kopie des aktuellen Berechtigungsobjekts und gibt diese Kopie zurück.</span><span class="sxs-lookup"><span data-stu-id="d6500-139">When implemented by a derived class, creates and returns an identical copy of the current permission object.</span></span></summary>
        <returns><span data-ttu-id="d6500-140">Eine Kopie des aktuellen Berechtigungsobjekts.</span><span class="sxs-lookup"><span data-stu-id="d6500-140">A copy of the current permission object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-141">Eine Kopie des Berechtigungsobjekts stellt den gleichen Zugriff auf Ressourcen wie das ursprüngliche Berechtigungsobjekt dar.</span><span class="sxs-lookup"><span data-stu-id="d6500-141">A copy of a permission object represents the same access to resources as the original permission object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6500-142">Das folgende Codebeispiel zeigt eine Überschreibung von der <xref:System.Security.CodeAccessPermission.Copy%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-142">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Copy%2A> method.</span></span> <span data-ttu-id="d6500-143">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.CodeAccessPermission> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-143">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#2)]
 [!code-vb[System.Security.Permissions.NameIdPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-144">Sie müssen diese Methode in einer abgeleiteten Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-144">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="codeAccessPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-145">Erzwingt zur Laufzeit eine <see cref="T:System.Security.SecurityException" />, wenn nicht allen Aufrufern, die in der Aufrufliste höher eingestuft sind, die Berechtigung gewährt wurde, die von der aktuellen Instanz angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-145">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permission specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-146">Diese Methode wird in der Regel von sicheren Bibliotheken verwendet, um sicherzustellen, dass Aufrufer die Berechtigung zum Zugriff auf eine Ressource verfügen.</span><span class="sxs-lookup"><span data-stu-id="d6500-146">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="d6500-147">Z. B. Aufrufe von eine Dateiklasse in eine sichere Klassenbibliothek <xref:System.Security.CodeAccessPermission.Demand%2A> für die erforderliche <xref:System.Security.Permissions.FileIOPermission> vor der Ausführung eines Prozesses durch den Aufrufer angeforderte.</span><span class="sxs-lookup"><span data-stu-id="d6500-147">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="d6500-148">Die Berechtigungen des Codes, der diese Methode aufruft, werden nicht überprüft. die Überprüfung der direkte Aufrufer dieses Codes beginnt und im Stapel wird fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="d6500-148">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="d6500-149">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden, die in der Aufrufliste höher Methoden in der Aufrufliste niedrigere aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d6500-149">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="d6500-150"><xref:System.Security.CodeAccessPermission.Demand%2A> nur erfolgreich, wenn keine <xref:System.Security.SecurityException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-150"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6500-151">Ein in der Aufrufliste höher eingestufter Aufrufer hat nicht die durch das aktuelle Berechtigungsobjekt angegebene Berechtigung, die von der aktuellen Instanz angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-151">A caller higher in the call stack does not have the permission specified by the current instance.</span></span>  
  
<span data-ttu-id="d6500-152">- oder - </span><span class="sxs-lookup"><span data-stu-id="d6500-152">-or-</span></span> 
<span data-ttu-id="d6500-153">Ein in der Aufrufliste höher eingestufter Aufrufer hat <see cref="M:System.Security.CodeAccessPermission.Deny" /> für das aktuelle Berechtigungsobjekt aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d6500-153">A caller higher in the call stack has called <see cref="M:System.Security.CodeAccessPermission.Deny" /> on the current permission object.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-154">Sie können nicht auf diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-154">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit&#xA;override this.Deny : unit -&gt; unit" Usage="codeAccessPermission.Deny " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-155">Verhindert, dass in der Aufrufliste höher eingestufte Aufrufer den Code verwenden, der diese Methode aufruft, um auf die Ressource zuzugreifen, die von der aktuellen Instanz angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-155">Prevents callers higher in the call stack from using the code that calls this method to access the resource specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d6500-156">Die <xref:System.Security.CodeAccessPermission.Deny%2A> Methode sollte nur zum Schutz von Ressourcen über die versehentliche Preisgabe von voll vertrauenswürdigem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d6500-156">The <xref:System.Security.CodeAccessPermission.Deny%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="d6500-157">Es sollte nicht verwendet werden zum Schutz von Ressourcen vor beabsichtigtem Missbrauch von nicht vertrauenswürdigem Code.</span><span class="sxs-lookup"><span data-stu-id="d6500-157">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="d6500-158">Z. B. Wenn Methode `A` Probleme eine <xref:System.Security.CodeAccessPermission.Deny%2A> für eine Berechtigung und klicken Sie dann Aufrufe Methode `B`, Methode `B` kann einfach überschrieben werden die <xref:System.Security.CodeAccessPermission.Deny%2A> hierzu eine <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-158">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.Deny%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.Deny%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="d6500-159">Die aufgerufene Methode ist immer in der Aufrufliste.</span><span class="sxs-lookup"><span data-stu-id="d6500-159">The called method is always higher in the stack.</span></span> <span data-ttu-id="d6500-160">Aus diesem Grund Wenn Methode `B` versucht, eine geschützte Ressource, die das Sicherheitssystem zuzugreifen beginnt, damit die Berechtigungen überprüft werden, da Methode `B` der direkte Aufrufer ein, und dann führt nach unten im Stapel zu bestätigen, dass es keine <xref:System.Security.CodeAccessPermission.Deny%2A> oder <xref:System.Security.CodeAccessPermission.PermitOnly%2A> weiter unten in den Stapel.</span><span class="sxs-lookup"><span data-stu-id="d6500-160">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="d6500-161">Methode `B`, die versucht, auf die Ressource zuzugreifen, kann den Stackwalk sofort beenden mithilfe der <xref:System.Security.CodeAccessPermission.Assert%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-161">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="d6500-162">In diesem Fall die <xref:System.Security.CodeAccessPermission.Deny%2A> auf dem Stapel abgelegt, von der Methode `A` (die aufrufende Methode) wird nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d6500-162">In that case, the <xref:System.Security.CodeAccessPermission.Deny%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="d6500-163">Diese Methode wird verhindert, dass Aufrufern einer höheren Ebene in der Aufrufliste Zugriff auf die geschützte Ressource über den Code, der diese Methode aufruft, auch wenn diese Aufrufer die Berechtigung für den Zugriff erteilt wurde.</span><span class="sxs-lookup"><span data-stu-id="d6500-163">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="d6500-164">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden, die in der Aufrufliste höher Methoden in der Aufrufliste niedrigere aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d6500-164">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="d6500-165"><xref:System.Security.CodeAccessPermission.Deny%2A> die Haftung des Programmierers einschränken oder unbeabsichtigte Sicherheitsprobleme zu vermeiden, da es Ihnen helfen zu verhindern, dass die Methode, die aufruft, können <xref:System.Security.CodeAccessPermission.Deny%2A> verwendet werden, auf die durch die verweigerte Berechtigung geschützte Ressource zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="d6500-165"><xref:System.Security.CodeAccessPermission.Deny%2A> can limit the liability of the programmer or help prevent accidental security issues because it helps prevent the method that calls <xref:System.Security.CodeAccessPermission.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="d6500-166">Wenn eine Methode aufruft <xref:System.Security.CodeAccessPermission.Deny%2A> auf eine Berechtigung an, und wenn ein <xref:System.Security.CodeAccessPermission.Demand%2A> für diese Berechtigung von einem Aufrufer, die weiter unten in der Aufrufliste aufgerufen wird, wird diese sicherheitsüberprüfung fehl, wenn es erreicht die <xref:System.Security.CodeAccessPermission.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-166">If a method calls <xref:System.Security.CodeAccessPermission.Deny%2A> on a permission, and if a <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span>  
  
 <span data-ttu-id="d6500-167">Der Aufruf von <xref:System.Security.CodeAccessPermission.Deny%2A> bleibt wirksam, bis der aufrufende Code an den Aufrufer zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d6500-167">The call to <xref:System.Security.CodeAccessPermission.Deny%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="d6500-168">Nur ein <xref:System.Security.CodeAccessPermission.Deny%2A> kann auf einen Rahmen aktiv sein.</span><span class="sxs-lookup"><span data-stu-id="d6500-168">Only one <xref:System.Security.CodeAccessPermission.Deny%2A> can be active on a frame.</span></span> <span data-ttu-id="d6500-169">Ein Versuch des Aufrufs <xref:System.Security.CodeAccessPermission.Deny%2A> bei einer aktiven <xref:System.Security.CodeAccessPermission.Deny%2A> vorhanden ist, auf die Ergebnisse der Frame in einer <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="d6500-169">An attempt to call <xref:System.Security.CodeAccessPermission.Deny%2A> when an active <xref:System.Security.CodeAccessPermission.Deny%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="d6500-170">Rufen Sie <xref:System.Security.CodeAccessPermission.RevertDeny%2A> oder <xref:System.Security.CodeAccessPermission.RevertAll%2A> So entfernen Sie ein aktives <xref:System.Security.CodeAccessPermission.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-170">Call <xref:System.Security.CodeAccessPermission.RevertDeny%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.Deny%2A>.</span></span> <span data-ttu-id="d6500-171"><xref:System.Security.CodeAccessPermission.Deny%2A> wird für eine Berechtigung nicht erteilt werden, da eine Anforderung für diese Berechtigung nicht fehlschlagen wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d6500-171"><xref:System.Security.CodeAccessPermission.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6500-172">Es ist bereits eine aktive <see cref="M:System.Security.CodeAccessPermission.Deny" /> für den aktuellen Frame vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d6500-172">There is already an active <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-173">Sie können nicht auf diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-173">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="codeAccessPermission.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d6500-174">Das <see cref="T:System.Security.CodeAccessPermission" />-Objekt, das mit der aktuellen <see cref="T:System.Security.CodeAccessPermission" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d6500-174">The <see cref="T:System.Security.CodeAccessPermission" /> object to compare with the current <see cref="T:System.Security.CodeAccessPermission" />.</span></span></param>
        <summary><span data-ttu-id="d6500-175">Bestimmt, ob das angegebene <see cref="T:System.Security.CodeAccessPermission" />-Objekt dem aktuellen <see cref="T:System.Security.CodeAccessPermission" />-Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="d6500-175">Determines whether the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />.</span></span></summary>
        <returns><span data-ttu-id="d6500-176"><see langword="true" />, wenn das angegebene <see cref="T:System.Security.CodeAccessPermission" />-Objekt und die aktuelle <see cref="T:System.Security.CodeAccessPermission" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-176"><see langword="true" /> if the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-177">Weitere Informationen finden Sie unter <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-177">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public abstract void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit" Usage="codeAccessPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="d6500-178">Die XML-Codierung zur Wiederherstellung des Sicherheitsobjekts.</span><span class="sxs-lookup"><span data-stu-id="d6500-178">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="d6500-179">Rekonstruiert beim außer Kraft setzen in einer abgeleiteten Klasse ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung.</span><span class="sxs-lookup"><span data-stu-id="d6500-179">When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-180">Benutzerdefinierter Code, der von Sicherheitsobjekten erweitert muss zum Implementieren der <xref:System.Security.CodeAccessPermission.ToXml%2A> und <xref:System.Security.CodeAccessPermission.FromXml%2A> Methoden, um die Objekte Security-Sicherheitsrichtlinienverwendung machen.</span><span class="sxs-lookup"><span data-stu-id="d6500-180">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6500-181">Das folgende Codebeispiel zeigt eine Überschreibung von der <xref:System.Security.CodeAccessPermission.FromXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-181">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.FromXml%2A> method.</span></span> <span data-ttu-id="d6500-182">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.CodeAccessPermission> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-182">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#10)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#10)]
 [!code-vb[System.Security.Permissions.NameIdPermission#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6500-183">Der <paramref name="elem" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-183">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d6500-184">Der <paramref name="elem" />-Parameter enthält nicht die XML-Codierung für eine Instanz vom gleichen Typ wie die aktuelle Instanz.</span><span class="sxs-lookup"><span data-stu-id="d6500-184">The <paramref name="elem" /> parameter does not contain the XML encoding for an instance of the same type as the current instance.</span></span>  
  
<span data-ttu-id="d6500-185">- oder - </span><span class="sxs-lookup"><span data-stu-id="d6500-185">-or-</span></span> 
<span data-ttu-id="d6500-186">Die Versionsnummer des <paramref name="elem" />-Parameters wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d6500-186">The version number of the <paramref name="elem" /> parameter is not supported.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-187">Sie müssen diese Methode in einer abgeleiteten Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-187">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="codeAccessPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-188">Ruft einen Hashcode für das <see cref="T:System.Security.CodeAccessPermission" />-Objekt ab, das sich für die Verwendung in Hashalgorithmen und Datenstrukturen eignet, z.B. in einer Hashtabelle.</span><span class="sxs-lookup"><span data-stu-id="d6500-188">Gets a hash code for the <see cref="T:System.Security.CodeAccessPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="d6500-189">Ein Hashcode für das aktuelle <see cref="T:System.Security.CodeAccessPermission" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d6500-189">A hash code for the current <see cref="T:System.Security.CodeAccessPermission" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-190">Der Hashcode für zwei Instanzen der gleichen Berechtigung ist möglicherweise unterschiedlich, daher ein Hashcode nicht zum Vergleichen zweier verwendet werden sollte <xref:System.Security.CodeAccessPermission> Objekte.</span><span class="sxs-lookup"><span data-stu-id="d6500-190">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.CodeAccessPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public abstract System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="codeAccessPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d6500-191">Eine Berechtigung für die Überschneidung mit der aktuellen Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-191">A permission to intersect with the current permission.</span></span> <span data-ttu-id="d6500-192">Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-192">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d6500-193">Erstellt bei Implementierung durch eine abgeleitete Klasse eine Berechtigung als Schnittmenge der aktuellen und der angegebenen Berechtigung und gibt diese zurück.</span><span class="sxs-lookup"><span data-stu-id="d6500-193">When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d6500-194">Eine neue Berechtigung, die die Schnittmenge der aktuellen und der angegebenen Berechtigung darstellt.</span><span class="sxs-lookup"><span data-stu-id="d6500-194">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="d6500-195">Diese neue Berechtigung ist <see langword="null" />, wenn die Schnittmenge leer ist.</span><span class="sxs-lookup"><span data-stu-id="d6500-195">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-196">Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die beschreibt, den Satz von Vorgängen, die beide gemeinsam beschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-196">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="d6500-197">Nur eine Anforderung, die beide ursprünglichen Berechtigungen erfolgreich durchläuft, wird die Schnittmenge übergeben.</span><span class="sxs-lookup"><span data-stu-id="d6500-197">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6500-198">Das folgende Codebeispiel zeigt eine Überschreibung von der <xref:System.Security.CodeAccessPermission.Intersect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-198">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Intersect%2A> method.</span></span> <span data-ttu-id="d6500-199">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.CodeAccessPermission> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-199">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#5)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#5)]
 [!code-vb[System.Security.Permissions.NameIdPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d6500-200">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und keine Instanz derselben Klasse wie die aktuelle Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-200">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-201">Sie müssen diese Methode in einer abgeleiteten Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-201">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public abstract bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="codeAccessPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d6500-202">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="d6500-202">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="d6500-203">Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-203">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d6500-204">Bestimmt bei der Implementierung durch eine abgeleitete Klasse, ob die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist.</span><span class="sxs-lookup"><span data-stu-id="d6500-204">When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d6500-205"><see langword="true" />, wenn die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-205"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-206">Die aktuelle Berechtigung ist eine Teilmenge der angegebenen Berechtigung, wenn die aktuelle Berechtigung eine Reihe von Vorgängen angibt, die vollständig in die angegebene Berechtigung enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="d6500-206">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="d6500-207">Eine Berechtigung, die Zugriff auf C:\example.txt darstellt wird z. B. eine Teilmenge einer Berechtigung, die Zugriff auf Laufwerk C: darstellt\\.</span><span class="sxs-lookup"><span data-stu-id="d6500-207">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="d6500-208">Wenn diese Methode zurückgibt `true`, die aktuelle Berechtigung stellt keine umfassenderen Zugriff auf die geschützte Ressource als die angegebene Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-208">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="d6500-209">Die folgenden Anweisungen sind erforderlich, um werden `true` für alle überschreibungen von der <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-209">The following statements are required to be `true` for all overrides of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="d6500-210">*X*, *Y*, und *Z* darstellen von benutzerdefiniertem Code Berechtigungsobjekte, die keine null-Verweise sind *U* stellt eine uneingeschränkte Codezugriffsberechtigung und *N* stellt eine leere Berechtigung mit einem <xref:System.Security.Permissions.PermissionState> von <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="d6500-210">*X*, *Y*, and *Z* represent custom code access permission objects that are not null references, *U* represents an unrestricted code access permission, and *N* represents an empty permission with a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.None>.</span></span>  
  
-   <span data-ttu-id="d6500-211">*X*. IsSubsetOf (*X*) gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="d6500-211">*X*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
-   <span data-ttu-id="d6500-212">*X*. IsSubsetOf (*Y*) gibt den gleichen Wert wie *Y*. IsSubsetOf (*X*) nur, wenn *X* und *Y* stellen den gleichen Satz von Berechtigungen.</span><span class="sxs-lookup"><span data-stu-id="d6500-212">*X*.IsSubsetOf(*Y*) returns the same value as *Y*.IsSubsetOf(*X*) if and only if *X* and *Y* represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="d6500-213">Wenn *X*. IsSubsetOf (*Y*) und *Y*. IsSubsetOf (*Z*) zurückgeben `true`, *X*. IsSubsetOf (*Z*) gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="d6500-213">If *X*.IsSubsetOf(*Y*) and *Y*.IsSubsetOf(*Z*) both return `true`, *X*.IsSubsetOf(*Z*) returns `true`.</span></span>  
  
-   <span data-ttu-id="d6500-214">*X*. IsSubsetOf (*U*) gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="d6500-214">*X*.IsSubsetOf(*U*) returns `true`.</span></span>  
  
-   <span data-ttu-id="d6500-215">*X*. IsSubsetOf (*N*) gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="d6500-215">*X*.IsSubsetOf(*N*) returns `false`.</span></span>  
  
-   <span data-ttu-id="d6500-216">*N*. IsSubsetOf (*X*) gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="d6500-216">*N*.IsSubsetOf(*X*) returns `true`.</span></span>  
  
 <span data-ttu-id="d6500-217">Wenn *X* und *Y* darstellen von benutzerdefiniertem Code Berechtigungsobjekte, die null-Verweise sind *X*. IsSubsetOf (*Y*) gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="d6500-217">If *X* and *Y* represent custom code access permission objects that are null references, *X*.IsSubsetOf(*Y*) returns `true`.</span></span> <span data-ttu-id="d6500-218">Wenn *Z* ist ebenfalls null, Festlegen der zusammengesetzte *X*. Union (*Y*). IsSubsetOf (*Z*) ebenfalls zurückgegeben `true` , da die Union von zwei Berechtigungen, die null einen null-Berechtigung ist.</span><span class="sxs-lookup"><span data-stu-id="d6500-218">If *Z* is also null, the compound set operation *X*.Union(*Y*).IsSubsetOf(*Z*) also returns `true` because the union of two null permissions is a null permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6500-219">Das folgende Codebeispiel zeigt eine Überschreibung von der <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-219">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="d6500-220">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.CodeAccessPermission> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-220">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#4)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#4)]
 [!code-vb[System.Security.Permissions.NameIdPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d6500-221">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und weist nicht denselben Typ wie die aktuelle Berechtigung auf.</span><span class="sxs-lookup"><span data-stu-id="d6500-221">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-222">Sie müssen diese Methode in einer abgeleiteten Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-222">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit&#xA;override this.PermitOnly : unit -&gt; unit" Usage="codeAccessPermission.PermitOnly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-223">Verhindert, dass in der Aufrufliste höher eingestufte Aufrufer den Code, der diese Methode aufruft, verwenden, um auf alle Ressourcen außer die Ressource zuzugreifen, die von der aktuellen Instanz angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-223">Prevents callers higher in the call stack from using the code that calls this method to access all resources except for the resource specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d6500-224">Die <xref:System.Security.CodeAccessPermission.PermitOnly%2A> Methode sollte nur zum Schutz von Ressourcen über die versehentliche Preisgabe von voll vertrauenswürdigem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d6500-224">The <xref:System.Security.CodeAccessPermission.PermitOnly%2A> method should be used only to protect resources from accidental access by fully trusted code.</span></span> <span data-ttu-id="d6500-225">Es sollte nicht verwendet werden zum Schutz von Ressourcen vor beabsichtigtem Missbrauch von nicht vertrauenswürdigem Code.</span><span class="sxs-lookup"><span data-stu-id="d6500-225">It should not be used to protect resources from intentional misuse by untrusted code.</span></span> <span data-ttu-id="d6500-226">Z. B. Wenn Methode `A` Probleme eine <xref:System.Security.CodeAccessPermission.PermitOnly%2A> für eine Berechtigung und klicken Sie dann Aufrufe Methode `B`, Methode `B` kann einfach überschrieben werden die <xref:System.Security.CodeAccessPermission.PermitOnly%2A> hierzu eine <xref:System.Security.CodeAccessPermission.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-226">For example, if method `A` issues a <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for a permission and then calls method `B`, method `B` can overtly override the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> by issuing an <xref:System.Security.CodeAccessPermission.Assert%2A>.</span></span> <span data-ttu-id="d6500-227">Die aufgerufene Methode ist immer in der Aufrufliste.</span><span class="sxs-lookup"><span data-stu-id="d6500-227">The called method is always higher in the stack.</span></span> <span data-ttu-id="d6500-228">Aus diesem Grund Wenn Methode `B` versucht, eine geschützte Ressource, die das Sicherheitssystem zuzugreifen beginnt, damit die Berechtigungen überprüft werden, da Methode `B` der direkte Aufrufer ein, und dann führt nach unten im Stapel zu bestätigen, dass es keine <xref:System.Security.CodeAccessPermission.Deny%2A> oder <xref:System.Security.CodeAccessPermission.PermitOnly%2A> weiter unten in den Stapel.</span><span class="sxs-lookup"><span data-stu-id="d6500-228">Therefore, if method `B` tries to access a protected resource, the security system begins checking for permissions with it because method `B` is the immediate caller, and then walks down the stack to confirm that there is no <xref:System.Security.CodeAccessPermission.Deny%2A> or <xref:System.Security.CodeAccessPermission.PermitOnly%2A> lower in the stack.</span></span> <span data-ttu-id="d6500-229">Methode `B`, die versucht, auf die Ressource zuzugreifen, kann den Stackwalk sofort beenden mithilfe der <xref:System.Security.CodeAccessPermission.Assert%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-229">Method `B`, which is trying to access the resource, can stop the stack walk immediately by using the <xref:System.Security.CodeAccessPermission.Assert%2A> method.</span></span> <span data-ttu-id="d6500-230">In diesem Fall die <xref:System.Security.CodeAccessPermission.PermitOnly%2A> auf dem Stapel abgelegt, von der Methode `A` (die aufrufende Methode) wird nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d6500-230">In that case, the <xref:System.Security.CodeAccessPermission.PermitOnly%2A> placed on the stack by method `A` (the calling method) is never discovered.</span></span>  
  
 <span data-ttu-id="d6500-231"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> ist vergleichbar mit <xref:System.Security.CodeAccessPermission.Deny%2A>, beide Stackwalk fehlschlägt, wenn sie normalerweise gelingen würde.</span><span class="sxs-lookup"><span data-stu-id="d6500-231"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is similar to <xref:System.Security.CodeAccessPermission.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="d6500-232">Der Unterschied besteht darin, die <xref:System.Security.CodeAccessPermission.Deny%2A> gibt an, die Berechtigungen den Stackwalk nicht ausgeführt wird, werden aber <xref:System.Security.CodeAccessPermission.PermitOnly%2A> gibt nur die Berechtigungen, die nicht durch den Stackwalk fehlschlagen können.</span><span class="sxs-lookup"><span data-stu-id="d6500-232">The difference is that <xref:System.Security.CodeAccessPermission.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.CodeAccessPermission.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span>  
  
 <span data-ttu-id="d6500-233">Rufen Sie diese Methode, um sicherzustellen, dass Ihr Code verwendet werden kann, um nur die angegebenen Ressourcen zugreifen.</span><span class="sxs-lookup"><span data-stu-id="d6500-233">Call this method to ensure that your code can be used to access only the specified resources.</span></span> <span data-ttu-id="d6500-234">Der Aufruf von <xref:System.Security.CodeAccessPermission.PermitOnly%2A> bleibt wirksam, bis der aufrufende Code an den Aufrufer zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d6500-234">The call to <xref:System.Security.CodeAccessPermission.PermitOnly%2A> is effective until the calling code returns to its caller.</span></span> <span data-ttu-id="d6500-235">Nur ein <xref:System.Security.CodeAccessPermission.PermitOnly%2A> kann auf einen Rahmen aktiv sein.</span><span class="sxs-lookup"><span data-stu-id="d6500-235">Only one <xref:System.Security.CodeAccessPermission.PermitOnly%2A> can be active on a frame.</span></span> <span data-ttu-id="d6500-236">Ein Versuch des Aufrufs <xref:System.Security.CodeAccessPermission.PermitOnly%2A> bei einer aktiven <xref:System.Security.CodeAccessPermission.PermitOnly%2A> vorhanden ist, auf die Ergebnisse der Frame in einer <xref:System.Security.SecurityException>.</span><span class="sxs-lookup"><span data-stu-id="d6500-236">An attempt to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A> when an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A> exists on the frame results in a <xref:System.Security.SecurityException>.</span></span> <span data-ttu-id="d6500-237">Rufen Sie <xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> oder <xref:System.Security.CodeAccessPermission.RevertAll%2A> So entfernen Sie ein aktives <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-237">Call <xref:System.Security.CodeAccessPermission.RevertPermitOnly%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> to remove an active <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span>  
  
 <span data-ttu-id="d6500-238"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> wird für eine Berechtigung nicht erteilt werden, da eine Anforderung für diese Berechtigung nicht fehlschlagen wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d6500-238"><xref:System.Security.CodeAccessPermission.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="d6500-239">Jedoch, wenn Code, die sich auf den Aufruf einer niedrigeren später stack Aufrufe <xref:System.Security.CodeAccessPermission.Demand%2A> für diese Berechtigung, eine <xref:System.Security.SecurityException> wird ausgelöst, wenn der Stapeldurchlauf der Code erreicht wird, die zum Aufrufen <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d6500-239">However, if code lower on the call stack later calls <xref:System.Security.CodeAccessPermission.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.CodeAccessPermission.PermitOnly%2A>.</span></span> <span data-ttu-id="d6500-240">Dies ist, da der Code, der aufgerufen <xref:System.Security.CodeAccessPermission.PermitOnly%2A> nicht wurde die Berechtigung erteilt hat, auch wenn er aufgerufen <xref:System.Security.CodeAccessPermission.PermitOnly%2A> für diese Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-240">This is because the code that called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="d6500-241">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden, die in der Aufrufliste höher Methoden in der Aufrufliste niedrigere aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d6500-241">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6500-242">Es ist bereits eine aktive <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> für den aktuellen Frame vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d6500-242">There is already an active <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-243">Sie können nicht auf diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-243">You cannot override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RevertAll">
      <MemberSignature Language="C#" Value="public static void RevertAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAll();" />
      <MemberSignature Language="F#" Value="static member RevertAll : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-244">Veranlasst, dass alle vorherigen Überschreibungen für den aktuellen Frame entfernt werden und nicht mehr wirksam sind.</span><span class="sxs-lookup"><span data-stu-id="d6500-244">Causes all previous overrides for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-245">Wenn es keine Außerkraftsetzungen gibt (<xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.Deny%2A>, oder <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) für den aktuellen Frame, ein <xref:System.ExecutionEngineException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d6500-245">If there are no overrides (<xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.Deny%2A>, or <xref:System.Security.CodeAccessPermission.PermitOnly%2A>) for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6500-246">Es ist kein vorheriges <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" /> oder <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> für den aktuellen Frame vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d6500-246">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" />, or <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberSignature Language="F#" Value="static member RevertAssert : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertAssert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-247">Veranlasst, dass alle vorherigen <see cref="M:System.Security.CodeAccessPermission.Assert" /> für den aktuellen Frame entfernt werden und nicht mehr wirksam sind.</span><span class="sxs-lookup"><span data-stu-id="d6500-247">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-248">Liegt keine <xref:System.Security.CodeAccessPermission.Assert%2A> für den aktuellen Frame, ein <xref:System.ExecutionEngineException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d6500-248">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6500-249">Es ist kein vorheriges <see cref="M:System.Security.CodeAccessPermission.Assert" /> für den aktuellen Frame vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d6500-249">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertDeny">
      <MemberSignature Language="C#" Value="public static void RevertDeny ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertDeny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertDeny" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertDeny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertDeny();" />
      <MemberSignature Language="F#" Value="static member RevertDeny : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertDeny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-250">Veranlasst, dass alle vorherigen <see cref="M:System.Security.CodeAccessPermission.Deny" /> für den aktuellen Frame entfernt werden und nicht mehr wirksam sind.</span><span class="sxs-lookup"><span data-stu-id="d6500-250">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-251">Liegt keine <xref:System.Security.CodeAccessPermission.Deny%2A> für den aktuellen Frame, ein <xref:System.ExecutionEngineException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d6500-251">If there is no <xref:System.Security.CodeAccessPermission.Deny%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6500-252">Es ist kein vorheriges <see cref="M:System.Security.CodeAccessPermission.Deny" /> für den aktuellen Frame vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d6500-252">There is no previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertPermitOnly">
      <MemberSignature Language="C#" Value="public static void RevertPermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertPermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.RevertPermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertPermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertPermitOnly();" />
      <MemberSignature Language="F#" Value="static member RevertPermitOnly : unit -&gt; unit" Usage="System.Security.CodeAccessPermission.RevertPermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Diagnostics.Conditional("FEATURE_MONO_CAS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-253">Veranlasst, dass alle vorherigen <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> für den aktuellen Frame entfernt werden und nicht mehr wirksam sind.</span><span class="sxs-lookup"><span data-stu-id="d6500-253">Causes any previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame to be removed and no longer in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-254">Liegt keine <xref:System.Security.CodeAccessPermission.PermitOnly%2A> für den aktuellen Frame, ein <xref:System.ExecutionEngineException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d6500-254">If there is no <xref:System.Security.CodeAccessPermission.PermitOnly%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6500-255">Es ist kein vorheriges <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> für den aktuellen Frame vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d6500-255">There is no previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IPermission.Demand">
      <MemberSignature Language="C#" Value="void IPermission.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IPermission.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IPermission#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IPermission.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IPermission.Demand() = System::Security::IPermission::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Assert">
      <MemberSignature Language="C#" Value="void IStackWalk.Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert" />
      <MemberSignature Language="VB.NET" Value="Sub Assert () Implements IStackWalk.Assert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Assert() = System::Security::IStackWalk::Assert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Demand">
      <MemberSignature Language="C#" Value="void IStackWalk.Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand" />
      <MemberSignature Language="VB.NET" Value="Sub Demand () Implements IStackWalk.Demand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Demand() = System::Security::IStackWalk::Demand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.Deny">
      <MemberSignature Language="C#" Value="void IStackWalk.Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny" />
      <MemberSignature Language="VB.NET" Value="Sub Deny () Implements IStackWalk.Deny" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.Deny() = System::Security::IStackWalk::Deny;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Security.IStackWalk.PermitOnly">
      <MemberSignature Language="C#" Value="void IStackWalk.PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Security.IStackWalk.PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Sub PermitOnly () Implements IStackWalk.PermitOnly" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Security.IStackWalk.PermitOnly() = System::Security::IStackWalk::PermitOnly;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="codeAccessPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-256">Erstellt eine Zeichenfolgendarstellung des aktuellen Berechtigungsobjekts und gibt diese zurück.</span><span class="sxs-lookup"><span data-stu-id="d6500-256">Creates and returns a string representation of the current permission object.</span></span></summary>
        <returns><span data-ttu-id="d6500-257">Eine Zeichenfolgendarstellung des aktuellen Berechtigungsobjekts.</span><span class="sxs-lookup"><span data-stu-id="d6500-257">A string representation of the current permission object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-258">Diese Methode ist hilfreich beim Debuggen, wenn die Berechtigung als Zeichenfolge angezeigt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="d6500-258">This method is useful in debugging when you need to display the permission as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public abstract System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement" Usage="codeAccessPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6500-259">Erstellt bei Überschreibung in einer abgeleiteten Klasse eine XML-Codierung des Sicherheitsobjekts und seines aktuellen Zustands.</span><span class="sxs-lookup"><span data-stu-id="d6500-259">When overridden in a derived class, creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="d6500-260">Eine XML-Codierung des Sicherheitsobjekts, einschließlich aller Zustandsinformationen.</span><span class="sxs-lookup"><span data-stu-id="d6500-260">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-261">Benutzerdefinierter Code, der von Sicherheitsobjekten erweitert muss zum Implementieren der <xref:System.Security.CodeAccessPermission.ToXml%2A> und <xref:System.Security.CodeAccessPermission.FromXml%2A> Methoden, um die Objekte Security-Sicherheitsrichtlinienverwendung machen.</span><span class="sxs-lookup"><span data-stu-id="d6500-261">Custom code that extends security objects needs to implement the <xref:System.Security.CodeAccessPermission.ToXml%2A> and <xref:System.Security.CodeAccessPermission.FromXml%2A> methods to make the objects security-encodable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6500-262">Das folgende Codebeispiel zeigt eine Überschreibung von der <xref:System.Security.CodeAccessPermission.ToXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-262">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.ToXml%2A> method.</span></span> <span data-ttu-id="d6500-263">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.CodeAccessPermission> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-263">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#11)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#11)]
 [!code-vb[System.Security.Permissions.NameIdPermission#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-264">Sie müssen diese Methode in einer abgeleiteten Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-264">You must override this method in a derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public virtual System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="codeAccessPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d6500-265">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d6500-265">A permission to combine with the current permission.</span></span> <span data-ttu-id="d6500-266">Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-266">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d6500-267">Erstellt beim Überschreiben in einer abgeleiteten Klasse eine Berechtigung als Kombination der aktuellen und der angegebenen Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-267">When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d6500-268">Eine neue Berechtigung, die die Kombination der aktuellen und der angegebenen Berechtigung darstellt.</span><span class="sxs-lookup"><span data-stu-id="d6500-268">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6500-269">Das Ergebnis eines Aufrufs von <xref:System.Security.CodeAccessPermission.Union%2A> ist eine Berechtigung, alle Vorgänge dargestellt darstellt, wird sowohl für die aktuelle Berechtigung als auch für die angegebene Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d6500-269">The result of a call to <xref:System.Security.CodeAccessPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="d6500-270">Jede Anforderung, entweder die Berechtigung durchläuft, übergibt die Union.</span><span class="sxs-lookup"><span data-stu-id="d6500-270">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6500-271">Das folgende Codebeispiel zeigt eine Überschreibung von der <xref:System.Security.CodeAccessPermission.Union%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d6500-271">The following code example shows an override of the <xref:System.Security.CodeAccessPermission.Union%2A> method.</span></span> <span data-ttu-id="d6500-272">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.CodeAccessPermission> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d6500-272">This code example is part of a larger example provided for the <xref:System.Security.CodeAccessPermission> class.</span></span>  
  
 [!code-cpp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CPP/nameidpermission.cpp#12)]
 [!code-csharp[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/CS/nameidpermission.cs#12)]
 [!code-vb[System.Security.Permissions.NameIdPermission#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.NameIdPermission/VB/nameidpermission.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6500-273">Der <paramref name="other" />-Parameter ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-273">The <paramref name="other" /> parameter is not <see langword="null" />.</span></span> <span data-ttu-id="d6500-274">Diese Methode wird auf dieser Ebene nur unterstützt, wenn <see langword="null" /> übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="d6500-274">This method is only supported at this level when passed <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6500-275">Sie müssen diese Methode in einer abgeleiteten Klasse überschreiben.</span><span class="sxs-lookup"><span data-stu-id="d6500-275">You must override this method in a derived class.</span></span> <span data-ttu-id="d6500-276">Sie sollten eine Kopie der Berechtigung zurück, wenn der Wert des der <paramref name="other" /> -Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d6500-276">You should return a copy of the permission if the value of the <paramref name="other" /> parameter is <see langword="null" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>