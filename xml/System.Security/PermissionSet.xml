<Type Name="PermissionSet" FullName="System.Security.PermissionSet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="847aab79be6535ac55a5cd51510db6ea8242ef7f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36527654" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PermissionSet : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Security.ISecurityEncodable, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PermissionSet extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.PermissionSet" />
  <TypeSignature Language="VB.NET" Value="Public Class PermissionSet&#xA;Implements ICollection, IDeserializationCallback, ISecurityEncodable, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSet : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Security::ISecurityEncodable, System::Security::IStackWalk" />
  <TypeSignature Language="F#" Value="type PermissionSet = class&#xA;    interface ISecurityEncodable&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStackWalk&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f656a-101">Represents a collection that can contain many different types of permissions.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f656a-101">Represents a collection that can contain many different types of permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-102">Sie können <xref:System.Security.PermissionSet> Vorgänge für mehrere verschiedene Berechtigungen als Gruppe ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="f656a-102">You can use <xref:System.Security.PermissionSet> to perform operations on several different permissions as a group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-103">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet> Klassen und Member.</span><span class="sxs-lookup"><span data-stu-id="f656a-103">The following code example demonstrates the use of the <xref:System.Security.PermissionSet> class and members.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#1)]
 [!code-csharp[System.Security.PermissionSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#1)]
 [!code-vb[System.Security.PermissionSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="f656a-104">für Erben voll vertrauenswürdig sind, oder in einer Assembly, die mit den Microsoft signiert ist <see cref="T:System.Security.Policy.StrongName" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f656a-104">for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f656a-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.PermissionSet : System.Security.Permissions.PermissionState -&gt; System.Security.PermissionSet" Usage="new System.Security.PermissionSet state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="f656a-106">One of the enumeration values that specifies the permission set's access to resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-106">One of the enumeration values that specifies the permission set's access to resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-108">Die `Unrestricted` Status ermöglicht, alle Berechtigungen, implementieren die <xref:System.Security.Permissions.IUnrestrictedPermission> -Schnittstelle, während `None` können keine Berechtigungen.</span><span class="sxs-lookup"><span data-stu-id="f656a-108">The `Unrestricted` state allows all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface, while `None` allows no permissions.</span></span>  
  
 <span data-ttu-id="f656a-109">Verwendung <xref:System.Security.PermissionSet.AddPermission%2A> für eine leere <xref:System.Security.PermissionSet> , den Satz genauer zu definieren.</span><span class="sxs-lookup"><span data-stu-id="f656a-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> on an empty <xref:System.Security.PermissionSet> to define the set in greater detail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-110">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.%23ctor%2A> Konstruktor hat, erstellen Sie eine Berechtigung festlegen, mit dem Berechtigungszustand <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="f656a-110">The following code example shows the use of the <xref:System.Security.PermissionSet.%23ctor%2A> constructor to create a permission set with a permission state of <xref:System.Security.Permissions.PermissionState.None>.</span></span> <span data-ttu-id="f656a-111">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-111">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#2)]
 [!code-csharp[System.Security.PermissionSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#2)]
 [!code-vb[System.Security.PermissionSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f656a-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.PermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.PermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permSet As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::PermissionSet ^ permSet);" />
      <MemberSignature Language="F#" Value="new System.Security.PermissionSet : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="new System.Security.PermissionSet permSet" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet">
          <span data-ttu-id="f656a-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-115">Die neue <xref:System.Security.PermissionSet> enthält Kopien der enthaltenen im angegebenen Berechtigungen <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-115">The new <xref:System.Security.PermissionSet> contains copies of the permissions contained in the specified <xref:System.Security.PermissionSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f656a-116">Dies entspricht dem <xref:System.Security.PermissionSet.Copy%2A> bei der `permSet` -Parameter ist kein `null`.</span><span class="sxs-lookup"><span data-stu-id="f656a-116">This is equivalent to <xref:System.Security.PermissionSet.Copy%2A> when the `permSet` parameter is not `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission AddPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission AddPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ AddPermission(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.AddPermission perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="f656a-117">The permission to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-117">The permission to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-120">Wenn in eine Berechtigung desselben Typs wie die hinzugefügte Berechtigung bereits vorhanden ist die <xref:System.Security.PermissionSet>, die neue Berechtigung ist die Kombination der vorhandenen Berechtigungsobjekts und die angegebene Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="f656a-120">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="f656a-121">Angenommen, eine Berechtigung, die implementiert <xref:System.Security.Permissions.IUnrestrictedPermission> hinzugefügt wird ein <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, die daraus resultierende Union ist die ursprüngliche `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-121">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-122">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.AddPermission%2A> Methode zum Hinzufügen einer Berechtigung zu einem Berechtigungssatz.</span><span class="sxs-lookup"><span data-stu-id="f656a-122">The following code example shows the use of the <xref:System.Security.PermissionSet.AddPermission%2A> method to add a permission to a permission set.</span></span> <span data-ttu-id="f656a-123">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-123">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#3)]
 [!code-csharp[System.Security.PermissionSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#3)]
 [!code-vb[System.Security.PermissionSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f656a-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f656a-125">
            <para>Beim Erben von <see cref="T:System.Security.PermissionSet" />, Sie können das Verhalten des ändern die <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> Methode durch Überschreiben der <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-125">
              <para>When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission AddPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ AddPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="abstract member AddPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.AddPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.AddPermissionImpl perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="f656a-126">The permission to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-126">The permission to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-129">Die <xref:System.Security.PermissionSet.AddPermissionImpl%2A> Methode ist die Implementierung für die <xref:System.Security.PermissionSet.AddPermission%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-129">The <xref:System.Security.PermissionSet.AddPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.AddPermission%2A> method.</span></span>  
  
 <span data-ttu-id="f656a-130">Wenn in eine Berechtigung desselben Typs wie die hinzugefügte Berechtigung bereits vorhanden ist die <xref:System.Security.PermissionSet>, die neue Berechtigung ist die Kombination der vorhandenen Berechtigungsobjekts und die angegebene Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="f656a-130">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="f656a-131">Angenommen, eine Berechtigung, die implementiert <xref:System.Security.Permissions.IUnrestrictedPermission> hinzugefügt wird ein <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, die daraus resultierende Union ist die ursprüngliche `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-131">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f656a-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit&#xA;override this.Assert : unit -&gt; unit" Usage="permissionSet.Assert " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span>
          </span>
          <span data-ttu-id="f656a-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-135">Dies ist die einzige Möglichkeit, mehrere Berechtigungen zur gleichen Zeit innerhalb eines Rahmens zu bestätigen, da nur ein <xref:System.Security.PermissionSet.Assert%2A> kann auf einen Frame aktiv sein.</span><span class="sxs-lookup"><span data-stu-id="f656a-135">This is the only way to assert multiple permissions at the same time within a frame because only one <xref:System.Security.PermissionSet.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="f656a-136"><xref:System.Security.PermissionSet.Assert%2A> gilt nur für erteilten Berechtigungen.</span><span class="sxs-lookup"><span data-stu-id="f656a-136"><xref:System.Security.PermissionSet.Assert%2A> is only effective for granted permissions.</span></span> <span data-ttu-id="f656a-137">Rufen Sie die <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> oder <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> Methode, um ein aktives "Abbrechen" <xref:System.Security.PermissionSet.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="f656a-137">Call the <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> or <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> method to cancel an active <xref:System.Security.PermissionSet.Assert%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f656a-138">Da der Aufruf der <xref:System.Security.PermissionSet.Assert%2A> Methode entfernt die Anforderung, dass der gesamte code in der Aufrufkette Berechtigung erteilt werden, auf die angegebene Ressource zugreifen, es kann Sicherheitslücken öffnen, wenn falsch oder nicht ordnungsgemäß verwendet.</span><span class="sxs-lookup"><span data-stu-id="f656a-138">Because calling the <xref:System.Security.PermissionSet.Assert%2A> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="f656a-139">Aus diesem Grund sollte mit großer Vorsicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f656a-139">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f656a-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span>
          </span>
          <span data-ttu-id="f656a-141">-or-  There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-141">-or-  There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsNonCodeAccessPermissions">
      <MemberSignature Language="C#" Value="public bool ContainsNonCodeAccessPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsNonCodeAccessPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsNonCodeAccessPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsNonCodeAccessPermissions();" />
      <MemberSignature Language="F#" Value="member this.ContainsNonCodeAccessPermissions : unit -&gt; bool" Usage="permissionSet.ContainsNonCodeAccessPermissions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-142">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-142">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-143">
            <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-143">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f656a-144">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-144">The following code example shows the use of the <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> method.</span></span> <span data-ttu-id="f656a-145">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-145">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#9)]
 [!code-csharp[System.Security.PermissionSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#9)]
 [!code-vb[System.Security.PermissionSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPermissionSet">
      <MemberSignature Language="C#" Value="public static byte[] ConvertPermissionSet (string inFormat, byte[] inData, string outFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ConvertPermissionSet(string inFormat, unsigned int8[] inData, string outFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertPermissionSet (inFormat As String, inData As Byte(), outFormat As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ConvertPermissionSet(System::String ^ inFormat, cli::array &lt;System::Byte&gt; ^ inData, System::String ^ outFormat);" />
      <MemberSignature Language="F#" Value="static member ConvertPermissionSet : string * byte[] * string -&gt; byte[]" Usage="System.Security.PermissionSet.ConvertPermissionSet (inFormat, inData, outFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inFormat" Type="System.String" />
        <Parameter Name="inData" Type="System.Byte[]" />
        <Parameter Name="outFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inFormat">
          <span data-ttu-id="f656a-146">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-146">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          </span>
          <span data-ttu-id="f656a-147">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-147">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          </span>
        </param>
        <param name="inData">
          <span data-ttu-id="f656a-148">An XML-encoded permission set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-148">An XML-encoded permission set.</span>
          </span>
        </param>
        <param name="outFormat">
          <span data-ttu-id="f656a-149">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-149">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span>
          </span>
          <span data-ttu-id="f656a-150">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-150">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-151">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-151">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-152">An encrypted permission set with the specified output format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-152">An encrypted permission set with the specified output format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-153">Verwenden Sie diese Methode nicht.</span><span class="sxs-lookup"><span data-stu-id="f656a-153">Do not use this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="f656a-154">In all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-154">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Copy () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.PermissionSet&#xA;override this.Copy : unit -&gt; System.Security.PermissionSet" Usage="permissionSet.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-155">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-155">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-156">A copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-156">A copy of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-157">Eine Kopie einer <xref:System.Security.PermissionSet> den gleichen Zugriff auf Ressourcen wie das ursprüngliche Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="f656a-157">A copy of a <xref:System.Security.PermissionSet> represents the same access to resources as the original object.</span></span> <span data-ttu-id="f656a-158">Änderungen an der Kopie wirken sich nicht auf den ursprünglichen Berechtigungssatz aus.</span><span class="sxs-lookup"><span data-stu-id="f656a-158">Changes made to the copy do not affect the original permission set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-159">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.Copy%2A> Methode, um eine Kopie des einen Berechtigungssatz zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="f656a-159">The following code example shows the use of the <xref:System.Security.PermissionSet.Copy%2A> method to create a copy of a permission set.</span></span> <span data-ttu-id="f656a-160">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-160">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#20)]
 [!code-csharp[System.Security.PermissionSet#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#20)]
 [!code-vb[System.Security.PermissionSet#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="permissionSet.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f656a-161">The target array to which to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-161">The target array to which to copy.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f656a-162">The starting position in the array to begin copying (zero based).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-162">The starting position in the array to begin copying (zero based).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-163">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-163">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f656a-164">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-164">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f656a-165">The <paramref name="array" /> parameter has more than one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-165">The <paramref name="array" /> parameter has more than one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="f656a-166">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-166">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.PermissionSet.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f656a-167">Gets the number of permission objects contained in the permission set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-167">Gets the number of permission objects contained in the permission set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f656a-168">Die Anzahl der Berechtigungsobjekte im <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-168">The number of permission objects contained in the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-169">In der `None` oder `Unrestricted` Status gibt NULL zurück, da keine tatsächliche Berechtigungsobjektinstanzen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f656a-169">In the `None` or `Unrestricted` state this returns zero, because no actual permission object instances are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-170">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.Count%2A> Eigenschaft, um die Anzahl der Berechtigungsobjekte in einem Berechtigungssatz abzurufen.</span><span class="sxs-lookup"><span data-stu-id="f656a-170">The following code example shows the use of the <xref:System.Security.PermissionSet.Count%2A> property to get the number of permission objects in a permission set.</span></span> <span data-ttu-id="f656a-171">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-171">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#5)]
 [!code-csharp[System.Security.PermissionSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#5)]
 [!code-vb[System.Security.PermissionSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="permissionSet.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-172">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-172">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-173">Verwendung <xref:System.Security.PermissionSet.Demand%2A> auf eine <xref:System.Security.PermissionSet> um sicherzustellen, dass alle Aufrufer über alle Berechtigungen in der Gruppe mit einem Vorgang verfügen.</span><span class="sxs-lookup"><span data-stu-id="f656a-173">Use <xref:System.Security.PermissionSet.Demand%2A> on a <xref:System.Security.PermissionSet> to ensure that all callers have all permissions in the set with one operation.</span></span>  
  
 <span data-ttu-id="f656a-174">Die Berechtigungen des Codes, der diese Methode aufruft, werden nicht überprüft. die Überprüfung beginnt um den unmittelbaren Aufrufer dieses Codes und im Stapel nach oben verläuft.</span><span class="sxs-lookup"><span data-stu-id="f656a-174">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="f656a-175">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden in der Aufrufliste höher niedriger Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f656a-175">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="f656a-176"><xref:System.Security.PermissionSet.Demand%2A> nur erfolgreich, wenn keine <xref:System.Security.SecurityException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="f656a-176"><xref:System.Security.PermissionSet.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="f656a-177">Wenn die <xref:System.Security.PermissionSet> enthält Berechtigungen, die nicht von erben <xref:System.Security.CodeAccessPermission>die `Demand` Methoden dieser Berechtigungen werden ebenfalls aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="f656a-177">If the <xref:System.Security.PermissionSet> contains permissions that do not inherit from <xref:System.Security.CodeAccessPermission>, the `Demand` methods of those permissions are called as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-178">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.Demand%2A> Methode, um alle Berechtigungen in einem Berechtigungssatz "demand".</span><span class="sxs-lookup"><span data-stu-id="f656a-178">The following code example shows the use of the <xref:System.Security.PermissionSet.Demand%2A> method to demand all the permissions in a permission set.</span></span> <span data-ttu-id="f656a-179">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-179">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#4)]
 [!code-csharp[System.Security.PermissionSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#4)]
 [!code-vb[System.Security.PermissionSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f656a-180">A caller in the call chain does not have the permission demanded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-180">A caller in the call chain does not have the permission demanded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit&#xA;override this.Deny : unit -&gt; unit" Usage="permissionSet.Deny " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-181">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-181">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-182">Diese Methode wird verhindert, dass Aufrufern einer höheren Ebene in der Aufrufliste Zugriff auf die geschützte Ressource über den Code, der diese Methode aufruft, auch wenn diese Aufrufern Berechtigung für den Zugriff erteilt wurde.</span><span class="sxs-lookup"><span data-stu-id="f656a-182">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="f656a-183">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden in der Aufrufliste höher niedriger Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f656a-183">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="f656a-184"><xref:System.Security.PermissionSet.Deny%2A> kann die Haftung des Programmierers einschränken oder unbeabsichtigte Sicherheitslücken zu verhindern, da sie Ihnen helfen zu verhindern, dass die Methode, die aufruft <xref:System.Security.PermissionSet.Deny%2A> Zugriff auf die durch die verweigerte Berechtigung geschützten Ressource verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="f656a-184"><xref:System.Security.PermissionSet.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.PermissionSet.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="f656a-185">Wenn eine Methode aufruft <xref:System.Security.PermissionSet.Deny%2A> auf eine Berechtigung an, und wenn ein <xref:System.Security.PermissionSet.Demand%2A> für diese Berechtigung von einem Aufrufer weiter unten in der Aufrufliste aufgerufen wird, wird diese sicherheitsüberprüfung fehlschlägt, wenn erreichen der <xref:System.Security.PermissionSet.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="f656a-185">If a method calls <xref:System.Security.PermissionSet.Deny%2A> on a permission, and if a <xref:System.Security.PermissionSet.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <xref:System.Security.PermissionSet.Deny%2A>.</span></span>  
  
 <span data-ttu-id="f656a-186"><xref:System.Security.PermissionSet.Deny%2A> wird für eine Berechtigung ignoriert, die nicht gewährt wird, da eine Anforderung für die Berechtigung erfolgreich abgeschlossen werden kann.</span><span class="sxs-lookup"><span data-stu-id="f656a-186"><xref:System.Security.PermissionSet.Deny%2A> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f656a-187">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-187">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netframework-4.5;netcore-2.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="permissionSet.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="f656a-188">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-188">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <param name="obj">To be added.</param>
        <summary>
          <span data-ttu-id="f656a-189">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-189">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-190">
            <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-190">
              <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-191">Die Gleichheit wird festgelegt, durch die Berechtigungen in den Berechtigungssatz, der vom angegebenen `obj`.</span><span class="sxs-lookup"><span data-stu-id="f656a-191">Equality is determined by the permissions contained in the permission set specified by `obj`.</span></span> <span data-ttu-id="f656a-192">`obj` kann es sich um eine <xref:System.Security.PermissionSet> Objekt oder ein <xref:System.Security.NamedPermissionSet> Objekt.</span><span class="sxs-lookup"><span data-stu-id="f656a-192">`obj` can be either a <xref:System.Security.PermissionSet> object or a <xref:System.Security.NamedPermissionSet> object.</span></span> <span data-ttu-id="f656a-193">Wenn `obj` ist eine <xref:System.Security.NamedPermissionSet>, Name und Beschreibung werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="f656a-193">If `obj` is a <xref:System.Security.NamedPermissionSet>, the name and description are ignored.</span></span>  
  
 <span data-ttu-id="f656a-194">Weitere Informationen finden Sie unter <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f656a-194">For more information, see <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public virtual void FromXml (System.Security.SecurityElement et);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement et) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXml (et As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ et);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="permissionSet.FromXml et" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="et" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="et">
          <span data-ttu-id="f656a-195">The XML encoding to use to reconstruct the security object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-195">The XML encoding to use to reconstruct the security object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-196">Reconstructs a security object with a specified state from an XML encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-196">Reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f656a-197">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.FromXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-197">The following code example shows the use of the <xref:System.Security.PermissionSet.FromXml%2A> method.</span></span> <span data-ttu-id="f656a-198">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-198">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f656a-199">The <paramref name="et" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-199">The <paramref name="et" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f656a-200">The <paramref name="et" /> parameter is not a valid permission element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-200">The <paramref name="et" /> parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="f656a-201">-or-  The <paramref name="et" /> parameter's version number is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-201">-or-  The <paramref name="et" /> parameter's version number is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="permissionSet.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-202">Returns an enumerator for the permissions of the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-202">Returns an enumerator for the permissions of the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-203">An enumerator object for the permissions of the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-203">An enumerator object for the permissions of the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-204">Verwenden Sie den Enumerator als Index, den Zugriff auf einzelne Berechtigungsobjekte in der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="f656a-204">Use the enumerator as an index to access individual permission objects in the set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-205">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.GetEnumerator%2A> Methode, um alle Berechtigungen in einem Berechtigungssatz aufzulisten.</span><span class="sxs-lookup"><span data-stu-id="f656a-205">The following code example shows the use of the <xref:System.Security.PermissionSet.GetEnumerator%2A> method to list all the permissions in a permission set.</span></span> <span data-ttu-id="f656a-206">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-206">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#18)]
 [!code-csharp[System.Security.PermissionSet#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#18)]
 [!code-vb[System.Security.PermissionSet#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f656a-207">
            <para>Beim Erben von <see cref="T:System.Security.PermissionSet" />, Sie können das Verhalten des ändern die <see cref="M:System.Security.PermissionSet.GetEnumerator" /> Methode durch Überschreiben der <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-207">
              <para>When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetEnumerator" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerator GetEnumeratorImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumeratorImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumeratorImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEnumeratorImpl () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerator ^ GetEnumeratorImpl();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorImpl : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumeratorImpl : unit -&gt; System.Collections.IEnumerator" Usage="permissionSet.GetEnumeratorImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-208">Returns an enumerator for the permissions of the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-208">Returns an enumerator for the permissions of the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-209">An enumerator object for the permissions of the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-209">An enumerator object for the permissions of the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-210">Die <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> Methode ist die Implementierung für die <xref:System.Security.PermissionSet.GetEnumerator%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-210">The <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="permissionSet.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-211">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-211">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-212">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-212">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-213">Der Hashcode für zwei Instanzen des gleichen Berechtigungssatzes unterschiedlich sein, damit ein Hashcode nicht verwendet werden soll, um zwei <xref:System.Security.PermissionSet> Objekte.</span><span class="sxs-lookup"><span data-stu-id="f656a-213">The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <xref:System.Security.PermissionSet> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission GetPermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission GetPermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ GetPermission(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="member this.GetPermission : Type -&gt; System.Security.IPermission" Usage="permissionSet.GetPermission permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="f656a-214">The type of the desired permission object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-214">The type of the desired permission object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-215">Gets a permission object of the specified type, if it exists in the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-215">Gets a permission object of the specified type, if it exists in the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-216">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-216">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-217">Gibt die Methode `null` für eine `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-217">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="f656a-218">Obwohl ein `Unrestricted` <xref:System.Security.PermissionSet> enthält alle Berechtigungen, er verfügt nicht über alle Instanzen, die zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f656a-218">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f656a-219">
            <para>Beim Erben von <see cref="T:System.Security.PermissionSet" />, Sie können das Verhalten des ändern die <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> Methode durch Überschreiben der <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-219">
              <para>When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission GetPermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission GetPermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ GetPermissionImpl(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="abstract member GetPermissionImpl : Type -&gt; System.Security.IPermission&#xA;override this.GetPermissionImpl : Type -&gt; System.Security.IPermission" Usage="permissionSet.GetPermissionImpl permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="f656a-220">The type of the permission object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-220">The type of the permission object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-221">Gets a permission object of the specified type, if it exists in the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-221">Gets a permission object of the specified type, if it exists in the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-222">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-222">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-223">Die <xref:System.Security.PermissionSet.GetPermissionImpl%2A> Methode ist die Implementierung für die <xref:System.Security.PermissionSet.GetPermission%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-223">The <xref:System.Security.PermissionSet.GetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="f656a-224">Gibt die Methode `null` für eine `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-224">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="f656a-225">Obwohl ein `Unrestricted` <xref:System.Security.PermissionSet> enthält alle Berechtigungen, er verfügt nicht über alle Instanzen, die zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f656a-225">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Intersect (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Intersect(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Intersect(System::Security::PermissionSet ^ other);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="permissionSet.Intersect other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="f656a-226">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-226">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-227">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-227">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-228">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-228">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span>
          </span>
          <span data-ttu-id="f656a-229">This object is <see langword="null" /> if the intersection is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-229">This object is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-230">Die Schnittmenge von zwei Berechtigungssätze ist ein Berechtigungssatz, der den Satz von Vorgänge zu beschreiben, den beide gemeinsam beschreiben.</span><span class="sxs-lookup"><span data-stu-id="f656a-230">The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="f656a-231">Insbesondere stellt es so, dass jede Anforderung, die beide Berechtigung übergibt außerdem übergibt ihrer Schnittmenge die Mindestberechtigungen dar.</span><span class="sxs-lookup"><span data-stu-id="f656a-231">Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</span></span>  
  
 <span data-ttu-id="f656a-232">Für jeden Typ der Berechtigung, die in beiden Gruppen vorhanden sind, werden die beiden Instanzen dieser Berechtigungen geschnitten, über der Berechtigung `Intersect` Methode; die resultierende Berechtigung ist in der resultierenden enthalten <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-232">For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's `Intersect` method; the resulting permission is included in the resulting <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="f656a-233">Berechtigungstypen, die nur in einem der beiden Sätze vorhanden sind, werden aus der Ergebnismenge ausgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="f656a-233">Permission types that exist in only one of the two sets are excluded from the resulting set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-234">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.Intersect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-234">The following code example shows the use of the <xref:System.Security.PermissionSet.Intersect%2A> method.</span></span> <span data-ttu-id="f656a-235">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-235">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#12)]
 [!code-csharp[System.Security.PermissionSet#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#12)]
 [!code-vb[System.Security.PermissionSet#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty();" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : unit -&gt; bool" Usage="permissionSet.IsEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-236">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-236">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-237">
            <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-237">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-238">Ein <xref:System.Security.PermissionSet> kann leer sein und noch Instanzen Berechtigungen enthalten, wenn diese Berechtigungen in den Status vollständig eingeschränkt sind.</span><span class="sxs-lookup"><span data-stu-id="f656a-238">A <xref:System.Security.PermissionSet> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</span></span> <span data-ttu-id="f656a-239">Berechtigungen sind in einem vollständig eingeschränkten Zustand Wenn ihre `IsSubsetOf` -Methoden zurückgeben `true` Wenn `null` als Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="f656a-239">Permissions are in a fully restricted state if their `IsSubsetOf` methods return `true` when `null` is passed as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Security.PermissionSet.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f656a-240">Gets a value indicating whether the collection is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-240">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f656a-241">Immer <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-241">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-242">Ein <xref:System.Security.PermissionSet> darf nicht schreibgeschützt sein werden, daher ist diese Eigenschaft stets `false`.</span><span class="sxs-lookup"><span data-stu-id="f656a-242">A <xref:System.Security.PermissionSet> cannot be read-only, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-243">Das folgende Codebeispiel zeigt den Rückgabewert von der <xref:System.Security.PermissionSet.IsReadOnly%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f656a-243">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsReadOnly%2A> property.</span></span> <span data-ttu-id="f656a-244">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-244">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#7)]
 [!code-csharp[System.Security.PermissionSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#7)]
 [!code-vb[System.Security.PermissionSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.PermissionSet target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Security.PermissionSet target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As PermissionSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::PermissionSet ^ target);" />
      <MemberSignature Language="F#" Value="member this.IsSubsetOf : System.Security.PermissionSet -&gt; bool" Usage="permissionSet.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="f656a-245">The permission set to test for the subset relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-245">The permission set to test for the subset relationship.</span>
          </span>
          <span data-ttu-id="f656a-246">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-246">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-247">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-247">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-248">
            <see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-248">
              <see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-249">Ein <xref:System.Security.PermissionSet> ist eine Teilmenge des Ziels <xref:System.Security.PermissionSet> Wenn alle Forderungen, die für erfolgreich die <xref:System.Security.PermissionSet> auch für das Ziel erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="f656a-249">A <xref:System.Security.PermissionSet> is a subset of the target <xref:System.Security.PermissionSet> if all demands that succeed for the <xref:System.Security.PermissionSet> also succeed for the target.</span></span> <span data-ttu-id="f656a-250">Das Ziel enthält, also mindestens die Berechtigungen, die in der Teilmenge enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="f656a-250">That is, the target contains at least the permissions contained in the subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-251">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.IsSubsetOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-251">The following code example shows the use of the <xref:System.Security.PermissionSet.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="f656a-252">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-252">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#11)]
 [!code-csharp[System.Security.PermissionSet#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#11)]
 [!code-vb[System.Security.PermissionSet#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Security.PermissionSet.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f656a-253">Gets a value indicating whether the collection is guaranteed to be thread safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-253">Gets a value indicating whether the collection is guaranteed to be thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f656a-254">Immer <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-254">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-255"><xref:System.Security.PermissionSet> nicht automatisch behandelt Threadsicherheit, daher ist diese Eigenschaft stets `false`.</span><span class="sxs-lookup"><span data-stu-id="f656a-255"><xref:System.Security.PermissionSet> does not automatically handle thread safety, so this property is always `false`.</span></span>  
  
 <span data-ttu-id="f656a-256">Diese Methode ist erforderlich, um die Unterstützung von <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f656a-256">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-257">Das folgende Codebeispiel zeigt den Rückgabewert von der <xref:System.Security.PermissionSet.IsSynchronized%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f656a-257">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsSynchronized%2A> property.</span></span> <span data-ttu-id="f656a-258">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-258">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#6)]
 [!code-csharp[System.Security.PermissionSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#6)]
 [!code-vb[System.Security.PermissionSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="member this.IsUnrestricted : unit -&gt; bool" Usage="permissionSet.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-259">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-259">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-260">
            <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-260">
              <see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-261">Ein `Unrestricted` <xref:System.Security.PermissionSet> effektiv enthält alle Berechtigungen, implementieren die <xref:System.Security.Permissions.IUnrestrictedPermission> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="f656a-261">An `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-262">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.IsUnrestricted%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-262">The following code example shows the use of the <xref:System.Security.PermissionSet.IsUnrestricted%2A> method.</span></span> <span data-ttu-id="f656a-263">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-263">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#19)]
 [!code-csharp[System.Security.PermissionSet#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#19)]
 [!code-vb[System.Security.PermissionSet#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit&#xA;override this.PermitOnly : unit -&gt; unit" Usage="permissionSet.PermitOnly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-264">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-264">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-265"><xref:System.Security.PermissionSet.PermitOnly%2A> ähnelt dem <xref:System.Security.PermissionSet.Deny%2A>, insofern, dass beide Stackwalk fehlschlagen, wenn sie erfolgreich ausgeführt worden wäre.</span><span class="sxs-lookup"><span data-stu-id="f656a-265"><xref:System.Security.PermissionSet.PermitOnly%2A> is similar to <xref:System.Security.PermissionSet.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="f656a-266">Der Unterschied besteht darin, die <xref:System.Security.PermissionSet.Deny%2A> Gibt Berechtigungen, die den Stackwalk auftreten, verursachen jedoch <xref:System.Security.PermissionSet.PermitOnly%2A> gibt an, die nur Berechtigungen, die nicht durch den Stackwalk fehlschlagen können.</span><span class="sxs-lookup"><span data-stu-id="f656a-266">The difference is that <xref:System.Security.PermissionSet.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.PermissionSet.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="f656a-267">Rufen Sie diese Methode, um sicherzustellen, dass der Code verwendet werden kann, um nur die angegebenen Ressourcen zugreifen.</span><span class="sxs-lookup"><span data-stu-id="f656a-267">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="f656a-268"><xref:System.Security.PermissionSet.PermitOnly%2A> wird ignoriert, für eine Berechtigung nicht gewährt werden, da eine Anforderung für die Berechtigung erfolgreich abgeschlossen werden kann.</span><span class="sxs-lookup"><span data-stu-id="f656a-268"><xref:System.Security.PermissionSet.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission cannot succeed.</span></span> <span data-ttu-id="f656a-269">Jedoch wenn später-Code, die sich auf den Aufruf einer niedrigeren Stack Aufrufe <xref:System.Security.PermissionSet.Demand%2A> für die Berechtigung, eine <xref:System.Security.SecurityException> wird ausgelöst, wenn der Stackwalk im Code, die es wurde versucht erreicht, rufen Sie <xref:System.Security.PermissionSet.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="f656a-269">However, if code lower on the call stack later calls <xref:System.Security.PermissionSet.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.PermissionSet.PermitOnly%2A>.</span></span> <span data-ttu-id="f656a-270">Dies ist, da der Code, der aufgerufen <xref:System.Security.PermissionSet.PermitOnly%2A> nicht wurde die Berechtigung erteilt hat, auch wenn er aufgerufen <xref:System.Security.PermissionSet.PermitOnly%2A> für diese Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="f656a-270">This is because the code that called <xref:System.Security.PermissionSet.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.PermissionSet.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="f656a-271">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden in der Aufrufliste höher niedriger Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f656a-271">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission RemovePermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission RemovePermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ RemovePermission(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="member this.RemovePermission : Type -&gt; System.Security.IPermission" Usage="permissionSet.RemovePermission permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="f656a-272">The type of permission to delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-272">The type of permission to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-273">Removes a permission of a certain type from the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-273">Removes a permission of a certain type from the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-274">The permission removed from the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-274">The permission removed from the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f656a-275">Sie können keine Berechtigungen aus einem uneingeschränkten Berechtigungssatz entfernen.</span><span class="sxs-lookup"><span data-stu-id="f656a-275">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="f656a-276">Der Berechtigungssatz bleibt uneingeschränkten nach dem Versuch, die Berechtigung zu entfernen, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="f656a-276">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 <span data-ttu-id="f656a-277">Der folgende C#-Code versucht, entfernen die <xref:System.Security.Permissions.FileIOPermission> aus der `FullTrust` Berechtigungssatz, die Berechtigung wird jedoch nicht entfernt.</span><span class="sxs-lookup"><span data-stu-id="f656a-277">The following C# code attempts to remove the <xref:System.Security.Permissions.FileIOPermission> from the `FullTrust` permission set, but the permission is not removed.</span></span>  
  
```  
PolicyLevel myPol = PolicyLevel.CreateAppDomainLevel();  
PermissionSet myPermSet = myPol.GetNamedPermissionSet("FullTrust");  
myPermSet.RemovePermission(typeof(FileIOPermission));  
```  
  
   
  
## Examples  
 <span data-ttu-id="f656a-278">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.RemovePermission%2A> -Methode zum Entfernen einer <xref:System.Security.Permissions.FileIOPermission> über eine Berechtigung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f656a-278">The following code example shows the use of the <xref:System.Security.PermissionSet.RemovePermission%2A> method to remove a <xref:System.Security.Permissions.FileIOPermission> from a permission set.</span></span> <span data-ttu-id="f656a-279">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-279">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#15)]
 [!code-csharp[System.Security.PermissionSet#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#15)]
 [!code-vb[System.Security.PermissionSet#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f656a-280">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-280">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f656a-281">
            <para>Beim Erben von <see cref="T:System.Security.PermissionSet" />, Sie können das Verhalten des ändern die <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> Methode durch Überschreiben der <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-281">
              <para>When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission RemovePermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission RemovePermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemovePermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ RemovePermissionImpl(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="abstract member RemovePermissionImpl : Type -&gt; System.Security.IPermission&#xA;override this.RemovePermissionImpl : Type -&gt; System.Security.IPermission" Usage="permissionSet.RemovePermissionImpl permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass">
          <span data-ttu-id="f656a-282">The type of the permission to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-282">The type of the permission to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-283">Removes a permission of a certain type from the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-283">Removes a permission of a certain type from the set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-284">The permission removed from the set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-284">The permission removed from the set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-285">Die <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> Methode ist die Implementierung für die <xref:System.Security.PermissionSet.RemovePermission%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-285">The <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.RemovePermission%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f656a-286">Sie können keine Berechtigungen aus einem uneingeschränkten Berechtigungssatz entfernen.</span><span class="sxs-lookup"><span data-stu-id="f656a-286">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="f656a-287">Der Berechtigungssatz bleibt uneingeschränkten nach dem Versuch, die Berechtigung zu entfernen, und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="f656a-287">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f656a-288">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-288">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberSignature Language="F#" Value="static member RevertAssert : unit -&gt; unit" Usage="System.Security.PermissionSet.RevertAssert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-289">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-289">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-290">Es ist keine <xref:System.Security.CodeAccessPermission.Assert%2A> für den aktuellen Frame eine <xref:System.ExecutionEngineException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="f656a-290">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f656a-291">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-291">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission SetPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission SetPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ SetPermission(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="member this.SetPermission : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.SetPermission perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="f656a-292">The permission to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-292">The permission to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-293">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-293">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-294">The set permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-294">The set permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-295">Diese Methode entfernt alle vorhandenen Berechtigungsobjekte des gleichen Typs aus der <xref:System.Security.PermissionSet> und ersetzt diese durch die `perm` Parameter.</span><span class="sxs-lookup"><span data-stu-id="f656a-295">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="f656a-296">Wenn eine Berechtigung, die implementiert <xref:System.Security.Permissions.IUnrestrictedPermission> festgelegt ist, auf eine <xref:System.Security.PermissionSet> also <xref:System.Security.Permissions.PermissionState.Unrestricted>, das resultierende <xref:System.Security.PermissionSet> ist nicht mehr `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="f656a-296">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-297">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.SetPermission%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-297">The following code example shows the use of the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span> <span data-ttu-id="f656a-298">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-298">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#16)]
 [!code-csharp[System.Security.PermissionSet#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#16)]
 [!code-vb[System.Security.PermissionSet#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f656a-299">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-299">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f656a-300">
            <para>Beim Erben von <see cref="T:System.Security.PermissionSet" />, Sie können das Verhalten des ändern die <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> Methode durch Überschreiben der <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-300">
              <para>When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission SetPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ SetPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="abstract member SetPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.SetPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.SetPermissionImpl perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">
          <span data-ttu-id="f656a-301">The permission to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-301">The permission to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-302">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-302">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-303">The set permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-303">The set permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-304">Die <xref:System.Security.PermissionSet.SetPermissionImpl%2A> Methode ist die Implementierung für die <xref:System.Security.PermissionSet.SetPermission%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-304">The <xref:System.Security.PermissionSet.SetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="f656a-305">Diese Methode entfernt alle vorhandenen Berechtigungsobjekte des gleichen Typs aus der <xref:System.Security.PermissionSet> und ersetzt diese durch die `perm` Parameter.</span><span class="sxs-lookup"><span data-stu-id="f656a-305">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="f656a-306">Wenn eine Berechtigung, die implementiert <xref:System.Security.Permissions.IUnrestrictedPermission> festgelegt ist, auf eine <xref:System.Security.PermissionSet> also <xref:System.Security.Permissions.PermissionState.Unrestricted>, das resultierende <xref:System.Security.PermissionSet> ist nicht mehr `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="f656a-306">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f656a-307">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-307">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Security.PermissionSet.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f656a-308">Gets the root object of the current collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-308">Gets the root object of the current collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f656a-309">Das Stammobjekt der aktuellen Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-309">The root object of the current collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-310">Diese Methode ist erforderlich, um die Unterstützung von <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f656a-310">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-311">Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Security.PermissionSet.SyncRoot%2A> Eigenschaft, um das Stammobjekt der aktuellen Auflistung abzurufen.</span><span class="sxs-lookup"><span data-stu-id="f656a-311">The following code example shows the use of <xref:System.Security.PermissionSet.SyncRoot%2A> property to get the root object of the current collection.</span></span> <span data-ttu-id="f656a-312">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-312">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#8)]
 [!code-csharp[System.Security.PermissionSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#8)]
 [!code-vb[System.Security.PermissionSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="f656a-313">The object that initiated the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-313">The object that initiated the callback.</span>
          </span>
          <span data-ttu-id="f656a-314">The functionality for this parameter is not currently implemented.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-314">The functionality for this parameter is not currently implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-315">Runs when the entire object graph has been deserialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-315">Runs when the entire object graph has been deserialized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="permissionSet.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-316">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-316">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-317">A representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-317">A representation of the <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-318">Eine Zeichenfolgendarstellung eignet sich für Debuggen, um den Status der finden Sie unter einem <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-318">The string representation is useful in debugging to see the state of a <xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-319">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-319">The following code example shows the use of the <xref:System.Security.PermissionSet.ToString%2A> method.</span></span> <span data-ttu-id="f656a-320">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-320">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#10)]
 [!code-csharp[System.Security.PermissionSet#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#10)]
 [!code-vb[System.Security.PermissionSet#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="permissionSet.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f656a-321">Creates an XML encoding of the security object and its current state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-321">Creates an XML encoding of the security object and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-322">An XML encoding of the security object, including any state information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-322">An XML encoding of the security object, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f656a-323">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.ToXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-323">The following code example shows the use of the <xref:System.Security.PermissionSet.ToXml%2A> method.</span></span> <span data-ttu-id="f656a-324">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-324">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Union (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Union(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Union(System::Security::PermissionSet ^ other);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="permissionSet.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="f656a-325">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-325">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f656a-326">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-326">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f656a-327">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f656a-327">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f656a-328">Das Ergebnis eines Aufrufs von <xref:System.Security.PermissionSet.Union%2A> ist ein <xref:System.Security.PermissionSet> , die alle Vorgänge, die vom aktuellen darstellt <xref:System.Security.PermissionSet> sowie die Vorgänge, die durch das angegebene dargestellt <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="f656a-328">The result of a call to <xref:System.Security.PermissionSet.Union%2A> is a <xref:System.Security.PermissionSet> that represents all the operations represented by the current <xref:System.Security.PermissionSet> as well as all the operations represented by the specified <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="f656a-329">Wenn entweder Gruppe `Unrestricted`, ist die Vereinigung `Unrestricted` sowie.</span><span class="sxs-lookup"><span data-stu-id="f656a-329">If either set is `Unrestricted`, the union is `Unrestricted` as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f656a-330">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.PermissionSet.Union%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f656a-330">The following code example shows the use of the <xref:System.Security.PermissionSet.Union%2A> method.</span></span> <span data-ttu-id="f656a-331">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.PermissionSet> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f656a-331">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#13)]
 [!code-csharp[System.Security.PermissionSet#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#13)]
 [!code-vb[System.Security.PermissionSet#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>