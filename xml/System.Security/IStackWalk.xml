<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b37ff083eff27618aa07c0a744562f3f8a613708" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="082db-101">Verwaltet den Stackwalk, der bestimmt, ob alle Aufrufer in der Aufrufliste über die erforderlichen Berechtigungen für den Zugriff auf eine geschützte Ressource verfügen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="082db-101">Manages the stack walk that determines whether all callers in the call stack have the required permissions to access a protected resource.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="082db-102">Teilweise vertrauenswürdiger Code stellt immer ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="082db-102">Partially trusted code always presents a security risk.</span></span> <span data-ttu-id="082db-103">In einigen Fällen kann festgelegt werden, um Aktionen im Auftrag von bösartigem Code auszuführen, die nicht über die Berechtigung zum Zugriff auf eine Ressource verfügt.</span><span class="sxs-lookup"><span data-stu-id="082db-103">It can sometimes be manipulated to perform actions on behalf of malicious code that does not have permission to access a resource.</span></span> <span data-ttu-id="082db-104">Auf diese Weise kann schädlichen Code höhere Sicherheitszugriff als es zulässig ist, erreichen.</span><span class="sxs-lookup"><span data-stu-id="082db-104">In this way, malicious code can achieve higher security access than it should be allowed.</span></span>  
  
 <span data-ttu-id="082db-105">Die common Language Runtime schützt verwalteten Code vor einem solchen Angriff durch ein Stackwalk auf alle Aufrufe ausführen.</span><span class="sxs-lookup"><span data-stu-id="082db-105">The common language runtime helps protect managed code from these attacks by running a stack walk on all calls.</span></span> <span data-ttu-id="082db-106">Der Stackwalk erfordert, dass der gesamte Code in der Aufrufliste über die Berechtigung zum Zugriff auf eine geschützte Ressource verfügt.</span><span class="sxs-lookup"><span data-stu-id="082db-106">The stack walk requires that all code in the call stack has permission to access a protected resource.</span></span> <span data-ttu-id="082db-107">Da der Code versucht, das Risiko eines Angriffs immer an einer beliebigen Stelle in der Aufrufliste vorhanden sind, ist es keine eigenen Sicherheitsberechtigungen überschreitet möglich.</span><span class="sxs-lookup"><span data-stu-id="082db-107">Because the code attempting the attack will always be somewhere in the call stack, it will be unable to exceed its own security permissions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="082db-108">Bestätigt, dass der aufrufende Code auf die durch das aktuelle Berechtigungsobjekt identifizierte Ressource zugreifen kann, selbst wenn Aufrufern einer höheren Ebene in der Aufrufliste keine Berechtigung für den Zugriff auf die Ressource erteilt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-108">Asserts that the calling code can access the resource identified by the current permission object, even if callers higher in the stack have not been granted permission to access the resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="082db-109">Aufrufen von <xref:System.Security.IStackWalk.Assert%2A> beendet die Überprüfung der Berechtigung auf Aufrufern einer höheren Ebene in der Aufrufliste.</span><span class="sxs-lookup"><span data-stu-id="082db-109">Calling <xref:System.Security.IStackWalk.Assert%2A> stops the permission check on callers higher in the call stack.</span></span> <span data-ttu-id="082db-110">Aus diesem Grund, selbst wenn dieser Aufrufer nicht über die erforderlichen Berechtigungen verfügen, können sie weiterhin Ressourcen zugreifen.</span><span class="sxs-lookup"><span data-stu-id="082db-110">Therefore, even if these callers do not have the requisite permissions, they can still access resources.</span></span> <span data-ttu-id="082db-111">Eine Assertion ist nur wirksam, wenn der Code aufruft <xref:System.Security.IStackWalk.Assert%2A> übergibt die sicherheitsüberprüfung für die Berechtigung, die davon auszugehen ist.</span><span class="sxs-lookup"><span data-stu-id="082db-111">An assertion is effective only if the code that calls <xref:System.Security.IStackWalk.Assert%2A> passes the security check for the permission that it is asserting.</span></span>  
  
 <span data-ttu-id="082db-112">Ein Aufruf von <xref:System.Security.IStackWalk.Assert%2A> bleibt wirksam, bis der aufrufende Code an den Aufrufer oder bis ein nachfolgender Aufruf von zurückgibt <xref:System.Security.IStackWalk.Assert%2A> rendert die vorhergehende Assertion wirkungslos.</span><span class="sxs-lookup"><span data-stu-id="082db-112">A call to <xref:System.Security.IStackWalk.Assert%2A> is effective until the calling code returns to its caller or until a subsequent call to <xref:System.Security.IStackWalk.Assert%2A> renders the previous assertion ineffective.</span></span> <span data-ttu-id="082db-113">Darüber hinaus <xref:System.Security.CodeAccessPermission.RevertAssert%2A> oder <xref:System.Security.CodeAccessPermission.RevertAll%2A> entfernt eine ausstehende <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="082db-113">Also, <xref:System.Security.CodeAccessPermission.RevertAssert%2A> or <xref:System.Security.CodeAccessPermission.RevertAll%2A> removes a pending <xref:System.Security.IStackWalk.Assert%2A>.</span></span>  
  
 <span data-ttu-id="082db-114"><xref:System.Security.IStackWalk.Assert%2A> wird ignoriert, für eine Berechtigung nicht gewährt werden, da eine Anforderung für die Berechtigung nicht erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="082db-114"><xref:System.Security.IStackWalk.Assert%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="082db-115">Jedoch wenn Code in der Aufrufliste niedrigeren aufruft <xref:System.Security.IStackWalk.Demand%2A> für die Berechtigung, eine <xref:System.Security.SecurityException> wird ausgelöst, wenn der Stackwalk im Code, die es wurde versucht erreicht, rufen Sie <xref:System.Security.IStackWalk.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="082db-115">However, if code lower on the call stack calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.Assert%2A>.</span></span> <span data-ttu-id="082db-116">Dies liegt daran, dass der Code, der aufgerufen <xref:System.Security.IStackWalk.Assert%2A> wurde nicht erteilt die Berechtigung, obwohl sie versucht haben zu <xref:System.Security.IStackWalk.Assert%2A> es.</span><span class="sxs-lookup"><span data-stu-id="082db-116">This happens because the code that called <xref:System.Security.IStackWalk.Assert%2A> has not been granted the permission, even though it tried to <xref:System.Security.IStackWalk.Assert%2A> it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="082db-117">Da Aufrufen <xref:System.Security.IStackWalk.Assert%2A> entfernt die Anforderung, dass der gesamte code in der Aufrufkette Berechtigung erteilt werden, auf die angegebene Ressource zugreifen, es kann Sicherheitslücken öffnen, wenn falsch oder nicht ordnungsgemäß verwendet.</span><span class="sxs-lookup"><span data-stu-id="082db-117">Because calling <xref:System.Security.IStackWalk.Assert%2A> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="082db-118">Aus diesem Grund sollte mit großer Vorsicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="082db-118">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="082db-119">Der aufrufende Code verfügt nicht über <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-119">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="082db-120">Ermittelt zur Laufzeit, ob allen Aufrufern in der Aufrufliste die vom aktuellen Berechtigungsobjekt angegebene Berechtigung erteilt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-120">Determines at run time whether all callers in the call stack have been granted the permission specified by the current permission object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="082db-121">Diese Methode wird in der Regel von sicheren Bibliotheken verwendet, um sicherzustellen, dass Aufrufer über die Berechtigung zum Zugriff auf eine Ressource verfügen.</span><span class="sxs-lookup"><span data-stu-id="082db-121">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="082db-122">Z. B. eine Klasse von Dateien in einer sicheren Klassenbibliothek ruft <xref:System.Security.IStackWalk.Demand%2A> für die erforderlichen <xref:System.Security.Permissions.FileIOPermission> vor dem Ausführen einer Datei-Vorgangs, der vom Aufrufer angefordert.</span><span class="sxs-lookup"><span data-stu-id="082db-122">For example, a file class in a secure class library calls <xref:System.Security.IStackWalk.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="082db-123">Die Berechtigungen des Codes, der diese Methode aufruft, werden nicht überprüft. die Überprüfung beginnt um den unmittelbaren Aufrufer dieses Codes und im Stapel nach oben verläuft.</span><span class="sxs-lookup"><span data-stu-id="082db-123">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="082db-124"><xref:System.Security.IStackWalk.Demand%2A> nur erfolgreich, wenn keine <xref:System.Security.SecurityException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="082db-124"><xref:System.Security.IStackWalk.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="082db-125">Ein in der Aufrufliste höher eingestufter Aufrufer hat nicht die durch das aktuelle Berechtigungsobjekt angegebene Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-125">A caller higher in the call stack does not have the permission specified by the current permission object.</span>
          </span>
          <span data-ttu-id="082db-126">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-126">-or-</span>
          </span>
          <span data-ttu-id="082db-127">Ein Aufrufer in der Aufrufliste hat <see cref="M:System.Security.IStackWalk.Deny" /> für das aktuelle Berechtigungsobjekt aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-127">A caller in the call stack has called <see cref="M:System.Security.IStackWalk.Deny" /> on the current permission object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="082db-128">Bewirkt einen Fehler bei jeder <see cref="M:System.Security.IStackWalk.Demand" /> für das aktuelle Objekt, das den aufrufenden Code durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-128">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for the current object that passes through the calling code to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="082db-129">Diese Methode wird verhindert, dass Aufrufern einer höheren Ebene in der Aufrufliste Zugriff auf die geschützte Ressource über den Code, der diese Methode aufruft, auch wenn diese Aufrufern Berechtigung für den Zugriff erteilt wurde.</span><span class="sxs-lookup"><span data-stu-id="082db-129">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="082db-130">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden in der Aufrufliste höher niedriger Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="082db-130">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="082db-131"><xref:System.Security.IStackWalk.Deny%2A> kann die Haftung des Programmierers einschränken oder unbeabsichtigte Sicherheitslücken zu verhindern, da sie Ihnen helfen zu verhindern, dass die Methode, die aufruft <xref:System.Security.IStackWalk.Deny%2A> Zugriff auf die durch die verweigerte Berechtigung geschützten Ressource verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="082db-131"><xref:System.Security.IStackWalk.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.IStackWalk.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="082db-132">Wenn eine Methode aufruft <xref:System.Security.IStackWalk.Deny%2A> auf eine Berechtigung an, und wenn ein <xref:System.Security.IStackWalk.Demand%2A> für diese Berechtigung von einem Aufrufer weiter unten in der Aufrufliste aufgerufen wird, wird diese sicherheitsüberprüfung fehlschlägt, wenn erreicht die <xref:System.Security.IStackWalk.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="082db-132">If a method calls <xref:System.Security.IStackWalk.Deny%2A> on a permission, and if a <xref:System.Security.IStackWalk.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <xref:System.Security.IStackWalk.Deny%2A>.</span></span>  
  
 <span data-ttu-id="082db-133"><xref:System.Security.IStackWalk.Deny%2A> wird ignoriert, für eine Berechtigung nicht gewährt werden, da eine Anforderung für die Berechtigung nicht erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="082db-133"><xref:System.Security.IStackWalk.Deny%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="082db-134">Sie können nicht auf diese Methode überschreiben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="082db-134">You cannot override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="082db-135">Bewirkt, dass jedes <see cref="M:System.Security.IStackWalk.Demand" /> für alle Objekte außer dem aktuellen Objekt fehlschlägt, das den aufrufenden Code durchläuft, selbst wenn übergeordnetem Code in der Aufrufliste eine Zugriffsberechtigung für andere Ressourcen gewährt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="082db-135">Causes every <see cref="M:System.Security.IStackWalk.Demand" /> for all objects except the current one that passes through the calling code to fail, even if code higher in the call stack has been granted permission to access other resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="082db-136"><xref:System.Security.IStackWalk.PermitOnly%2A> ähnelt dem <xref:System.Security.IStackWalk.Deny%2A>, insofern, dass beide Stackwalk fehlschlagen, wenn sie erfolgreich ausgeführt worden wäre.</span><span class="sxs-lookup"><span data-stu-id="082db-136"><xref:System.Security.IStackWalk.PermitOnly%2A> is similar to <xref:System.Security.IStackWalk.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="082db-137">Der Unterschied besteht darin, die <xref:System.Security.IStackWalk.Deny%2A> Gibt Berechtigungen, die den Stackwalk auftreten, verursachen jedoch <xref:System.Security.IStackWalk.PermitOnly%2A> gibt an, die nur Berechtigungen, die nicht durch den Stackwalk fehlschlagen können.</span><span class="sxs-lookup"><span data-stu-id="082db-137">The difference is that <xref:System.Security.IStackWalk.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.IStackWalk.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="082db-138">Rufen Sie diese Methode, um sicherzustellen, dass der Code verwendet werden kann, um nur die angegebenen Ressourcen zugreifen.</span><span class="sxs-lookup"><span data-stu-id="082db-138">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="082db-139"><xref:System.Security.IStackWalk.PermitOnly%2A> wird ignoriert, für eine Berechtigung nicht gewährt werden, da eine Anforderung für die Berechtigung nicht erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="082db-139"><xref:System.Security.IStackWalk.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission will not succeed.</span></span> <span data-ttu-id="082db-140">Jedoch wenn später-Code, die sich auf den Aufruf einer niedrigeren Stack Aufrufe <xref:System.Security.IStackWalk.Demand%2A> für die Berechtigung, eine <xref:System.Security.SecurityException> wird ausgelöst, wenn der Stackwalk im Code, die es wurde versucht erreicht, rufen Sie <xref:System.Security.IStackWalk.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="082db-140">However, if code lower on the call stack later calls <xref:System.Security.IStackWalk.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.IStackWalk.PermitOnly%2A>.</span></span> <span data-ttu-id="082db-141">Dies ist, da der Code, der aufgerufen <xref:System.Security.IStackWalk.PermitOnly%2A> nicht wurde die Berechtigung erteilt hat, auch wenn er aufgerufen <xref:System.Security.IStackWalk.PermitOnly%2A> für diese Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="082db-141">This is because the code that called <xref:System.Security.IStackWalk.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.IStackWalk.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="082db-142">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden in der Aufrufliste höher niedriger Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="082db-142">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>