<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IStackWalk.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b37ff083eff27618aa07c0a744562f3f8a613708.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b37ff083eff27618aa07c0a744562f3f8a613708</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.IStackWalk">
          <source>Manages the stack walk that determines whether all callers in the call stack have the required permissions to access a protected resource.</source>
          <target state="translated">Verwaltet den Stackwalk, der bestimmt, ob alle Aufrufer in der Aufrufliste über die erforderlichen Berechtigungen für den Zugriff auf eine geschützte Ressource verfügen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IStackWalk">
          <source>Partially trusted code always presents a security risk.</source>
          <target state="translated">Teilweise vertrauenswürdiger Code stellt immer ein Sicherheitsrisiko dar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IStackWalk">
          <source>It can sometimes be manipulated to perform actions on behalf of malicious code that does not have permission to access a resource.</source>
          <target state="translated">In einigen Fällen kann festgelegt werden, um Aktionen im Auftrag von bösartigem Code auszuführen, die nicht über die Berechtigung zum Zugriff auf eine Ressource verfügt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IStackWalk">
          <source>In this way, malicious code can achieve higher security access than it should be allowed.</source>
          <target state="translated">Auf diese Weise kann schädlichen Code höhere Sicherheitszugriff als es zulässig ist, erreichen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IStackWalk">
          <source>The common language runtime helps protect managed code from these attacks by running a stack walk on all calls.</source>
          <target state="translated">Die common Language Runtime schützt verwalteten Code vor einem solchen Angriff durch ein Stackwalk auf alle Aufrufe ausführen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IStackWalk">
          <source>The stack walk requires that all code in the call stack has permission to access a protected resource.</source>
          <target state="translated">Der Stackwalk erfordert, dass der gesamte Code in der Aufrufliste über die Berechtigung zum Zugriff auf eine geschützte Ressource verfügt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IStackWalk">
          <source>Because the code attempting the attack will always be somewhere in the call stack, it will be unable to exceed its own security permissions.</source>
          <target state="translated">Da der Code versucht, das Risiko eines Angriffs immer an einer beliebigen Stelle in der Aufrufliste vorhanden sind, ist es keine eigenen Sicherheitsberechtigungen überschreitet möglich.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.Assert">
          <source>Asserts that the calling code can access the resource identified by the current permission object, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">Bestätigt, dass der aufrufende Code auf die durch das aktuelle Berechtigungsobjekt identifizierte Ressource zugreifen kann, selbst wenn Aufrufern einer höheren Ebene in der Aufrufliste keine Berechtigung für den Zugriff auf die Ressource erteilt wurde.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>Calling <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> stops the permission check on callers higher in the call stack.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> beendet die Überprüfung der Berechtigung auf Aufrufern einer höheren Ebene in der Aufrufliste.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>Therefore, even if these callers do not have the requisite permissions, they can still access resources.</source>
          <target state="translated">Aus diesem Grund, selbst wenn dieser Aufrufer nicht über die erforderlichen Berechtigungen verfügen, können sie weiterhin Ressourcen zugreifen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>An assertion is effective only if the code that calls <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> passes the security check for the permission that it is asserting.</source>
          <target state="translated">Eine Assertion ist nur wirksam, wenn der Code aufruft <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> übergibt die sicherheitsüberprüfung für die Berechtigung, die davon auszugehen ist.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>A call to <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> is effective until the calling code returns to its caller or until a subsequent call to <ph id="ph2">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> renders the previous assertion ineffective.</source>
          <target state="translated">Ein Aufruf von <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> bleibt wirksam, bis der aufrufende Code an den Aufrufer oder bis ein nachfolgender Aufruf von zurückgibt <ph id="ph2">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> rendert die vorhergehende Assertion wirkungslos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>Also, <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A&gt;</ph> removes a pending <ph id="ph3">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph>.</source>
          <target state="translated">Darüber hinaus <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A&gt;</ph> entfernt eine ausstehende <ph id="ph3">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source><ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> is ignored for a permission not granted because a demand for that permission will not succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> wird ignoriert, für eine Berechtigung nicht gewährt werden, da eine Anforderung für die Berechtigung nicht erfolgreich ist.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>However, if code lower on the call stack calls <ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> for that permission, a <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the stack walk reaches the code that tried to call <ph id="ph3">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph>.</source>
          <target state="translated">Jedoch wenn Code in der Aufrufliste niedrigeren aufruft <ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> für die Berechtigung, eine <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> wird ausgelöst, wenn der Stackwalk im Code, die es wurde versucht erreicht, rufen Sie <ph id="ph3">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>This happens because the code that called <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> has not been granted the permission, even though it tried to <ph id="ph2">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> it.</source>
          <target state="translated">Dies liegt daran, dass der Code, der aufgerufen <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> wurde nicht erteilt die Berechtigung, obwohl sie versucht haben zu <ph id="ph2">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> es.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>Because calling <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">Da Aufrufen <ph id="ph1">&lt;xref:System.Security.IStackWalk.Assert%2A&gt;</ph> entfernt die Anforderung, dass der gesamte code in der Aufrufkette Berechtigung erteilt werden, auf die angegebene Ressource zugreifen, es kann Sicherheitslücken öffnen, wenn falsch oder nicht ordnungsgemäß verwendet.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Assert">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">Aus diesem Grund sollte mit großer Vorsicht verwendet werden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.Assert">
          <source>The calling code does not have <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /&gt;</ph>.</source>
          <target state="translated">Der aufrufende Code verfügt nicht über <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.Demand">
          <source>Determines at run time whether all callers in the call stack have been granted the permission specified by the current permission object.</source>
          <target state="translated">Ermittelt zur Laufzeit, ob allen Aufrufern in der Aufrufliste die vom aktuellen Berechtigungsobjekt angegebene Berechtigung erteilt wurde.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Demand">
          <source>This method is typically used by secure libraries to ensure that callers have permission to access a resource.</source>
          <target state="translated">Diese Methode wird in der Regel von sicheren Bibliotheken verwendet, um sicherzustellen, dass Aufrufer über die Berechtigung zum Zugriff auf eine Ressource verfügen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Demand">
          <source>For example, a file class in a secure class library calls <ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> for the necessary <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> before performing a file operation requested by the caller.</source>
          <target state="translated">Z. B. eine Klasse von Dateien in einer sicheren Klassenbibliothek ruft <ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> für die erforderlichen <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> vor dem Ausführen einer Datei-Vorgangs, der vom Aufrufer angefordert.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Demand">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">Die Berechtigungen des Codes, der diese Methode aufruft, werden nicht überprüft. die Überprüfung beginnt um den unmittelbaren Aufrufer dieses Codes und im Stapel nach oben verläuft.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> nur erfolgreich, wenn keine <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.Demand">
          <source>A caller higher in the call stack does not have the permission specified by the current permission object.</source>
          <target state="translated">Ein in der Aufrufliste höher eingestufter Aufrufer hat nicht die durch das aktuelle Berechtigungsobjekt angegebene Berechtigung.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.Demand">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.Demand">
          <source>A caller in the call stack has called <ph id="ph1">&lt;see cref="M:System.Security.IStackWalk.Deny" /&gt;</ph> on the current permission object.</source>
          <target state="translated">Ein Aufrufer in der Aufrufliste hat <ph id="ph1">&lt;see cref="M:System.Security.IStackWalk.Deny" /&gt;</ph> für das aktuelle Berechtigungsobjekt aufgerufen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.Deny">
          <source>Causes every <ph id="ph1">&lt;see cref="M:System.Security.IStackWalk.Demand" /&gt;</ph> for the current object that passes through the calling code to fail.</source>
          <target state="translated">Bewirkt einen Fehler bei jeder <ph id="ph1">&lt;see cref="M:System.Security.IStackWalk.Demand" /&gt;</ph> für das aktuelle Objekt, das den aufrufenden Code durchläuft.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Deny">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">Diese Methode wird verhindert, dass Aufrufern einer höheren Ebene in der Aufrufliste Zugriff auf die geschützte Ressource über den Code, der diese Methode aufruft, auch wenn diese Aufrufern Berechtigung für den Zugriff erteilt wurde.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Deny">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden in der Aufrufliste höher niedriger Methoden aufrufen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <ph id="ph2">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> from being used to access the resource protected by the denied permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> kann die Haftung des Programmierers einschränken oder unbeabsichtigte Sicherheitslücken zu verhindern, da sie Ihnen helfen zu verhindern, dass die Methode, die aufruft <ph id="ph2">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> Zugriff auf die durch die verweigerte Berechtigung geschützten Ressource verwendet wird.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Deny">
          <source>If a method calls <ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> on a permission, and if a <ph id="ph2">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> for that permission is invoked by a caller lower in the call stack, that security check will fail when it reaches the <ph id="ph3">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph>.</source>
          <target state="translated">Wenn eine Methode aufruft <ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> auf eine Berechtigung an, und wenn ein <ph id="ph2">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> für diese Berechtigung von einem Aufrufer weiter unten in der Aufrufliste aufgerufen wird, wird diese sicherheitsüberprüfung fehlschlägt, wenn erreicht die <ph id="ph3">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> is ignored for a permission not granted because a demand for that permission will not succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> wird ignoriert, für eine Berechtigung nicht gewährt werden, da eine Anforderung für die Berechtigung nicht erfolgreich ist.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.Deny">
          <source>You cannot override this method.</source>
          <target state="translated">Sie können nicht auf diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.IStackWalk.PermitOnly">
          <source>Causes every <ph id="ph1">&lt;see cref="M:System.Security.IStackWalk.Demand" /&gt;</ph> for all objects except the current one that passes through the calling code to fail, even if code higher in the call stack has been granted permission to access other resources.</source>
          <target state="translated">Bewirkt, dass jedes <ph id="ph1">&lt;see cref="M:System.Security.IStackWalk.Demand" /&gt;</ph> für alle Objekte außer dem aktuellen Objekt fehlschlägt, das den aufrufenden Code durchläuft, selbst wenn übergeordnetem Code in der Aufrufliste eine Zugriffsberechtigung für andere Ressourcen gewährt wurde.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> is similar to <ph id="ph2">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph>, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> ähnelt dem <ph id="ph2">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph>, insofern, dass beide Stackwalk fehlschlagen, wenn sie erfolgreich ausgeführt worden wäre.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.PermitOnly">
          <source>The difference is that <ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> specifies permissions that will cause the stack walk to fail, but <ph id="ph2">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">Der Unterschied besteht darin, die <ph id="ph1">&lt;xref:System.Security.IStackWalk.Deny%2A&gt;</ph> Gibt Berechtigungen, die den Stackwalk auftreten, verursachen jedoch <ph id="ph2">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> gibt an, die nur Berechtigungen, die nicht durch den Stackwalk fehlschlagen können.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.PermitOnly">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">Rufen Sie diese Methode, um sicherzustellen, dass der Code verwendet werden kann, um nur die angegebenen Ressourcen zugreifen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> is ignored for a permission not granted because a demand for that permission will not succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> wird ignoriert, für eine Berechtigung nicht gewährt werden, da eine Anforderung für die Berechtigung nicht erfolgreich ist.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.PermitOnly">
          <source>However, if code lower on the call stack later calls <ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> for that permission, a <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the stack walk reaches the code that tried to call <ph id="ph3">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph>.</source>
          <target state="translated">Jedoch wenn später-Code, die sich auf den Aufruf einer niedrigeren Stack Aufrufe <ph id="ph1">&lt;xref:System.Security.IStackWalk.Demand%2A&gt;</ph> für die Berechtigung, eine <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> wird ausgelöst, wenn der Stackwalk im Code, die es wurde versucht erreicht, rufen Sie <ph id="ph3">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.PermitOnly">
          <source>This is because the code that called <ph id="ph1">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> has not been granted the permission, even though it called <ph id="ph2">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> for that permission.</source>
          <target state="translated">Dies ist, da der Code, der aufgerufen <ph id="ph1">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> nicht wurde die Berechtigung erteilt hat, auch wenn er aufgerufen <ph id="ph2">&lt;xref:System.Security.IStackWalk.PermitOnly%2A&gt;</ph> für diese Berechtigung.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IStackWalk.PermitOnly">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">Die Aufrufliste wird in der Regel als absteigend, dargestellt, sodass Methoden in der Aufrufliste höher niedriger Methoden aufrufen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>