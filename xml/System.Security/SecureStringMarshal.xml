<Type Name="SecureStringMarshal" FullName="System.Security.SecureStringMarshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b79084d300596d687176c347dbac8384e7acfaf" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77219200" /></Metadata><TypeSignature Language="C#" Value="public static class SecureStringMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SecureStringMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureStringMarshal" />
  <TypeSignature Language="VB.NET" Value="Public Class SecureStringMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureStringMarshal abstract sealed" />
  <TypeSignature Language="F#" Value="type SecureStringMarshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6d902-101">Stellt eine Auflistung von Methoden zum Belegen von nicht verwaltetem Speicher und dem Kopieren von nicht verwalteten Speicherblöcken bereit.</span><span class="sxs-lookup"><span data-stu-id="6d902-101">Provides a collection of methods for allocating unmanaged memory and copying unmanaged memory blocks.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6d902-102">Das zu kopierende verwaltete Objekt.</span><span class="sxs-lookup"><span data-stu-id="6d902-102">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="6d902-103">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" />-Objekts in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.</span><span class="sxs-lookup"><span data-stu-id="6d902-103">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="6d902-104">Die Adresse im nicht verwalteten Speicher, in die der <paramref name="s" />-Parameter kopiert wurde, oder 0, wenn ein NULL-Objekt bereitgestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="6d902-104">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d902-105">Die <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A>-Methode ist nützlich für das benutzerdefinierte Marshalling oder das Mischen von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="6d902-105">The <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="6d902-106">Da diese Methode den für eine Zeichenfolge erforderlichen nicht verwalteten Arbeitsspeicher freigibt, wird der Speicher durch Aufrufen von <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>immer freigegeben.</span><span class="sxs-lookup"><span data-stu-id="6d902-106">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="6d902-107">Die Zeichen der Zeichenfolge werden als ANSI-Zeichen kopiert.</span><span class="sxs-lookup"><span data-stu-id="6d902-107">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d902-108">Der Parameter <paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d902-108">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="6d902-109">Es ist nicht genügend Arbeitsspeicher verfügbar.</span><span class="sxs-lookup"><span data-stu-id="6d902-109">There is insufficient memory available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6d902-110">Das zu kopierende verwaltete Objekt.</span><span class="sxs-lookup"><span data-stu-id="6d902-110">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="6d902-111">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" />-Objekts in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.</span><span class="sxs-lookup"><span data-stu-id="6d902-111">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="6d902-112">Die Adresse im nicht verwalteten Speicher, in die der <paramref name="s" />-Parameter kopiert wurde, oder 0, wenn ein NULL-Objekt bereitgestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="6d902-112">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d902-113">Die <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A>-Methode ist nützlich für das benutzerdefinierte Marshalling oder das Mischen von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="6d902-113">The <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="6d902-114">Da diese Methode den für eine Zeichenfolge erforderlichen nicht verwalteten Arbeitsspeicher belegt, wird der Arbeitsspeicher von immer freigegeben, indem die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6d902-114">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="6d902-115">Die Zeichen der Zeichenfolge werden als Unicode-Zeichen kopiert.</span><span class="sxs-lookup"><span data-stu-id="6d902-115">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d902-116">Der Parameter <paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d902-116">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="6d902-117">Es ist nicht genügend Arbeitsspeicher verfügbar.</span><span class="sxs-lookup"><span data-stu-id="6d902-117">There is insufficient memory available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6d902-118">Das zu kopierende verwaltete Objekt.</span><span class="sxs-lookup"><span data-stu-id="6d902-118">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="6d902-119">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" /> in den nicht verwalteten Speicher und konvertiert ihn beim Kopieren in das ANSI-Format.</span><span class="sxs-lookup"><span data-stu-id="6d902-119">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span></span></summary>
        <returns><span data-ttu-id="6d902-120">Die Adresse im nicht verwalteten Speicher, in die der <paramref name="s" />-Parameter kopiert wurde, oder 0, wenn ein NULL-Objekt bereitgestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="6d902-120">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d902-121">Die <xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A>-Methode ist nützlich für das benutzerdefinierte Marshalling oder das Mischen von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="6d902-121">The <xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="6d902-122">Da diese Methode den für eine Zeichenfolge erforderlichen nicht verwalteten Arbeitsspeicher belegt, wird der Arbeitsspeicher von immer freigegeben, indem die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6d902-122">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d902-123">Der Parameter <paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d902-123">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="6d902-124">Es ist nicht genügend Arbeitsspeicher verfügbar.</span><span class="sxs-lookup"><span data-stu-id="6d902-124">There is insufficient memory available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6d902-125">Das zu kopierende verwaltete Objekt.</span><span class="sxs-lookup"><span data-stu-id="6d902-125">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="6d902-126">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" />-Objekts in den nicht verwalteten Speicher.</span><span class="sxs-lookup"><span data-stu-id="6d902-126">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="6d902-127">Die Adresse im nicht verwalteten Arbeitsspeicher, an die <paramref name="s" /> kopiert wurde, oder 0, wenn <paramref name="s" /> ein <see cref="T:System.Security.SecureString" />-Objekt mit der Länge 0 ist.</span><span class="sxs-lookup"><span data-stu-id="6d902-127">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d902-128">Der Parameter <paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d902-128">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="6d902-129">Es ist nicht genügend Arbeitsspeicher verfügbar.</span><span class="sxs-lookup"><span data-stu-id="6d902-129">There is insufficient memory available.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
