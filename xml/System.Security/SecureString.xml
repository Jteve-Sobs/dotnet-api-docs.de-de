<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1b83b7cb358be3a46e68daac29ed99f5f5e062e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36527814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureString = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="91946-101">Stellt Text dar, der vertraulich behandelt werden soll, etwa durch Löschen aus dem Arbeitsspeicher des Computers, wenn er nicht mehr benötigt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="91946-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span>
      </span>
      <span data-ttu-id="91946-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="91946-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-103"><xref:System.Security.SecureString> ist ein String-Typ, der ein Maß an Sicherheit bietet.</span><span class="sxs-lookup"><span data-stu-id="91946-103"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="91946-104">Sie versucht, Sie sollten nicht potenziell vertrauliche Zeichenfolgen in Prozessspeicher als nur-Text gespeichert.</span><span class="sxs-lookup"><span data-stu-id="91946-104">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="91946-105">(Informationen zu Einschränkungen finden Sie jedoch die [wie sicher SecureString ist?](#HowSecure) Abschnitt.) Der Wert einer Instanz von <xref:System.Security.SecureString> wird automatisch geschützt mithilfe eines Mechanismus, durch die zugrunde liegende Plattform unterstützt, wenn die Instanz initialisiert wird oder wenn der Wert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="91946-105">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="91946-106">Ihre Anwendung kann Rendern die Instanz als unveränderlich und zu verhindern, dass weitere Änderungen durch Aufrufen der <xref:System.Security.SecureString.MakeReadOnly%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="91946-106">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="91946-107">Die maximale Länge von einer <xref:System.Security.SecureString> Instanz beträgt 65.536 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="91946-107">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="91946-108">Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="91946-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="91946-109">Wenn Sie mit einer Instanz des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="91946-109">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="91946-110">Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="91946-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="91946-111">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="91946-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="91946-112">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="91946-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="91946-113">Die <xref:System.Security.SecureString> Klasse und ihre Member sind nicht für COM sichtbar.</span><span class="sxs-lookup"><span data-stu-id="91946-113">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="91946-114">Weitere Informationen finden Sie unter <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span><span class="sxs-lookup"><span data-stu-id="91946-114">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="91946-115">In diesem Abschnitt</span><span class="sxs-lookup"><span data-stu-id="91946-115">In this section:</span></span>  
  
 <span data-ttu-id="91946-116">[Eine Zeichenfolge im Vergleich. SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="91946-116">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="91946-117">[SecureString-Vorgänge](#Ops) </span><span class="sxs-lookup"><span data-stu-id="91946-117">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="91946-118">[SecureString und interop](#interop) </span><span class="sxs-lookup"><span data-stu-id="91946-118">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="91946-119">Wie sicher SecureString ist?</span><span class="sxs-lookup"><span data-stu-id="91946-119">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="91946-120">Zeichenfolge im Vergleich zu SecureString</span><span class="sxs-lookup"><span data-stu-id="91946-120">String versus SecureString</span></span>  
 <span data-ttu-id="91946-121">Eine Instanz von der <xref:System.String?displayProperty=nameWithType> Klasse ist unveränderlich und kann, wenn nicht mehr benötigt wird, nicht programmgesteuert für die Garbagecollection geplant werden; d. h. die Instanz ist schreibgeschützt, nachdem es erstellt, und es ist nicht möglich, um vorherzusagen, wann die Instanz gestellt werden aus dem Computerspeicher gelöscht.</span><span class="sxs-lookup"><span data-stu-id="91946-121">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="91946-122">Da <xref:System.String?displayProperty=nameWithType> Instanzen sind unveränderlich, Vorgänge, die angezeigt werden, um die Änderung einer vorhandenen Instanz tatsächlich erstellt eine Kopie davon zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="91946-122">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="91946-123">Daher, wenn ein <xref:System.String> -Objekt sicherheitsrelevante Informationen wie Kennwörter, Kreditkartennummern oder persönliche Daten enthält, besteht das Risiko, das die Informationen konnte offen gelegt werden, nachdem es verwendet wird, da die Anwendung die Daten aus dem Computerspeicher löschen kann .</span><span class="sxs-lookup"><span data-stu-id="91946-123">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="91946-124">Ein <xref:System.Security.SecureString> Objekt ähnelt einem <xref:System.String> -Objekt, da es einen Textwert besitzt.</span><span class="sxs-lookup"><span data-stu-id="91946-124">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="91946-125">Allerdings den Wert des einem <xref:System.Security.SecureString> Objekt im Speicher festgesetzt ist, kann einen Schutzmechanismus verwenden, z. B. Verschlüsselung, von dem zugrunde liegenden Betriebssystem bereitgestellten geändert werden kann, bis die Anwendung als schreibgeschützt markiert und kann aus dem Computerspeicher gelöscht werden durch die aufrufende Anwendung die <xref:System.Security.SecureString.Dispose%2A> Methode oder durch den Garbage Collector von .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="91946-125">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="91946-126">Eine Erläuterung der Einschränkungen von der <xref:System.Security.SecureString> Klasse, finden Sie unter der [wie sicher SecureString ist?](#HowSecure) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="91946-126">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="91946-127">Zurück zum Anfang</span><span class="sxs-lookup"><span data-stu-id="91946-127">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="91946-128">SecureString-Vorgänge</span><span class="sxs-lookup"><span data-stu-id="91946-128">SecureString operations</span></span>  
 <span data-ttu-id="91946-129">Die <xref:System.Security.SecureString> Klasse enthält Elemente, mit denen Sie die folgenden Schritte ausführen können:</span><span class="sxs-lookup"><span data-stu-id="91946-129">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="91946-130">Instanziieren einer <xref:System.Security.SecureString> Objekt</span><span class="sxs-lookup"><span data-stu-id="91946-130">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="91946-131">Instanziieren Sie ein <xref:System.Security.SecureString> Objekt durch Aufrufen der parameterlose Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="91946-131">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="91946-132">Hinzufügen von Zeichen zu einem <xref:System.Security.SecureString> Objekt</span><span class="sxs-lookup"><span data-stu-id="91946-132">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="91946-133">Sie können ein einzelnes Zeichen zu einem Zeitpunkt zum Hinzufügen einer <xref:System.Security.SecureString> Objekt durch Aufrufen seiner <xref:System.Security.SecureString.AppendChar%2A> oder <xref:System.Security.SecureString.InsertAt%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="91946-133">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="91946-134">Ein <xref:System.Security.SecureString> Objekt sollte nie konstruiert werden, aus einer <xref:System.String>, da bereits unterliegt die sensiblen Daten in den Arbeitsspeicher Persistenz folgen, der die unveränderliche <xref:System.String> Klasse.</span><span class="sxs-lookup"><span data-stu-id="91946-134">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="91946-135">Die beste Methode zum Erstellen einer <xref:System.Security.SecureString> Objekt ist von einer nicht verwalteten Zeichen zur Zeit-Quelle, wie z. B. die <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="91946-135">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="91946-136">Entfernen von Zeichen aus einer <xref:System.Security.SecureString> Objekt</span><span class="sxs-lookup"><span data-stu-id="91946-136">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="91946-137">Sie können ein einzelnes Zeichen ersetzen, durch Aufrufen der <xref:System.Security.SecureString.SetAt%2A> -Methode, entfernen Sie ein einzelnes Zeichen durch Aufrufen der <xref:System.Security.SecureString.RemoveAt%2A> -Methode, oder entfernen Sie alle Zeichen aus der <xref:System.Security.SecureString> Instanz durch Aufrufen der <xref:System.Security.SecureString.Clear%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="91946-137">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="91946-138">Stellen Sie die <xref:System.Security.SecureString> Objekt ohne Schreibzugriff</span><span class="sxs-lookup"><span data-stu-id="91946-138">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="91946-139">Nachdem Sie die Zeichenfolge definiert haben, die <xref:System.Security.SecureString> -Objekt darstellt, rufen Sie die <xref:System.Security.SecureString.MakeReadOnly%2A> Methode, um die Zeichenfolge schreibgeschützt machen.</span><span class="sxs-lookup"><span data-stu-id="91946-139">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="91946-140">Abrufen von Informationen über die <xref:System.Security.SecureString> Objekt</span><span class="sxs-lookup"><span data-stu-id="91946-140">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="91946-141">Die <xref:System.Security.SecureString> -Klasse verfügt über nur zwei Member, die Informationen über die Zeichenfolge bereitstellen: die <xref:System.Security.SecureString.Length%2A> Eigenschaft, die die Anzahl der in der Zeichenfolge; UTF16-codierte Codeeinheiten angibt und die <xref:System.Security.SecureString.IsReadOnly%2A>, Methode, die angibt, ob die Instanz schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="91946-141">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="91946-142">Zugewiesene Arbeitsspeicher freigegeben die <xref:System.Security.SecureString> Instanz</span><span class="sxs-lookup"><span data-stu-id="91946-142">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="91946-143">Da <xref:System.Security.SecureString> implementiert die <xref:System.IDisposable> -Schnittstelle, Sie ihren Arbeitsspeicher freigeben, durch Aufrufen der <xref:System.Security.SecureString.Dispose%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="91946-143">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="91946-144">Die <xref:System.Security.SecureString> -Klasse verfügt über keine Elemente, die zu überprüfen, vergleichen oder konvertieren Sie den Wert von einem <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="91946-144">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="91946-145">Das fehlen solcher Member hilft dabei, den Wert der Instanz vor versehentlicher oder böswilliger Verfügbarmachung zu schützen.</span><span class="sxs-lookup"><span data-stu-id="91946-145">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="91946-146">Verwenden Sie geeignete Member der der <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> Klasse, z. B. die <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> Methode, um den Wert der Bearbeiten einer <xref:System.Security.SecureString> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-146">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="91946-147">Der .NET Framework-Klassenbibliothek verwendet <xref:System.Security.SecureString> Instanzen auf folgende Weise:</span><span class="sxs-lookup"><span data-stu-id="91946-147">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="91946-148">Bereitstellen von Kennwortinformationen an einen Prozess mithilfe der <xref:System.Diagnostics.ProcessStartInfo> -Struktur oder durch den Aufruf einer Überladung von der <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> Methode, die einen Parameter vom Typ <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="91946-148">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="91946-149">Kennwort Netzwerk durch Aufrufen von Anmeldeinformationen eine <xref:System.Net.NetworkCredential> Klassenkonstruktor, die einen vom Typ Parameter <xref:System.Security.SecureString> oder mithilfe der <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="91946-149">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="91946-150">Bereitstellen von Kennwortinformationen für SQL Server-Authentifizierung durch Aufrufen der <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> Konstruktor oder das Abrufen des Werts der <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="91946-150">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="91946-151">Eine Zeichenfolge an nicht verwalteten Code übergeben.</span><span class="sxs-lookup"><span data-stu-id="91946-151">To pass a string to unmanaged code.</span></span> <span data-ttu-id="91946-152">Weitere Informationen finden Sie unter der [SecureString und Interop-](#interop) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="91946-152">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="91946-153">Zurück zum Anfang</span><span class="sxs-lookup"><span data-stu-id="91946-153">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="91946-154">SecureString und interop</span><span class="sxs-lookup"><span data-stu-id="91946-154">SecureString and interop</span></span>  
 <span data-ttu-id="91946-155">Da das Betriebssystem nicht direkt unterstützt <xref:System.Security.SecureString>, müssen Sie den Wert der konvertieren die <xref:System.Security.SecureString> Objekt in den erforderlichen String-Datentyp, bevor Sie die Zeichenfolge an einer nativen Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="91946-155">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="91946-156">Die <xref:System.Runtime.InteropServices.Marshal> -Klasse verfügt über fünf Methoden, die dazu:</span><span class="sxs-lookup"><span data-stu-id="91946-156">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="91946-157"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, welche konvertiert die <xref:System.Security.SecureString> string-Wert, um eine binäre Zeichenfolge (BSTR), die von COM erkannt</span><span class="sxs-lookup"><span data-stu-id="91946-157"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="91946-158"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, welche Kopie der <xref:System.Security.SecureString> string-Wert in eine ANSI-Zeichenfolge in nicht verwalteten Speicher.</span><span class="sxs-lookup"><span data-stu-id="91946-158"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="91946-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, welche Kopie der <xref:System.Security.SecureString> Zeichenfolgenwert, der eine Unicode-Zeichenfolge in nicht verwalteten Speicher.</span><span class="sxs-lookup"><span data-stu-id="91946-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="91946-160">Jede dieser Methoden erstellt eine Klartext-Zeichenfolge in nicht verwalteten Speicher.</span><span class="sxs-lookup"><span data-stu-id="91946-160">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="91946-161">Es obliegt dem Entwickler zu 0 (null) und freigegeben werden, sobald es nicht mehr benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="91946-161">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="91946-162">Jede Zeichenfolgenmethoden für die Konvertierung und Arbeitsspeicher-Zuordnung verfügt über eine entsprechende Methode auf 0 (null) und den belegten Speicher freizugeben:</span><span class="sxs-lookup"><span data-stu-id="91946-162">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="91946-163">Zuordnung und Konvertierung-Methode</span><span class="sxs-lookup"><span data-stu-id="91946-163">Allocation and conversion method</span></span>|<span data-ttu-id="91946-164">0 (null) und free-Methode</span><span class="sxs-lookup"><span data-stu-id="91946-164">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="91946-165">Zurück zum Anfang</span><span class="sxs-lookup"><span data-stu-id="91946-165">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="91946-166">Wie sicher SecureString ist?</span><span class="sxs-lookup"><span data-stu-id="91946-166">How secure is SecureString?</span></span>  
 <span data-ttu-id="91946-167">Wenn ordnungsgemäß erstellt eine <xref:System.Security.SecureString> Instanz bietet mehr Datenschutz als eine <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="91946-167">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="91946-168">Beim Erstellen einer Zeichenfolge aus einer Quelle Zeichen zur Zeit <xref:System.String> erstellt mehrere Zwischenspeicher im Arbeitsspeicher, wohingegen <xref:System.Security.SecureString> nur eine einzelne Instanz erstellt.</span><span class="sxs-lookup"><span data-stu-id="91946-168">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="91946-169">Garbagecollection <xref:System.String> Objekte ist nicht deterministisch.</span><span class="sxs-lookup"><span data-stu-id="91946-169">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="91946-170">Da der Speicher nicht fixiert ist, der Garbage Collector wird Stellen Sie außerdem zusätzliche Kopien <xref:System.String> Werte beim Verschieben und Komprimieren von Arbeitsspeicher.</span><span class="sxs-lookup"><span data-stu-id="91946-170">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="91946-171">Im Gegensatz dazu belegte Arbeitsspeicher einen <xref:System.Security.SecureString> Objekt fixiert ist, und, dass der Arbeitsspeicher freigegeben werden kann, durch Aufrufen der <xref:System.Security.SecureString.Dispose%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="91946-171">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="91946-172">Obwohl Daten, in gespeichert eine <xref:System.Security.SecureString> Instanz ist sicherer als die Daten in eine <xref:System.String> Instanz ist, stehen Sie verfügen über umfassende Einschränkungen auf wie sicher eine <xref:System.Security.SecureString> Instanz ist.</span><span class="sxs-lookup"><span data-stu-id="91946-172">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="91946-173">Dazu gehören:</span><span class="sxs-lookup"><span data-stu-id="91946-173">These include:</span></span>  
  
 <span data-ttu-id="91946-174">Plattform</span><span class="sxs-lookup"><span data-stu-id="91946-174">Platform</span></span>  
 <span data-ttu-id="91946-175">Auf dem Windows-Betriebssystem, den Inhalt des eine <xref:System.Security.SecureString> interne Zeichenarray Instanz verschlüsselt werden.</span><span class="sxs-lookup"><span data-stu-id="91946-175">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="91946-176">Allerdings ist Verschlüsselung aufgrund fehlender-APIs oder schlüsselverwaltung Probleme, nicht auf allen Plattformen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="91946-176">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="91946-177">Aufgrund dieser plattformabhängigkeit <xref:System.Security.SecureString> der internen Speicherung für nicht-Windows-Plattform nicht verschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="91946-177">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="91946-178">Andere Techniken werden auf diesen Plattformen verwendet, um zusätzlichen Schutz zu bieten.</span><span class="sxs-lookup"><span data-stu-id="91946-178">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="91946-179">Dauer</span><span class="sxs-lookup"><span data-stu-id="91946-179">Duration</span></span>  
 <span data-ttu-id="91946-180">Auch wenn die <xref:System.Security.SecureString> Implementierung ist der Verschlüsselung nutzen, die nur-Text zugeordneten der <xref:System.Security.SecureString> Instanz möglicherweise zu verschiedenen Zeiten verfügbar gemacht werden:</span><span class="sxs-lookup"><span data-stu-id="91946-180">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="91946-181">Da Windows eine sichere Zeichenfolge Implementierung auf Betriebssystemebene keine anbietet, noch von .NET Framework auf den Wert für die sichere Zeichenfolge in die nur-Text-Darstellung zu konvertieren, um sie zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="91946-181">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="91946-182">Wenn der Wert der sicheren Zeichenfolge geändert wird, indem Methoden wie z. B. <xref:System.Security.SecureString.AppendChar%2A> oder <xref:System.Security.SecureString.RemoveAt%2A>, müssen entschlüsselt werden kann (d. h. das konvertierte zurück nur-Text), geändert, und klicken Sie dann erneut verschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="91946-182">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="91946-183">Wenn die sichere Zeichenfolge in eine Interop-Aufrufen verwendet wird, muss er in eine ANSI-Zeichenfolge, eine Unicode-Zeichenfolge oder eine binäre Zeichenfolge (BSTR) konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="91946-183">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="91946-184">Weitere Informationen finden Sie unter der [SecureString und Interop-](#interop) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="91946-184">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="91946-185">Das Zeitintervall für die die <xref:System.Security.SecureString> des Instanzwert wird verfügbar gemacht wird lediglich im Vergleich zur gekürzt der <xref:System.String> Klasse.</span><span class="sxs-lookup"><span data-stu-id="91946-185">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="91946-186">Speicher im Vergleich zur Verwendung</span><span class="sxs-lookup"><span data-stu-id="91946-186">Storage versus usage</span></span>  
 <span data-ttu-id="91946-187">Allgemeiner gesagt ist der <xref:System.Security.SecureString> Klasse definiert einen Speichermechanismus für Zeichenfolgenwerte, die geschützt oder vertraulich werden soll.</span><span class="sxs-lookup"><span data-stu-id="91946-187">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="91946-188">Außerhalb von .NET Framework selbst unterstützt keinen Mechanismus für die Verwendung jedoch <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="91946-188">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="91946-189">Dies bedeutet, dass die sichere Zeichenfolge in eine verwendbare Form (in der Regel ein Formular Klartext) konvertiert werden muss, die von ihrem Ziel erkannt werden können und Entschlüsselung sowie die Konvertierung in Benutzerspeicherplatz erfolgen müssen.</span><span class="sxs-lookup"><span data-stu-id="91946-189">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="91946-190">Insgesamt <xref:System.Security.SecureString> ist sicherer als <xref:System.String> , da diese Option der Offenlegung von vertraulichen Zeichenfolgendaten beschränkt.</span><span class="sxs-lookup"><span data-stu-id="91946-190">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="91946-191">Allerdings können diese Zeichenfolgen weiterhin verfügbar gemacht werden, Prozess oder Vorgang, der Zugriff auf den unformatierten Speicher, z. B. von einem bösartigen Prozess auf dem Hostcomputer, ein Speicherabbild für den Prozess oder eine Auslagerungsdatei für Benutzer angezeigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="91946-191">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="91946-192">Anstatt <xref:System.Security.SecureString> um Kennwörter zu schützen, der die empfohlene Alternative ist ein nicht transparentes Handle, um Anmeldeinformationen zu verwenden, die außerhalb des Prozesses gespeichert sind.</span><span class="sxs-lookup"><span data-stu-id="91946-192">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="91946-193">Zurück zum Anfang</span><span class="sxs-lookup"><span data-stu-id="91946-193">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="91946-194">Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.Security.SecureString> sichern Sie das Kennwort eines Benutzers zur Verwendung als Anmeldeinformationen für einen neuen Prozess zu starten.</span><span class="sxs-lookup"><span data-stu-id="91946-194">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user’s password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91946-195">Initialisiert eine neue Instanz der <see cref="T:System.Security.SecureString" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-195">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91946-196">Initialisiert eine neue Instanz der <see cref="T:System.Security.SecureString" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-196">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91946-197">Im folgenden Beispiel wird den Standardwert (oder parameterlosen) Konstruktor zum Instanziieren einer neuen <xref:System.Security.SecureString> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-197">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="91946-198">Er ruft dann die <xref:System.Security.SecureString.AppendChar%2A> Methode, um ein Array von Zeichen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="91946-198">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="91946-199">Das folgende Beispiel erstellt eine <xref:System.Security.SecureString> Objekt aus dem Wert des einem <xref:System.String> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-199">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="91946-200">Beim Schützen oder Aufheben des Schutzes für den Wert dieser Instanz ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-200">An error occurred while protecting or unprotecting the value of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="91946-201">Diese Operation wird auf dieser Plattform nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-201">This operation is not supported on this platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberSignature Language="F#" Value="new System.Security.SecureString : nativeptr&lt;char&gt; * int -&gt; System.Security.SecureString" Usage="new System.Security.SecureString (value, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91946-202">Ein Zeiger auf ein Array von <see cref="T:System.Char" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-202">A pointer to an array of <see cref="T:System.Char" /> objects.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="91946-203">Die Anzahl der Elemente von <c>value</c>, die in die neue Instanz eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-203">The number of elements of <c>value</c> to include in the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91946-204">Initialisiert eine neue Instanz der <see cref="T:System.Security.SecureString" />-Klasse aus einem Unterarray von <see cref="T:System.Char" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-204">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span>
          </span>
          <span data-ttu-id="91946-205">Dieser Konstruktor ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-205">This constructor is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="91946-206">Die CLS-kompatible Alternative ist <see cref="M:System.Security.SecureString.#ctor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-206">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-207">Dieser Konstruktor initialisiert die neue <xref:System.Security.SecureString> Objekt, das die Anzahl der Zeichen in `value` gemäß `length`; der Wert der Instanz wird dann verschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="91946-207">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="91946-208">Dieser Konstruktor ist in c# ist nur im Kontext der unsicheren Code definiert.</span><span class="sxs-lookup"><span data-stu-id="91946-208">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91946-209">Das folgende Beispiel instanziiert einen neuen <xref:System.Security.SecureString> -Objekt durch Übergeben des Konstruktors einen Zeiger auf ein Zeichenarray.</span><span class="sxs-lookup"><span data-stu-id="91946-209">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91946-210">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-210">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="91946-211">
            <paramref name="length" /> ist kleiner als 0 (null) oder größer als 65.536.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-211">
              <paramref name="length" /> is less than zero or greater than 65,536.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="91946-212">Beim Schützen oder Aufheben des Schutzes für den Wert dieser sicheren Zeichenfolge ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-212">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="91946-213">Diese Operation wird auf dieser Plattform nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-213">This operation is not supported on this platform.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="91946-214">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-214">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="91946-215">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-215">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberSignature Language="F#" Value="member this.AppendChar : char -&gt; unit" Usage="secureString.AppendChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="91946-216">Ein Zeichen, das an diese sichere Zeichenfolge angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-216">A character to append to this secure string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91946-217">Fügt am Ende der aktuellen sicheren Zeichenfolge ein Zeichen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-217">Appends a character to the end of the current secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-218">Wenn die Implementierung einen Schutzmechanismus, z. B. Verschlüsselung verwendet ist der Wert dieser sicheren Zeichenfolge, ggf. ungeschützten; `c` angefügt ist, und klicken Sie dann der neue Wert, der die sichere Zeichenfolge erneut geschützt wird.</span><span class="sxs-lookup"><span data-stu-id="91946-218">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91946-219">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, und <xref:System.Security.SecureString.Clear%2A> Methoden Auswirkungen auf den Wert des einem <xref:System.Security.SecureString> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-219">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="91946-220">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A> und <xref:System.Security.SecureString.RemoveAt%2A> Methoden können verwendet werden, um die Zeichen in einem Kennwort zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="91946-220">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-221">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-221">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="91946-222">Diese sichere Zeichenfolge ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-222">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="91946-223">Beim Ausführen dieses Vorgangs überschreitet diese sichere Zeichenfolge die Länge von 65.536 Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-223">Performing this operation would make the length of this secure string greater than 65,536 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="91946-224">Beim Schützen oder Aufheben des Schutzes für den Wert dieser sicheren Zeichenfolge ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-224">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="secureString.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91946-225">Löscht den Wert der aktuellen sicheren Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-225">Deletes the value of the current secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-226">Der Arbeitsspeicher des Computers mit dem Wert dieser sicheren Zeichenfolge wird mit Nullen beschrieben, und klicken Sie dann die Länge des Werts dieser sicheren Zeichenfolge auf 0 (null) festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="91946-226">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91946-227">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, und <xref:System.Security.SecureString.Clear%2A> Methoden Auswirkungen auf den Wert des einem <xref:System.Security.SecureString> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-227">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-228">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-228">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="91946-229">Diese sichere Zeichenfolge ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-229">This secure string is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecureString" Usage="secureString.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91946-230">Erstellt eine Kopie der aktuellen sicheren Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-230">Creates a copy of the current secure string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91946-231">Ein Duplikat dieser sicheren Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-231">A duplicate of this secure string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-232">Wenn eine Instanz von einem <xref:System.Security.SecureString> ist als schreibgeschützt gekennzeichnet, die Kopie dieser Instanz ist nicht schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="91946-232">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-233">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-233">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="91946-234">Beim Schützen oder Aufheben des Schutzes für den Wert dieser sicheren Zeichenfolge ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-234">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureString.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91946-235">Gibt alle vom aktuellen <see cref="T:System.Security.SecureString" />-Objekt verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-235">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-236">Die <xref:System.Security.SecureString.Dispose%2A> -Methode schreibt binäre Nullen (0), um den belegten Speicher mit dem Wert dieses <xref:System.Security.SecureString> -Objekt, und klicken Sie dann den reservierten Speicher frei.</span><span class="sxs-lookup"><span data-stu-id="91946-236">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="91946-237">Weitere Informationen finden Sie unter [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span><span class="sxs-lookup"><span data-stu-id="91946-237">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : int * char -&gt; unit" Usage="secureString.InsertAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="91946-238">Die Indexposition, an der der <c>c</c>-Parameter eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-238">The index position where parameter <c>c</c> is inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="91946-239">Das einzufügende Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-239">The character to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91946-240">Fügt in dieser sicheren Zeichenfolge an der angegebenen Indexposition ein Zeichen ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-240">Inserts a character in this secure string at the specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-241">Der Index ist nullbasiert. das erste Zeichen in dieser sicheren Zeichenfolge wird an die Indexposition 0 (null).</span><span class="sxs-lookup"><span data-stu-id="91946-241">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="91946-242">Wenn die Implementierung einen Schutzmechanismus, z. B. Verschlüsselung verwendet ist der Wert der sicheren Zeichenfolge ist, sofern vorhanden, ungeschützten; `c` wird an der angegebenen Indexposition; eingefügt und dann der neue Wert erneut geschützt wird.</span><span class="sxs-lookup"><span data-stu-id="91946-242">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="91946-243">Die <xref:System.Security.SecureString.InsertAt%2A> -Methode ergibt die gleichen Ergebnisse wie die <xref:System.Security.SecureString.AppendChar%2A> -Methode, die am Ende einer sicheren Zeichenfolge ein Zeichen einfügt der `index` Parameter <xref:System.Security.SecureString.InsertAt%2A> festgelegt ist, auf die Länge dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="91946-243">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91946-244">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, und <xref:System.Security.SecureString.Clear%2A> Methoden Auswirkungen auf den Wert des einem <xref:System.Security.SecureString> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-244">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-245">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-245">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="91946-246">Diese sichere Zeichenfolge ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-246">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="91946-247">
            <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Länge dieser sicheren Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-247">
              <paramref name="index" /> is less than zero, or greater than the length of this secure string.</span>
          </span>
          <span data-ttu-id="91946-248">Oder:  Durch das Ausführen dieses Vorgangs überschreitet diese sichere Zeichenfolge die Länge von 65.536 Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-248">-or-  Performing this operation would make the length of this secure string greater than 65,536 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="91946-249">Beim Schützen oder Aufheben des Schutzes für den Wert dieser sicheren Zeichenfolge ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-249">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : unit -&gt; bool" Usage="secureString.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91946-250">Gibt an, ob diese sichere Zeichenfolge als schreibgeschützt markiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-250">Indicates whether this secure string is marked read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91946-251">
            <see langword="true" />, wenn diese sichere Zeichenfolge schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-251">
              <see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-252">Nachdem eine Instanz von <xref:System.Security.SecureString> RuntimeCompatibility schreibgeschützt sind und von der <xref:System.Security.SecureString.MakeReadOnly%2A> -Methode, jeder Versuch zum Ändern des Werts, der die Instanz löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="91946-252">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="91946-253">Verwenden der <xref:System.Security.SecureString.IsReadOnly%2A> Methode zum Testen, ob eine <xref:System.Security.SecureString> schreibgeschützt ist, bevor Sie versuchen, diese zu ändern.</span><span class="sxs-lookup"><span data-stu-id="91946-253">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-254">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-254">This secure string has already been disposed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Security.SecureString.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91946-255">Ruft die Anzahl der Zeichen in der aktuellen sicheren Zeichenfolge ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-255">Gets the number of characters in the current secure string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91946-256">Die Anzahl von <see cref="T:System.Char" />-Objekten in dieser sicheren Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-256">The number of <see cref="T:System.Char" /> objects in this secure string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-257">Die <xref:System.Security.SecureString.Length%2A> Eigenschaft gibt die Anzahl der <xref:System.Char> Objekte in dieser Instanz, die nicht die Anzahl von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="91946-257">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="91946-258">Ein Unicode-Zeichen dargestellt werden kann, von mehreren <xref:System.Char> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-258">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="91946-259">Die maximale Länge von einer <xref:System.Security.SecureString> Instanz beträgt 65.536 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="91946-259">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-260">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-260">This secure string has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="secureString.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91946-261">Legt den Textwert dieser sicheren Zeichenfolge als schreibgeschützt fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-261">Makes the text value of this secure string read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-262">Initialisiert den Textwert einer Instanz von der <xref:System.Security.SecureString> -Klasse mit der <xref:System.Security.SecureString.%23ctor%2A> Konstruktoren auf, und ändern Sie den Wert mit der <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, und <xref:System.Security.SecureString.AppendChar%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="91946-262">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="91946-263">Nachdem Sie die letzten Änderungen vorgenommen haben, verwenden Sie die <xref:System.Security.SecureString.MakeReadOnly%2A> Methode, um den Wert der Instanz unveränderlich (schreibgeschützt).</span><span class="sxs-lookup"><span data-stu-id="91946-263">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="91946-264">Nachdem der Wert als schreibgeschützt markiert ist, werden weitere Versuche, löst das Ändern einer <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="91946-264">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="91946-265">Die Auswirkung des Aufrufs einer <xref:System.Security.SecureString.MakeReadOnly%2A> wird dauerhaft ausgeführt, da die <xref:System.Security.SecureString> Klasse bietet keine Möglichkeit, die sichere Zeichenfolge erneut geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="91946-265">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="91946-266">Verwenden der <xref:System.Security.SecureString.IsReadOnly%2A> Methode zu testen, ob eine Instanz von <xref:System.Security.SecureString> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="91946-266">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91946-267">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A> und <xref:System.Security.SecureString.RemoveAt%2A> Methoden können verwendet werden, um die Zeichen in einem Kennwort zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="91946-267">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="91946-268">Nachdem das Kennwort gesammelt wird, ist es schreibgeschützt festgelegt.</span><span class="sxs-lookup"><span data-stu-id="91946-268">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-269">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-269">This secure string has already been disposed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="secureString.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="91946-270">Die Indexposition eines Zeichens in dieser sicheren Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-270">The index position of a character in this secure string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91946-271">Entfernt das Zeichen an der angegebenen Indexposition aus dieser sicheren Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-271">Removes the character at the specified index position from this secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-272">Der Index ist nullbasiert. das erste Zeichen in dieser Instanz ist Indexposition 0 (null).</span><span class="sxs-lookup"><span data-stu-id="91946-272">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="91946-273">Wenn die Implementierung einen Schutzmechanismus, z. B. Verschlüsselung verwendet ist der Wert dieser sicheren Zeichenfolge, ggf. ungeschützten; das Zeichen an der angegebenen Indexposition entfernt wird. der neue Wert wird dann erneut geschützt.</span><span class="sxs-lookup"><span data-stu-id="91946-273">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91946-274">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, und <xref:System.Security.SecureString.Clear%2A> Methoden Auswirkungen auf den Wert des einem <xref:System.Security.SecureString> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-274">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="91946-275">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A> und <xref:System.Security.SecureString.RemoveAt%2A> Methoden können verwendet werden, um die Zeichen in einem Kennwort zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="91946-275">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-276">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-276">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="91946-277">Diese sichere Zeichenfolge ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-277">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="91946-278">
            <paramref name="index" /> ist kleiner als 0 (null), größer als die Länge der sicheren Zeichenfolge oder gleich der Länge dieser Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-278">
              <paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="91946-279">Beim Schützen oder Aufheben des Schutzes für den Wert dieser sicheren Zeichenfolge ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-279">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.SetAt : int * char -&gt; unit" Usage="secureString.SetAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="91946-280">Die Indexposition eines vorhandenen Zeichens in dieser sicheren Zeichenfolge</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-280">The index position of an existing character in this secure string</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="91946-281">Ein Zeichen, das das vorhandene Zeichen ersetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-281">A character that replaces the existing character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91946-282">Ersetzt das an der angegebenen Indexposition vorhandene Zeichen durch ein anderes Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-282">Replaces the existing character at the specified index position with another character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91946-283">Der Index ist nullbasiert. das erste Zeichen in dieser Instanz ist Indexposition 0 (null).</span><span class="sxs-lookup"><span data-stu-id="91946-283">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="91946-284">Wenn die Implementierung einen Schutzmechanismus, z. B. Verschlüsselung verwendet ist der Wert der sicheren Zeichenfolge ist, sofern vorhanden, ungeschützten; `c` der angegebenen Indexposition; zugewiesen ist und Sie dann der neue Wert erneut geschützt wird.</span><span class="sxs-lookup"><span data-stu-id="91946-284">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91946-285">Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, und <xref:System.Security.SecureString.Clear%2A> Methoden Auswirkungen auf den Wert des einem <xref:System.Security.SecureString> Objekt.</span><span class="sxs-lookup"><span data-stu-id="91946-285">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="91946-286">Diese sichere Zeichenfolge wurde bereits verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-286">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="91946-287">Diese sichere Zeichenfolge ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-287">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="91946-288">
            <paramref name="index" /> ist kleiner als 0 (null), größer als die Länge der sicheren Zeichenfolge oder gleich der Länge dieser Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-288">
              <paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="91946-289">Beim Schützen oder Aufheben des Schutzes für den Wert dieser sicheren Zeichenfolge ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91946-289">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>