<Type Name="SuppressUnmanagedCodeSecurityAttribute" FullName="System.Security.SuppressUnmanagedCodeSecurityAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5734365e2cb976b938b9ada3f02369b8c0543850" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39757249" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressUnmanagedCodeSecurityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SuppressUnmanagedCodeSecurityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SuppressUnmanagedCodeSecurityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SuppressUnmanagedCodeSecurityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Delegate | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht es verwaltetem Code, nicht verwalteten Code ohne Stackwalk aufzurufen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Verwenden Sie dieses Attribut mit größter Sorgfalt. Falsche Verwendung kann die Sicherheit Schwächen.  
  
 Dieses Attribut kann auf Methoden angewendet werden, die in nativen Code durchführen, ohne dass den Leistungsverlust von einer Laufzeit sicherheitsüberprüfung, dabei werden soll. Der Stackwalk durchgeführt wird, beim Aufrufen von nicht verwalteten Codes wird zur Laufzeit weggelassen, was zu erheblichen Leistungssteigerung. Mit diesem Attribut in einer Klasse auf alle darin enthaltenen Methoden angewendet.  
  
 Im Allgemeinen Wenn verwalteter Code nicht verwalteten Code aufruft (durch PInvoke oder COM-Interop in nativem Code), besteht eine Anforderung für die `UnmanagedCode` Berechtigung, um sicherzustellen, dass alle Aufrufer haben die erforderliche Berechtigung, um dies zu ermöglichen. Durch Anwenden dieses explizite-Attribut, können Entwickler die Anforderung zur Laufzeit zu unterdrücken. Der Entwickler muss Verantwortung übernehmen für sicherzustellen, dass der Übergang in nicht verwaltetem Code mithilfe anderer Methoden nicht ausreichend geschützt ist. Die Nachfrage nach der `UnmanagedCode` Berechtigung ausgeführt, wenn zum Zeitpunkt der Verknüpfung. Ruft eine Funktion B und Funktion B ist z. B. mit markiert <xref:System.Security.SuppressUnmanagedCodeSecurityAttribute>, Codeberechtigung bei der just-in-Time-Kompilierung, aber anschließend nicht während der Laufzeit für nicht verwalteten Funktion ein überprüft werden wird.  
  
 Dieses Attribut ist nur wirksam, wenn angewandt PInvoke-Methoden (oder Klassen, die PInvoke-Methoden enthalten) oder die Definition einer Schnittstelle, die über die Interop-Aufrufe erfolgen. Es wird in allen anderen Kontexten ignoriert.  
  
 Dieses Attribut ist nützlich für die Implementierung einer Klasse, die Zugriff auf Systemressourcen über nicht verwaltetem Code ermöglicht. Code, der keine Berechtigung zum Zugriff auf nicht verwalteten Code kann es sich um eine Klasse mit diesem Attribut den Zugriff auf nicht verwalteten Code aufrufen. Dies ist nur sicher sind, wenn der Writer, der die Klasse mit diesem Attribut die Klasse sicher programmiert wurde. Wenn dies nicht der Fall, dieses Attribut ist gefährlich, und den Code, der er verwendet, um die missbraucht werden können.  
  
 Dies ist kein, ein Attribut für die deklarative Sicherheit, sondern ein reguläres Attribut (sie leitet sich von <xref:System.Attribute>, nicht <xref:System.Security.Permissions.SecurityAttribute>).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressUnmanagedCodeSecurityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SuppressUnmanagedCodeSecurityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardkonstruktor initialisiert alle Felder mit ihren Standardwerten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>