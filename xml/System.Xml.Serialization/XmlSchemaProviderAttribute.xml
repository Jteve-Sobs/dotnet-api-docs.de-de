<Type Name="XmlSchemaProviderAttribute" FullName="System.Xml.Serialization.XmlSchemaProviderAttribute">
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaProviderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaProviderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaProviderAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b6d27-101">Bei Anwendung auf einen Typ wird der Name einer statischen Methode des Typs gespeichert, die ein XML-Schema und einen <see cref="T:System.Xml.XmlQualifiedName" /> (bzw. einen <see cref="T:System.Xml.Schema.XmlSchemaType" /> bei anonymen Typen) zurückgibt, der die Serialisierung des Typs steuert.</span><span class="sxs-lookup"><span data-stu-id="b6d27-101">When applied to a type, stores the name of a static method of the type that returns an XML schema and a <see cref="T:System.Xml.XmlQualifiedName" /> (or <see cref="T:System.Xml.Schema.XmlSchemaType" /> for anonymous types) that controls the serialization of the type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6d27-102">Der Hauptzweck der <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> ist die Aktivierung der <xref:System.Xml.Serialization.XmlSchemaExporter> Klasse, um ein Schema zurückgegeben wird, wenn Sie von der Web Services Description Language Tool (WSDL.exe) abgefragt oder bei der Verwendung der **Webverweis hinzufügen** Funktion von Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="b6d27-102">The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of Visual Studio.</span></span> <span data-ttu-id="b6d27-103">Sie können das tatsächliche Schema für den Typ in der statischen Methode steuern.</span><span class="sxs-lookup"><span data-stu-id="b6d27-103">You can control the actual schema for the type in the static method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6d27-104">Die Zielklasse des Attributs muss implementieren die <xref:System.Xml.Serialization.IXmlSerializable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="b6d27-104">The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 <span data-ttu-id="b6d27-105">Die <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> Eigenschaft gibt den Namen einer statischen Methode durch Reflektion zurück.</span><span class="sxs-lookup"><span data-stu-id="b6d27-105">The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection.</span></span> <span data-ttu-id="b6d27-106">Die Methode, die implementiert werden muss, muss einen einzelnen Parameter nehmen eine <xref:System.Xml.Schema.XmlSchemaSet> -Objekt, das mit der Methode füllt eine <xref:System.Xml.Schema.XmlSchema> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b6d27-106">The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object.</span></span> <span data-ttu-id="b6d27-107">Die Methode muss außerdem Zurückgeben einer <xref:System.Xml.XmlQualifiedName> -Objekt, das den Datentyp angibt.</span><span class="sxs-lookup"><span data-stu-id="b6d27-107">The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.</span></span>  
  
## <a name="returning-anonymous-types"></a><span data-ttu-id="b6d27-108">Zurückgeben von anonymen Typen</span><span class="sxs-lookup"><span data-stu-id="b6d27-108">Returning Anonymous Types</span></span>  
 <span data-ttu-id="b6d27-109">Ein anonymer komplexer Typ kann nicht erstellt werden, mithilfe einer Methode, die zurückgibt <xref:System.Xml.XmlQualifiedName>.</span><span class="sxs-lookup"><span data-stu-id="b6d27-109">An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>.</span></span> <span data-ttu-id="b6d27-110">Da ein anonymer Typ keinen Namen hat, und ein anonymes Typs kann nicht an ein Schema hinzufügen, muss der anonyme Typ zurückgegeben werden, als ein <xref:System.Xml.Schema.XmlSchemaType>.</span><span class="sxs-lookup"><span data-stu-id="b6d27-110">Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6d27-111">Das folgende Beispiel wendet die <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> auf eine serverseitige-Klasse.</span><span class="sxs-lookup"><span data-stu-id="b6d27-111">The following example applies the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to a server-side class.</span></span> <span data-ttu-id="b6d27-112">Beim Aufrufen der Methode mit dem Namen durch die <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> Eigenschaft das Schema erstellt.</span><span class="sxs-lookup"><span data-stu-id="b6d27-112">When invoked, the method named by the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property creates the schema.</span></span> <span data-ttu-id="b6d27-113">Diese einfache Implementierung liest ein vorhandenes Schema vom Datenträger.</span><span class="sxs-lookup"><span data-stu-id="b6d27-113">This simple implementation reads an existing schema off the disk.</span></span> <span data-ttu-id="b6d27-114">Sie können jedoch auch erstellen ein benutzerdefiniertes Schema erforderlich, die mit den Typen in gefunden, die <xref:System.Xml.Schema> Namespace.</span><span class="sxs-lookup"><span data-stu-id="b6d27-114">However, you can also create a custom schema, if necessary, using the types found in the <xref:System.Xml.Schema> namespace.</span></span>  
  
 [!code-csharp[HowToChunkSerializedData#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HowToChunkSerializedData/CS/SerializationChunk.cs#2)]
 [!code-vb[HowToChunkSerializedData#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HowToChunkSerializedData/VB/SerializationChunk.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchema" />
    <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
    <altmember cref="T:System.Xml.Serialization.XmlReflectionImporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaProviderAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaProviderAttribute(System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="b6d27-115">Der Name der statischen Methode, die implementiert werden muss.</span><span class="sxs-lookup"><span data-stu-id="b6d27-115">The name of the static method that must be implemented.</span></span></param>
        <summary><span data-ttu-id="b6d27-116">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />-Klasse und übernimmt den Namen der statischen Methode, die vom XML-Schema des Typs zur Verfügung gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="b6d27-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> class, taking the name of the static method that supplies the type's XML schema.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAny">
      <MemberSignature Language="C#" Value="public bool IsAny { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAny" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAny As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAny { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6d27-117">Ruft einen Wert ab, der bestimmt, ob die Zielklasse ein Platzhalter ist oder ob das Schema für die Klasse nur ein <see langword="xs:any" />-Element enthält, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="b6d27-117">Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an <see langword="xs:any" /> element.</span></span></summary>
        <value>
          <span data-ttu-id="b6d27-118"><see langword="true" />, wenn die Klasse ein Platzhalter ist oder das Schema nur das <see langword="xs:any" />-Element enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b6d27-118"><see langword="true" />, if the class is a wildcard, or if the schema contains only the <see langword="xs:any" /> element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6d27-119">Die Zielklasse des Attributs kann jede Klasse sein.</span><span class="sxs-lookup"><span data-stu-id="b6d27-119">The target class of the attribute can be any class.</span></span> <span data-ttu-id="b6d27-120">Dies kann auf folgende Weise erreicht werden:</span><span class="sxs-lookup"><span data-stu-id="b6d27-120">This can be achieved in the following ways:</span></span>  
  
-   <span data-ttu-id="b6d27-121">Die Methode, die vom Attribut namens zurückgeben kann `null`.</span><span class="sxs-lookup"><span data-stu-id="b6d27-121">The method named by the attribute can return `null`.</span></span>  
  
-   <span data-ttu-id="b6d27-122">Legen Sie den Wert dieser Eigenschaft auf `true` zu verhindern, dass die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="b6d27-122">Set the value of this property to `true` to prevent the method from being called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6d27-123">Ruft den Namen der statischen Methode ab, die das XML-Schema des Typs und den Namen seines XML-Schemadatentyps bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="b6d27-123">Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.</span></span></summary>
        <value><span data-ttu-id="b6d27-124">Der Name der Methode, die von der XML-Infrastruktur aufgerufen wird, um ein XML-Schema zurückzugegeben.</span><span class="sxs-lookup"><span data-stu-id="b6d27-124">The name of the method that is invoked by the XML infrastructure to return an XML schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>