<Type Name="SoapIncludeAttribute" FullName="System.Xml.Serialization.SoapIncludeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bd983e7a0f9ec161eadcd823f4b5d1bea1c489a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86604983" /></Metadata><TypeSignature Language="C#" Value="public class SoapIncludeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapIncludeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapIncludeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapIncludeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapIncludeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapIncludeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Erkennen eines Typs beim Serialisieren oder Deserialisieren eines Objekts als codiertes SOAP-XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Xml.Serialization.SoapIncludeAttribute> Klasse gehört zu einer Reihe von Attributen, mit denen gesteuert <xref:System.Xml.Serialization.XmlSerializer> wird, wie ein Objekt als codiertes SOAP-XML serialisiert oder deserialisiert wird. Das resultierende XML entspricht Abschnitt 5 des World Wide Web Consortium Dokuments, [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/). Eine umfassende Liste mit ähnlichen Attributen finden Sie unter [Attribute zur Steuerung der Serialisierung von codiertem SOAP](/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization).  
  
 Wenn Sie ein Objekt als codierte SOAP-Nachricht serialisieren möchten, müssen Sie das mithilfe einer erstellen, die <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlTypeMapping> mit der- <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> Methode der-Klasse erstellt wurde <xref:System.Xml.Serialization.SoapReflectionImporter> .  
  
 Geben Sie beim Anwenden <xref:System.Xml.Serialization.SoapIncludeAttribute> von den <xref:System.Type> der abgeleiteten Klasse an. Wenn das <xref:System.Xml.Serialization.XmlSerializer> Objekte serialisiert, die sowohl die Basisklasse als auch die abgeleiteten Klassen enthalten, kann es beide Objekttypen erkennen.  
  
 Sie können das verwenden <xref:System.Xml.Serialization.SoapIncludeAttribute> , um abgeleitete Klassen in Dienst Beschreibungs Dokumenten einzuschließen, die im Web Services Description Language (WSDL) geschrieben sind. Wenn eine Methode beispielsweise einen zurückgibt <xref:System.Object> , wenden <xref:System.Xml.Serialization.SoapIncludeAttribute> Sie das auf die-Methode an, und geben Sie die eigentlichen Typen an, die zurückgegeben werden sollen.  
  
 Weitere Informationen zu WSDL finden Sie unter World Wide Web Consortium Specification [Web Services Description Language (WSDL) 1,1](https://www.w3.org/TR/2001/NOTE-wsdl-20010315).  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](/dotnet/standard/attributes/).  
  
   
  
## Examples  
 Im folgenden Beispiel wird das <xref:System.Xml.Serialization.SoapIncludeAttribute> zweimal auf eine XML-Webdienst Methode angewendet. Die-Methode gibt ein Objekt vom Typ zurück `Vehicle` (eine Basisklasse). <xref:System.Xml.Serialization.SoapIncludeAttribute>Ermöglicht es der-Methode, Klassen Instanzen zurückzugeben, die von der-Klasse abgeleitet werden `Vehicle` .  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapIncludeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapIncludeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapIncludeAttribute : Type -&gt; System.Xml.Serialization.SoapIncludeAttribute" Usage="new System.Xml.Serialization.SoapIncludeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ des aufzunehmenden Objekts.</param>
        <summary>Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenden Sie mehrere Instanzen von <xref:System.Xml.Serialization.SoapIncludeAttribute> auf ein Feld oder eine Eigenschaft an, das entweder ein Array von-Objekten zurückgibt, ein- <xref:System.Collections.ArrayList> Objekt, das eine Auflistung von-Objekten enthält, oder ein Objekt, das mehrere Typen zurückgeben kann. Legen Sie die- <xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A> Eigenschaft für jeden Typ fest, den das Feld oder die Eigenschaft enthalten soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das <xref:System.Xml.Serialization.SoapIncludeAttribute> zweimal auf eine XML-Webdienst Methode angewendet. Die-Methode gibt ein Objekt vom Typ zurück `Vehicle` (eine Basisklasse). <xref:System.Xml.Serialization.SoapIncludeAttribute>Ermöglicht es der-Methode, Klassen Instanzen zurückzugeben, die von der-Klasse abgeleitet werden `Vehicle` .  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapIncludeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.SoapIncludeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des Objekts ab, der bei der Serialisierung oder Deserialisierung eines Objekts verwendet werden soll, oder legt diesen fest.</summary>
        <value>Der Typ des aufzunehmenden Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenden Sie mehrere Instanzen von <xref:System.Xml.Serialization.SoapIncludeAttribute> auf ein Feld oder eine Eigenschaft an, das entweder ein Array von-Objekten zurückgibt, ein- <xref:System.Collections.ArrayList> Objekt, das eine Auflistung von-Objekten enthält, oder ein Objekt, das mehrere Typen zurückgeben kann. Legen Sie die- <xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A> Eigenschaft für jeden Typ fest, den das Feld oder die Eigenschaft enthalten soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das <xref:System.Xml.Serialization.SoapIncludeAttribute> zweimal auf eine XML-Webdienst Methode angewendet. Die-Methode gibt ein Objekt vom Typ zurück `Vehicle` (eine Basisklasse). <xref:System.Xml.Serialization.SoapIncludeAttribute>Ermöglicht es der-Methode, Klassen Instanzen zurückzugeben, die von der-Klasse abgeleitet werden `Vehicle` .  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
