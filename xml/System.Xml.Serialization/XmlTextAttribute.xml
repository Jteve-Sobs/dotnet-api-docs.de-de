<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51c640e45999401ba44b35b9f9df61f71b66bb3b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37483996" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTextAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> an, dass der Member beim Serialisieren oder Deserialisieren der Klasse, in der er enthalten ist, als XML-Text behandelt werden muss.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlTextAttribute> gehört zu einer Familie der Attribute, die steuert, wie die <xref:System.Xml.Serialization.XmlSerializer> serialisiert und deserialisiert ein Objekt (über dessen <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> und <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> Methoden). Eine vollständige Liste ähnlicher Attribute, finden Sie unter [Attributes, die Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Nur eine Instanz der <xref:System.Xml.Serialization.XmlTextAttribute> Klasse kann in einer Klasse angewendet werden.  
  
 Sie können anwenden, die <xref:System.Xml.Serialization.XmlTextAttribute> auf öffentliche Felder oder öffentlichen Lese-/Schreib-Eigenschaften, Primitive Typen und Enumerationstypen zurückgeben.  
  
 Sie können anwenden, die <xref:System.Xml.Serialization.XmlTextAttribute> auf ein Feld oder Eigenschaft, die ein Array von Zeichenfolgen zurückgibt. Sie können auch das Attribut anwenden, um ein Array vom Typ <xref:System.Object> aber Sie müssen die <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> Eigenschaft in eine Zeichenfolge. In diesem Fall werden alle Zeichenfolgen, die in das Array eingefügt, als XML-Text serialisiert.  
  
 Die <xref:System.Xml.Serialization.XmlTextAttribute> kann auch angewendet werden, um ein Feld, das gibt ein <xref:System.Xml.XmlNode> oder ein Array von <xref:System.Xml.XmlNode> Objekte.  
  
 In der Standardeinstellung die <xref:System.Xml.Serialization.XmlSerializer> einen Klassenmember als XML-Element serialisiert. Jedoch wenden Sie die <xref:System.Xml.Serialization.XmlTextAttribute> auf einen Member, die <xref:System.Xml.Serialization.XmlSerializer> übersetzt den Wert in XML-Text. Dies bedeutet, dass der Wert in den Inhalt eines XML-Elements codiert ist.  
  
 Die [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) manchen Fällen generiert die <xref:System.Xml.Serialization.XmlTextAttribute> beim Erstellen von Klassen aus einer XML-Schema (XSD-Datei). Dies tritt auf, wenn das Schema enthält eine `complexType` mit gemischtem Inhalt; enthält die entsprechende Klasse in diesem Fall ein Element, das ein Array von Zeichenfolgen, gibt die <xref:System.Xml.Serialization.XmlTextAttribute> angewendet wird. Z. B., wenn die `Xml Schema Definition` Tool verarbeitet dieses Schema:  
  
```  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 Die folgende Klasse generiert wird (zusätzliche Leerzeichen und "Hinweise" wurden entfernt):  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Sie können das Wort `XmlText` in Ihrem Code anstelle des längeren <xref:System.Xml.Serialization.XmlTextAttribute>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTextAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTextAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die Methode überschreiben, die <xref:System.Xml.Serialization.XmlSerializer> ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft serialisiert, durch das Erstellen einer <xref:System.Xml.Serialization.XmlAttributes>, und seine <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> Eigenschaft, um eine <xref:System.Xml.Serialization.XmlTextAttribute>. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Xml.Serialization.XmlAttributeOverrides>-Klasse.  
  
   
  
## Examples  
 Im folgende Beispiel wird eine Klasse, die ein öffentliches Feld, das mit dem Namen enthält serialisiert `Comment`. Im Beispiel wird ein <xref:System.Xml.Serialization.XmlTextAttribute> dem Feld, und überschreiben die Serialisierung als XML-Element, und es stattdessen als XML-Text serialisiert.  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTextAttribute : Type -&gt; System.Xml.Serialization.XmlTextAttribute" Usage="new System.Xml.Serialization.XmlTextAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der <see cref="T:System.Type" /> des zu serialisierenden Members.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTextAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die Methode überschreiben, die <xref:System.Xml.Serialization.XmlSerializer> ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft serialisiert, durch das Erstellen einer <xref:System.Xml.Serialization.XmlAttributes>, und seine <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> Eigenschaft, um eine <xref:System.Xml.Serialization.XmlTextAttribute>. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Xml.Serialization.XmlAttributeOverrides>-Klasse.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den XSD (XML Schema Definition)-Datentyp des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten Textes ab oder legt diesen fest.</summary>
        <value>Ein Datentyp für das XML (XSD)-Schema laut Definition im Dokument "XML Schema Part 2: Datatypes" des World Wide Web Consortium (www.w3.org ).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Festlegen der <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> Eigenschaft, um eine einfache XML-Schemadatentyps wirkt sich auf die generierte XML-Format. Beispielsweise wird die Eigenschaft auf "Date" führt dazu, dass den generierten Text in das allgemeine Datumsformat formatiert werden, z. B.: 2001-08-31. Im Gegensatz dazu festlegen, die Eigenschaft "DateTime" in bestimmten Zeitpunkt gemäß der International Organization for Standardization im Dokument 8601, "Darstellungen von Datum und Zeit", zum Beispiel: 2001-08-15T06:59:11.0508456-07:00.  
  
 Die Auswirkungen der Einstellung der <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> Eigenschaft kann auch angezeigt werden, wenn mit der [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) zum Generieren des XML-Schemas für eine kompilierte Datei. Weitere Informationen zur Verwendung dieses Tools finden Sie unter [The XML Schema Definition-Tool und XML-Serialisierung](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).  
  
 Die folgende Tabelle enthält die einfachen XML-Schema-Datentypen mit ihren.  
  
 Für die XML-Schema `base64Binary` und `hexBinary` Datentypen verwenden, ein Array von <xref:System.Byte> Strukturen, und weisen eine <xref:System.Xml.Serialization.XmlTextAttribute> mit der <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> auf "base64Binary" oder "HexBinary" entsprechend festgelegt. Für die XML-Schema `time` und `date` Datentypen verwenden die <xref:System.DateTime> und wenden Sie die <xref:System.Xml.Serialization.XmlTextAttribute> mit der <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> auf "Date" oder "Time" festgelegt.  
  
 Für jede XML-Schemadatentyps, der in eine Zeichenfolge zugeordnet ist, gelten die <xref:System.Xml.Serialization.XmlTextAttribute> mit seiner <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> -Eigenschaft auf den XML-Schema-Datentyp festgelegt. Beachten Sie, dass dies nicht das Serialisierungsformat, nur das Schema für das Element ändert.  
  
> [!NOTE]
>  Die Eigenschaft ist Groß-/Kleinschreibung, sodass sie genau auf einen der XML-Schema-Datentypen festgelegt werden muss.  
  
> [!NOTE]
>  Übergeben von binären Daten als XML-ist Element effizienter als die Übergabe als XML-Attribut.  
  
 Weitere Informationen zu XML-Schema-Datentypen finden Sie im World Wide Web Consortium (www.w3.org)-Dokument, das mit dem Namen "XML Schema Part 2: Datatypes".  
  
|XSD-Datentyp|Datentyp in .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Array von <xref:System.Byte> Objekte|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|ENTITÄTEN|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Array von <xref:System.Byte> Objekte|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|Ganze Zahl|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|Zeichenfolge|<xref:System.String>|  
|short|<xref:System.Int16>|  
|Uhrzeit|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Der angegebene XML-Schemadatentyp kann dem .NET-Datentyp nicht zugeordnet werden.</exception>
        <exception cref="T:System.InvalidOperationException">Der angegebene XML-Schemadatentyp ist für die Eigenschaft nicht zulässig und kann nicht in den Membertyp konvertiert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des Members ab oder legt diesen fest.</summary>
        <value>Der <see cref="T:System.Type" /> des Members.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Type> Eigenschaft kann nur auf primitive Typen und Enumerationen festgelegt werden.  
  
 Die <xref:System.Xml.Serialization.XmlTextAttribute> kann auch angewendet werden, um ein Feld, das gibt ein <xref:System.Xml.XmlNode> oder ein Array von <xref:System.Xml.XmlNode> Objekte.  
  
 Sie können anwenden, die <xref:System.Xml.Serialization.XmlTextAttribute> auf ein Feld oder Eigenschaft, die ein Array von Zeichenfolgen zurückgibt. Sie können auch das Attribut anwenden, um ein Array vom Typ <xref:System.Object> aber Sie müssen die <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> Eigenschaft in eine Zeichenfolge. In diesem Fall werden alle Zeichenfolgen, die in das Array eingefügt, als XML-Text serialisiert.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>