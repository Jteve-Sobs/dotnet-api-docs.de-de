<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f485878165a597f2cfaa9ba9a4ca5c182d5c074" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52242041" /></Metadata><TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Steuert das Schema, das von <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz als SOAP-codiertes XML generiert wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapTypeAttribute> Klasse gehört zu einer Familie der Attribute, die steuert, wie die <xref:System.Xml.Serialization.XmlSerializer> Serialisieren oder Deserialisieren eines Objekts als codiertes SOAP XML. Das resultierende XML entspricht Abschnitt 5 des World Wide Web Consortium (www.w3.org) Dokuments "Simple Object Access Protocol (SOAP) 1.1". Eine vollständige Liste ähnlicher Attribute, finden Sie unter [Attributes, die Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Zum Serialisieren eines Objekts als codiertes SOAP-Nachricht erstellen die <xref:System.Xml.Serialization.XmlSerializer> mit einer <xref:System.Xml.Serialization.XmlTypeMapping> mit erstellt die <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> -Methode der der <xref:System.Xml.Serialization.SoapReflectionImporter> Klasse.  
  
 Die <xref:System.Xml.Serialization.SoapTypeAttribute> kann nur auf Klassendeklarationen angewendet werden.  
  
 Die <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> Eigenschaft bestimmt, ob der daraus resultierende XML-Elementtyp in der XML-Schema-Dokument (XSD) für den generierten XML-Stream enthalten ist. Um das Schema anzuzeigen, kompilieren Sie die Klasse in eine DLL-Datei. Übergeben Sie die resultierende Datei als Argument an die [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Das Tool generiert das XML-Schema für den XML-Stream generiert, wenn die Klasse, von einer Instanz serialisiert wird der <xref:System.Xml.Serialization.XmlSerializer> Klasse.  
  
 Festlegen von einem anderen Namespace bewirkt, dass Xsd.exe, schreiben eine anderes Schema (.xsd)-Datei für den XML-Stream generiert, wenn die Klasse serialisiert wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auf die Klasse angewendet wird, mit der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auch überschrieben wird, Ändern der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zu "Team". Beide Versionen werden serialisiert, was zu zwei Dateien: SoapType.xml und SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellen Sie eine <xref:System.Xml.Serialization.SoapTypeAttribute> bei die Serialisierung eines Typs zu überschreiben. Weisen Sie das Objekt die <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> Eigenschaft eine <xref:System.Xml.Serialization.SoapAttributes> und Hinzufügen der <xref:System.Xml.Serialization.SoapAttributes> auf eine <xref:System.Xml.Serialization.SoapAttributeOverrides>. Finden Sie unter den <xref:System.Xml.Serialization.SoapAttributeOverrides> Übersicht über die Klasse für Weitere Informationen zum Überschreiben der SOAP-Serialisierung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die <xref:System.Xml.Serialization.SoapTypeAttribute> gilt für die Klasse mit dem <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auch überschrieben wird, Ändern der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zu "Team". Beide Versionen werden serialisiert, was zu zwei Dateien: SoapType.xml und SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen des XML-Typs an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellen Sie eine <xref:System.Xml.Serialization.SoapTypeAttribute> bei die Serialisierung eines Typs zu überschreiben. Weisen Sie das Objekt die <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> Eigenschaft eine <xref:System.Xml.Serialization.SoapAttributes> und Hinzufügen der <xref:System.Xml.Serialization.SoapAttributes> auf eine <xref:System.Xml.Serialization.SoapAttributeOverrides>. Finden Sie unter den <xref:System.Xml.Serialization.SoapAttributeOverrides> Übersicht über die Klasse für Weitere Informationen zum Überschreiben der SOAP-Serialisierung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die <xref:System.Xml.Serialization.SoapTypeAttribute> gilt für die Klasse mit dem <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auch überschrieben wird, Ändern der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zu "Team". Beide Versionen werden serialisiert, was zu zwei Dateien: SoapType.xml und SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
        <param name="ns">Der XML-Namespace des Typs.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen und XML-Namespace des Typs an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellen Sie eine <xref:System.Xml.Serialization.SoapTypeAttribute> bei die Serialisierung eines Typs zu überschreiben. Weisen Sie das Objekt die <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> Eigenschaft eine <xref:System.Xml.Serialization.SoapAttributes> und Hinzufügen der <xref:System.Xml.Serialization.SoapAttributes> auf eine <xref:System.Xml.Serialization.SoapAttributeOverrides>. Finden Sie unter den <xref:System.Xml.Serialization.SoapAttributeOverrides> Klassenübersicht ausführliche Informationen zum Überschreiben der SOAP-Serialisierung.  
  
 Setzen Sie ein <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> Wert für mehr als einen Typ (d. h., wenn Sie das Attribut auf mehr als eine Klasse mit einem anderen anwenden <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> für jeden einzelnen Wert), wird die [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generiert eine Separate Schemadatei (.xsd) für jeden Typ. Dies ist, da das Festlegen von eines anderen Namespaces für jeden Typ sich von den anderen unterschieden Dadurch ist es erforderlich, für jeden Typ als unabhängige Einheit geschrieben werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die <xref:System.Xml.Serialization.SoapTypeAttribute> gilt für die Klasse mit dem <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auch überschrieben wird, Ändern der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zu "Team". Beide Versionen werden serialisiert, was zu zwei Dateien: SoapType.xml und SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwenden der <xref:System.Xml.Serialization.SoapTypeAttribute> für eine Klassendeklaration, um anzugeben, ob der Typ in XML-Schemadokument aufgenommen. Um die Ergebnisse der Festlegen der Eigenschaften finden Sie unter den <xref:System.Xml.Serialization.SoapTypeAttribute> Klasse, die Anwendung als eine EXE- oder DLL kompilieren und übergeben Sie die resultierende Datei in die [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Das Tool schreibt das Schema, einschließlich der Typdefinition des XML-Streams generiert, wenn die Klasse serialisiert wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die <xref:System.Xml.Serialization.SoapTypeAttribute> gilt für die Klasse mit dem <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auch überschrieben wird, Ändern der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zu "Team". Beide Versionen werden serialisiert, was zu zwei Dateien: SoapType.xml und SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace des XML-Typs ab oder legt diesen fest.</summary>
        <value>Der Namespace des XML-Typs. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Setzen Sie ein <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> Wert für mehr als einen Typ (d. h., wenn Sie das Attribut auf mehr als eine Klasse mit einem anderen anwenden <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> für jeden einzelnen Wert), wird die [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generiert eine Separate Schemadatei (.xsd) für jeden Typ. Dies ist, da das Festlegen von eines anderen Namespaces für jeden Typ sich von den anderen unterschieden Dadurch ist es erforderlich, für jeden Typ als unabhängige Einheit geschrieben werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die <xref:System.Xml.Serialization.SoapTypeAttribute> gilt für die Klasse mit dem <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auch überschrieben wird, Ändern der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zu "Team". Beide Versionen werden serialisiert, was zu zwei Dateien: SoapType.xml und SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des XML-Typs ab oder legt diesen fest.</summary>
        <value>Der Name des XML-Typs. Der Standardwert ist der Klassenname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwenden der <xref:System.Xml.Serialization.SoapTypeAttribute> auf eine Klasse an den XML-Datentyp-Namespace, den XML-Typnamen und angibt, ob den Typ in der XML-Schema-Dokument eingeschlossen. Um die Ergebnisse der Einstellung finden Sie unter den <xref:System.Xml.Serialization.SoapTypeAttribute> Objekteigenschaften, kompilieren Sie Ihre Anwendung als eine EXE- oder DLL, und übergeben Sie die resultierende Datei in die [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Das Tool schreibt das Schema, einschließlich der Typdefinition.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die <xref:System.Xml.Serialization.SoapTypeAttribute> gilt für die Klasse mit dem <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Die <xref:System.Xml.Serialization.SoapTypeAttribute> auch überschrieben wird, Ändern der <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zu "Team". Beide Versionen werden serialisiert, was zu zwei Dateien: SoapType.xml und SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>