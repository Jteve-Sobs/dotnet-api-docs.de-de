<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96b6085bc0d7d1b443bcdb5ace9b45a5b724c135" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400353" /></Metadata><TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Steuert das Schema, das von <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz als SOAP-codiertes XML generiert wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapTypeAttribute>-Klasse gehört zu einer Reihe von Attributen, die Steuern, wie das <xref:System.Xml.Serialization.XmlSerializer> ein Objekt als codiertes SOAP-XML serialisiert oder deserialisiert. Das resultierende XML entspricht Abschnitt 5 des World Wide Web Consortium Dokuments, [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/). Eine umfassende Liste mit ähnlichen Attributen finden Sie unter [Attribute zur Steuerung der Serialisierung von codiertem SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Wenn Sie ein Objekt als codierte SOAP-Nachricht serialisieren möchten, erstellen Sie die <xref:System.Xml.Serialization.XmlSerializer> mit einem <xref:System.Xml.Serialization.XmlTypeMapping>, das mit der <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>-Methode der <xref:System.Xml.Serialization.SoapReflectionImporter>-Klasse erstellt wurde.  
  
 Der <xref:System.Xml.Serialization.SoapTypeAttribute> kann nur auf Klassen Deklarationen angewendet werden.  
  
 Die <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A>-Eigenschaft bestimmt, ob der resultierende XML-Elementtyp im XML-Schema Dokument (. xsd) für den generierten XML-Stream enthalten ist. Kompilieren Sie die Klasse in eine DLL-Datei, um das Schema anzuzeigen. Übergeben Sie die resultierende Datei als Argument an das [XML Schema Definition-Tool (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Das Tool generiert das XML-Schema für den XML-Stream, der generiert wird, wenn die Klasse von einer Instanz der <xref:System.Xml.Serialization.XmlSerializer> Klasse serialisiert wird.  
  
 Das Festlegen eines anderen Namespaces bewirkt, dass XSD. exe eine andere Schema Datei (. xsd) für den XML-Stream schreibt, der bei der Serialisierung der Klasse generiert wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird auf die Klasse angewendet, wobei die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird ebenfalls überschrieben, und die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> wird in "Team" geändert. Beide Versionen werden serialisiert, was zu zwei Dateien führt: "SoapType. xml" und "SoapType2. xml".  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellen Sie eine <xref:System.Xml.Serialization.SoapTypeAttribute>, wenn Sie die Serialisierung eines Typs überschreiben. Weisen Sie das-Objekt der <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>-Eigenschaft eines <xref:System.Xml.Serialization.SoapAttributes> zu, und fügen Sie das <xref:System.Xml.Serialization.SoapAttributes> einem <xref:System.Xml.Serialization.SoapAttributeOverrides>hinzu. Weitere Informationen zum Überschreiben der SOAP-Serialisierung finden Sie in der Übersicht über <xref:System.Xml.Serialization.SoapAttributeOverrides>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird auf die Klasse angewendet, wobei die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird ebenfalls überschrieben, und die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> wird in "Team" geändert. Beide Versionen werden serialisiert, was zu zwei Dateien führt: "SoapType. xml" und "SoapType2. xml".  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen des XML-Typs an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellen Sie eine <xref:System.Xml.Serialization.SoapTypeAttribute>, wenn Sie die Serialisierung eines Typs überschreiben. Weisen Sie das-Objekt der <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>-Eigenschaft eines <xref:System.Xml.Serialization.SoapAttributes> zu, und fügen Sie das <xref:System.Xml.Serialization.SoapAttributes> einem <xref:System.Xml.Serialization.SoapAttributeOverrides>hinzu. Weitere Informationen zum Überschreiben der SOAP-Serialisierung finden Sie in der Übersicht über <xref:System.Xml.Serialization.SoapAttributeOverrides>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird auf die Klasse angewendet, wobei die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird ebenfalls überschrieben, und die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> wird in "Team" geändert. Beide Versionen werden serialisiert, was zu zwei Dateien führt: "SoapType. xml" und "SoapType2. xml".  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
        <param name="ns">Der XML-Namespace des Typs.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen und XML-Namespace des Typs an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellen Sie eine <xref:System.Xml.Serialization.SoapTypeAttribute>, wenn Sie die Serialisierung eines Typs überschreiben. Weisen Sie das-Objekt der <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>-Eigenschaft eines <xref:System.Xml.Serialization.SoapAttributes> zu, und fügen Sie das <xref:System.Xml.Serialization.SoapAttributes> einem <xref:System.Xml.Serialization.SoapAttributeOverrides>hinzu. Weitere Informationen zum Überschreiben der SOAP-Serialisierung finden Sie in der Übersicht über <xref:System.Xml.Serialization.SoapAttributeOverrides>-Klasse.  
  
 Wenn Sie einen <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> Wert für mehr als einen Typ festlegen (d. h., wenn Sie das Attribut auf mehrere Klassen mit einem anderen <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> Wert anwenden), generiert das XML- [Schema Definitions Tool (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) eine separate Schema Datei (. xsd) für jeden Typ. Dies liegt daran, dass das Festlegen eines anderen Namespaces für jeden Typ die einzelnen Typen rendert, die sich von den anderen unterscheiden. Dies macht es erforderlich, dass jeder Typ als unabhängige Entität geschrieben wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird auf die Klasse angewendet, wobei die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird ebenfalls überschrieben, und die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> wird in "Team" geändert. Beide Versionen werden serialisiert, was zu zwei Dateien führt: "SoapType. xml" und "SoapType2. xml".  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenden Sie den <xref:System.Xml.Serialization.SoapTypeAttribute> auf eine Klassen Deklaration an, um anzugeben, ob der Typ in das XML-Schema Dokument aufgenommen werden soll. Um die Ergebnisse der Festlegung der Eigenschaften der <xref:System.Xml.Serialization.SoapTypeAttribute>-Klasse anzuzeigen, kompilieren Sie die Anwendung als ausführbare Datei oder dll, und übergeben Sie die resultierende Datei an das [XML-Schema Definitions Tool (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Das Tool schreibt das Schema, einschließlich der Typdefinition des XML-Streams, der generiert wird, wenn die Klasse serialisiert wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird auf die Klasse angewendet, wobei die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird ebenfalls überschrieben, und die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> wird in "Team" geändert. Beide Versionen werden serialisiert, was zu zwei Dateien führt: "SoapType. xml" und "SoapType2. xml".  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace des XML-Typs ab oder legt diesen fest.</summary>
        <value>Der Namespace des XML-Typs. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> Wert für mehr als einen Typ festlegen (d. h., wenn Sie das Attribut auf mehrere Klassen mit einem anderen <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> Wert anwenden), generiert das XML- [Schema Definitions Tool (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) eine separate Schema Datei (. xsd) für jeden Typ. Dies liegt daran, dass das Festlegen eines anderen Namespaces für jeden Typ die einzelnen Typen rendert, die sich von den anderen unterscheiden. Dies macht es erforderlich, dass jeder Typ als unabhängige Entität geschrieben wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird auf die Klasse angewendet, wobei die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird ebenfalls überschrieben, und die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> wird in "Team" geändert. Beide Versionen werden serialisiert, was zu zwei Dateien führt: "SoapType. xml" und "SoapType2. xml".  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des XML-Typs ab oder legt diesen fest.</summary>
        <value>Der Name des XML-Typs. Der Standardwert ist der Klassenname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenden Sie den <xref:System.Xml.Serialization.SoapTypeAttribute> auf eine Klasse an, um den Namespace des XML-Typs anzugeben, den Namen des XML-Typs und ob der Typ in das XML-Schema Dokument aufgenommen werden soll. Um die Ergebnisse der Einstellung der Eigenschaften des <xref:System.Xml.Serialization.SoapTypeAttribute> Objekts anzuzeigen, kompilieren Sie die Anwendung als ausführbare Datei oder dll, und übergeben Sie die resultierende Datei an das [XML-Schema Definitions Tool (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Das Tool schreibt das Schema, einschließlich der Typdefinition.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird auf die Klasse angewendet, wobei die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> auf "SoapGroupType" festgelegt ist. Der <xref:System.Xml.Serialization.SoapTypeAttribute> wird ebenfalls überschrieben, und die <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> wird in "Team" geändert. Beide Versionen werden serialisiert, was zu zwei Dateien führt: "SoapType. xml" und "SoapType2. xml".  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
