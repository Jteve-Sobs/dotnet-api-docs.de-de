<Type Name="XmlChoiceIdentifierAttribute" FullName="System.Xml.Serialization.XmlChoiceIdentifierAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab4d6c52617e2d413744d12140b75ea90d2898d7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39827634" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlChoiceIdentifierAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlChoiceIdentifierAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlChoiceIdentifierAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlChoiceIdentifierAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlChoiceIdentifierAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass der Member durch Verwendung einer Enumeration genauer erkannt werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die XML-Schemadefinition-Element mit dem Namen `xsi:choice` wird verwendet, um ein komplexes Element definieren, die nur ein untergeordnetes Element in einer Instanz enthalten kann (Maxoccurs = 1). Dieses kann eine von mehreren Typen, und es kann einen von mehreren Namen aufweisen. Jeder Name bezieht sich auf einen bestimmten Typ; Allerdings können mehrere Namen desselben Typs zugeordnet sein. Aus diesem Grund ist eine Instanz eines solchen Elements undeutlich. Betrachten Sie beispielsweise das folgende Schemafragment, die dieses Schemafragment Element mit dem Namen definiert `MyChoice`.  
  
```  
<xsd:complexType name="MyChoice">  
 <xsd:sequence>  
 <xsd:choice minOccurs="0" maxOccurs="1">  
 <xsd:element minOccurs="1" maxOccurs="1" name="ChoiceOne" type="xsd:string" />  
 <xsd:element minOccurs="1" maxOccurs="1" name="ChoiceTwo" type="xsd:string" />  
 </xsd:choice>  
 </xsd:sequence>  
</xsd:complexType>  
```  
  
 Die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> können Sie einen speziellen Enumerationswert für jede Instanz des Elements zuweisen. Sie müssen entweder die Enumeration selbst erstellen oder er kann generiert werden, durch die [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Der folgende C#-Code zeigt wie die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> gilt für eine `Item` -Felds ist; die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> identifiziert das Feld, das die Enumeration, die weitere verwendet wird enthält, um die Auswahl zu erkennen.  
  
```  
public class Choices{  
 [XmlChoiceIdentifier("ItemType")]  
 [XmlChoiceIdentifier("ChoiceOne")]  
 [XmlChoiceIdentifier("ChoiceTwo")]  
 public string MyChoice;  
  
 // Do not serialize this next field:  
 [XmlIgnore]  
 public ItemChoiceType ItemType;  
}  
// Do not include this enumeration in the XML schema.  
[XmlType(IncludeInSchema = false)]  
public enum ItemChoiceType{  
 ChoiceOne,  
 ChoiceTwo,  
}  
```  
  
 Wenn dieser Code vorhanden ist, Sie serialisieren und Deserialisieren können diese Klasse durch Festlegen der `ItemType` Feld auf eine entsprechende Enumeration. Beispielsweise zum Serialisieren der `Choice` -Klasse, die c#-Code ähnelt der folgenden Darstellung.  
  
```  
Choices mc = new Choices();  
mc.MyChoice = "Item Choice One";  
mc.ItemType = ItemChoiceType.ChoiceOne;  
```  
  
 Beim Deserialisieren von ähnelt der C#-Code dem folgenden:  
  
```  
MyChoice mc = (MyChoice) myXmlSerializer.Deserialize(myReader);  
if(mc.ItemType == ItemChoiceType.ChoiceOne)  
 {  
     // Handle choice one.  
 }  
if(mc.ItemType == ItemChoiceType.ChoiceTwo)  
 {  
     // Handle choice two.  
 }  
if(mc.ItemType != null)  
 {  
     throw CreateUnknownTypeException(mc.Item);  
 }  
```  
  
 Beim zweiten Szenario ist bei der <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> wird verwendet. Im folgenden Schema wird der Member ein Feld, ein Array von Elementen zurückgibt (MaxOccurs = "unbounded"). Das Array kann Objekte enthalten die erste Wahl ("D-a-t-a"), und der zweite Option ("MoreData").  
  
```  
<xsd:complexType name="MyChoice">  
 <xsd:sequence>  
 <xsd:choice minOccurs="0" maxOccurs="unbounded">  
 <xsd:element minOccurs="1" maxOccurs="1" name="D-a-t-a" type="xsd:string" />  
 <xsd:element minOccurs="1" maxOccurs="1" name="MoreData" type="xsd:string" />  
 </xsd:choice>  
 </xsd:sequence>  
</xsd:complexType>  
```  
  
 Die resultierende Klasse wird dann ein Feld verwendet, um ein Array von Elementen zurückzugeben. Für jedes Element im Array, ein entsprechendes `ItemChoiceType` Enumeration muss auch vorhanden sein. Die entsprechenden Enumerationen sind in den zurückgegebenen Array enthalten die `ItemsElementName` Feld.  
  
```  
public class MyChoice {  
 [System.Xml.Serialization.XmlElementAttribute("D-a-t-a", typeof(string), IsNullable=false)]  
 [System.Xml.Serialization.XmlElementAttribute("MoreData", typeof(string), IsNullable=false)]  
 [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]  
 public string[] Items;  
 [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]  
 [System.Xml.Serialization.XmlIgnoreAttribute()]  
 public ItemsChoiceType[] ItemsElementName;  
}  
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]  
public enum ItemsChoiceType {  
 [System.Xml.Serialization.XmlEnumAttribute("D-a-t-a")]  
 Data,  
 MoreData,  
}  
```  
  
 Beim Deserialisieren eines Objekts, das eine Palette von Wahlmöglichkeiten enthält, verwenden Sie eine (z. B. eine If... then... dann-Struktur) zu bestimmen, wie Deserialisieren ein bestimmtes Werts. Klicken Sie in der Struktur des Steuerelements überprüfen Sie den Enumerationswert, und Deserialisieren Sie den Wert entsprechend zu.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Choices` , enthält zwei Felder, `MyChoice` und `ManyChoices`. Die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> gilt für jedes Feld, der angibt, (über die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> Eigenschaft) einer anderen Klasse-Element, das Ruft ab oder legt eine Enumeration, die den Elementwert erkennt. Die `MyChoice` Feld kann auf einen einzelnen Wert festgelegt werden, mit einer entsprechenden Enumerationsmember finden Sie in der `EnumType` Feld. Die `ManyChoices` -Feld gibt ein Array von Objekten zurück. Die `ChoiceArray` -Feld gibt ein Array von Enumerationswerten zurück. Für jedes Arraymitglied, in der `ManyChoices` Feld, ein entsprechenden Member gefunden in das von zurückgegebene Array die `ChoiceArray` Feld.  
  
 [!code-cpp[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CPP/choice.cpp#1)]
 [!code-csharp[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CS/choice.cs#1)]
 [!code-vb[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/VB/choice.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlChoiceIdentifierAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlChoiceIdentifierAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Choices` , enthält zwei Felder, `MyChoice` und `ManyChoices`. Die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> gilt für jedes Feld, der angibt, (über die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> Eigenschaft) einer anderen Klasse-Element, das Ruft ab oder legt eine Enumeration, die den Elementwert erkennt. Die `MyChoice` Feld kann auf einen einzelnen Wert festgelegt werden, mit einer entsprechenden Enumerationsmember finden Sie in der `EnumType` Feld. Die `ManyChoices` -Feld gibt ein Array von Objekten zurück. Die `ChoiceArray` -Feld gibt ein Array von Enumerationswerten zurück. Für jedes Arraymitglied, in der `ManyChoices` Feld, ein entsprechenden Member gefunden in das von zurückgegebene Array die `ChoiceArray` Feld.  
  
 [!code-cpp[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CPP/choice.cpp#1)]
 [!code-csharp[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CS/choice.cs#1)]
 [!code-vb[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/VB/choice.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlChoiceIdentifierAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlChoiceIdentifierAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlChoiceIdentifierAttribute : string -&gt; System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="new System.Xml.Serialization.XmlChoiceIdentifierAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Membername, der die Enumeration zurückgibt, mit der eine Auswahl bestimmt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string with get, set" Usage="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Felds ab, das die Enumeration zurückgibt, mit der Typen bestimmt werden, oder legt diesen fest.</summary>
        <value>Der Name eines Felds, das eine Enumeration zurückgibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mindestens ein Mitglied in der Enumeration, die von dem Feld mit dem Namen im zurückgegebenen vorhanden sein muss die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> Wert. Standardmäßig nimmt die Enumeration der Name des Felds, das die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> auf angewendet wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Choices` , enthält zwei Felder, `MyChoice` und `ManyChoices`. Die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> gilt für jedes Feld, der angibt, (über die <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> Eigenschaft) einer anderen Klasse-Element, das Ruft ab oder legt eine Enumeration, die den Elementwert erkennt. Die `MyChoice` Feld kann auf einen einzelnen Wert festgelegt werden, mit einer entsprechenden Enumerationsmember finden Sie in der `EnumType` Feld. Die `ManyChoices` -Feld gibt ein Array von Objekten zurück. Die `ChoiceArray` -Feld gibt ein Array von Enumerationswerten zurück. Für jedes Arraymitglied, in der `ManyChoices` Feld, ein entsprechenden Member gefunden in das von zurückgegebene Array die `ChoiceArray` Feld.  
  
 [!code-cpp[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CPP/choice.cpp#1)]
 [!code-csharp[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CS/choice.cs#1)]
 [!code-vb[XmlChoiceIdentifierAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/VB/choice.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>