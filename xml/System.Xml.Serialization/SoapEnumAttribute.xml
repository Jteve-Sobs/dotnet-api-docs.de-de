<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d5071978d3470854e432c1eae2cd10f765487a7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86604996" /></Metadata><TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapEnumAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Field)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Field)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Steuert die Art, in der <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Enumerationsmember serialisiert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Xml.Serialization.SoapEnumAttribute> Klasse gehört zu einer Gruppe von Attributen, die steuert, wie <xref:System.Xml.Serialization.XmlSerializer> ein Objekt als codiertes SOAP-XML serialisiert oder deserialisiert. Das resultierende XML entspricht Abschnitt 5 des World Wide Web Consortium Document [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/). Eine umfassende Liste mit ähnlichen Attributen finden Sie unter [Attribute zur Steuerung der Serialisierung von codiertem SOAP](/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization).  
  
 Wenn Sie ein Objekt als codierte SOAP-Nachricht serialisieren möchten, müssen Sie das mithilfe einer erstellen, die <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlTypeMapping> mit der- <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> Methode der-Klasse erstellt wurde <xref:System.Xml.Serialization.SoapReflectionImporter> .  
  
 Verwenden <xref:System.Xml.Serialization.SoapEnumAttribute> Sie, um die Enumeration zu ändern, die von der <xref:System.Xml.Serialization.XmlSerializer> generiert oder erkannt wird (beim Serialisieren bzw. Deserialisieren einer Klasse). Wenn eine Enumeration z. b. einen Member `One` mit dem Namen enthält, Sie jedoch bevorzugen, dass die XML-Ausgabe den Namen `Single` hat, wenden Sie das <xref:System.Xml.Serialization.SoapEnumAttribute> auf den Enumerationsmember an, und legen Sie die <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> Eigenschaft auf "Single" fest.  
  
 Sie können den- <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> Eigenschafts Wert eines überschreiben <xref:System.Xml.Serialization.SoapEnumAttribute> , indem Sie eine Instanz der <xref:System.Xml.Serialization.SoapEnumAttribute> -Klasse erstellen und Sie der- <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> Eigenschaft eines zuweisen <xref:System.Xml.Serialization.SoapAttributes> . Weitere Informationen finden Sie in der <xref:System.Xml.Serialization.SoapAttributeOverrides> Übersicht über die-Klasse.  
  
 Wenn Sie ein Objekt als codierte SOAP-Nachricht serialisieren möchten, müssen Sie das mithilfe einer erstellen, die <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlTypeMapping> mit der- <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> Methode der-Klasse erstellt wurde <xref:System.Xml.Serialization.SoapReflectionImporter> .  
  
> [!NOTE]
>  Sie können das Wort `SoapEnum` in Ihrem Code anstelle der längeren verwenden <xref:System.Xml.Serialization.SoapEnumAttribute> .  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](/dotnet/standard/attributes/).  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Xml.Serialization.XmlSerializer> , um eine Klasse mit dem Namen zu serialisieren `Food` , die eine Enumeration mit dem Namen enthält `FoodType` . Die `FoodType` -Enumeration wird überschrieben, indem eine <xref:System.Xml.Serialization.SoapEnumAttribute> für jede Enumeration erstellt und die- <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> Eigenschaft eines <xref:System.Xml.Serialization.SoapAttributes> auf die festgelegt wird <xref:System.Xml.Serialization.SoapEnumAttribute> . Der <xref:System.Xml.Serialization.SoapAttributes> wird einem hinzugefügt <xref:System.Xml.Serialization.SoapAttributeOverrides> , der zum Erstellen eines verwendet wird <xref:System.Xml.Serialization.XmlSerializer> .  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden <xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A> Sie, um eine vorhandene Enumeration zu überschreiben. Erstellen Sie eine neue <xref:System.Xml.Serialization.SoapEnumAttribute> , legen Sie die zugehörigen Eigenschaften fest, und weisen Sie das-Objekt der- <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> Eigenschaft eines zu <xref:System.Xml.Serialization.SoapAttributes> . Für jedes Element der-Enumeration müssen Sie ein neues erstellen <xref:System.Xml.Serialization.SoapAttributes> und dem Hinzufügen <xref:System.Xml.Serialization.SoapAttributeOverrides> . Weitere Informationen finden Sie in der <xref:System.Xml.Serialization.SoapAttributeOverrides> Übersicht über die-Klasse.  
  
> [!NOTE]
>  Sie können das Wort `SoapEnum` in Ihrem Code anstelle der längeren verwenden <xref:System.Xml.Serialization.SoapEnumAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Xml.Serialization.XmlSerializer> , um eine Klasse mit dem Namen zu serialisieren `Food` , die eine Enumeration mit dem Namen enthält `FoodType` . Die `FoodType` -Enumeration wird überschrieben, indem eine <xref:System.Xml.Serialization.SoapEnumAttribute> für jede Enumeration erstellt und die- <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> Eigenschaft eines <xref:System.Xml.Serialization.SoapAttributes> auf die festgelegt wird <xref:System.Xml.Serialization.SoapEnumAttribute> . Der <xref:System.Xml.Serialization.SoapAttributes> wird einem hinzugefügt <xref:System.Xml.Serialization.SoapAttributeOverrides> , der zum Erstellen eines verwendet wird <xref:System.Xml.Serialization.XmlSerializer> .  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapEnumAttribute : string -&gt; System.Xml.Serialization.SoapEnumAttribute" Usage="new System.Xml.Serialization.SoapEnumAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierte XML-Elementname.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />-Klasse mit dem angegebenen Elementnamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> Sie an, wenn der generierte XML-Enumerator von dem in der-Enumeration gefundenen Enumerator abweicht.  
  
> [!NOTE]
>  Sie können das Wort `SoapEnum` in Ihrem Code anstelle der längeren verwenden <xref:System.Xml.Serialization.SoapEnumAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Xml.Serialization.XmlSerializer> , um eine Klasse mit dem Namen zu serialisieren `Food` , die eine Enumeration mit dem Namen enthält `FoodType` . Die `FoodType` -Enumeration wird überschrieben, indem eine <xref:System.Xml.Serialization.SoapEnumAttribute> für jede Enumeration erstellt und die- <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> Eigenschaft eines <xref:System.Xml.Serialization.SoapAttributes> auf die festgelegt wird <xref:System.Xml.Serialization.SoapEnumAttribute> . Der <xref:System.Xml.Serialization.SoapAttributes> wird einem hinzugefügt <xref:System.Xml.Serialization.SoapAttributeOverrides> , der zum Erstellen eines verwendet wird <xref:System.Xml.Serialization.XmlSerializer> .  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der bei der Serialisierung einer Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einem XML-Dokument generiert bzw. bei der Deserialisierung des Enumerationsmembers erkannt wurde, oder legt diesen fest.</summary>
        <value>Der Wert, der bei der Serialisierung der Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einem XML-Dokument generiert bzw. bei der Deserialisierung des Enumerationsmembers erkannt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> Sie an, wenn der generierte XML-Enumerator von dem in der-Enumeration gefundenen Enumerator abweicht.  
  
> [!NOTE]
>  Sie können das Wort `SoapEnum` anstelle des längeren verwenden <xref:System.Xml.Serialization.SoapEnumAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Xml.Serialization.XmlSerializer> , um eine Klasse mit dem Namen zu serialisieren `Food` , die eine Enumeration mit dem Namen enthält `FoodType` . Die `FoodType` -Enumeration wird überschrieben, indem eine <xref:System.Xml.Serialization.SoapEnumAttribute> für jede Enumeration erstellt und die- <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> Eigenschaft eines <xref:System.Xml.Serialization.SoapAttributes> auf die festgelegt wird <xref:System.Xml.Serialization.SoapEnumAttribute> . Der <xref:System.Xml.Serialization.SoapAttributes> wird einem hinzugefügt <xref:System.Xml.Serialization.SoapAttributeOverrides> , der zum Erstellen eines verwendet wird <xref:System.Xml.Serialization.XmlSerializer> .  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
