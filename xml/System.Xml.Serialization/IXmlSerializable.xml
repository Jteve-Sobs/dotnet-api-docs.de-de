<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6ba04df9f4691c166c077ed025013951e401d89" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69424823" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt benutzerdefinierte Formatierungen für die XML-Serialisierung und -Deserialisierung bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es gibt zwei Gründe, diese Schnittstelle zu implementieren. Der erste besteht darin, zu steuern, wie das <xref:System.Xml.Serialization.XmlSerializer>Objekt vom serialisiert oder deserialisiert wird. Beispielsweise können Sie Daten in Bytes aufteilen, anstatt große Datasets zu puffern. Außerdem können Sie die Inflation vermeiden, die auftritt, wenn die Daten mit der Base64-Codierung codiert werden. Um die Serialisierung zu steuern, implementieren <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> Sie <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> die Methoden und, <xref:System.Xml.XmlReader> um <xref:System.Xml.XmlWriter> die-Klasse und die-Klasse zu steuern, die zum Lesen und Schreiben des XML- Ein Beispiel hierfür finden [Sie unter Gewusst wie: Serialisierte](~/docs/standard/serialization/how-to-chunk-serialized-data.md)Segmente.  
  
 Der zweite Grund ist, das Schema Steuern zu können. Um dies zu ermöglichen, müssen Sie <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> auf den serialisierbaren Typ anwenden und den Namen des statischen Members angeben, der das Schema zurückgibt. Ein Beispiel finden Sie im <xref:System.Xml.Serialization.XmlSchemaProviderAttribute>.  
  
 Eine Klasse, die die-Schnittstelle implementiert, muss über einen Parameter losen Konstruktor verfügen. Dies ist eine Voraussetzung für <xref:System.Xml.Serialization.XmlSerializer> die-Klasse.  
  
   
  
## Examples  
 Der folgende Beispielcode zeigt eine Implementierung der <xref:System.Xml.Serialization.IXmlSerializable> -Schnittstelle, die ein privates Feld serialisiert.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diese Methode ist reserviert und sollte nicht verwendet werden. Wenn Sie die <see langword="IXmlSerializable" />-Schnittstelle implementieren, sollten Sie <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) von der Methode zurückgeben und stattdessen das <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> auf die Klasse anwenden, wenn ein benutzerdefiniertes Schema erforderlich ist.</summary>
        <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Serialisieren oder Deserialisieren eines Objekts führt die <xref:System.Xml.Serialization.XmlSerializer> Klasse keine XML-Validierung durch. Aus diesem Grund ist es oftmals sicher, Schema Informationen auszulassen, indem eine triviale Implementierung dieser Methode bereitgestellt wird, `null` z`Nothing` . b. durch die Rückgabe von (in Visual Basic).  
  
 Wenn die Angabe von Schema Informationen erforderlich ist, sollten Sie <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> das-Attribut verwenden. Die `GetSchema` Methode sollte weiterhin ( `null` oder `Nothing`) zurückgeben.  
  
 Einige [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Typen und benutzerdefinierte Legacy Typen, die die `IXmlSerializable` -Schnittstelle implementieren `GetSchema` , können `XmlSchemaProvider`anstelle von verwenden. In diesem Fall gibt die-Methode ein genaues XML-Schema zurück, das die XML-Darstellung des Objekts beschreibt <xref:System.Data.DataSet.WriteXml%2A> , das von der-Methode generiert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Der <see cref="T:System.Xml.XmlReader" />-Stream, aus dem das Objekt deserialisiert wird.</param>
        <summary>Generiert ein Objekt aus seiner XML-Darstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> -Methode muss das-Objekt mit den Informationen, die von der <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> -Methode geschrieben wurden, wiederherstellen.  
  
 Wenn diese Methode aufgerufen wird, wird der Reader auf dem Starttag positioniert, das die Informationen für Ihren Typ umschließt. Das heißt, direkt auf dem Starttag, das den Anfang eines serialisierten Objekts angibt. Wenn diese Methode zurückgegeben wird, muss Sie das gesamte Element von Anfang bis Ende lesen, einschließlich des gesamten Inhalts. Anders als <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> bei der-Methode behandelt das-Framework das Wrapper Element nicht automatisch. Ihre Implementierung muss dies tun. Wenn diese Positionierungs Regeln nicht beachtet werden, kann der Code unerwartete Lauf Zeit Ausnahmen oder beschädigte Daten generieren.  
  
 Beim Implementieren dieser Methode sollten Sie in Erwägung gezogen werden, dass ein böswilliger Benutzer möglicherweise eine wohlgeformte, aber ungültige XML-Darstellung bereitstellt, um das Verhalten der Anwendung zu deaktivieren oder anderweitig zu ändern.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Implementierung der <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> -Methode veranschaulicht.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 Das folgende Beispiel veranschaulicht die Verwendung <xref:System.Xml.Serialization.XmlSerializer> der-Klasse, um dieses Objekt zu deserialisieren.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />-Stream, in den das Objekt serialisiert wird.</param>
        <summary>Konvertiert ein Objekt in seine XML-Darstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> Implementierung, die Sie bereitstellen, sollte die XML-Darstellung des Objekts schreiben. Das Framework schreibt ein Wrapper Element und positioniert den XML-Writer nach dessen Start. Ihre-Implementierung kann ihren Inhalt, einschließlich untergeordneter Elemente, schreiben. Das Framework schließt dann das Wrapper Element.  
  
 Schreiben Sie genügend Informationen in <xref:System.Xml.XmlWriter> den Stream, damit <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> die Methode das Objekt wiederherstellen kann.  
  
 Wenn Ihr Objektzustand z. b. eine Array Variable enthält, achten Sie darauf, die Länge des Arrays zu schreiben, oder verwenden Sie ein übergeordnetes Element, um die Elemente zu enthalten, die die Array Werte beschreiben, sodass Sie wissen, wie viele Werte gelesen werden sollen, wenn das Objekt wieder hergestellt wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Implementierung der <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> -Methode veranschaulicht.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 Das folgende Beispiel veranschaulicht die Verwendung <xref:System.Xml.Serialization.XmlSerializer> der-Klasse, um dieses Objekt zu deserialisieren.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
