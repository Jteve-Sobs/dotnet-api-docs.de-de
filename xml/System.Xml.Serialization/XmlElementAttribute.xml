<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="29792-101">Gibt an, dass ein öffentliches Feld oder eine öffentliche Eigenschaft beim Serialisieren bzw. Deserialisieren des Objekts, in dem diese enthalten sind, durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein XML-Element darstellt.</span><span class="sxs-lookup"><span data-stu-id="29792-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-102">Die <xref:System.Xml.Serialization.XmlElementAttribute> gehört zu einer Familie von Attributen, die steuert, wie die <xref:System.Xml.Serialization.XmlSerializer> Serialisieren oder Deserialisieren eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="29792-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="29792-103">Eine vollständige Liste ähnlicher Attribute finden Sie unter [Attribute, XML-Serialisierung](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="29792-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="29792-104">Ein XML-Dokument enthält i. d. r. die XML-Elemente, von denen jedes aus drei Teilen besteht: ein öffnendes-Tag mit möglichen Attributen, ein schließendes Tag und die Daten zwischen den Tags.</span><span class="sxs-lookup"><span data-stu-id="29792-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="29792-105">XML-Tags können geschachtelt sein –, die, die Daten zwischen den Tags können auch XML-Elemente.</span><span class="sxs-lookup"><span data-stu-id="29792-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="29792-106">Diese Kapazität von einem Element zum Einschließen von einem anderen ermöglicht das Dokument Hierarchien Daten enthalten.</span><span class="sxs-lookup"><span data-stu-id="29792-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="29792-107">Ein XML-Element kann auch Attribute enthalten.</span><span class="sxs-lookup"><span data-stu-id="29792-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="29792-108">Anwenden der <xref:System.Xml.Serialization.XmlElementAttribute> auf öffentliche Felder oder öffentlichen Lese-/Schreibeigenschaften Merkmale der XML-Elemente, z. B. der Name und Namespace steuern.</span><span class="sxs-lookup"><span data-stu-id="29792-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="29792-109">Die <xref:System.Xml.Serialization.XmlElementAttribute> kann mehrere Male angewendet werden, um ein Feld, das ein Array von Objekten zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="29792-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="29792-110">Dies dient zum angeben (über die <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> Eigenschaft) verschiedener Typen, die in das Array eingefügt werden können.</span><span class="sxs-lookup"><span data-stu-id="29792-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="29792-111">Das Array im folgenden C#-Code akzeptiert z. B. Zeichenfolgen und ganzen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="29792-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="29792-112">Dies führt zu XML, das wie folgt aussehen kann.</span><span class="sxs-lookup"><span data-stu-id="29792-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="29792-113">Beachten Sie, dass beim Anwenden der <xref:System.Xml.Serialization.XmlElementAttribute> mehrmals ohne Angabe einer <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> Eigenschaftswert, der Elemente nach dem Typ der zulässigen Objekte benannt.</span><span class="sxs-lookup"><span data-stu-id="29792-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="29792-114">Wenden Sie die <xref:System.Xml.Serialization.XmlElementAttribute> in ein Feld oder eine Eigenschaft, die ein Array zurückgibt, werden die Elemente im Array als eine Sequenz von XML-Elementen codiert.</span><span class="sxs-lookup"><span data-stu-id="29792-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="29792-115">Im Gegensatz dazu Wenn ein <xref:System.Xml.Serialization.XmlElementAttribute> wird nicht angewendet, mit solchen Felds oder einer Eigenschaft, die Elemente im Array als eine Sequenz von Elementen, die in einem Element mit dem Namen nach dem Feld oder Eigenschaft geschachtelt codiert sind.</span><span class="sxs-lookup"><span data-stu-id="29792-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="29792-116">(Verwenden der <xref:System.Xml.Serialization.XmlArrayAttribute> und <xref:System.Xml.Serialization.XmlArrayItemAttribute> Attribute steuern, wie ein Array serialisiert wird.)</span><span class="sxs-lookup"><span data-stu-id="29792-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="29792-117">Sie können festlegen, die <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> Eigenschaft zum Angeben eines Typs, der vom Typ des ursprünglichen Felds oder der Eigenschaft--, d. h. abgeleitet wird, das Feld oder Eigenschaft auf die Sie angewendet haben die <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="29792-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="29792-118">Wenn ein Feld oder eine Eigenschaft gibt eine <xref:System.Collections.ArrayList>, können Sie mehrere Instanzen von Anwenden der <xref:System.Xml.Serialization.XmlElementAttribute> auf den Member.</span><span class="sxs-lookup"><span data-stu-id="29792-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="29792-119">Legen Sie für jede Instanz die <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> Eigenschaft auf einen Typ des Objekts, das in das Array eingefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="29792-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="29792-120">Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="29792-120">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29792-121">Sie können das Wort `XmlElement` im Code anstelle des längeren <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="29792-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-122">Im folgenden Beispiel wird die Klasse serialisiert `Group` und wendet die <xref:System.Xml.Serialization.XmlElementAttribute> auf mehreren Membern.</span><span class="sxs-lookup"><span data-stu-id="29792-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="29792-123">Das Feld mit dem Namen `Employees` gibt ein Array von `Employee` Objekte.</span><span class="sxs-lookup"><span data-stu-id="29792-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="29792-124">In diesem Fall die <xref:System.Xml.Serialization.XmlElementAttribute> gibt an, dass das resultierende XML nicht geschachtelt wird (also das Standardverhalten von Elementen in einem Array).</span><span class="sxs-lookup"><span data-stu-id="29792-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29792-125">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-125">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29792-126">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29792-127">Das folgende Beispiel wendet die <xref:System.Xml.Serialization.XmlElementAttribute> auf eine Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-127">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="29792-128">Der XML-Elementname des serialisierten Members.</span><span class="sxs-lookup"><span data-stu-id="29792-128">The XML element name of the serialized member.</span></span></param>
        <summary><span data-ttu-id="29792-129">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Klasse und gibt den Namen des XML-Elements an.</span><span class="sxs-lookup"><span data-stu-id="29792-129">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-130">Wird standardmäßig die <xref:System.Xml.Serialization.XmlSerializer> den Membernamen als Namen des XML-Elements verwendet wird, beim Serialisieren einer Instanz der Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-130">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="29792-131">Z. B. ein Feld mit dem Namen `Vehicle` generiert ein XML-Element mit dem Namen `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="29792-131">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="29792-132">Jedoch wenn Sie ein anderes Element, z. B. benötigen `Cars`, übergeben Sie ihn in die `elementName` Parameter.</span><span class="sxs-lookup"><span data-stu-id="29792-132">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-133">Das folgende Beispiel zeigt eine einfache Klasse mit einem einzelnen Feld namens `Vehicles`.</span><span class="sxs-lookup"><span data-stu-id="29792-133">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="29792-134">Im Beispiel gilt die <xref:System.Xml.Serialization.XmlElementAttribute> auf das Feld und enthält die `elementName` Parameter angewiesen wird, wodurch die <xref:System.Xml.Serialization.XmlSerializer> zum Generieren von XML-Elemente, die mit dem Namen "Cars" anstatt "Fahrzeuge".</span><span class="sxs-lookup"><span data-stu-id="29792-134">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="29792-135">Der <see cref="T:System.Type" /> eines Objekts, das vom Typ des Members abgeleitet ist.</span><span class="sxs-lookup"><span data-stu-id="29792-135">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="29792-136">Initialisiert eine neues Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Klasse und gibt einen Typ für den Member an, auf den das <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="29792-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="29792-137">Dieser Typ wird vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> verwendet, wenn das Objekt serialisiert oder deserialisiert wird, in dem es enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="29792-137">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-138">Verwenden der `type` Parameter zum Angeben eines Typs, die von einer Basisklasse abgeleitet ist.</span><span class="sxs-lookup"><span data-stu-id="29792-138">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="29792-139">Nehmen wir beispielsweise an eine Eigenschaft namens `MyAnimal` gibt ein `Animal` Objekt.</span><span class="sxs-lookup"><span data-stu-id="29792-139">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="29792-140">Soll das Objekt erweitert wird, daher Sie eine neue Klasse namens erstellen `Mammal` von erbt die `Animal` Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-140">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="29792-141">Anweisen der <xref:System.Xml.Serialization.XmlSerializer> akzeptieren die `Mammal` -Klasse beim Serialisieren der `MyAnimal` Eigenschaft, übergeben Sie die <xref:System.Type> von der `Mammal` Klasse an den Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="29792-141">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-142">Im folgenden Beispiel wird die Klasse serialisiert `Orchestra` , enthält ein einzelnes Feld mit dem Namen `Instruments`, womit ein Array von `Instrument` Objekte.</span><span class="sxs-lookup"><span data-stu-id="29792-142">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="29792-143">Eine zweite Klasse `Brass` erbt von der `Instrument` Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-143">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="29792-144">Im Beispiel gilt die <xref:System.Xml.Serialization.XmlElementAttribute> auf die `Instruments` ein, und gibt an, die `Brass` eingeben, sodass die `Instruments` Feld akzeptiert `Brass` Objekte.</span><span class="sxs-lookup"><span data-stu-id="29792-144">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="29792-145">Das Beispiel gibt den Namen des XML-Elements auch durch Festlegen der <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="29792-145">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="29792-146">Der XML-Elementname des serialisierten Members.</span><span class="sxs-lookup"><span data-stu-id="29792-146">The XML element name of the serialized member.</span></span></param>
        <param name="type"><span data-ttu-id="29792-147">Der <see cref="T:System.Type" /> eines Objekts, das vom Typ des Members abgeleitet ist.</span><span class="sxs-lookup"><span data-stu-id="29792-147">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="29792-148">Initialisiert eine neue Instanz von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, und gibt den Namen des XML-Elements und einen abgeleiteten Typ für den Member an, auf den das <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="29792-148">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="29792-149">Dieser Membertyp wird verwendet, wenn der <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Objekt serialisiert, in dem es enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="29792-149">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-150">Wird standardmäßig die <xref:System.Xml.Serialization.XmlSerializer> den Membernamen als Namen des XML-Elements verwendet wird, beim Serialisieren einer Instanz der Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-150">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="29792-151">Z. B. ein Feld mit dem Namen `Vehicle` generiert ein XML-Element mit dem Namen `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="29792-151">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="29792-152">Jedoch, wenn Sie ein anderes Element, z. B. benötigen `Cars`, übergeben Sie ihn in die `elementName` Parameter.</span><span class="sxs-lookup"><span data-stu-id="29792-152">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="29792-153">Verwenden der `type` Parameter zum Angeben eines Typs, die von einer Basisklasse abgeleitet ist.</span><span class="sxs-lookup"><span data-stu-id="29792-153">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="29792-154">Nehmen wir beispielsweise an eine Eigenschaft namens `MyAnimal` gibt ein `Animal` Objekt.</span><span class="sxs-lookup"><span data-stu-id="29792-154">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="29792-155">Soll das Objekt erweitert wird, daher Sie eine neue Klasse namens erstellen `Mammal` von erbt die `Animal` Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-155">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="29792-156">Anweisen der <xref:System.Xml.Serialization.XmlSerializer> akzeptieren die `Mammal` -Klasse beim Serialisieren der `MyAnimal` Eigenschaft, übergeben Sie die <xref:System.Type> von der `Mammal` Klasse an den Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="29792-156">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-157">Im folgenden Beispiel wird die Klasse serialisiert `Orchestra` , enthält ein einzelnes Feld mit dem Namen `Instruments`, womit ein Array von `Instrument` Objekte.</span><span class="sxs-lookup"><span data-stu-id="29792-157">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="29792-158">Eine zweite Klasse `Brass` erbt von der `Instrument` Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-158">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="29792-159">Im Beispiel gilt die <xref:System.Xml.Serialization.XmlElementAttribute> auf die `Instruments` ein, und gibt an, die `Brass` eingeben, sodass die `Instruments` Feld akzeptiert `Brass` Objekte.</span><span class="sxs-lookup"><span data-stu-id="29792-159">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="29792-160">Das Beispiel gibt den Namen des XML-Elements auch durch Festlegen der <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="29792-160">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29792-161">Ruft den XSD (XML Schema Definition)-Datentyp des vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Elements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="29792-161">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="29792-162">Ein XML-Schemadatentyp laut Definition im Dokument "XML Schema Part 2: Datatypes" des World Wide Web Consortium (www.w3.org ).</span><span class="sxs-lookup"><span data-stu-id="29792-162">An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-163">Die folgende Tabelle enthält die einfachen XML-Schema-Datentypen mit den entsprechenden ein.</span><span class="sxs-lookup"><span data-stu-id="29792-163">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="29792-164">Für das XML-Schema `base64Binary` und `hexBinary` Datentypen verwenden, ein Array von <xref:System.Byte> Strukturen, und weisen eine <xref:System.Xml.Serialization.XmlElementAttribute> mit der <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> auf "base64Binary" oder "HexBinary" entsprechend festgelegt.</span><span class="sxs-lookup"><span data-stu-id="29792-164">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="29792-165">Für das XML-Schema `time` und `date` Datentypen verwenden die <xref:System.DateTime> und wenden Sie die <xref:System.Xml.Serialization.XmlElementAttribute> mit der <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> auf "Date" oder "Time" festgelegt.</span><span class="sxs-lookup"><span data-stu-id="29792-165">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="29792-166">Für jeden XML-Schema, das eine Zeichenfolge zugeordnet ist, gelten die <xref:System.Xml.Serialization.XmlElementAttribute> mit seiner <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> -Eigenschaft auf den XML-Schematyp festgelegt.</span><span class="sxs-lookup"><span data-stu-id="29792-166">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="29792-167">Es ist möglich, dass dies das Serialisierungsformat nicht nur das Schema für das Element ändern kann.</span><span class="sxs-lookup"><span data-stu-id="29792-167">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29792-168">Die Eigenschaft wird Groß-/Kleinschreibung beachtet, damit Sie genau auf einem XML-Schema-Datentypen festgelegt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="29792-168">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29792-169">Übergeben von Binärdaten als XML-ist Element effizienter als die Übergabe als ein XML-Schema-Attribut.</span><span class="sxs-lookup"><span data-stu-id="29792-169">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="29792-170">Weitere Informationen zu XML-Datentypen finden Sie unter der World Wide Web Consortium (www.w3.org)-Dokument mit dem Namen "XML Schema Teil 2: Datatypes".</span><span class="sxs-lookup"><span data-stu-id="29792-170">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="29792-171">XSD-Datentyp</span><span class="sxs-lookup"><span data-stu-id="29792-171">XSD data type</span></span>|<span data-ttu-id="29792-172">.NET-Datentyp</span><span class="sxs-lookup"><span data-stu-id="29792-172">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="29792-173">anyURI</span><span class="sxs-lookup"><span data-stu-id="29792-173">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-174">base64Binary</span><span class="sxs-lookup"><span data-stu-id="29792-174">base64Binary</span></span>|<span data-ttu-id="29792-175">Array von <xref:System.Byte> Objekte</span><span class="sxs-lookup"><span data-stu-id="29792-175">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="29792-176">boolean</span><span class="sxs-lookup"><span data-stu-id="29792-176">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="29792-177">byte</span><span class="sxs-lookup"><span data-stu-id="29792-177">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="29792-178">date</span><span class="sxs-lookup"><span data-stu-id="29792-178">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="29792-179">dateTime</span><span class="sxs-lookup"><span data-stu-id="29792-179">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="29792-180">decimal</span><span class="sxs-lookup"><span data-stu-id="29792-180">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="29792-181">double</span><span class="sxs-lookup"><span data-stu-id="29792-181">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="29792-182">ENTITY</span><span class="sxs-lookup"><span data-stu-id="29792-182">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-183">ENTITÄTEN</span><span class="sxs-lookup"><span data-stu-id="29792-183">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-184">float</span><span class="sxs-lookup"><span data-stu-id="29792-184">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="29792-185">gDay</span><span class="sxs-lookup"><span data-stu-id="29792-185">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-186">gMonth</span><span class="sxs-lookup"><span data-stu-id="29792-186">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-187">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="29792-187">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-188">gYear</span><span class="sxs-lookup"><span data-stu-id="29792-188">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-189">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="29792-189">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-190">hexBinary</span><span class="sxs-lookup"><span data-stu-id="29792-190">hexBinary</span></span>|<span data-ttu-id="29792-191">Array von <xref:System.Byte> Objekte</span><span class="sxs-lookup"><span data-stu-id="29792-191">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="29792-192">Id</span><span class="sxs-lookup"><span data-stu-id="29792-192">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-193">IDREF</span><span class="sxs-lookup"><span data-stu-id="29792-193">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-194">IDREFS</span><span class="sxs-lookup"><span data-stu-id="29792-194">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-195">int</span><span class="sxs-lookup"><span data-stu-id="29792-195">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="29792-196">Ganze Zahl</span><span class="sxs-lookup"><span data-stu-id="29792-196">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-197">language</span><span class="sxs-lookup"><span data-stu-id="29792-197">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-198">long</span><span class="sxs-lookup"><span data-stu-id="29792-198">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="29792-199">name</span><span class="sxs-lookup"><span data-stu-id="29792-199">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-200">NCName</span><span class="sxs-lookup"><span data-stu-id="29792-200">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-201">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="29792-201">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-202">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="29792-202">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-203">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="29792-203">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-204">normalizedString</span><span class="sxs-lookup"><span data-stu-id="29792-204">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-205">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="29792-205">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-206">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="29792-206">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-207">NOTATION</span><span class="sxs-lookup"><span data-stu-id="29792-207">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-208">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="29792-208">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-209">QName</span><span class="sxs-lookup"><span data-stu-id="29792-209">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="29792-210">duration</span><span class="sxs-lookup"><span data-stu-id="29792-210">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-211">Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="29792-211">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-212">short</span><span class="sxs-lookup"><span data-stu-id="29792-212">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="29792-213">Uhrzeit</span><span class="sxs-lookup"><span data-stu-id="29792-213">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="29792-214">token</span><span class="sxs-lookup"><span data-stu-id="29792-214">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="29792-215">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="29792-215">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="29792-216">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="29792-216">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="29792-217">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="29792-217">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="29792-218">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="29792-218">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="29792-219">Im folgenden Beispiel wird die Klasse serialisiert `Group` , enthält ein Feld mit dem Namen `ExtraInfo`, welche gibt eine <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="29792-219">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="29792-220">Im Beispiel gilt, zwei Instanzen der <xref:System.Xml.Serialization.XmlElementAttribute> auf das Feld und unterschiedliche <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> Werte für jede Instanz.</span><span class="sxs-lookup"><span data-stu-id="29792-220">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="29792-221">Jede Instanz ermöglicht es dem <xref:System.Xml.Serialization.XmlSerializer> zum Serialisieren von der angegebenen Typen, die in das Array eingefügt.</span><span class="sxs-lookup"><span data-stu-id="29792-221">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="29792-222">Der angegebene XML-Schemadatentyp kann dem .NET-Datentyp nicht zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="29792-222">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29792-223">Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="29792-223">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="29792-224">Der Name des generierten XML-Elements.</span><span class="sxs-lookup"><span data-stu-id="29792-224">The name of the generated XML element.</span></span> <span data-ttu-id="29792-225">Der Standardwert ist der Memberbezeichner.</span><span class="sxs-lookup"><span data-stu-id="29792-225">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-226">Geben Sie eine <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> möchten Sie den Namen des generierten XML-Elements vom Bezeichner des Members unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="29792-226">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="29792-227">Sie können festlegen, die gleiche <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> auf mehr als ein Klassenmember Wert, wenn das generierte XML-Dokument XML-Namespaces verwendet, um zwischen den gleichnamigen Elementen zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="29792-227">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="29792-228">Weitere Informationen zum Verwenden von Namespaces und Namen mit Präfixen im XML-Dokument, finden Sie unter der <xref:System.Xml.Serialization.XmlSerializerNamespaces> Klasse.</span><span class="sxs-lookup"><span data-stu-id="29792-228">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-229">Im folgenden Beispiel wird die <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> Eigenschaft ein <xref:System.Xml.Serialization.XmlElementAttribute> einen neuen Wert.</span><span class="sxs-lookup"><span data-stu-id="29792-229">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29792-230">Ruft einen Wert ab, der angibt, ob das Element qualifiziert ist.</span><span class="sxs-lookup"><span data-stu-id="29792-230">Gets or sets a value that indicates whether the element is qualified.</span></span></summary>
        <value><span data-ttu-id="29792-231">Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="29792-231">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="29792-232">Der Standardwert ist <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span><span class="sxs-lookup"><span data-stu-id="29792-232">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-233">Die <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> -Eigenschaft bestimmt, ob ein XML-Element qualifizierte oder nicht qualifizierte ist.</span><span class="sxs-lookup"><span data-stu-id="29792-233">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="29792-234">Die <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> Eigenschaft entspricht der World Wide Web Consortium (www.w3.org) 1999-Spezifikation "Namespaces in XML".</span><span class="sxs-lookup"><span data-stu-id="29792-234">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="29792-235">Wenn die <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> Eigenschaftensatz wird auf einen beliebigen Wert, der beim Festlegen der <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> Eigenschaft `XmlSchemaForm.Unqualified` löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="29792-235">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="29792-236">Die Standardeinstellung `XmlSchemaForm.None`, weist der <xref:System.Xml.Serialization.XmlSerializer> , überprüfen Sie das Schema für das XML-Dokument, um zu bestimmen, ob der Namespace gekennzeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="29792-236">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="29792-237">Wenn das Schema keinen Wert für ein einzelnes Element oder Attribut angeben, wird die <xref:System.Xml.Serialization.XmlSerializer> verwendet die `elementFormDefault` und `attributeFormDefault` Werte, um zu bestimmen, ob ein Element oder Attribut gekennzeichnet ist.</span><span class="sxs-lookup"><span data-stu-id="29792-237">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="29792-238">Der folgende XML-Code zeigt ein Schema:</span><span class="sxs-lookup"><span data-stu-id="29792-238">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="29792-239">Wenn die <xref:System.Xml.Serialization.XmlSerializer> liest das Schema der <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> Wert für beide die `Name` und `Number` ist `XmlSchemaForm.None`, aber die `Name` Element qualifiziert, während die `Number` Element ist nicht qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="29792-239">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-240">Im folgenden Beispiel wird die <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> Eigenschaft `XmlSchemaForm.Unqualified`.</span><span class="sxs-lookup"><span data-stu-id="29792-240">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29792-241">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member, der auf <see langword="null" /> festgelegt ist, als leeres Tag, dessen <see langword="xsi:nil" />-Attribut auf <see langword="true" /> festgelegt ist, serialisieren muss, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="29792-241">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value>
          <span data-ttu-id="29792-242"><see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="29792-242"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-243">Die XML-Schemaspezifikation für Strukturen ermöglicht ein XML-Dokument, explizit zu signalisieren, dass der Inhalt eines Elements nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="29792-243">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="29792-244">Ein solches Element enthält das Attribut `xsi:nil` festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="29792-244">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="29792-245">Weitere Informationen finden Sie unter der World Wide Web Consortium (www.w3.org)-Spezifikation "XML Schema Part 1: Structures".</span><span class="sxs-lookup"><span data-stu-id="29792-245">For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</span></span>  
  
 <span data-ttu-id="29792-246">Wenn die <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> -Eigenschaftensatz auf `true`, `xsi:nil` Attribut wird für Klassenmember, die festgelegte generiert `null`.</span><span class="sxs-lookup"><span data-stu-id="29792-246">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="29792-247">Z. B. Wenn Sie festlegen, dass ein Feld mit dem Namen `MyStringArray` auf `null`die <xref:System.Xml.Serialization.XmlSerializer> verursacht der folgende XML-Code.</span><span class="sxs-lookup"><span data-stu-id="29792-247">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="29792-248">Wenn die <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> Eigenschaft `false`, kein XML-Element für Klassenmember, die festgelegte generiert `null`.</span><span class="sxs-lookup"><span data-stu-id="29792-248">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29792-249">Sie können nicht angewendet werden die <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> Eigenschaft auf einen Member als Werttyp eingegeben haben, ein Werttyp kann keine enthalten `null`.</span><span class="sxs-lookup"><span data-stu-id="29792-249">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="29792-250">Darüber hinaus können Sie auf diese Eigenschaft festlegen `false` für auf NULL festlegbare Werttypen.</span><span class="sxs-lookup"><span data-stu-id="29792-250">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="29792-251">Wenn solche Typen sind `null`, durch Festlegen von serialisiert `xsi:nil` auf `true`.</span><span class="sxs-lookup"><span data-stu-id="29792-251">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-252">Das folgende Beispiel zeigt ein Feld mit der <xref:System.Xml.Serialization.XmlElementAttribute> darauf angewendet, und die <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> -Eigenschaftensatz auf `false`.</span><span class="sxs-lookup"><span data-stu-id="29792-252">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29792-253">Ruft den Namespace ab, der dem XML-Element zugeordnet ist, das aus dem Serialisieren der Klasse resultiert, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="29792-253">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span></span></summary>
        <value><span data-ttu-id="29792-254">Der Namespace des XML-Elements.</span><span class="sxs-lookup"><span data-stu-id="29792-254">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-255">Die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> Eigenschaft entspricht der World Wide Web Consortium (www.w3.org)-Spezifikation "Namespaces in XML".</span><span class="sxs-lookup"><span data-stu-id="29792-255">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="29792-256">Zum Erstellen von Namespaces, die mit einem Präfix zugeordnet sind, müssen Sie erstellen eine <xref:System.Xml.Serialization.XmlSerializerNamespaces> , enthält die Namespaces und Präfixen, die in das XML-Dokument verwendet.</span><span class="sxs-lookup"><span data-stu-id="29792-256">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="29792-257">Festlegen des Namespaces für die einzelnen <xref:System.Xml.Serialization.XmlArrayAttribute>, er muss mit einem der Namespaces in der <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span><span class="sxs-lookup"><span data-stu-id="29792-257">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="29792-258">Wenn der XML-Code generiert wird, wird jedes Array ordnungsgemäß mit dem Präfix, das dem angegebenen Namespace zugeordnet vorangestellt.</span><span class="sxs-lookup"><span data-stu-id="29792-258">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29792-259">Ruft die explizite Reihenfolge ab, in der die Elemente serialisiert oder deserialisiert werden, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="29792-259">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="29792-260">Die Reihenfolge der Codegenerierung.</span><span class="sxs-lookup"><span data-stu-id="29792-260">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-261">Verwenden der <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> -Enumeration angewiesen der <xref:System.Web.Services.Description.ServiceDescriptionImporter> zum Generieren von Code, der festlegt der <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="29792-261">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29792-262">Sobald die <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> Eigenschaft wurde auf eine öffentliche Eigenschaft oder ein Feld in einem Typ verwendet, muss für alle öffentlichen Eigenschaften und Felder für diesen Typ und alle geerbten Typen angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="29792-262">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29792-263">Ruft den Objekttyp ab, mit dem das XML-Element dargestellt wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="29792-263">Gets or sets the object type used to represent the XML element.</span></span></summary>
        <value><span data-ttu-id="29792-264">Der <see cref="T:System.Type" /> des Members.</span><span class="sxs-lookup"><span data-stu-id="29792-264">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29792-265">Verwenden der <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> Eigenschaft, um einen abgeleiteten Typ für ein Feld oder eine Eigenschaft anzugeben.</span><span class="sxs-lookup"><span data-stu-id="29792-265">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="29792-266">Wenn ein Feld oder eine Eigenschaft gibt eine <xref:System.Collections.ArrayList>, können Sie mehrere Instanzen von Anwenden der <xref:System.Xml.Serialization.XmlElementAttribute> auf den Member.</span><span class="sxs-lookup"><span data-stu-id="29792-266">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="29792-267">Legen Sie für jede Instanz die <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> Eigenschaft auf einen Typ des Objekts, das in das Array eingefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="29792-267">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29792-268">Im folgenden Beispiel wird die <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> -Eigenschaft an ein abgeleitetes Objekt für ein <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="29792-268">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="29792-269">Im Beispiel gilt auch drei Instanzen von der <xref:System.Xml.Serialization.XmlElementAttribute> auf ein Feld, das gibt ein <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="29792-269">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="29792-270">Jede Instanz gibt einen Typ, der im Feld zulässig.</span><span class="sxs-lookup"><span data-stu-id="29792-270">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>