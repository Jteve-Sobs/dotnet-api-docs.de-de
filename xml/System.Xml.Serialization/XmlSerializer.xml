<Type Name="XmlSerializer" FullName="System.Xml.Serialization.XmlSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f42453745e2ad22c971b6f45222e0d11d019e771" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73401124" /></Metadata><TypeSignature Language="C#" Value="public class XmlSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializer" />
  <TypeSignature Language="F#" Value="type XmlSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Serialisiert und deserialisiert Objekte in und aus XML-Dokumenten. Mit <see cref="T:System.Xml.Serialization.XmlSerializer" /> können Sie steuern, wie Objekte in XML codiert werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die XML-Serialisierung ist die Konvertierung der öffentlichen Eigenschaften und Felder eines Objekts in ein serielles Format (in diesem Fall XML) zum Zweck der Speicherung und Übermittlung. Bei der Deserialisierung wird das Objekt in seinem ursprünglichen Zustand aus der XML-Ausgabe neu erstellt. Sie können sich die Serialisierung als Möglichkeit vorstellen, den Zustand eines Objekts in einem Stream oder Puffer zu speichern. Beispielsweise verwendet ASP.net die <xref:System.Xml.Serialization.XmlSerializer>-Klasse zum Codieren von XML-Webdienst Nachrichten.  
  
 Die Daten des Objekts werden durch Konstrukte der Programmiersprache beschrieben, z.&amp;#160;B. Klassen, Felder, Eigenschaften, primitive Typen, Arrays oder auch eingebettetes XML in Form von <xref:System.Xml.XmlElement>-Objekten oder <xref:System.Xml.XmlAttribute>-Objekten. Sie haben die Möglichkeit, eigene Klassen zu erstellen, mit Attributen kommentiert zu werden, oder das [XML Schema Definition-Tool (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) zum Generieren der Klassen basierend auf einem vorhandenen XSD-Dokument (XML Schema Definition). Wenn Sie ein XML-Schema haben, können Sie XSD. exe ausführen, um einen Satz von Klassen zu entwickeln, die stark in das Schema eingegeben werden und mit Attributen versehen sind, die bei der Serialisierung dem Schema entsprechen.  
  
 Zum Übertragen von Daten zwischen Objekten und XML ist eine Zuordnung der Konstrukte der Programmiersprache zum XML-Schema und vom XML-Schema zu den Konstrukten der Programmiersprache erforderlich. Der <xref:System.Xml.Serialization.XmlSerializer> und verwandte Tools wie Xsd. exe stellen die Brücke zwischen diesen beiden Technologien zur Entwurfszeit und zur Laufzeit bereit. Verwenden Sie zur Entwurfszeit die Datei "XSD. exe", um ein XML-Schema Dokument (. xsd) aus Ihren benutzerdefinierten Klassen zu erstellen oder um Klassen aus einem bestimmten Schema zu erstellen. In beiden Fällen werden den Klassen benutzerdefinierte Attribute hinzugefügt, um den <xref:System.Xml.Serialization.XmlSerializer> die Zuordnung zwischen dem XML-Schema System und dem Common Language Runtime anzuweisen. Zur Laufzeit können Instanzen der Klassen in XML-Dokumente serialisiert werden, die dem angegebenen Schema folgen. Ebenso können diese XML-Dokumente in Lauf Zeit Objekte deserialisiert werden. Beachten Sie, dass das XML-Schema optional ist und zur Entwurfszeit oder zur Laufzeit nicht erforderlich ist.  
  
## <a name="controlling-generated-xml"></a>Steuern von generiertem XML  
 Zum Steuern des generierten XML-Codes können Sie spezielle Attribute auf Klassen und Member anwenden. Um z. b. einen anderen XML-Elementnamen anzugeben, wenden Sie eine <xref:System.Xml.Serialization.XmlElementAttribute> auf ein öffentliches Feld oder eine öffentliche Eigenschaft an, und legen Sie die <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>-Eigenschaft fest. Eine umfassende Liste mit ähnlichen Attributen finden Sie unter [Attribute, die die XML-Serialisierung steuern](https://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7). Sie können auch die <xref:System.Xml.Serialization.IXmlSerializable>-Schnittstelle implementieren, um die XML-Ausgabe zu steuern.  
  
 Wenn der generierte XML-Code Abschnitt 5 des World Wide Consortium-Dokuments, [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/), entsprechen muss, müssen Sie die <xref:System.Xml.Serialization.XmlSerializer> mit einem <xref:System.Xml.Serialization.XmlTypeMapping>erstellen. Um die codierte SOAP-XML-Datei weiter zu steuern, verwenden Sie die Attribute, die unter [Attribute zur Steuerung der Serialisierung codierter SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)  
  
 Mit dem <xref:System.Xml.Serialization.XmlSerializer> können Sie mit stark typisierten Klassenarbeiten und dennoch die Flexibilität von XML nutzen. Mithilfe von Feldern oder Eigenschaften vom Typ <xref:System.Xml.XmlElement>, <xref:System.Xml.XmlAttribute> oder <xref:System.Xml.XmlNode> in den stark typisierten Klassen können Sie Teile des XML-Dokuments direkt in XML-Objekte lesen.  
  
 Wenn Sie mit erweiterbaren XML-Schemas arbeiten, können Sie auch die Attribute "<xref:System.Xml.Serialization.XmlAnyElementAttribute>" und "<xref:System.Xml.Serialization.XmlAnyAttributeAttribute>" verwenden, um Elemente oder Attribute zu serialisieren und zu deserialisieren, die im ursprünglichen Schema nicht gefunden wurden. Um die Objekte zu verwenden, wenden Sie eine <xref:System.Xml.Serialization.XmlAnyElementAttribute> auf ein Feld an, das ein Array von <xref:System.Xml.XmlElement> Objekten zurückgibt, oder wenden Sie eine <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> auf ein Feld an, das ein Array mit <xref:System.Xml.XmlAttribute> Objekten zurückgibt.  
  
 Wenn eine Eigenschaft oder ein Feld ein komplexes Objekt zurückgibt (z. B. ein Array oder eine Klasseninstanz), wird dieses von <xref:System.Xml.Serialization.XmlSerializer> in ein Element konvertiert, das innerhalb des XML-Hauptdokuments geschachtelt ist. Beispielsweise gibt die erste Klasse im folgenden Code eine Instanz der zweiten Klasse zurück.  
  
```vb  
Public Class MyClass  
    Public MyObjectProperty As MyObject  
End Class  
  
Public Class MyObject  
    Public ObjectName As String  
End Class  
```  
  
```csharp  
public class MyClass  
{  
    public MyObject MyObjectProperty;  
}  
public class MyObject  
{  
    public string ObjectName;  
}  
```  
  
 Die serialisierte XML-Ausgabe sieht wie folgt aus:  
  
```  
<MyClass>  
  <MyObjectProperty>  
  <ObjectName>My String</ObjectName>  
  </MyObjectProperty>  
</MyClass>  
```  
  
 Wenn ein Schema ein Element enthält, das optional ist (minvorkommen = ' 0 '), oder wenn das Schema einen Standardwert enthält, haben Sie zwei Möglichkeiten. Eine Möglichkeit ist die Verwendung von <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType>, um den Standardwert anzugeben, wie im folgenden Code dargestellt.  
  
```vb  
Public Class PurchaseOrder  
    <System.ComponentModel.DefaultValueAttribute ("2002")> _  
    Public Year As String  
End Class  
```  
  
```csharp  
public class PurchaseOrder  
{  
    [System.ComponentModel.DefaultValueAttribute ("2002")]  
    public string Year;  
}  
```  
  
 Eine andere Möglichkeit ist die Verwendung eines besonderen Musters zum Erstellen eines booleschen Felds, das vom <xref:System.Xml.Serialization.XmlSerializer>erkannt wird, und das Anwenden des <xref:System.Xml.Serialization.XmlIgnoreAttribute> auf das Feld. Das Muster wird in Form von `propertyNameSpecified`erstellt. Wenn z. b. ein Feld mit dem Namen "MyFirstName" vorhanden ist, erstellen Sie auch ein Feld mit dem Namen "MyFirstNameSpecified", das den <xref:System.Xml.Serialization.XmlSerializer>, ob das XML-Element mit dem Namen "MyFirstName" generiert werden soll. Dies wird im folgenden Beispiel gezeigt.  
  
```vb  
Public Class OptionalOrder  
    ' This field's value should not be serialized   
    ' if it is uninitialized.  
    Public FirstOrder As String  
  
    ' Use the XmlIgnoreAttribute to ignore the   
    ' special field named "FirstOrderSpecified".  
    <System.Xml.Serialization.XmlIgnoreAttribute> _  
    Public FirstOrderSpecified As Boolean  
End Class  
```  
  
```csharp  
public class OptionalOrder  
{  
    // This field should not be serialized   
    // if it is uninitialized.  
    public string FirstOrder;  
  
    // Use the XmlIgnoreAttribute to ignore the   
    // special field named "FirstOrderSpecified".  
    [System.Xml.Serialization.XmlIgnoreAttribute]  
    public bool FirstOrderSpecified;  
}  
```  
  
## <a name="overriding-default-serialization"></a>Überschreiben der Standardserialisierung  
 Sie können auch die Serialisierung eines beliebigen Satzes von Objekten und ihrer Felder und Eigenschaften überschreiben, indem Sie eines der entsprechenden Attribute erstellen und es einer Instanz der <xref:System.Xml.Serialization.XmlAttributes>-Klasse hinzufügen. Das Überschreiben der Serialisierung auf diese Weise hat zwei Verwendungsmöglichkeiten: zuerst können Sie die Serialisierung von Objekten, die in einer DLL gefunden werden, Steuern und erweitern, auch wenn Sie keinen Zugriff auf die Quelle haben. Zweitens können Sie einen Satz serialisierbarer Klassen erstellen, die Objekte jedoch auf verschiedene Weise serialisieren. Weitere Informationen finden Sie in der <xref:System.Xml.Serialization.XmlAttributeOverrides>-Klasse und unter Gewusst [wie: Steuern der Serialisierung abgeleiteter Klassen](https://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84).  
  
 Zum Serialisieren eines Objekts wird die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode aufgerufen. Um ein Objekt zu deserialisieren, müssen Sie die <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>-Methode aufzurufen.  
  
 Informationen zum Hinzufügen von XML-Namespaces zu einem XML-Dokument finden Sie unter <xref:System.Xml.Serialization.XmlSerializerNamespaces>.  
  
> [!NOTE]
>  Der-<xref:System.Xml.Serialization.XmlSerializer> ermöglicht eine spezielle Behandlung von Klassen, die <xref:System.Collections.IEnumerable> oder <xref:System.Collections.ICollection>implementieren. Eine Klasse, die <xref:System.Collections.IEnumerable> implementiert, muss eine öffentliche `Add`-Methode mit einem einzigen Parameter implementieren. Der-Parameter der `Add`-Methode muss denselben Typ aufweisen wie der `Current`-Eigenschaft für den von `GetEnumerator`zurückgegebenen Wert oder einer der Basen dieses Typs. Eine Klasse, die <xref:System.Collections.ICollection> (z. b. <xref:System.Collections.CollectionBase>) zusätzlich zu <xref:System.Collections.IEnumerable> implementiert, muss über eine öffentliche `Item` indizierte Eigenschaft C#(Indexer in) verfügen, die eine ganze Zahl annimmt und eine öffentliche `Count`-Eigenschaft vom Typ "Integer" aufweisen muss. Der Parameter für die `Add`-Methode muss mit dem Typ übereinstimmen, der von der `Item`-Eigenschaft zurückgegeben wird, oder einer der Basen dieses Typs. Bei Klassen, die <xref:System.Collections.ICollection>implementieren, werden die zu serialisierenden Werte aus der indizierten `Item` Eigenschaft abgerufen, nicht durch den Aufruf von `GetEnumerator`.  
  
 Sie müssen über die Berechtigung zum Schreiben in das temporäre Verzeichnis (wie durch die Temp-Umgebungsvariable definiert) verfügen, um ein Objekt zu deserialisieren.  
  
## <a name="dynamically-generated-assemblies"></a>Dynamisch generierte Assemblys  
 Um die Leistung zu verbessern, generiert die XML-Serialisierungsinfrastruktur dynamisch Assemblys zum Serialisieren und Deserialisieren der angegebenen Typen. Die-Infrastruktur findet diese Assemblys und verwendet diese erneut. Dieses Verhalten tritt nur auf, wenn die folgenden Konstruktoren verwendet werden:  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%29?displayProperty=nameWithType>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>  
  
 Wenn Sie einen der anderen Konstruktoren verwenden, werden mehrere Versionen der gleichen Assembly generiert und nie entladen, was zu einem Speichermangel und einer schlechten Leistung führt. Die einfachste Lösung besteht darin, einen der zuvor erwähnten beiden Konstruktoren zu verwenden. Andernfalls müssen Sie die Assemblys in einem <xref:System.Collections.Hashtable>Zwischenspeichern, wie im folgenden Beispiel gezeigt.  
  
```csharp  
Hashtable serializers = new Hashtable();  
  
// Use the constructor that takes a type and XmlRootAttribute.  
XmlSerializer s = new XmlSerializer(typeof(MyClass), myRoot);  
  
// Implement a method named GenerateKey that creates unique keys   
// for each instance of the XmlSerializer. The code should take   
// into account all parameters passed to the XmlSerializer   
// constructor.  
object key = GenerateKey(typeof(MyClass), myRoot);  
  
// Check the local cache for a matching serializer.  
XmlSerializer ser = (XmlSerializer)serializers[key];  
if (ser == null)   
{  
    ser = new XmlSerializer(typeof(MyClass), myRoot);  
    // Cache the serializer.  
    serializers[key] = ser;  
}

// Use the serializer to serialize or deserialize.
```  
  
```vb  
Dim serializers As New Hashtable()  
  
' Use the constructor that takes a type and XmlRootAttribute.  
Dim s As New XmlSerializer(GetType([MyClass]), myRoot)  
  
' Implement a method named GenerateKey that creates unique keys   
' for each instance of the XmlSerializer. The code should take   
' into account all parameters passed to the XmlSerializer   
' constructor.  
Dim key As Object = GenerateKey(GetType([MyClass]), myRoot)  
  
' Check the local cache for a matching serializer.  
Dim ser As XmlSerializer = CType(serializers(key), XmlSerializer)  
  
If ser Is Nothing Then  
    ser = New XmlSerializer(GetType([MyClass]), myRoot)  
    ' Cache the serializer.  
    serializers(key) = ser  
End If  

' Use the serializer to serialize or deserialize.
```  
  
## <a name="serialization-of-arraylist-and-generic-list"></a>Serialisierung von ArrayList und generischer Liste  
 Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren oder Deserialisieren:  
  
-   Arrays von <xref:System.Collections.ArrayList>  
  
-   Arrays von <xref:System.Collections.Generic.List%601>  
  
## <a name="serialization-of-enumerations-of-unsigned-long"></a>Serialisierung von Enumerationen von "unsigned long"  
 Der <xref:System.Xml.Serialization.XmlSerializer> kann nicht instanziiert werden, um eine Enumeration zu serialisieren, wenn die folgenden Bedingungen zutreffen: die Enumeration ist vom Typ Ganzzahl ohne Vorzeichen Long C#(`ulong` in), und die-Enumeration enthält alle Elemente mit einem Wert, der größer als 9.223.372.036.854.775.807 ist. Beispielsweise kann Folgendes nicht serialisiert werden.  
  
```  
public enum LargeNumbers: ulong  
{  
    a = 9223372036854775808  
}  
// At runtime, the following code will fail.  
xmlSerializer mySerializer=new XmlSerializer(typeof(LargeNumbers));  
```  
  
## <a name="objects-marked-with-the-obsolete-attribute-no-longer-serialized"></a>Mit dem veralteten Attribut markierte Objekte werden nicht mehr serialisiert  
 In der [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] die <xref:System.Xml.Serialization.XmlSerializer>-Klasse keine Objekte mehr serialisiert, die als `[Obsolete]`markiert sind.  
  
   
  
## Examples  
 Das folgende Beispiel enthält zwei Hauptklassen: `PurchaseOrder` und `Test`. Die `PurchaseOrder`-Klasse enthält Informationen zu einem einzelnen Einkauf. Die `Test`-Klasse enthält die Methoden, die die Bestellung erstellen und die erstellte Bestellung lesen.  
  
 [!code-cpp[Classic XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist threadsicher.</threadsafe>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84">Gewusst wie: Steuern der Serialisierung abgeleiteter Klassen</related>
    <related type="Article" href="https://msdn.microsoft.com/library/90fda55c-7730-41e9-bc4b-6423a4b920af">&lt;DateTimeSerialization-&gt;Element</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d129d10c-3eb7-45d9-8098-5fa853825e47">&lt;xmlSerializer&gt;-Element</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Häufig definiert eine Anwendung mehrere Klassen, die vom <xref:System.Xml.Serialization.XmlSerializer> in ein einzelnes XML-Instanzdokument konvertiert werden. Allerdings darf der <xref:System.Xml.Serialization.XmlSerializer> nur einen Typ kennen: den Typ der Klasse, die das XML-Stamm Element darstellt. Der <xref:System.Xml.Serialization.XmlSerializer> serialisiert automatisch alle untergeordneten Klassen Instanzen. Ebenso ist nur der Typ des XML-Stamm Elements für die Deserialisierung erforderlich.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Xml.Serialization.XmlSerializer> erstellt, die ein Objekt mit dem Namen `Widget`serialisiert. Im Beispiel werden verschiedene Eigenschaften des-Objekts festgelegt, bevor die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode aufgerufen wird.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : System.Xml.Serialization.XmlTypeMapping -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer xmlTypeMapping" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping"><see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse mithilfe eines Objekts, das einen Typ einem anderen zuweist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird verwendet, um eine <xref:System.Xml.Serialization.XmlSerializer> zu erstellen, wenn Sie ein Objekt in eine SOAP-Nachricht serialisieren. Um die generierten SOAP-Nachrichten zu steuern, verwenden Sie die speziellen Attribute (beginnend mit dem Wort "SOAP"), die sich im <xref:System.Xml.Serialization>-Namespace befinden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert. Die Serialisierung der `GroupName`, `IgnoreThis` Felder und der Member der `GroupType`-Enumeration wird überschrieben. In der `CreateOverrideSerializer`-Methode wird ein <xref:System.Xml.Serialization.SoapAttributeOverrides>-Objekt erstellt, und für jeden überschriebenen Member oder diese Enumeration wird ein <xref:System.Xml.Serialization.SoapAttributes> Objekt mit dem entsprechenden Eigenschaften Satz erstellt und dem <xref:System.Xml.Serialization.SoapAttributeOverrides> Objekt hinzugefügt. Ein <xref:System.Xml.Serialization.XmlMapping>-Objekt wird mit dem <xref:System.Xml.Serialization.SoapAttributeOverrides>-Objekt erstellt, und dieses <xref:System.Xml.Serialization.XmlMapping>-Objekt wird verwendet, um die <xref:System.Xml.Serialization.XmlSerializer> zu erstellen, die die Standardserialisierung überschreibt.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
        <param name="defaultNamespace">Der für alle XML-Elemente zu verwendende Standardnamespace.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann. Gibt den Standardnamespace für alle XML-Elemente an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Xml.Serialization.XmlSerializer> erstellt, die ein Objekt mit dem Namen `Widget`serialisiert. Im Beispiel werden verschiedene Eigenschaften des-Objekts festgelegt, bevor die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode aufgerufen wird.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, Type[] extraTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type[] extraTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, cli::array &lt;Type ^&gt; ^ extraTypes);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * Type[] -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, extraTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
        <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in ein Objekt eines angegebenen Typs deserialisieren kann. Wenn eine Eigenschaft oder ein Feld ein Array zurückgibt, werden durch den <paramref name="extraTypes" />-Parameter die Objekte angegeben, die in das Array eingefügt werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine öffentliche Eigenschaft oder ein öffentliches Feld ein Objekt oder ein Array von Objekten zurückgibt, werden die Objekttypen standardmäßig automatisch serialisiert. Wenn eine Klasse jedoch ein Feld oder eine Eigenschaft enthält, die ein Array vom Typ <xref:System.Object>zurückgibt, kann jedes Objekt in dieses Array eingefügt werden. In diesem Fall muss der <xref:System.Xml.Serialization.XmlSerializer> angewiesen werden, alle möglichen Objekttypen zu erwarten, die in das <xref:System.Object> Array eingefügt werden. Verwenden Sie hierzu den `extraTypes`-Parameter, um die zusätzlichen Objekttypen anzugeben, die serialisiert oder deserialisiert werden sollen.  
  
 Sie können auch den `extraTypes`-Parameter verwenden, um Typen anzugeben, die von einer Basisklasse abgeleitet werden. Nehmen wir beispielsweise an, eine Basisklasse mit dem Namen `Phone` vorhanden, und eine Klasse mit dem Namen `InternationalPhone` wird davon abgeleitet. Verwenden Sie den `extraTypes`-Parameter, um auch den abgeleiteten Typ anzugeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer-Klasse serialisiert, die ein öffentliches Feld enthält, das ein Array von-Objekten zurückgibt. Der `extraTypes`-Parameter des <xref:System.Xml.Serialization.XmlSerializer> Konstruktors gibt die Typen der Objekte an, die im Array serialisiert werden können.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ des zu serialisierenden Objekts.</param>
        <param name="overrides">Eine <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `overrides`-Parameter kann verwendet werden, um zu steuern, wie Felder und Eigenschaften in XML codiert werden. Diese Einstellungen überschreiben alle Attribute, die bereits für die Objekte vorhanden sind. Dies kann hilfreich sein, wenn der Quellcode nicht geändert werden kann oder mehrere Codierungen für dieselben Klassen erforderlich sind.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer-Klasse, die in einer DLL definiert ist, serialisiert, und zu diesem Zweck werden die in der dll gefundenen öffentlichen Member überschrieben.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, root)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
        <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das das XML-Stammelement darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und ein XML-Dokument in ein Objekt des angegebenen Typs deserialisieren kann. Außerdem wird die als XML-Stammelement zu verwendende Klasse angegeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das root-Element eines XML-Dokuments schließt alle anderen-Elemente ein. Standardmäßig wird das vom `type`-Parameter angegebene Objekt als Stamm Element serialisiert. Eigenschaften, z. b. der XML-Elementname des Root-Elements, werden aus dem `type` Objekt entnommen. Mit dem `root`-Parameter können Sie jedoch die Informationen des Standard Objekts ersetzen, indem Sie eine <xref:System.Xml.Serialization.XmlRootAttribute>angeben; mit dem-Objekt können Sie einen anderen Namespace, Elementnamen usw. festlegen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Xml.Serialization.XmlSerializer> erstellt, die eine <xref:System.Xml.Serialization.XmlRootAttribute> verwendet, die verschiedene Eigenschaften des XML-Stamm Elements enthält, z. b. den Namespace und den Elementnamen.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
        <param name="overrides">Ein <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, das das Verhalten der im <paramref name="type" />-Parameter festgelegten Klasse erweitert oder überschreibt.</param>
        <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
        <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
        <param name="defaultNamespace">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte vom Typ <see cref="T:System.Object" /> in Instanzen eines XML-Dokuments serialisieren und Instanzen eines XML-Dokuments in Objekte vom Typ <see cref="T:System.Object" /> deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `overrides`-Parameter ermöglicht die Erstellung eines [XmlSerializer-Konstruktors (Type, XmlAttributeOverrides, Type\<Xref: System. Xml. Serialization. XmlSerializer >, der eine Klasse serialisiert, die das Verhalten einer Basisklasse erweitert oder überschreibt. Wenn beispielsweise eine DLL angegeben ist, kann eine Klasse erstellt werden, die eine in der DLL enthaltene Klasse erbt oder erweitert. Zum Serialisieren einer solchen Klasse müssen Sie eine Instanz des [XmlSerializer-Konstruktors (Type, XmlAttributeOverrides, Type\<Xref: System. Xml. Serialization. XmlAttributeOverrides > Klasse verwenden, wenn Sie den [XmlSerializer-Konstruktor erstellen. XmlAttributeOverrides geben Sie\<Xref: System. Xml. Serialization. XmlSerializer-> ein. Weitere Informationen finden Sie unter [XmlSerializer-Konstruktor (Type, XmlAttributeOverrides, Type\<Xref: System. Xml. Serialization. XmlAttributeOverrides >.  
  
 Wenn eine öffentliche Eigenschaft oder ein öffentliches Feld ein Objekt oder ein Array von Objekten zurückgibt, werden die Objekttypen standardmäßig automatisch serialisiert. Wenn eine Klasse jedoch ein Feld oder eine Eigenschaft enthält, die ein Array vom Typ [XmlSerializer-Konstruktor (Type, XmlAttributeOverrides, Type\<Xref: System. Object > zurückgibt, kann jedes beliebige Objekt in dieses Array eingefügt werden. In diesem Fall muss der [XmlSerializer-Konstruktor (Type, XmlAttributeOverrides, Type\<Xref: System. Xml. Serialization. XmlSerializer > angewiesen werden, alle möglichen Objekttypen zu erwarten, die in den [XmlSerializer-Konstruktor eingefügt werden ( Type, XmlAttributeOverrides, geben Sie\<Xref: System. Object > Array ein. Verwenden Sie hierzu den `extraTypes`-Parameter, um die zusätzlichen Objekttypen anzugeben, die serialisiert oder deserialisiert werden sollen.  
  
 Das root-Element eines XML-Dokuments schließt alle anderen-Elemente ein. Standardmäßig wird das vom `type`-Parameter angegebene Objekt als Stamm Element serialisiert. Eigenschaften, z. b. der XML-Elementname des Stamm Elements, werden aus dem `type` Objekt entnommen. Mit dem `root`-Parameter können Sie jedoch die Informationen des Standard Objekts ersetzen, indem Sie einen [XmlSerializer-Konstruktor (Type, XmlAttributeOverrides, Type\<Xref: System. Xml. Serialization. XmlRootAttribute > angeben; das Objekt ermöglicht Ihnen Folgendes: , um einen anderen Namespace, Elementnamen usw. festzulegen.  
  
 Verwenden Sie den `defaultName`-Parameter, um den Standard Namespace aller XML-Elemente anzugeben, die vom [XmlSerializer-Konstruktor (Type, XmlAttributeOverrides, Type\<Xref: System. Xml. Serialization. XmlSerializer > generiert werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer-Klasse, die in einer DLL definiert ist, serialisiert, und zu diesem Zweck werden die in der-Klasse gefundenen öffentlichen Member überschrieben. Das Beispiel gibt auch ein Array zusätzlicher Typen, den Standard Namespace für alle XML-Elemente und die zu verwendende Klasse an, die die XML-Stamm Element Informationen bereitstellt. Im Beispiel wird davon ausgegangen, dass der Code am Anfang in eine DLL mit dem Namen `HighSchool`kompiliert wurde.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="location" Type="System.String" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
        <param name="overrides">Ein <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, das das Verhalten der im <paramref name="type" />-Parameter festgelegten Klasse erweitert oder überschreibt.</param>
        <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
        <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
        <param name="defaultNamespace">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
        <param name="location">Der Speicherort der Typen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte vom Typ <see cref="T:System.Object" /> in Instanzen eines XML-Dokuments serialisieren und Instanzen eines XML-Dokuments in Objekte vom Typ <see cref="T:System.Object" /> deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See https://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="location" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
        <param name="overrides">Ein <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, das das Verhalten der im <paramref name="type" />-Parameter festgelegten Klasse erweitert oder überschreibt.</param>
        <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
        <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
        <param name="defaultNamespace">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
        <param name="location">Der Speicherort der Typen.</param>
        <param name="evidence">Eine Instanz der <see cref="T:System.Security.Policy.Evidence" />-Klasse, die Anmeldeinformationen für den Zugriff auf Typen enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in Instanzen von XML-Dokumenten serialisieren und Instanzen von XML-Dokumenten in Objekte des angegebenen Typs deserialisieren kann. Diese Überladung ermöglicht das Bereitstellen anderer Typen, die bei der Serialisierung oder Deserialisierung gefunden werden könnten, sowie eines Standardnamespaces für alle XML-Elemente, der Klasse, die als XML-Stammelement verwendet werden soll, ihres Speicherorts und der für den Zugriff erforderlichen Anmeldeinformationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ermöglicht eine präzisere Steuerung des Zugriffs auf ein temporäres Verzeichnis und verhindert die Code Injektion und-Ausnutzung. Wenn Sie diese Methode verwenden möchten, geben Sie einen Speicherort an, und geben Sie nur bestimmten Benutzern Zugriff. Administratoren können Richtlinien mit Beweis Listen einrichten, die den Beweisen für die Berechtigungen entsprechen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeserialize">
      <MemberSignature Language="C#" Value="public virtual bool CanDeserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDeserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDeserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="abstract member CanDeserialize : System.Xml.XmlReader -&gt; bool&#xA;override this.CanDeserialize : System.Xml.XmlReader -&gt; bool" Usage="xmlSerializer.CanDeserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Ein <see cref="T:System.Xml.XmlReader" />, der auf das zu deserialisierende Dokument zeigt.</param>
        <summary>Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein angegebenes XML-Dokument deserialisieren kann.</summary>
        <returns><see langword="true" />, wenn dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Objekt deserialisieren kann, auf das <see cref="T:System.Xml.XmlReader" /> zeigt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A>-Methode aufgerufen, um zu überprüfen, ob ein XML-Dokument deserialisiert werden kann.  
  
 [!code-cpp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="CreateReader">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationReader CreateReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationReader CreateReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateReader () As XmlSerializationReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationReader ^ CreateReader();" />
      <MemberSignature Language="F#" Value="abstract member CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader&#xA;override this.CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader" Usage="xmlSerializer.CreateReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Objekt zurück, das zum Lesen des zu serialisierenden XML-Dokuments verwendet wird.</summary>
        <returns>Ein zum Lesen des XML-Dokuments verwendeter <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWriter">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationWriter CreateWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationWriter CreateWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWriter () As XmlSerializationWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationWriter ^ CreateWriter();" />
      <MemberSignature Language="F#" Value="abstract member CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter&#xA;override this.CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter" Usage="xmlSerializer.CreateWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen Writer zurück, der zum Serialisieren des Objekts verwendet wird.</summary>
        <returns>Eine Instanz, die die <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />-Klasse implementiert.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserialisiert ein XML-Dokument.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.Stream -&gt; obj" Usage="xmlSerializer.Deserialize stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream">Der <see cref="T:System.IO.Stream" /> mit dem zu deserialisierenden XML-Dokument.</param>
        <summary>Deserialisiert das im angegebenen <see cref="T:System.IO.Stream" /> enthaltene XML-Dokument.</summary>
        <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der Deserialisierung wird ein XML-Dokument gelesen und ein Objekt erstellt, das stark in das XML-Schema (XSD) des Dokuments eingegeben wurde.  
  
 Vor der Deserialisierung muss ein <xref:System.Xml.Serialization.XmlSerializer> mit dem Typ des Objekts, das deserialisiert wird, erstellt werden.  
  
 Verwenden Sie den `stream`-Parameter, um ein Objekt anzugeben, das von der <xref:System.IO.Stream>-Klasse abgeleitet wird, die für das Schreiben in Streams konzipiert ist. Zu den Klassen, die von der <xref:System.IO.Stream> Klasse abgeleitet werden, gehören:  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht deserialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mithilfe eines <xref:System.IO.Stream>-Objekts deserialisiert.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.TextReader -&gt; obj" Usage="xmlSerializer.Deserialize textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="textReader">Der <see cref="T:System.IO.TextReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
        <summary>Deserialisiert das im angegebenen <see cref="T:System.IO.TextReader" /> enthaltene XML-Dokument.</summary>
        <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Deserialisierung ist das Lesen einer Instanz eines XML-Dokuments und das Erstellen eines Objekts, das stark in das XML-Schema (XSD) des Dokuments eingegeben wurde.  
  
 Vor der Deserialisierung muss ein <xref:System.Xml.Serialization.XmlSerializer> mit dem Typ des Objekts, das deserialisiert wird, erstellt werden.  
  
 Zu den Klassen, die von <xref:System.IO.TextReader> erben, gehören <xref:System.IO.StringReader> und <xref:System.IO.StreamReader>. Wenn Sie ein <xref:System.IO.StreamReader> verwenden, um ein Objekt zu deserialisieren, müssen Sie die <xref:System.IO.StreamReader> mit einem entsprechenden <xref:System.Text.Encoding>erstellen. Die vom XML-Dokument angegebene Codierung wird ignoriert.  
  
> [!NOTE]
>  Wenn Sie die im XML-Dokument angegebene Codierung verwenden möchten, verwenden Sie die <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>-Überladung, die stattdessen eine <xref:System.Xml.XmlReader> annimmt. Der <xref:System.Xml.XmlReader> erkennt und verwendet automatisch die vom XML-Dokument angegebene Codierung.  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht deserialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mithilfe eines <xref:System.IO.TextReader>-Objekts deserialisiert.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual object Deserialize (System.Xml.Serialization.XmlSerializationReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Deserialize(class System.Xml.Serialization.XmlSerializationReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Deserialize (reader As XmlSerializationReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Deserialize(System::Xml::Serialization::XmlSerializationReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj&#xA;override this.Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj" Usage="xmlSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.Serialization.XmlSerializationReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader">Der <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
        <summary>Deserialisiert das im angegebenen <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> enthaltene XML-Dokument.</summary>
        <returns>Das deserialisierte Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader -&gt; obj" Usage="xmlSerializer.Deserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
        <summary>Deserialisiert das im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltene XML-Dokument.</summary>
        <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Deserialisierung ist das Lesen einer Instanz eines XML-Dokuments und das Erstellen eines Objekts, das stark in das XML-Schema (XSD) des Dokuments eingegeben wurde.  
  
 Vor der Deserialisierung muss ein <xref:System.Xml.Serialization.XmlSerializer> mit dem Typ des Objekts, das deserialisiert wird, erstellt werden.  
  
 Der <xref:System.Xml.XmlReader> erkennt und verwendet automatisch die vom XML-Dokument angegebene Codierung.  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht deserialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mit einem-<xref:System.Xml.XmlReader>deserialisiert.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
        <param name="encodingStyle">Der Codierungsstil des serialisierten XML-Codes.</param>
        <summary>Deserialisiert das im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltene XML-Dokument anhand des angegebenen Codierungsstils.</summary>
        <returns>Das deserialisierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Deserialisierung ist das Lesen einer Instanz eines XML-Dokuments und das Erstellen eines Objekts, das stark in das XML-Schema (XSD) des Dokuments eingegeben wurde.  
  
 Vor der Deserialisierung muss ein <xref:System.Xml.Serialization.XmlSerializer> mit dem Typ des Objekts, das deserialisiert wird, erstellt werden.  
  
 Legen Sie für die Codierung der SOAP-Version 1,1 den `encodingStyle`-Parameter auf "<http://schemas.xmlsoap.org/soap/encoding/>" fest. Legen Sie Sie andernfalls auf "<http://www.w3.org/2001/12/soap-encoding>" für die SOAP-Codierung, Version 1,2, fest.  
  
 **Hinweis** Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht deserialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden Dokument.</param>
        <param name="events">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />-Klasse.</param>
        <summary>Deserialisiert ein im <see cref="T:System.Xml.XmlReader" /> enthaltenes XML-Dokument und ermöglicht das Überschreiben der Ereignisse, die während der Deserialisierung eintreten.</summary>
        <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Objekt, das deserialisiert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle, System.Xml.Serialization.XmlDeserializationEvents events);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle, System::Xml::Serialization::XmlDeserializationEvents events);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle, events)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Eine Instanz der <see cref="T:System.Xml.XmlReader" />-Klasse zum Lesen des Dokuments.</param>
        <param name="encodingStyle">Die verwendete Codierung.</param>
        <param name="events">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />-Klasse.</param>
        <summary>Deserialisiert das Objekt mit den im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltenen Daten.</summary>
        <returns>Das Objekt, das deserialisiert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nur für die Deserialisierung unbekannter Header für Webdienst Szenarios erforderlich. Diese Methode ermöglicht es Ihnen, die Ereignis Synchronisierung in Webdienst Methoden zu vermeiden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromMappings">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse aus den angegebenen Zuordnungen zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings mappings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="mappings">Ein Array von <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
        <summary>Gibt ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten zurück, das aus einem Array von <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekten erstellt wurde.</summary>
        <returns>Ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten.</returns>
        <remarks>Es wird empfohlen, dass Aufrufer den zurückgegebenen Serialisierer Zwischenspeichern, wenn wiederholte Aufrufe dieser Methode vorhanden sind.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See https://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mappings">Ein Array von <see cref="T:System.Xml.Serialization.XmlMapping" />-Objekten zum Zuordnen eines Typs zu einem anderen.</param>
        <param name="evidence">Eine Instanz der <see cref="T:System.Security.Policy.Evidence" />-Klasse, die Host- und Assemblydaten für das Richtliniensystem der Common Language Runtime enthält.</param>
        <summary>Gibt eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die aus Zuordnungen eines XML-Typs zu einem anderen erstellt wurde.</summary>
        <returns>Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * Type -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="mappings">Ein Array von <see cref="T:System.Xml.Serialization.XmlMapping" />-Objekten.</param>
        <param name="type">Der <see cref="T:System.Type" /> des deserialisierten Objekts.</param>
        <summary>Gibt eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse aus den angegebenen Zuordnungen zurück.</summary>
        <returns>Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypes">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromTypes (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromTypes(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTypes (types As Type()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromTypes(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="static member FromTypes : Type[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromTypes types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types">Ein Array von <see cref="T:System.Type" />-Objekten.</param>
        <summary>Gibt ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten zurück, das aus einem Array von Typen erstellt wurde.</summary>
        <returns>Ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A>-Methode ermöglicht es Ihnen, ein Array von <xref:System.Xml.Serialization.XmlSerializer> Objekten für die Verarbeitung eines Arrays von <xref:System.Type> Objekten effizient zu erstellen. Es wird jedoch empfohlen, dass Aufrufer die zurückgegebenen serialisierungsinitialisierer Zwischenspeichern, wenn wiederholte Aufrufe dieser Methode vorhanden sind.
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A>-Methode verwendet, um ein Array von <xref:System.Xml.Serialization.XmlSerializer>-Objekten zurückzugeben. Der Code enthält drei Klassendefinitionen, die jeweils zum Erstellen eines Arrays von <xref:System.Type>-Objekten verwendet werden.  
  
 [!code-cpp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Assembly zurück, die typisierte Serialisierungsprogramme enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der [XML Serializer Generator-Tool (Sgen. exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) erstellt eine XML-Serialisierungsassembly für Typen in einer angegebenen Assembly, um die Laufzeitleistung einer <xref:System.Xml.Serialization.XmlSerializer> zu verbessern, wenn Objekte der angegebenen Typen serialisiert oder deserialisiert werden. Verwenden Sie die <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A>, um den Namen einer solchen Assembly zurückzugeben.  
  
 Wenn Sie eine solche Assembly als Teil einer Client Anwendung, die einen Webdienst aufruft, verteilen, können Sie die <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> auf den Clienttyp anwenden, um den Speicherort und den Namen der Assembly anzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types">Eine Auflistung von Typen.</param>
        <param name="mappings">Eine Auflistung von <see cref="T:System.Xml.Serialization.XmlMapping" />-Objekten für das Konvertieren von einem Typ in einen anderen.</param>
        <summary>Gibt eine Assembly mit benutzerdefinierten Serialisierungsprogrammen zurück, die zum Serialisieren oder Deserialisieren des angegebenen Typs oder der angegebenen Typen unter Verwendung der angegebenen Zuordnungen verwendet werden.</summary>
        <returns>Ein <see cref="T:System.Reflection.Assembly" />-Objekt, das Serialisierungsprogramme für die angegebenen Typen und Zuordnungen enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings, System.CodeDom.Compiler.CompilerParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings, class System.CodeDom.Compiler.CompilerParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping(), parameters As CompilerParameters) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::CodeDom::Compiler::CompilerParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] * System.CodeDom.Compiler.CompilerParameters -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.CodeDom.Compiler.CompilerParameters" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types">Ein Array vom Typ <see cref="T:System.Type" />, das Objekte zur Serialisierung und Deserialisierung von Daten enthält.</param>
        <param name="mappings">Ein Array vom Typ <see cref="T:System.Xml.Serialization.XmlMapping" />, das den Typdaten die XML-Daten zuordnet.</param>
        <param name="parameters">Eine Instanz der <see cref="T:System.CodeDom.Compiler.CompilerParameters" />-Klasse, die die Parameter für das Aufrufen eines Compilers darstellt.</param>
        <summary>Gibt eine Assembly mit benutzerdefinierten Serialisierungsprogrammen zurück, die zum Serialisieren oder Deserialisieren des angegebenen Typs oder der angegebenen Typen unter Verwendung der angegebenen Zuordnungen und der Compilereinstellungen und -optionen verwendet werden.</summary>
        <returns>Eine <see cref="T:System.Reflection.Assembly" />, die spezielle Versionen des <see cref="T:System.Xml.Serialization.XmlSerializer" /> enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlSerializerAssemblyName">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den Namen der Assembly zurück, die eine oder mehrere Versionen des <see cref="T:System.Xml.Serialization.XmlSerializer" /> enthält, die für das Serialisieren oder Deserialisieren bestimmter Typen erstellt wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der [XML Serializer Generator-Tool (Sgen. exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) erstellt eine XML-Serialisierungsassembly für Typen in einer angegebenen Assembly, um die Laufzeitleistung einer <xref:System.Xml.Serialization.XmlSerializer> zu verbessern, wenn Objekte der angegebenen Typen serialisiert oder deserialisiert werden. Verwenden Sie die <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A>, um den Namen einer solchen Assembly zurückzugeben.  
  
 Wenn Sie eine solche Assembly als Teil einer Client Anwendung, die einen Webdienst aufruft, verteilen, können Sie die <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> auf den Clienttyp anwenden, um den Speicherort und den Namen der Assembly anzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type">Der <see cref="T:System.Type" />, der deserialisiert wird.</param>
        <summary>Gibt den Namen der Assembly zurück, die eine oder mehrere Versionen des <see cref="T:System.Xml.Serialization.XmlSerializer" /> enthält, die für das Serialisieren oder Deserialisieren des angegebenen Typs erstellt wurden.</summary>
        <returns>Der Name der Assembly, die einen <see cref="T:System.Xml.Serialization.XmlSerializer" /> für den Typ enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der [XML Serializer Generator-Tool (Sgen. exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) erstellt eine XML-Serialisierungsassembly für Typen in einer angegebenen Assembly, um die Laufzeitleistung einer <xref:System.Xml.Serialization.XmlSerializer> zu verbessern, wenn Objekte der angegebenen Typen serialisiert oder deserialisiert werden. Verwenden Sie die <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A>, um den Namen einer solchen Assembly zurückzugeben.  
  
 Wenn Sie eine solche Assembly als Teil einer Client Anwendung, die einen Webdienst aufruft, verteilen, können Sie die <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> auf den Clienttyp anwenden, um den Speicherort und den Namen der Assembly anzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type * string -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type">Das gesuchte <see cref="T:System.Type" />.</param>
        <param name="defaultNamespace">Der Namespace des Typs.</param>
        <summary>Gibt den Namen der Assembly zurück, die das Serialisierungsprogramm für den angegebenen Typ im angegebenen Namespace enthält.</summary>
        <returns>Der Name der Assembly, die für spezielle Zwecke erstellte Serialisierungsprogramme enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der [XML Serializer Generator-Tool (Sgen. exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) erstellt eine XML-Serialisierungsassembly für Typen in einer angegebenen Assembly, um die Laufzeitleistung einer <xref:System.Xml.Serialization.XmlSerializer> zu verbessern, wenn Objekte der angegebenen Typen serialisiert oder deserialisiert werden. Verwenden Sie die <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A>, um den Namen einer solchen Assembly zurückzugeben.  
  
 Wenn Sie eine solche Assembly als Teil einer Client Anwendung, die einen Webdienst aufruft, verteilen, können Sie die <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> auf den Clienttyp anwenden, um den Speicherort und den Namen der Assembly anzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Serialisiert ein Objekt in ein XML-Dokument.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="xmlSerializer.Serialize (stream, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.Stream" />.</param>
        <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.IO.Stream" /> in eine Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode konvertiert die öffentlichen Felder und die Lese-/Schreibeigenschaften eines Objekts in XML. Methoden, Indexer, private Felder oder schreibgeschützte Eigenschaften werden nicht konvertiert. Um alle Felder und Eigenschaften eines Objekts sowohl öffentlich als auch privat zu serialisieren, verwenden Sie die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Geben Sie im `stream`-Parameter ein Objekt an, das von der abstrakten <xref:System.IO.Stream>-Klasse abgeleitet wird. Zu den Klassen, die von <xref:System.IO.Stream> abgeleitet werden, gehören:  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mithilfe eines <xref:System.IO.Stream>-Objekts serialisiert.  
  
 [!code-cpp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="textWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
        <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.IO.TextWriter" /> in eine Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode konvertiert die öffentlichen Felder und die Lese-/Schreibeigenschaften eines Objekts in XML. Methoden, Indexer, private Felder oder schreibgeschützte Eigenschaften werden nicht konvertiert. Um alle Felder und Eigenschaften eines Objekts zu serialisieren (öffentlich und privat), verwenden Sie die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Geben Sie im `textWriter`-Parameter ein Objekt an, das von der abstrakten <xref:System.IO.TextWriter>-Klasse abgeleitet wird. Zu den Klassen, die von <xref:System.IO.TextWriter> abgeleitet werden, gehören:  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mit einem-<xref:System.IO.TextWriter>serialisiert.  
  
 [!code-cpp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (object o, System.Xml.Serialization.XmlSerializationWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(object o, class System.Xml.Serialization.XmlSerializationWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (o As Object, writer As XmlSerializationWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Object ^ o, System::Xml::Serialization::XmlSerializationWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit&#xA;override this.Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit" Usage="xmlSerializer.Serialize (o, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="writer" Type="System.Xml.Serialization.XmlSerializationWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
        <param name="writer">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> in eine Datei.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode konvertiert die öffentlichen Felder und die Lese-/Schreibeigenschaften eines Objekts in XML. Methoden, Indexer, private Felder oder schreibgeschützte Eigenschaften werden nicht konvertiert. Um alle Felder und Eigenschaften eines Objekts zu serialisieren (öffentlich und privat), verwenden Sie die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Geben Sie im `xmlWriter`-Parameter ein Objekt an, das von der abstrakten <xref:System.Xml.XmlWriter>-Klasse abgeleitet wird. Die <xref:System.Xml.XmlTextWriter> wird vom <xref:System.Xml.XmlWriter>abgeleitet.  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mit einem-<xref:System.Xml.XmlWriter>serialisiert.  
  
 [!code-cpp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (stream, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.Stream" />.</param>
        <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
        <param name="namespaces">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.IO.Stream" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode aufgerufen wird, werden die öffentlichen Felder und die Lese-/Schreibeigenschaften eines Objekts in XML konvertiert. Methoden, Indexer, private Felder und schreibgeschützte Eigenschaften werden nicht serialisiert. Verwenden Sie die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, um alle Felder und Eigenschaften sowohl öffentlich als auch privat zu serialisieren.  
  
 Verwenden Sie den `stream`-Parameter, um ein Objekt anzugeben, das von der abstrakten <xref:System.IO.Stream>-Klasse abgeleitet wird, die für das Schreiben in Streams konzipiert ist. Zu den Klassen, die von der <xref:System.IO.Stream> Klasse abgeleitet werden, gehören:  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mit einem <xref:System.IO.Stream>-Objekt serialisiert. Im Beispiel wird auch eine <xref:System.Xml.Serialization.XmlSerializerNamespaces> erstellt, und dem-Objekt werden zwei Namespaces hinzugefügt. Die Klasse, die das serialisierte Objekt definiert, wird auch <xref:System.Xml.Serialization.XmlElementAttribute> Attributen zugeordnet, um den Namespace für jedes Element anzugeben.  
  
 [!code-cpp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="textWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
        <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
        <param name="namespaces">Das <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, das die Namespaces für das generierte XML-Dokument enthält.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode aufgerufen wird, werden die öffentlichen Felder und die Lese-/Schreibeigenschaften eines Objekts in XML konvertiert. Methoden, Indexer, private Felder und schreibgeschützte Eigenschaften werden nicht serialisiert. Verwenden Sie die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, um alle Felder und Eigenschaften sowohl öffentlich als auch privat zu serialisieren.  
  
 Verwenden Sie den `textWriter`-Parameter, um ein Objekt anzugeben, das von der abstrakten <xref:System.IO.TextWriter> Klasse abgeleitet wird. Folgende Klassen werden von <xref:System.IO.TextWriter>-Klasse abgeleitet:  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mit einem-<xref:System.IO.TextWriter>serialisiert. Im Beispiel wird außerdem ein <xref:System.Xml.Serialization.XmlSerializerNamespaces>-Objekt erstellt, und dem-Objekt werden zwei Namespaces hinzugefügt. Die Klasse, die das serialisierte Objekt definiert, wird auch <xref:System.Xml.Serialization.XmlElementAttribute> Attributen zugeordnet, um den Namespace für jedes Element anzugeben.  
  
 [!code-cpp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
        <param name="namespaces">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode aufgerufen wird, werden die öffentlichen Felder und die Lese-/Schreibeigenschaften eines Objekts in XML konvertiert. Methoden, Indexer, private Felder und schreibgeschützte Eigenschaften werden nicht serialisiert. Verwenden Sie die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, um alle Felder und Eigenschaften sowohl öffentlich als auch privat zu serialisieren.  
  
 Verwenden Sie den `xmlWriter`-Parameter, um ein Objekt anzugeben, das von der abstrakten <xref:System.Xml.XmlWriter>-Klasse abgeleitet ist, die zum Schreiben von XML-Dokumenten entworfen wurde. Die <xref:System.Xml.XmlTextWriter> wird vom <xref:System.Xml.XmlWriter>abgeleitet.  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Objekt mit einem-<xref:System.Xml.XmlWriter>serialisiert. Im Beispiel wird auch eine <xref:System.Xml.Serialization.XmlSerializerNamespaces> erstellt, und dem-Objekt werden zwei Namespaces hinzugefügt. Mehrere Instanzen der <xref:System.Xml.Serialization.XmlElementAttribute>-Klasse werden auf die Klassenmember angewendet, um den Namespace für jedes Element anzugeben.  
  
 [!code-cpp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="o">Das zu serialisierende Objekt.</param>
        <param name="namespaces">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
        <param name="encodingStyle">Der Codierungsstil des serialisierten XML-Codes.</param>
        <summary>Serialisiert das angegebene Objekt und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei, wobei auf die angegebenen Namespaces und den Codierungsstil verwiesen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>-Methode aufgerufen wird, werden die öffentlichen Felder und die Lese-/Schreibeigenschaften eines Objekts in XML konvertiert. Methoden, Indexer, private Felder und schreibgeschützte Eigenschaften werden nicht serialisiert. Verwenden Sie die <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, um alle Felder und Eigenschaften sowohl öffentlich als auch privat zu serialisieren.  
  
 Verwenden Sie den `xmlWriter`-Parameter, um ein Objekt anzugeben, das von der abstrakten <xref:System.Xml.XmlWriter>-Klasse abgeleitet ist, die zum Schreiben von XML-Dokumenten entworfen wurde. Die <xref:System.Xml.XmlTextWriter> wird vom <xref:System.Xml.XmlWriter>abgeleitet.  
  
 Legen Sie für die Codierung der SOAP-Version 1,1 den `encodingStyle`-Parameter auf "http://schemas.xmlsoap.org/soap/encoding/" fest. Legen Sie Sie andernfalls auf "http://www.w3.org/2001/12/soap-encoding" für die SOAP-Codierung, Version 1,2, fest.  
  
> [!NOTE]
>  Der <xref:System.Xml.Serialization.XmlSerializer> kann Folgendes nicht serialisieren: Arrays von <xref:System.Collections.ArrayList> und Arrays von <xref:System.Collections.Generic.List%601>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="id" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="o">Das zu serialisierende Objekt.</param>
        <param name="namespaces">Eine Instanz von <see langword="XmlSerializerNamespaces" />, die die zu verwendenden Namespaces und Präfixe enthält.</param>
        <param name="encodingStyle">Die im Dokument verwendete Codierung.</param>
        <param name="id">Bei SOAP-codierten Meldungen die Basis für das Generieren von ID-Attributen.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />, des angegebenen XML-Namespaces und der angegebenen Codierung in eine Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der *ID* -Parameter gibt die Basis Zeichenfolge zum Erstellen von SOAP-IDs an. Standardmäßig lauten diese "id1", "id2" usw. Wenn der-Parameter jedoch auf "MyBase" festgelegt ist, lauten die generierten Werte "myBaseid1", "myBaseid2" usw. Diese Funktion wird verwendet, um eindeutige ID-Werte in der gesamten SOAP-Nachricht zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownAttribute">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownAttribute As XmlAttributeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlAttributeEventHandler ^ UnknownAttribute;" />
      <MemberSignature Language="F#" Value="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " Usage="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf ein XML-Attribut von unbekanntem Typ stößt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ignoriert das <xref:System.Xml.Serialization.XmlSerializer> XML-Attribute unbekannter Typen, nachdem die <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>-Methode aufgerufen wurde. Allerdings können Sie dieses Ereignis verwenden, um solche Knoten Typen zu behandeln.  
  
 Wenn die Instanz der zu deserialisierenden Klasse ein Feld enthält, das ein Array von <xref:System.Xml.XmlAttribute> Objekten zurückgibt, und ein <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> auf das Feld angewendet wurde, tritt das <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> Ereignis nicht auf. Stattdessen werden alle unbekannten XML-Attribute im Array gesammelt.  
  
   
  
## Examples  
 Im folgenden Beispiel werden Informationen zu allen unbekannten Attributen ausgegeben, die beim Deserialisieren eines XML-Dokuments aufgetreten sind.  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="UnknownElement">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlElementEventHandler UnknownElement;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlElementEventHandler UnknownElement" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownElement As XmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlElementEventHandler ^ UnknownElement;" />
      <MemberSignature Language="F#" Value="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " Usage="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf ein XML-Element von unbekanntem Typ stößt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ignoriert das <xref:System.Xml.Serialization.XmlSerializer> XML-Attribute unbekannter Typen, nachdem die <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>-Methode aufgerufen wurde. Allerdings können Sie dieses Ereignis verwenden, um solche Knoten Typen zu behandeln.  
  
> [!NOTE]
>  Wenn die <xref:System.Xml.Serialization.XmlAnyElementAttribute> auf ein Feld angewendet wird, das ein Array von <xref:System.Xml.XmlElement> Objekten zurückgibt, werden alle unbekannten Elemente im Array gesammelt. In diesem Fall tritt das <xref:System.Xml.Serialization.XmlSerializer.UnknownElement>-Ereignis nicht auf.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group` aus einer Datei mit dem Namen UnknownElements. XML deserialisiert. Wenn ein Element in der Datei gefunden wird, das über keinen entsprechenden Member in der Klasse verfügt, tritt das <xref:System.Xml.Serialization.XmlSerializer.UnknownElement>-Ereignis auf. Fügen Sie den folgenden XML-Code in eine Datei mit dem Namen "UnknownElements. xml" ein, um das Beispiel zu testen.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="UnknownNode">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlNodeEventHandler UnknownNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlNodeEventHandler UnknownNode" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownNode As XmlNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlNodeEventHandler ^ UnknownNode;" />
      <MemberSignature Language="F#" Value="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " Usage="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf einen XML-Knoten von unbekanntem Typ stößt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach dem Aufruf der <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>-Methode ignoriert der <xref:System.Xml.Serialization.XmlSerializer> XML-Knoten unbekannter Typen standardmäßig. Allerdings können Sie dieses Ereignis verwenden, um solche Knoten Typen zu behandeln.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Typ eines beliebigen unbekannten Knotens ausgegeben.  
  
 [!code-cpp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="UnreferencedObject">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnreferencedObject As UnreferencedObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::UnreferencedObjectEventHandler ^ UnreferencedObject;" />
      <MemberSignature Language="F#" Value="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " Usage="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.UnreferencedObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während der Deserialisierung eines SOAP-codierten XML-Streams ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> auf einen bekannten Typ stößt, der nicht verwendet wird oder auf den nicht verwiesen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> Ereignis tritt nur auf, wenn die <xref:System.Xml.Serialization.XmlSerializer> verwendet wird, um ein XML-Dokument zu deserialisieren, das eine SOAP-Nachricht enthält, die Abschnitt 5 des World Wide Web Consortium Dokuments, [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/), entspricht.  
  
 Dokumente, die Abschnitt 5 entsprechen, weisen ein spezielles Format auf. Ein solches Dokument enthält zumindest den Haupttext der SOAP-Nachricht. Allerdings können einige Typdefinitionen als Verweise auf Elemente der obersten Ebene im Dokument codiert werden, anstatt alle Typen Inline im Dokument definieren zu müssen. Folglich muss für jedes Element, das im Haupttext vorhanden ist, bei dem es sich um einen Verweis handelt, ein entsprechendes-Element vorhanden sein, das die Typdefinition enthält. Um das verweisende Element und die Typdefinition zu korrelieren, verfügt die Typdefinition über ein `id` Attribut, das auf eine eindeutige Zeichen folgen-ID festgelegt ist, und das verweisende Element verfügt über ein `href` Attribut, das auf dieselbe ID verweist.  
  
```  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" GroupNumber="ZDI=" CreationDate="2002-05-02" xmlns:n1="http:'www.cpandl.com">  
    <PosInt xsi:type="xsd:nonNegativeInteger">10000</PosInt>  
    <GroupVehicle href="#id2" />  
  </Group>  
  <Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
```  
  
 Das <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> Ereignis tritt auf, wenn im Dokument eine Typdefinition vorhanden ist, aber kein Parameter im Haupttext darauf verweist. Wenn das Ereignis auftritt, können Sie den XML-Typ des Objekts, auf das nicht verwiesen wird, abrufen, indem Sie die <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A>-Eigenschaft der <xref:System.Xml.Serialization.UnreferencedObjectEventArgs>-Klasse untersuchen. Die XML-ID des Objekts wird von der <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A>-Eigenschaft zurückgegeben.  
  
 Das <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> Ereignis sollte nicht mit dem <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> und <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> Ereignissen verwechselt werden, die auftreten, wenn kein Klassenmember vorhanden ist, der dem XML-Knoten oder-Elementtyp entspricht.  
  
   
  
## Examples  
 Im folgenden Beispiel wird einer <xref:System.Xml.Serialization.XmlSerializer>ein <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> hinzugefügt. Das Ereignis wird von der `Serializer``_``UnreferencedObject`-Methode behandelt. Um das Beispiel auszuführen, schneiden Sie den folgenden XML-Code aus, und fügen Sie ihn in eine Datei namens "UnrefObj. xml" ein.  
  
```  
<wrapper>  
  <Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" xmlns:n1="http://www.cpandl.com">  
   </Group>  
<Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">ABCD</licenseNumber>  
  </Vehicle>  
<Vehicle id="id3" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
</wrapper>  
```  
  
 [!code-cpp[UnreferencedObject Event Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/UnreferencedObject Event Example/CPP/unrefobj.cpp#1)]
 [!code-csharp[UnreferencedObject Event Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/UnreferencedObject Event Example/CS/unrefobj.cs#1)]
 [!code-vb[UnreferencedObject Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/UnreferencedObject Event Example/VB/unrefobj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
      </Docs>
    </Member>
  </Members>
</Type>
