<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13e579faca401274b8a66994712d16f618265d9c" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400315" /></Metadata><TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayItemAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Attribut dar, das die abgeleiteten Typen angibt, welche der <see cref="T:System.Xml.Serialization.XmlSerializer" /> in ein serialisiertes Array einfügen kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Xml.Serialization.XmlArrayItemAttribute> gehört zu einer Reihe von Attributen, die Steuern, wie das <xref:System.Xml.Serialization.XmlSerializer> ein Objekt serialisiert oder deserialisiert. Eine umfassende Liste mit ähnlichen Attributen finden Sie unter [Attribute, die die XML-Serialisierung steuern](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Sie können den <xref:System.Xml.Serialization.XmlArrayItemAttribute> auf jeden öffentlichen Lese-/Schreibmember anwenden, der ein Array zurückgibt, oder auf einen zugreifen. Beispielsweise ein Feld, das ein Array von-Objekten, eine Auflistung, eine <xref:System.Collections.ArrayList>oder eine beliebige Klasse zurückgibt, die die <xref:System.Collections.IEnumerable>-Schnittstelle implementiert.  
  
 Der <xref:System.Xml.Serialization.XmlArrayItemAttribute> unterstützt Polymorphie, d. h. er ermöglicht es dem <xref:System.Xml.Serialization.XmlSerializer>, einem Array abgeleitete Objekte hinzuzufügen. Angenommen, eine Klasse mit dem Namen `Mammal` wird von einer Basisklasse mit dem Namen `Animal`abgeleitet. Angenommen, eine Klasse mit dem Namen `MyAnimals` enthält ein Feld, das ein Array von `Animal` Objekten zurückgibt. Damit der <xref:System.Xml.Serialization.XmlSerializer> sowohl den `Animal` als auch `Mammal` Typ serialisieren kann, wenden Sie das <xref:System.Xml.Serialization.XmlArrayItemAttribute> zweimal auf das Feld an, und geben Sie dabei jedes Mal einen der beiden zulässigen Typen an.  
  
> [!NOTE]
>  Sie können mehrere Instanzen der <xref:System.Xml.Serialization.XmlArrayItemAttribute> oder <xref:System.Xml.Serialization.XmlElementAttribute> anwenden, um Typen von Objekten anzugeben, die in das Array eingefügt werden können.  
  
> [!NOTE]
>  Die Serialisierung eines Felds oder einer Eigenschaft, die eine Schnittstelle oder ein Array von Schnittstellen zurückgibt, wird nicht unterstützt.  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Sie können das Wort `XmlArrayItem` in Ihrem Code verwenden, anstatt das längere <xref:System.Xml.Serialization.XmlArrayItemAttribute>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group` serialisiert, die ein Feld mit dem Namen `Employees` enthält, das ein Array von `Employee` Objekten zurückgibt. Im Beispiel wird das-<xref:System.Xml.Serialization.XmlArrayItemAttribute> auf das-Feld angewendet. Dadurch wird die <xref:System.Xml.Serialization.XmlSerializer> angewiesen, dass Sie Objekte vom Typ der Basisklasse (`Employee`) und vom abgeleiteten Klassentyp (`Manager`) in das serialisierte Array einfügen können.  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Einführung in die XML-Serialisierung</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Gewusst wie: Angeben eines alternativen Elementnamens für einen XML-Stream</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Steuern der XML-Serialisierung mit Attributen</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Beispiele für die XML-Serialisierung</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition-Tool (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `MyVehicles` enthält, das ein Array von `Vehicle` Objekten zurückgibt. Im Beispiel wird das-<xref:System.Xml.Serialization.XmlArrayItemAttribute> auf das-Feld angewendet, sodass der <xref:System.Xml.Serialization.XmlSerializer> Instanzen der `Car`-Klasse, die von der `Vehicle`-Klasse abgeleitet ist, in das-Array einfügen kann.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Der Name des XML-Elements.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den Namen des im XML-Dokument generierten XML-Elements an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Überladung wird die <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>-Eigenschaft festgelegt.  
  
 Verwenden Sie diese Überladung, wenn Sie möchten, dass der Name des generierten XML-Elements vom Bezeichner des Elements abweicht.  
  
 Ein XML-Dokument, das Namespaces enthält, kann mehr als eine Version eines Element namens enthalten. Ausführliche Informationen finden Sie unter der <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `MyVehicles` enthält, das ein Array von `Vehicle` Objekten zurückgibt. Im Beispiel wird das-<xref:System.Xml.Serialization.XmlArrayItemAttribute> auf das-Feld angewendet, sodass der <xref:System.Xml.Serialization.XmlSerializer> Instanzen der `Car`-Klasse, die von der `Vehicle`-Klasse abgeleitet ist, in das-Array einfügen kann. Beim Anwenden des-Attributs wird im Beispiel die <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>-Eigenschaft mithilfe des `elementName`-Parameters festgelegt.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der <see cref="T:System.Type" /> des zu serialisierenden Objekts.</param>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den <see cref="T:System.Type" /> an, der in das serialisierte Array eingefügt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `MyVehicles` enthält, das ein Array von `Vehicle` Objekten zurückgibt. Im Beispiel wird das-<xref:System.Xml.Serialization.XmlArrayItemAttribute> auf das-Feld angewendet, sodass der <xref:System.Xml.Serialization.XmlSerializer> Instanzen der `Car`-Klasse, die von der `Vehicle`-Klasse abgeleitet ist, in das-Array einfügen kann. Beim Anwenden des-Attributs wird im Beispiel die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>-Eigenschaft mithilfe des `type`-Parameters festgelegt.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string * Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">Der Name des XML-Elements.</param>
        <param name="type">Der <see cref="T:System.Type" /> des zu serialisierenden Objekts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den Namen des im XML-Dokument generierten XML-Elements sowie den <see cref="T:System.Type" /> an, der in das generierte XML-Dokument eingefügt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung legt die <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> und die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> Eigenschaften fest.  
  
 Verwenden Sie diese Überladung, wenn Sie möchten, dass der Name des generierten XML-Elements vom Bezeichner des Elements abweicht.  
  
 Ein XML-Dokument, das Namespaces enthält, kann mehr als eine Version eines Element namens enthalten. Ausführliche Informationen finden Sie unter der <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `MyVehicles` enthält, das ein Array von `Vehicle` Objekten zurückgibt. Im Beispiel wird das-<xref:System.Xml.Serialization.XmlArrayItemAttribute> auf das-Feld angewendet, sodass der <xref:System.Xml.Serialization.XmlSerializer> Instanzen der `Car`-Klasse, die von der `Vehicle`-Klasse abgeleitet ist, in das-Array einfügen kann. Beim Anwenden des-Attributs wird im Beispiel die <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>-Eigenschaft mithilfe des `elementName`-Parameters und der <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>-Eigenschaft mithilfe des `type`-Parameters festgelegt.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den XML-Datentyp des generierten XML-Elements ab oder legt diesen fest.</summary>
        <value>Ein XSD-Datentyp (XML Schema Definition).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle sind die einfachen XML-Schema Datentypen mit ihren .NET-Entsprechungen aufgelistet.  
  
 Verwenden Sie für die Datentypen XML Schema `base64Binary` und `hexBinary` ein Array von <xref:System.Byte> Objekten, und wenden Sie ein <xref:System.Xml.Serialization.XmlArrayItemAttribute> mit der <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>-Eigenschaft entsprechend auf "base64Binary" oder "hexBinary" an. Verwenden Sie für die Datentypen XML Schema `time` und `date` den <xref:System.DateTime> Typ, und wenden Sie die <xref:System.Xml.Serialization.XmlArrayItemAttribute> mit der <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> auf "Date" oder "Time" an.  
  
 Wenden Sie für jeden XML-Schematyp, der einer Zeichenfolge zugeordnet ist, den <xref:System.Xml.Serialization.XmlArrayItemAttribute> mit dessen <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>-Eigenschaft auf den XML-Schematyp festgelegt. Dadurch wird jedoch nicht das Serialisierungsformat geändert, sondern nur das Schema für den Member.  
  
> [!NOTE]
>  Bei der-Eigenschaft wird die Groß-/Kleinschreibung beachtet, sodass Sie Sie genau auf einen der XML-Schema Datentypen festlegen müssen.  
  
> [!NOTE]
>  Das übergeben von Binärdaten als XML-Element ist effizienter und übergibt es dann als XML-Attribut.  
  
 Weitere Informationen zu XML-Schema Datentypen finden Sie im World Wide Web Consortium Document [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).  
  
|XSD-Datentyp|.NET-Datentyp|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Array von <xref:System.Byte> Objekten|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|Kleinstunternehmen|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Array von <xref:System.Byte> Objekten|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|Ganze Zahl|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativinfo|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonpositivinteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|Uhrzeit|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `PurchaseOrder`serialisiert. Mehrere Instanzen der <xref:System.Xml.Serialization.XmlArrayItemAttribute>-Klasse werden auf drei Elemente angewendet, und die <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>-Eigenschaft für jede Instanz wird auf einen Typ festgelegt, der im Array zulässig ist.  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</summary>
        <value>Der Name des generierten XML-Elements. Der Standardwert ist der Memberbezeichner.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie eine <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> an, wenn der Name des generierten XML-Elements vom Bezeichner des Elements abweichen soll.  
  
 Sie können denselben <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> Wert auf mehr als einen Klassenmember festlegen, wenn das generierte XML-Dokument XML-Namespaces verwendet, um zwischen identisch benannten Membern zu unterscheiden. Ausführliche Informationen zur Verwendung von Namespaces und Präfixen Namen im XML-Dokument finden Sie in der <xref:System.Xml.Serialization.XmlSerializerNamespaces>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>-Eigenschaft für die `Vehicle`-und `Car`-Klasse festgelegt. Dadurch werden die Namen von XML-Elementen geändert, die von der <xref:System.Xml.Serialization.XmlSerializer> für diese Klassen generiert werden.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Name des generierten XML-Elements gekennzeichnet ist, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Die Standardeinstellung ist <see langword="XmlSchemaForm.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>-Eigenschaft bestimmt basierend auf den World Wide Web Consortium Spezifikations [Namespaces in XML](https://www.w3.org/TR/xml-names/), ob ein XML-Elementname qualifiziert ist.  
  
 Wenn die <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>-Eigenschaft auf einen beliebigen Wert festgelegt ist, wird beim Versuch, die <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>-Eigenschaft auf `XmlSchemaForm.Unqualified` festzulegen, eine Ausnahme ausgelöst.  
  
 Der Standardwert `XmlSchemaForm.None`weist den <xref:System.Xml.Serialization.XmlSerializer> an, das Schema für das XML-Dokument zu überprüfen, um zu bestimmen, ob der Namespace qualifiziert ist. Für-Elemente prüft der <xref:System.Xml.Serialization.XmlSerializer> den Wert des Schema Element Attributs `elementFormDefault`. Bei Attributen wird der Wert des Schema Element Attributs `attributeFormDefault`überprüft. Das folgende XML-Schema gibt beispielsweise an, dass das `Name`-Element qualifiziert ist, während das `Number`-Element nicht qualifiziert ist.  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>-Eigenschaft für die `Vehicle`-Klasse auf `XmlSchemaForm.Unqualified`und die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>-Eigenschaft für die `Car`-Klasse auf `XmlSchemaForm.Qualified`festgelegt.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Die <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />-Eigenschaft wird auf <see langword="XmlSchemaForm.Unqualified" /> festgelegt, und es wird ein <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />-Wert angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member als leeres XML-Tag, bei dem das <see langword="xsi:nil" />-Attribut auf <see langword="true" /> festgelegt ist, serialisieren muss, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />, und es wird keine Instanz generiert. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die XML-Schema Spezifikation für Strukturen ermöglicht einem XML-Dokument, explizit zu signalisieren, dass der Inhalt eines Elements fehlt. Ein solches Element enthält das-Attribut, `xsi:nil` auf `true`festgelegt ist. Weitere Informationen finden Sie in der World Wide Web Consortium Spezifikation mit dem Titel " [XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/)".  
  
 Wenn die <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>-Eigenschaft `true`ist, wird das `xsi:nil`-Attribut für Klassenmember generiert, die auf `null`festgelegt wurden. Wenn Sie z. b. ein Feld mit dem Namen `MyStringArray` auf `null`festlegen, generiert der <xref:System.Xml.Serialization.XmlSerializer> den folgenden XML-Code.  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 Wenn die <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>-Eigenschaft `false`ist, wird kein XML-Element generiert.  
  
> [!NOTE]
>  Sie können die <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>-Eigenschaft nicht auf einen Member anwenden, der als Werttyp typisiert ist, da ein Werttyp keine `null`enthalten darf  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Group`serialisiert, die ein Feld mit dem Namen `Employees` enthält, das ein Array von `Employee` Objekten zurückgibt. Eine zweite Klasse mit dem Namen `Manager` wird von `Employee`abgeleitet. Ein-<xref:System.Xml.Serialization.XmlArrayItemAttribute> gibt an, dass der <xref:System.Xml.Serialization.XmlSerializer> sowohl `Employee`-als auch `Manager`-Objekte in das Array einfügen kann. Im Beispiel wird die <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>-Eigenschaft festgelegt. Dadurch wird der <xref:System.Xml.Serialization.XmlSerializer> mitgeteilt, dass die `xsi:nil`-Attribut Objekte im Array, das auf `null`wird, nicht generiert werden.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace des generierten XML-Elements ab oder legt diesen fest.</summary>
        <value>Der Namespace des generierten XML-Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>-Eigenschaft entspricht den World Wide Web Consortium Spezifikations [Namespaces in XML](https://www.w3.org/TR/xml-names/).  
  
 Zum Erstellen von Namespaces, die im XML-Dokument und den zugehörigen Präfixen verwendet werden sollen, müssen Sie eine <xref:System.Xml.Serialization.XmlSerializerNamespaces> erstellen, die alle Präfix-und Namespace-Paare enthält. Der Namespace, den Sie für die einzelnen <xref:System.Xml.Serialization.XmlArrayAttribute> festlegen, muss in der <xref:System.Xml.Serialization.XmlSerializerNamespaces>enthalten sein. Wenn das <xref:System.Xml.Serialization.XmlSerializer> das Dokument generiert, wird der Elementname für jedes Array Element ordnungsgemäß vorangestellt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Xml.Serialization.XmlArrayItemAttribute> angewendet und die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>-Eigenschaft festgelegt.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NestingLevel : int with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ebene in einer Hierarchie von XML-Elementen ab, auf die das <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> angewendet wird, oder legt diese fest.</summary>
        <value>Der nullbasierte Index einer Reihe von Indizes in einem Array von Arrays.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein XML-Dokument kann Hierarchien von XML-Elementen enthalten. Um eine solche Hierarchie darzustellen, wird ein Array von Arrays verwendet. In einem solchen Array stellt jeder Index eine Ebene in der Hierarchie dar. Daher wird die <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>-Eigenschaft nur verwendet, wenn ein <xref:System.Xml.Serialization.XmlArrayItemAttribute> auf ein Feld angewendet wird, das ein Array von Arrays zurückgibt.  
  
 Legen Sie beim Anwenden des-Attributs fest, auf welche Hierarchieebene das Attribut wirkt, indem Sie die <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> Der erste Index weist immer den Wert 0 auf. Daher ist es optional, seine <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> festzulegen. eine <xref:System.Xml.Serialization.XmlArrayItemAttribute>, ohne dass ein <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> Wert auf den ersten Array Index angewendet wird. Nur für die nachfolgenden <xref:System.Xml.Serialization.XmlArrayItemAttribute> Objekte müssen <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> Werte angegeben werden (1, 2, 3 usw.).  
  
   
  
## Examples  
 Im folgenden Beispiel werden drei <xref:System.Xml.Serialization.XmlArrayItemAttribute> Attribute auf ein Array von Arrays angewendet. Um anzugeben, auf welche Arrays die einzelnen Attribute angewendet werden, wird die <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>-Eigenschaft auf den Index der Arrays festgelegt.  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den in einem Array zulässigen Typ ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Type" />, der in dem Array zulässig ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>-Eigenschaft, um einen überschriebenen Typ für ein öffentliches Feld oder den öffentlichen Lese-/Schreibeigenschaft Wert anzugeben.  
  
 Wenn ein Feld oder eine Eigenschaft ein Array vom Typ <xref:System.Object>zurückgibt, wenden Sie mehrere Instanzen des <xref:System.Xml.Serialization.XmlArrayItemAttribute> auf das Feld oder die Eigenschaft an. Legen Sie für jede Instanz die <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>-Eigenschaft auf einen Objekttyp fest, der in das Array eingefügt werden kann.  
  
 Wenn ein Array nur primitive Typen enthält, müssen Sie die <xref:System.Xml.Serialization.XmlArrayItemAttribute>nicht anwenden. Standardmäßig generiert das <xref:System.Xml.Serialization.XmlSerializer> für jeden Wert eine Reihe von Elementen, die jeweils denselben Elementnamen haben, aber der Typ jedes Elements wird auf den XML-Schema Datentyp festgelegt. Beispielsweise folgender Code:  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 Ergebnisse in dieser XML-Datei:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 Wenn Sie jedoch die <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>-Eigenschaft für jeden primitiven Typ angeben, wird der Elementname für jeden Wert mit dem .NET-Typnamen generiert. Beispiel für diesen Code:  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 Ergebnisse in dieser XML-Datei:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Array von-Objekten serialisiert. Das Feld, das das Array zurückgibt, wird zwei <xref:System.Xml.Serialization.XmlArrayItemAttribute> Instanzen zugeordnet. Jede Instanz weist den <xref:System.Xml.Serialization.XmlSerializer> an, die angegebene <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> im Array zu akzeptieren.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
