<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2dbe0b027053bdfc1b402737c8ba93fe8ddb232" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400388" /></Metadata><TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> den öffentlichen Memberwert als codiertes SOAP XML-Element serialisieren soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapElementAttribute>-Klasse gehört zu einer Reihe von Attributen, die Steuern, wie das <xref:System.Xml.Serialization.XmlSerializer> ein Objekt als codiertes SOAP-XML serialisiert oder deserialisiert. Das resultierende XML entspricht Abschnitt 5 des World Wide Web Consortium Dokuments, [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/). Eine umfassende Liste mit ähnlichen Attributen finden Sie unter [Attribute zur Steuerung der Serialisierung von codiertem SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Wenn Sie ein Objekt als codierte SOAP-Nachricht serialisieren möchten, müssen Sie die <xref:System.Xml.Serialization.XmlSerializer> mit einer <xref:System.Xml.Serialization.XmlTypeMapping> erstellen, die mit der <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>-Methode der <xref:System.Xml.Serialization.SoapReflectionImporter>-Klasse erstellt wurde.  
  
 Wenden Sie den <xref:System.Xml.Serialization.SoapElementAttribute> auf ein öffentliches Feld an, um die <xref:System.Xml.Serialization.XmlSerializer> zu leiten, um das Feld als codiertes SOAP-XML-Element zu serialisieren.  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `Vehicle`enthält. Ein <xref:System.Xml.Serialization.SoapElementAttribute> wird auf das Feld angewendet. Wenn das Feld serialisiert wird, lautet der Name des XML-Elements "Wheels" anstelle von "Vehicle". Die `SerializeOverride`-Methode erstellt eine <xref:System.Xml.Serialization.SoapElementAttribute> und legt die <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>-Eigenschaft einer <xref:System.Xml.Serialization.SoapAttributes> auf die <xref:System.Xml.Serialization.SoapElementAttribute>fest. Die <xref:System.Xml.Serialization.SoapAttributes> wird zu einer <xref:System.Xml.Serialization.SoapAttributeOverrides> hinzugefügt, die zum Erstellen einer <xref:System.Xml.Serialization.XmlTypeMapping>verwendet wird. Eine <xref:System.Xml.Serialization.XmlSerializer> wird mit dem <xref:System.Xml.Serialization.XmlTypeMapping>erstellt, und eine Instanz der `Transportation`-Klasse wird erneut serialisiert. Da der <xref:System.Xml.Serialization.SoapElementAttribute> zum Überschreiben der Serialisierung verwendet wird, lautet der generierte XML-Elementname jetzt "Truck" anstelle von "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapElementAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapElementAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `Vehicle`enthält. Ein <xref:System.Xml.Serialization.SoapElementAttribute> wird auf das Feld angewendet. Wenn das Feld serialisiert wird, lautet der Name des XML-Elements "Wheels" anstelle von "Vehicle". Die `SerializeOverride`-Methode erstellt eine <xref:System.Xml.Serialization.SoapElementAttribute> und legt die <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>-Eigenschaft einer <xref:System.Xml.Serialization.SoapAttributes> auf die <xref:System.Xml.Serialization.SoapElementAttribute>fest. Die <xref:System.Xml.Serialization.SoapAttributes> wird zu einer <xref:System.Xml.Serialization.SoapAttributeOverrides> hinzugefügt, die zum Erstellen einer <xref:System.Xml.Serialization.XmlTypeMapping>verwendet wird. Eine <xref:System.Xml.Serialization.XmlSerializer> wird mit dem <xref:System.Xml.Serialization.XmlTypeMapping>erstellt, und eine Instanz der `Transportation`-Klasse wird erneut serialisiert. Da der <xref:System.Xml.Serialization.SoapElementAttribute> zum Überschreiben der Serialisierung verwendet wird, lautet der generierte XML-Elementname jetzt "Truck" anstelle von "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Der XML-Elementname des serialisierten Members.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapElementAttribute" />-Klasse und gibt den Namen des XML-Elements an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `Vehicle`enthält. Ein <xref:System.Xml.Serialization.SoapElementAttribute> wird auf das Feld angewendet. Wenn das Feld serialisiert wird, lautet der Name des XML-Elements "Wheels" anstelle von "Vehicle". Die `SerializeOverride`-Methode erstellt eine <xref:System.Xml.Serialization.SoapElementAttribute> und legt die <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>-Eigenschaft einer <xref:System.Xml.Serialization.SoapAttributes> auf die <xref:System.Xml.Serialization.SoapElementAttribute>fest. Die <xref:System.Xml.Serialization.SoapAttributes> wird zu einer <xref:System.Xml.Serialization.SoapAttributeOverrides> hinzugefügt, die zum Erstellen einer <xref:System.Xml.Serialization.XmlTypeMapping>verwendet wird. Eine <xref:System.Xml.Serialization.XmlSerializer> wird mit dem <xref:System.Xml.Serialization.XmlTypeMapping>erstellt, und eine Instanz der `Transportation`-Klasse wird erneut serialisiert. Da der <xref:System.Xml.Serialization.SoapElementAttribute> zum Überschreiben der Serialisierung verwendet wird, lautet der generierte XML-Elementname jetzt "Truck" anstelle von "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den XSD-Datentyp (XML Schema Definition) des generierten XML-Elements ab oder legt diesen fest.</summary>
        <value>Einer der XML-Schemadatentypen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle sind die einfachen XML-Schema Datentypen mit ihren .NET-Entsprechungen aufgelistet.  
  
 Verwenden Sie für die XML-Schema `base64Binary`-und-`hexBinary` Datentypen ein Array von <xref:System.Byte> Strukturen, und wenden Sie ggf. eine <xref:System.Xml.Serialization.SoapElementAttribute> mit der <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> auf "base64Binary" oder "hexBinary" an. Verwenden Sie für die Datentypen XML Schema `time` und `date` den <xref:System.DateTime> Typ, und wenden Sie die <xref:System.Xml.Serialization.SoapElementAttribute> mit der <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> auf "Date" oder "Time" an.  
  
 Wenden Sie für jeden XML-Schema Datentyp, der einer Zeichenfolge zugeordnet ist, den <xref:System.Xml.Serialization.SoapElementAttribute> an, dessen <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A>-Eigenschaft auf den XML-Schematyp festgelegt ist. Beachten Sie, dass hierdurch nicht das Serialisierungsformat geändert wird, sondern nur das Schema für den Member.  
  
> [!NOTE]
>  Bei der-Eigenschaft wird die Groß-/Kleinschreibung beachtet, sodass Sie Sie genau auf einen der XML-Schema Datentypen festlegen müssen.  
  
> [!NOTE]
>  Das übergeben von Binärdaten als XML-Element ist effizienter als das übergeben als XML-Attribut.  
  
 Weitere Informationen zu XML-Datentypen finden Sie im World Wide Web Consortium-Dokument [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).  
  
|XSD-Datentyp|.NET-Datentyp|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Array von <xref:System.Byte> Objekten|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|Kleinstunternehmen|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Array von <xref:System.Byte> Objekten|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|Ganze Zahl|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativinfo|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonpositivinteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|Uhrzeit|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `Vehicle`enthält. Ein <xref:System.Xml.Serialization.SoapElementAttribute> wird auf das Feld angewendet. Wenn das Feld serialisiert wird, lautet der Name des XML-Elements "Wheels" anstelle von "Vehicle". Die `SerializeOverride`-Methode erstellt eine <xref:System.Xml.Serialization.SoapElementAttribute> und legt die <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>-Eigenschaft einer <xref:System.Xml.Serialization.SoapAttributes> auf die <xref:System.Xml.Serialization.SoapElementAttribute>fest. Die <xref:System.Xml.Serialization.SoapAttributes> wird zu einer <xref:System.Xml.Serialization.SoapAttributeOverrides> hinzugefügt, die zum Erstellen einer <xref:System.Xml.Serialization.XmlTypeMapping>verwendet wird. Eine <xref:System.Xml.Serialization.XmlSerializer> wird mit dem <xref:System.Xml.Serialization.XmlTypeMapping>erstellt, und eine Instanz der `Transportation`-Klasse wird erneut serialisiert. Da der <xref:System.Xml.Serialization.SoapElementAttribute> zum Überschreiben der Serialisierung verwendet wird, lautet der generierte XML-Elementname jetzt "Truck" anstelle von "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</summary>
        <value>Der Name des generierten XML-Elements. Der Standardwert ist der Memberbezeichner.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine Instanz einer Klasse mit dem Namen `Transportation` serialisiert, die ein Feld mit dem Namen `Vehicle`enthält. Ein <xref:System.Xml.Serialization.SoapElementAttribute> wird auf das Feld angewendet. Wenn das Feld serialisiert wird, lautet der Name des XML-Elements "Wheels" anstelle von "Vehicle". Die `SerializeOverride`-Methode erstellt eine <xref:System.Xml.Serialization.SoapElementAttribute> und legt die <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>-Eigenschaft einer <xref:System.Xml.Serialization.SoapAttributes> auf die <xref:System.Xml.Serialization.SoapElementAttribute>fest. Die <xref:System.Xml.Serialization.SoapAttributes> wird zu einer <xref:System.Xml.Serialization.SoapAttributeOverrides> hinzugefügt, die zum Erstellen einer <xref:System.Xml.Serialization.XmlTypeMapping>verwendet wird. Eine <xref:System.Xml.Serialization.XmlSerializer> wird mit dem <xref:System.Xml.Serialization.XmlTypeMapping>erstellt, und eine Instanz der `Transportation`-Klasse wird erneut serialisiert. Da der <xref:System.Xml.Serialization.SoapElementAttribute> zum Überschreiben der Serialisierung verwendet wird, lautet der generierte XML-Elementname jetzt "Truck" anstelle von "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt diesen fest, der angibt, ob der <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member, dessen <see langword="xsi:null" />-Attribut auf "1" festgelegt ist, serialisieren muss.</summary>
        <value><see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:null" />-Attribut generiert, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die XML-Schema Spezifikation für Strukturen ermöglicht einem XML-Dokument, explizit zu signalisieren, dass der Inhalt eines Elements fehlt. Ein solches Element enthält das-Attribut `xsi:null` auf "1" festgelegt. Weitere Informationen finden Sie in der World Wide Web Consortium Spezifikation mit dem Namen [XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/).  
  
 Wenn die <xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A>-Eigenschaft auf `true`festgelegt ist, wird das `xsi:null`-Attribut für Klassenmember generiert, die auf `null`festgelegt wurden. Wenn Sie z. b. ein Feld mit dem Namen `MyStringArray` auf `null`festlegen, generiert der <xref:System.Xml.Serialization.XmlSerializer> den folgenden XML-Code.  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 Wenn die <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>-Eigenschaft `false`ist, wird kein XML-Element generiert.  
  
> [!NOTE]
>  Sie können die <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>-Eigenschaft nicht auf einen Member anwenden, der als Werttyp typisiert ist, da ein Werttyp keine `null`enthalten darf  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
