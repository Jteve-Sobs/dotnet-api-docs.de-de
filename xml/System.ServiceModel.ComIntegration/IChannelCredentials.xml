<Type Name="IChannelCredentials" FullName="System.ServiceModel.ComIntegration.IChannelCredentials">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="654caf4f5d030d4f6a989be79cfdb4c73e67b222" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37620401" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelCredentials" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ComIntegration.IChannelCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelCredentials" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelCredentials" />
  <TypeSignature Language="F#" Value="type IChannelCredentials = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("181b448c-c17c-4b17-ac6d-06699b93198f")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="48028-101">Eine Schnittstelle, die die Einstellung bestimmter Sicherheitsfunktionen für einen Dienstproxy ermöglicht.</span>
      <span class="sxs-lookup">
        <span data-stu-id="48028-101">An interface that allows the setting of certain security features on a service proxy.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48028-102">Nicht verwaltete Clients mithilfe den "Service"-Moniker auf Windows Communication Foundation (WCF)-Dienste zugreifen.</span><span class="sxs-lookup"><span data-stu-id="48028-102">Unmanaged clients use the "service" moniker to access Windows Communication Foundation (WCF) services.</span></span> <span data-ttu-id="48028-103">Diese Clients unterliegen davon ab, das WCF-Sicherheitsmodell statt der COM-Sicherheitsmodell.</span><span class="sxs-lookup"><span data-stu-id="48028-103">These clients are subject to the WCF security model rather than the COM security model.</span></span> <span data-ttu-id="48028-104">Die <xref:System.ServiceModel.ComIntegration.IChannelCredentials>-Schnittstelle wird bereitgestellt, um Kanalanmeldeinformationen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="48028-104">The <xref:System.ServiceModel.ComIntegration.IChannelCredentials> interface is provided to specify channel credentials.</span></span> <span data-ttu-id="48028-105">Dies ist erforderlich, da die COM-Moniker nicht auf das Objektmodell der verwaltete WCF-Sicherheit zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="48028-105">This is required because the COM moniker cannot access the managed WCF security object model.</span></span>  
  
 <span data-ttu-id="48028-106">Es ist nicht zulässig, Methoden für die `IChannelCredentials`-Schnittstelle aufzurufen, nachdem der Kanal erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="48028-106">It is not legal to call methods on the `IChannelCredentials` interface after the channel is created.</span></span> <span data-ttu-id="48028-107">Dies ist, da Windows Communication Foundation (WCF) keine Änderung der Sicherheitseinstellungen für auf einem bereits geöffneten Kanal unterstützt.</span><span class="sxs-lookup"><span data-stu-id="48028-107">This is because Windows Communication Foundation (WCF) does not support changing security settings on an already opened channel.</span></span> <span data-ttu-id="48028-108">Wenn der Dienstmonikerclient einen Proxy erhält, ist der Kanal noch nicht erstellt.</span><span class="sxs-lookup"><span data-stu-id="48028-108">When the service moniker client obtains a proxy, the channel is not yet created.</span></span> <span data-ttu-id="48028-109">Daher muss der Client vor dem Aufrufen der Dienstmethode `IChannelCredentials`-Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="48028-109">Thus, the client must call `IChannelCredentials` methods prior to invoking the service method.</span></span> <span data-ttu-id="48028-110">Wenn der Client eine `IChannelCredentials`-Methode aufruft, nachdem die Dienstmethode aufgerufen wurde, wird die Ausnahme RPC_E_TOO_LATE ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="48028-110">If the client calls an `IChannelCredentials` method after the service method is invoked, the exception RPC_E_TOO_LATE is thrown.</span></span>  
  
   
  
## Examples  
  
```  
monString = "service:mexAddress=http://localhost:8000/ServiceModelSamples/Service?wsdl"  
    monString = monString + ", address=http://localhost:8000/ServiceModelSamples/Service"  
    monString = monString + ", binding=BasicHttpBinding_ICalculator, bindingNamespace=http://Microsoft.ServiceModel.Samples"  
    monString = monString + ", contract=ICalculator, contractNamespace=http://Microsoft.ServiceModel.Samples"  
  
    Set monikerProxy = GetObject(monString)  
  
    'Set the Service Certificate.  
    monikerProxy.ChannelCredentials.SetServiceCertificateAuthentication "CurrentUser", "NoCheck", "PeerOrChainTrust"  
    monikerProxy.ChannelCredentials.SetDefaultServiceCertificateFromStore "CurrentUser", "TrustedPeople", "FindBySubjectName", "localhost"  
  
    'Set the Client Certificate.  
    monikerProxy.ChannelCredentials.SetClientCertificateFromStoreByName "CN=client.com", "CurrentUser", "My"  
    MsgBox monikerProxy.Add(3, 4)  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetClientCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="48028-111">Dateiname, der das Zertifikat enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-111">File name that contains the certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="48028-112">Für die Datei erforderliches Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-112">Password required for the file.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="48028-113">Speicherflag für das Zertifikat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-113">Storage flags for the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-114">Ruft ein Zertifikat von einer Datei ab und fügt es den Client-Anmeldeinformationen hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-114">Retrieves a certificate from a file and adds it to the client credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48028-115">Wenn `keyStorageFlags` auf NULL oder eine leere Zeichenfolge festgelegt wird, werden die Standardspeicherflags verwendet.</span><span class="sxs-lookup"><span data-stu-id="48028-115">When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">
          <span data-ttu-id="48028-116">Zertifikatsspeicherort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-116">Certificate store location.</span>
          </span>
        </param>
        <param name="storeName">
          <span data-ttu-id="48028-117">Zertifikatsspeichername.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-117">Certificate store name.</span>
          </span>
        </param>
        <param name="findType">
          <span data-ttu-id="48028-118">Suchtyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-118">Search type.</span>
          </span>
        </param>
        <param name="findValue">
          <span data-ttu-id="48028-119">Suchwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-119">Search value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-120">Ruft ein Zertifikat von einem Zertifikatsspeicher ab und fügt es den Client-Anmeldeinformationen hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-120">Retrieves a certificate from a certificate store and adds it to the client credentials.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">
          <span data-ttu-id="48028-121">Zertifikatsantragsteller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-121">Certificate subject name.</span>
          </span>
        </param>
        <param name="storeLocation">
          <span data-ttu-id="48028-122">Zertifikatsspeicherort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-122">Certificate store location.</span>
          </span>
        </param>
        <param name="storeName">
          <span data-ttu-id="48028-123">Zertifikatsspeichername.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-123">Certificate store name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-124">Ruft ein Zertifikat von einem Zertifikatsspeicher über den Namen ab und fügt es den Client-Anmeldeinformationen hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-124">Retrieves a certificate from a certificate store by name and adds it to the client credentials.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="48028-125">Zertifikatsdateiname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-125">Certificate file name.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="48028-126">Kennwort für Zertifikatsdatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-126">Password for certificate file.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="48028-127">Speicherflags für das Zertifikat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-127">Storage flags for certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-128">Ruft ein Zertifikat von einer Datei ab und fügt es den Dienstanmeldeinformationen als Standardzertifikat hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-128">Retrieves a certificate from a file and adds it to the service credentials as the default certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48028-129">Wenn `keyStorageFlags` auf NULL oder eine leere Zeichenfolge festgelegt wird, werden die Standardspeicherflags verwendet.</span><span class="sxs-lookup"><span data-stu-id="48028-129">When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">
          <span data-ttu-id="48028-130">Zertifikatsspeicherort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-130">Certificate store location.</span>
          </span>
        </param>
        <param name="storeName">
          <span data-ttu-id="48028-131">Zertifikatsspeichername.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-131">Certificate store name.</span>
          </span>
        </param>
        <param name="findType">
          <span data-ttu-id="48028-132">Suchtyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-132">Search type.</span>
          </span>
        </param>
        <param name="findValue">
          <span data-ttu-id="48028-133">Suchwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-133">Search value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-134">Ruft ein Zertifikat von einem Zertifikatsspeicher ab und fügt es den Dienstanmeldeinformationen als Standardzertifikat hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-134">Retrieves a certificate from a certificate store and adds it to the service credentials as the default certificate.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName">
          <span data-ttu-id="48028-135">Zertifikatsantragsteller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-135">Certificate subject name.</span>
          </span>
        </param>
        <param name="storeLocation">
          <span data-ttu-id="48028-136">Zertifikatsspeicherort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-136">Certificate store location.</span>
          </span>
        </param>
        <param name="storeName">
          <span data-ttu-id="48028-137">Zertifikatsspeichername.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-137">Certificate store name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-138">Ruft ein Zertifikat von einem Zertifikatsspeicher über den Namen ab und fügt es den Dienstanmeldeinformationen als Standardzertifikat hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-138">Retrieves a certificate from a certificate store by name and adds it to the service credentials as the default certificate</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIssuedToken">
      <MemberSignature Language="C#" Value="public void SetIssuedToken (string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIssuedToken(string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIssuedToken (localIssuerAddres As String, localIssuerBindingType As String, localIssuerBinding As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIssuedToken(System::String ^ localIssuerAddres, System::String ^ localIssuerBindingType, System::String ^ localIssuerBinding);" />
      <MemberSignature Language="F#" Value="abstract member SetIssuedToken : string * string * string -&gt; unit" Usage="iChannelCredentials.SetIssuedToken (localIssuerAddres, localIssuerBindingType, localIssuerBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localIssuerAddres" Type="System.String" />
        <Parameter Name="localIssuerBindingType" Type="System.String" />
        <Parameter Name="localIssuerBinding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localIssuerAddres">
          <span data-ttu-id="48028-139">Endpunktadresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-139">Endpoint address.</span>
          </span>
        </param>
        <param name="localIssuerBindingType">
          <span data-ttu-id="48028-140">Bindungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-140">Binding type.</span>
          </span>
        </param>
        <param name="localIssuerBinding">
          <span data-ttu-id="48028-141">Bindungsname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-141">Binding name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-142">Legt Parameter für das ausgegebene Token fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-142">Sets parameters for the issued token.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetServiceCertificateAuthentication">
      <MemberSignature Language="C#" Value="public void SetServiceCertificateAuthentication (string storeLocation, string revocationMode, string certificationValidationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetServiceCertificateAuthentication(string storeLocation, string revocationMode, string certificationValidationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceCertificateAuthentication (storeLocation As String, revocationMode As String, certificationValidationMode As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceCertificateAuthentication(System::String ^ storeLocation, System::String ^ revocationMode, System::String ^ certificationValidationMode);" />
      <MemberSignature Language="F#" Value="abstract member SetServiceCertificateAuthentication : string * string * string -&gt; unit" Usage="iChannelCredentials.SetServiceCertificateAuthentication (storeLocation, revocationMode, certificationValidationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="revocationMode" Type="System.String" />
        <Parameter Name="certificationValidationMode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeLocation">
          <span data-ttu-id="48028-143">Speicherort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-143">Store location.</span>
          </span>
        </param>
        <param name="revocationMode">
          <span data-ttu-id="48028-144">Sperrmodus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-144">Revocation mode.</span>
          </span>
        </param>
        <param name="certificationValidationMode">
          <span data-ttu-id="48028-145">Zertifikatsvalidierungsmodus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-145">Certification validation mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-146">Legt die Dienstzertifikatsauthentifizierungsparameter fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-146">Sets the service certificate authentication parameters.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNameCredential">
      <MemberSignature Language="C#" Value="public void SetUserNameCredential (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserNameCredential(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserNameCredential (userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserNameCredential(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member SetUserNameCredential : string * string -&gt; unit" Usage="iChannelCredentials.SetUserNameCredential (userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">
          <span data-ttu-id="48028-147">Benutzername.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-147">User name.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="48028-148">Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-148">Password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-149">Legt die Benutzernamenanmeldeinformationen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-149">Sets the user name credentials.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowsCredential">
      <MemberSignature Language="C#" Value="public void SetWindowsCredential (string domain, string userName, string password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowsCredential(string domain, string userName, string password, int32 impersonationLevel, bool allowNtlm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWindowsCredential (domain As String, userName As String, password As String, impersonationLevel As Integer, allowNtlm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWindowsCredential(System::String ^ domain, System::String ^ userName, System::String ^ password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="F#" Value="abstract member SetWindowsCredential : string * string * string * int * bool -&gt; unit" Usage="iChannelCredentials.SetWindowsCredential (domain, userName, password, impersonationLevel, allowNtlm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="impersonationLevel" Type="System.Int32" />
        <Parameter Name="allowNtlm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="48028-150">Domain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-150">Domain.</span>
          </span>
        </param>
        <param name="userName">
          <span data-ttu-id="48028-151">Benutzername.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-151">User name.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="48028-152">Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-152">Password.</span>
          </span>
        </param>
        <param name="impersonationLevel">
          <span data-ttu-id="48028-153">Identitätswechselebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-153">Impersonation level.</span>
          </span>
        </param>
        <param name="allowNtlm">
          <span data-ttu-id="48028-154">Lassen NTLM-Authentifizierungsschema zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-154">Allow NTLM authentication scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48028-155">Legt die Windows-Anmeldeinformationen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48028-155">Sets the Windows credentials.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>