<Type Name="LogExtent" FullName="System.IO.Log.LogExtent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22d2187b55165cde971868ce0909c53d750bf88b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69356834" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogExtent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogExtent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogExtent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogExtent" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogExtent sealed" />
  <TypeSignature Language="F#" Value="type LogExtent = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b0ca2-101">Stellt einen Datenträgerwertebereich dar, der Protokolldaten enthält.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-101">Represents a disk extent that contains log data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0ca2-102">Eine <xref:System.IO.Log.LogStore>-Instanz speichert ihre Daten in einer Auflistung von Datenträgerwertebereichen, die durch <xref:System.IO.Log.LogExtent>-Instanzen dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-102">A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances.</span></span> <span data-ttu-id="b0ca2-103">Ein bestimmter <xref:System.IO.Log.LogExtent> ist genau einem <xref:System.IO.Log.LogStore> zugeordnet, und <xref:System.IO.Log.LogExtent>-Objekte im selben <xref:System.IO.Log.LogStore> weisen dieselbe Größe auf.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-103">A particular <xref:System.IO.Log.LogExtent> is associated with exactly one <xref:System.IO.Log.LogStore>, and <xref:System.IO.Log.LogExtent> objects in the same <xref:System.IO.Log.LogStore> are of identical size.</span></span> <span data-ttu-id="b0ca2-104">Speicherplatz wird in Wertebereichsschritten einer <xref:System.IO.Log.LogStore>-Instanz hinzugefügt und daraus entfernt.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-104">Space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments.</span></span>  
  
 <span data-ttu-id="b0ca2-105">Obwohl <xref:System.IO.Log.LogExtent>-Objekte als Dateien auf dem Datenträger dargestellt werden, dürfen sie nicht wie normale Dateien verschoben oder gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-105">Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files.</span></span> <span data-ttu-id="b0ca2-106">Um eine <xref:System.IO.Log.LogExtent>-Instanz zu löschen, entfernen Sie sie aus der <xref:System.IO.Log.LogExtentCollection>, die sie enthält.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-106">To delete a <xref:System.IO.Log.LogExtent> instance, remove it from the <xref:System.IO.Log.LogExtentCollection> that contains it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0ca2-107">In diesem Beispiel wird veranschaulicht, wie die <xref:System.IO.Log.LogExtent>-Klasse verwendet wird, um Wertebereiche in einer Protokollsequenz hinzuzufügen und zu emulieren.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-107">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Log.LogExtentCollection" />
    <altmember cref="T:System.IO.Log.LogStore" />
  </Docs>
  <Members>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.IO.Log.LogExtent.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0ca2-108">Ruft den vollqualifizierten Pfad für diese <see cref="T:System.IO.Log.LogExtent" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-108">Gets the fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></summary>
        <value><span data-ttu-id="b0ca2-109">Der vollqualifizierte Pfad für diese <see cref="T:System.IO.Log.LogExtent" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-109">The fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0ca2-110">Obwohl <xref:System.IO.Log.LogExtent>-Objekte als Dateien auf dem Datenträger dargestellt werden, dürfen sie nicht wie normale Dateien verschoben oder gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-110">Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files.</span></span> <span data-ttu-id="b0ca2-111">Um eine <xref:System.IO.Log.LogExtent>-Instanz zu löschen, entfernen Sie sie aus der <xref:System.IO.Log.LogExtentCollection>, die sie enthält.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-111">To delete a <xref:System.IO.Log.LogExtent> instance, remove it from the <xref:System.IO.Log.LogExtentCollection> that contains it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0ca2-112">In diesem Beispiel wird veranschaulicht, wie die <xref:System.IO.Log.LogExtent>-Klasse verwendet wird, um Wertebereiche in einer Protokollsequenz hinzuzufügen und zu emulieren.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-112">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public long Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Size" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Size { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : int64" Usage="System.IO.Log.LogExtent.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0ca2-113">Ruft die Größe dieser <see cref="T:System.IO.Log.LogExtent" />-Instanz in Byte ab.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-113">Gets the size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes.</span></span></summary>
        <value><span data-ttu-id="b0ca2-114">Die Größe dieser <see cref="T:System.IO.Log.LogExtent" />-Instanz in Byte.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-114">The size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0ca2-115">In diesem Beispiel wird veranschaulicht, wie die <xref:System.IO.Log.LogExtent>-Klasse verwendet wird, um Wertebereiche in einer Protokollsequenz hinzuzufügen und zu emulieren.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-115">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogExtentState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.LogExtentState State" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As LogExtentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::LogExtentState State { System::IO::Log::LogExtentState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.IO.Log.LogExtentState" Usage="System.IO.Log.LogExtent.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogExtentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0ca2-116">Ruft den Zustand dieser <see cref="T:System.IO.Log.LogExtent" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-116">Gets the state of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></summary>
        <value><span data-ttu-id="b0ca2-117">Der Zustand dieser <see cref="T:System.IO.Log.LogExtent" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-117">The state of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0ca2-118">In diesem Beispiel wird veranschaulicht, wie die <xref:System.IO.Log.LogExtent>-Klasse verwendet wird, um Wertebereiche in einer Protokollsequenz hinzuzufügen und zu emulieren.</span><span class="sxs-lookup"><span data-stu-id="b0ca2-118">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
