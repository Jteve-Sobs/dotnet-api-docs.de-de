<Type Name="Rfc3161TimestampRequest" FullName="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e2a6d4be62221e54081ebf4e5873e3ab9893055" /><Meta Name="ms.sourcegitcommit" Value="19810b7f44c3fa6cc5f0af0391e435c59897b089" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/07/2020" /><Meta Name="ms.locfileid" Value="75707998" /></Metadata><TypeSignature Language="C#" Value="public sealed class Rfc3161TimestampRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Rfc3161TimestampRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Rfc3161TimestampRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc3161TimestampRequest sealed" />
  <TypeSignature Language="F#" Value="type Rfc3161TimestampRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.1</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="20d77-101">Stellt eine Zeitstempelanforderung aus IETF RFC 3161 dar.</span><span class="sxs-lookup"><span data-stu-id="20d77-101">Represents a time-stamping request from IETF RFC 3161.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="20d77-102">Diese Klasse ermöglicht die Erstellung und Überprüfung von `TimeStampReq` Werten gemäß der Definition durch IETF RFC 3161: Internet X. 509 Public Key Infrastructure Zeitstempel Protokoll (TSP).</span><span class="sxs-lookup"><span data-stu-id="20d77-102">This class allows for the creation and inspection of `TimeStampReq` values as defined by IETF RFC 3161: Internet X.509 Public Key Infrastructure Time-Stamp Protocol (TSP).</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromData">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromData (ReadOnlySpan&lt;byte&gt; data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.Oid requestedPolicyId = null, Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; nonce = null, bool requestSignerCertificates = false, System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.Oid requestedPolicyId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; nonce, bool requestSignerCertificates, class System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromData (data As ReadOnlySpan(Of Byte), hashAlgorithm As HashAlgorithmName, Optional requestedPolicyId As Oid = null, Optional nonce As Nullable(Of ReadOnlyMemory(Of Byte)) = null, Optional requestSignerCertificates As Boolean = false, Optional extensions As X509ExtensionCollection = null) As Rfc3161TimestampRequest" />
      <MemberSignature Language="F#" Value="static member CreateFromData : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * bool * System.Security.Cryptography.X509Certificates.X509ExtensionCollection -&gt; System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData (data, hashAlgorithm, requestedPolicyId, nonce, requestSignerCertificates, extensions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="requestedPolicyId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="nonce" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="requestSignerCertificates" Type="System.Boolean" />
        <Parameter Name="extensions" Type="System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="20d77-103">Die mit dem Zeitstempel zu versehenden Daten, für die von dieser Methode ein Hashwert berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-103">The data to timestamp, which will be hashed by this method.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="20d77-104">Der mit dieser Zeitstempelanforderung zu verwendende Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-104">The hash algorithm to use with this timestamp request.</span></span></param>
        <param name="requestedPolicyId"><span data-ttu-id="20d77-105">Der Objektbezeichner (OID) für eine Zeitstempelrichtlinie, die den Timestamp Authority (TSA) verwenden soll, oder <see langword="null" />, um keine Einstellung auszudrücken.</span><span class="sxs-lookup"><span data-stu-id="20d77-105">The Object Identifier (OID) for a timestamp policy the Timestamp Authority (TSA) should use, or <see langword="null" /> to express no preference.</span></span></param>
        <param name="nonce"><span data-ttu-id="20d77-106">Eine optionale Nonce (einmal verwendete Zahl) zur eindeutigen Identifizierung dieser Anforderung, um sie mit der Antwort zu koppeln.</span><span class="sxs-lookup"><span data-stu-id="20d77-106">An optional nonce (number used once) to uniquely identify this request to pair it with the response.</span></span> <span data-ttu-id="20d77-107">Der Wert wird als vorzeichenlose Big-Endian-Ganzzahl interpretiert und kann auf das Codierungsformat normiert werden.</span><span class="sxs-lookup"><span data-stu-id="20d77-107">The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format.</span></span></param>
        <param name="requestSignerCertificates"><span data-ttu-id="20d77-108"><see langword="true" />, um anzugeben, dass die Timestamp Authority (TSA) das Signaturzertifikat in das ausgestellte Zeitstempeltoken aufnehmen muss, ansonsten <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-108"><see langword="true" /> to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, <see langword="false" />.</span></span></param>
        <param name="extensions"><span data-ttu-id="20d77-109">Eine optionale Auflistung von Erweiterungen, die in die Anforderung aufgenommen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="20d77-109">An optional collection of extensions to include in the request.</span></span></param>
        <summary><span data-ttu-id="20d77-110">Erstellt eine Zeitstempelanforderung, indem für die angegebenen Daten mit einem angegebenen Algorithmus ein Hashwert berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-110">Creates a timestamp request by hashing the provided data with a specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="20d77-111">Eine <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />, die die ausgewählten Werte darstellt.</span><span class="sxs-lookup"><span data-stu-id="20d77-111">An <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> representing the chosen values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="20d77-112">Kryptografietimestamps werden immer auf eine Kombination aus dem Hashwert der Daten und dem Algorithmusbezeichner für den Hash Algorithmus angewendet, der zum Hash der Daten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-112">Cryptographic timestamps are always applied to a combination of the hash of data and the algorithm identifier for the hash algorithm used to hash the data.</span></span>
<span data-ttu-id="20d77-113">Diese Methode stellt eine bequeme Alternative zum <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)> dar, wenn nicht bereits ein Hashwert für die Daten vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="20d77-113">This method is a convenient alternative to <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)> when the data has not already been hashed.</span></span>

<span data-ttu-id="20d77-114">Der Nonce-Wert in dieser Methode wird als unsigned Big-Endian-Ganzzahl behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-114">The nonce value in this method is treated as an unsigned, big-endian integer.</span></span>
<span data-ttu-id="20d77-115">Diese Methode normalisiert die Eingabe zu einer ber-Ganzzahl-Codierung, bevor der Nonce-Wert zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-115">This method normalizes the input to a BER INTEGER encoding before assigning the nonce value.</span></span>
<span data-ttu-id="20d77-116">Der normalisierte Wert wird von der <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce>-Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="20d77-116">The normalized value is returned by the <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20d77-117"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="20d77-117"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="20d77-118">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-118">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="20d77-119"><paramref name="hashAlgorithm" /> ist kein bekannter Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-119"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromHash">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromHash (ReadOnlyMemory&lt;byte&gt; hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.Oid requestedPolicyId = null, Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; nonce = null, bool requestSignerCertificates = false, System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromHash(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; hash, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.Oid requestedPolicyId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; nonce, bool requestSignerCertificates, class System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromHash (hash As ReadOnlyMemory(Of Byte), hashAlgorithm As HashAlgorithmName, Optional requestedPolicyId As Oid = null, Optional nonce As Nullable(Of ReadOnlyMemory(Of Byte)) = null, Optional requestSignerCertificates As Boolean = false, Optional extensions As X509ExtensionCollection = null) As Rfc3161TimestampRequest" />
      <MemberSignature Language="F#" Value="static member CreateFromHash : ReadOnlyMemory&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * bool * System.Security.Cryptography.X509Certificates.X509ExtensionCollection -&gt; System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash (hash, hashAlgorithm, requestedPolicyId, nonce, requestSignerCertificates, extensions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="requestedPolicyId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="nonce" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="requestSignerCertificates" Type="System.Boolean" />
        <Parameter Name="extensions" Type="System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="20d77-120">Der mit einem Zeitstempel zu versehene vorab berechnete Hashwert.</span><span class="sxs-lookup"><span data-stu-id="20d77-120">The pre-computed hash value to be timestamped.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="20d77-121">Der zum Erzeugen von <paramref name="hash" /> verwendete Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-121">The hash algorithm used to produce <paramref name="hash" />.</span></span></param>
        <param name="requestedPolicyId"><span data-ttu-id="20d77-122">Der Objektbezeichner (OID) für die Zeitstempelrichtlinie, die die Timestamp Authority (TSA) verwenden soll, oder <see langword="null" />, um keine Einstellung auszudrücken.</span><span class="sxs-lookup"><span data-stu-id="20d77-122">The Object Identifier (OID) for the timestamp policy that the Timestamp Authority (TSA) should use, or <see langword="null" /> to express no preference.</span></span></param>
        <param name="nonce"><span data-ttu-id="20d77-123">Ein optionaler Wert, der verwendet wird, um eine Anforderung einer Antwort eindeutig zuzuordnen, oder <see langword="null" />, damit keine Nonce in die Anforderung aufgenommen wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-123">An optional value used to uniquely match a request to a response, or <see langword="null" /> to not include a nonce in the request.</span></span></param>
        <param name="requestSignerCertificates"><span data-ttu-id="20d77-124"><see langword="true" />, um anzugeben, dass die Timestamp Authority (TSA) das Signaturzertifikat in das ausgestellte Zeitstempeltoken aufnehmen muss, ansonsten <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-124"><see langword="true" /> to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, <see langword="false" />.</span></span></param>
        <param name="extensions"><span data-ttu-id="20d77-125">Eine optionale Auflistung von Erweiterungen, die in die Anforderung aufgenommen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="20d77-125">An optional collection of extensions to include in the request.</span></span></param>
        <summary><span data-ttu-id="20d77-126">Erstellen Sie eine Zeitstempelanforderung mit einem vorab berechneten Hashwert und dem Namen des Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-126">Create a timestamp request using a pre-computed hash value and the name of the hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="20d77-127">Eine <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />, die die ausgewählten Werte darstellt.</span><span class="sxs-lookup"><span data-stu-id="20d77-127">An <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> representing the chosen values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="20d77-128">Diese Methode verwendet den `hashAlgorithm`-Parameter, um den Objekt Bezeichner (OID) zu bestimmen, der in die Zeitstempel-Anforderung aufgenommen werden soll.</span><span class="sxs-lookup"><span data-stu-id="20d77-128">This method uses the `hashAlgorithm` parameter to determine the Object Identifier (OID) to include in the timestamp request.</span></span>
<span data-ttu-id="20d77-129">Wenn Sie eine Anforderung für einen Zeitstempel basierend auf einem Hash Algorithmus, der von dieser Methode nicht unterstützt wird, aufbauen, verwenden Sie die <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)> Überladung.</span><span class="sxs-lookup"><span data-stu-id="20d77-129">When building a request for a timestamp based on a hash algorithm that this method does not support, use the <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)> overload.</span></span>

<span data-ttu-id="20d77-130">Der Nonce-Wert in dieser Methode wird als unsigned Big-Endian-Ganzzahl behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-130">The nonce value in this method is treated as an unsigned, big-endian integer.</span></span>
<span data-ttu-id="20d77-131">Diese Methode normalisiert die Eingabe zu einer ber-Ganzzahl-Codierung, bevor der Nonce-Wert zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-131">This method normalizes the input to a BER INTEGER encoding before assigning the nonce value.</span></span>
<span data-ttu-id="20d77-132">Der normalisierte Wert wird von der <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce>-Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="20d77-132">The normalized value is returned by the <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="20d77-133"><paramref name="hashAlgorithm" /> ist kein bekannter Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-133"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromHash">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromHash (ReadOnlyMemory&lt;byte&gt; hash, System.Security.Cryptography.Oid hashAlgorithmId, System.Security.Cryptography.Oid requestedPolicyId = null, Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; nonce = null, bool requestSignerCertificates = false, System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromHash(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; hash, class System.Security.Cryptography.Oid hashAlgorithmId, class System.Security.Cryptography.Oid requestedPolicyId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; nonce, bool requestSignerCertificates, class System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromHash (hash As ReadOnlyMemory(Of Byte), hashAlgorithmId As Oid, Optional requestedPolicyId As Oid = null, Optional nonce As Nullable(Of ReadOnlyMemory(Of Byte)) = null, Optional requestSignerCertificates As Boolean = false, Optional extensions As X509ExtensionCollection = null) As Rfc3161TimestampRequest" />
      <MemberSignature Language="F#" Value="static member CreateFromHash : ReadOnlyMemory&lt;byte&gt; * System.Security.Cryptography.Oid * System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * bool * System.Security.Cryptography.X509Certificates.X509ExtensionCollection -&gt; System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash (hash, hashAlgorithmId, requestedPolicyId, nonce, requestSignerCertificates, extensions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithmId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="requestedPolicyId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="nonce" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="requestSignerCertificates" Type="System.Boolean" />
        <Parameter Name="extensions" Type="System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="20d77-134">Der mit einem Zeitstempel zu versehene vorab berechnete Hashwert.</span><span class="sxs-lookup"><span data-stu-id="20d77-134">The pre-computed hash value to be timestamped.</span></span></param>
        <param name="hashAlgorithmId"><span data-ttu-id="20d77-135">Der Objektbezeichner (OID) für den Hashalgorithmus, der <paramref name="hash" /> erzeugt hat.</span><span class="sxs-lookup"><span data-stu-id="20d77-135">The Object Identifier (OID) for the hash algorithm that produced <paramref name="hash" />.</span></span></param>
        <param name="requestedPolicyId"><span data-ttu-id="20d77-136">Der Objektbezeichner (OID) für eine Zeitstempelrichtlinie, die den Timestamp Authority (TSA) verwenden soll, oder <see langword="null" />, um keine Einstellung auszudrücken.</span><span class="sxs-lookup"><span data-stu-id="20d77-136">The Object Identifier (OID) for a timestamp policy the Timestamp Authority (TSA) should use, or <see langword="null" /> to express no preference.</span></span></param>
        <param name="nonce"><span data-ttu-id="20d77-137">Eine optionale Nonce (einmal verwendete Zahl) zur eindeutigen Identifizierung dieser Anforderung, um sie mit der Antwort zu koppeln.</span><span class="sxs-lookup"><span data-stu-id="20d77-137">An optional nonce (number used once) to uniquely identify this request to pair it with the response.</span></span> <span data-ttu-id="20d77-138">Der Wert wird als vorzeichenlose Big-Endian-Ganzzahl interpretiert und kann auf das Codierungsformat normiert werden.</span><span class="sxs-lookup"><span data-stu-id="20d77-138">The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format.</span></span></param>
        <param name="requestSignerCertificates"><span data-ttu-id="20d77-139"><see langword="true" />, um anzugeben, dass die Timestamp Authority (TSA) das Signaturzertifikat in das ausgestellte Zeitstempeltoken aufnehmen muss, ansonsten <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-139"><see langword="true" /> to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, <see langword="false" />.</span></span></param>
        <param name="extensions"><span data-ttu-id="20d77-140">Eine optionale Auflistung von Erweiterungen, die in die Anforderung aufgenommen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="20d77-140">An optional collection of extensions to include in the request.</span></span></param>
        <summary><span data-ttu-id="20d77-141">Erstellen Sie eine Zeitstempelanforderung mit einem vorab berechneten Hashwert und dem Objektbezeichner für den Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-141">Create a timestamp request using a pre-computed hash value and the Object Identifier for the hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="20d77-142">Eine <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />, die die ausgewählten Werte darstellt.</span><span class="sxs-lookup"><span data-stu-id="20d77-142">An <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> representing the chosen values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="20d77-143">Der Nonce-Wert in dieser Methode wird als unsigned Big-Endian-Ganzzahl behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-143">The nonce value in this method is treated as an unsigned, big-endian integer.</span></span>
<span data-ttu-id="20d77-144">Diese Methode normalisiert die Eingabe zu einer ber-Ganzzahl-Codierung, bevor der Nonce-Wert zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-144">This method normalizes the input to a BER INTEGER encoding before assigning the nonce value.</span></span>
<span data-ttu-id="20d77-145">Der normalisierte Wert wird von der <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce>-Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="20d77-145">The normalized value is returned by the <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20d77-146"><paramref name="hashAlgorithmId" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-146"><paramref name="hashAlgorithmId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="20d77-147"><paramref name="hashAlgorithmId" />.<see cref="P:System.Security.Cryptography.Oid.Value" /></span><span class="sxs-lookup"><span data-stu-id="20d77-147"><paramref name="hashAlgorithmId" />.<see cref="P:System.Security.Cryptography.Oid.Value" /></span></span> <span data-ttu-id="20d77-148">ist keine gültige OID.</span><span class="sxs-lookup"><span data-stu-id="20d77-148">is not a valid OID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromSignerInfo">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromSignerInfo (System.Security.Cryptography.Pkcs.SignerInfo signerInfo, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.Oid requestedPolicyId = null, Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; nonce = null, bool requestSignerCertificates = false, System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest CreateFromSignerInfo(class System.Security.Cryptography.Pkcs.SignerInfo signerInfo, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.Oid requestedPolicyId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; nonce, bool requestSignerCertificates, class System.Security.Cryptography.X509Certificates.X509ExtensionCollection extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      <MemberSignature Language="F#" Value="static member CreateFromSignerInfo : System.Security.Cryptography.Pkcs.SignerInfo * System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * bool * System.Security.Cryptography.X509Certificates.X509ExtensionCollection -&gt; System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo (signerInfo, hashAlgorithm, requestedPolicyId, nonce, requestSignerCertificates, extensions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signerInfo" Type="System.Security.Cryptography.Pkcs.SignerInfo" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="requestedPolicyId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="nonce" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="requestSignerCertificates" Type="System.Boolean" />
        <Parameter Name="extensions" Type="System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />
      </Parameters>
      <Docs>
        <param name="signerInfo"><span data-ttu-id="20d77-149">Die Informationen des CMS-Signierers, für den eine Zeitstempelanforderung erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="20d77-149">The CMS signer information to build a timestamp request for.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="20d77-150">Der mit dieser Zeitstempelanforderung zu verwendende Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-150">The hash algorithm to use with this timestamp request.</span></span></param>
        <param name="requestedPolicyId"><span data-ttu-id="20d77-151">Der Objektbezeichner (OID) für die Zeitstempelrichtlinie, die die Timestamp Authority (TSA) verwenden soll, oder <see langword="null" />, um keine Einstellung auszudrücken.</span><span class="sxs-lookup"><span data-stu-id="20d77-151">The Object Identifier (OID) for the timestamp policy that the Timestamp Authority (TSA) should use, or <see langword="null" /> to express no preference.</span></span></param>
        <param name="nonce"><span data-ttu-id="20d77-152">Eine optionale Nonce (einmal verwendete Zahl) zur eindeutigen Identifizierung dieser Anforderung, um sie mit der Antwort zu koppeln.</span><span class="sxs-lookup"><span data-stu-id="20d77-152">An optional nonce (number used once) to uniquely identify this request to pair it with the response.</span></span> <span data-ttu-id="20d77-153">Der Wert wird als vorzeichenlose Big-Endian-Ganzzahl interpretiert und kann auf das Codierungsformat normiert werden.</span><span class="sxs-lookup"><span data-stu-id="20d77-153">The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format.</span></span></param>
        <param name="requestSignerCertificates"><span data-ttu-id="20d77-154"><see langword="true" />, um anzugeben, dass die Timestamp Authority (TSA) das Signaturzertifikat in das ausgestellte Zeitstempeltoken aufnehmen muss, ansonsten <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-154"><see langword="true" /> to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, <see langword="false" />.</span></span></param>
        <param name="extensions"><span data-ttu-id="20d77-155">Eine optionale Auflistung von Erweiterungen, die in die Anforderung aufgenommen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="20d77-155">An optional collection of extensions to include in the request.</span></span></param>
        <summary><span data-ttu-id="20d77-156">Erstellt eine Zeitstempelanforderung, indem für die Signatur des angegebenen Signierers mit einem angegebenen Algorithmus ein Hashwert berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-156">Creates a timestamp request by hashing the signature of the provided signer with a specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="20d77-157">Eine <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />, die die ausgewählten Werte darstellt.</span><span class="sxs-lookup"><span data-stu-id="20d77-157">An <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> representing the chosen values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="20d77-158">Dieser Konstruktor erstellt einen Zeitstempel für den Signatur Wert eines <xref:System.Security.Cryptography.Pkcs.SignerInfo> Werts gemäß der Empfehlung von IETF RFC 3161 Anhang a (Signatur-Zeitstempel Attribut mithilfe von CMS).</span><span class="sxs-lookup"><span data-stu-id="20d77-158">This constructor creates a timestamp for the signature value of a <xref:System.Security.Cryptography.Pkcs.SignerInfo> value, per the recommendation of IETF RFC 3161 Appendix A (Signature Time-stamp attribute using CMS).</span></span>

<span data-ttu-id="20d77-159">Der Nonce-Wert in dieser Methode wird als unsigned Big-Endian-Ganzzahl behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-159">The nonce value in this method is treated as an unsigned, big-endian integer.</span></span>
<span data-ttu-id="20d77-160">Diese Methode normalisiert die Eingabe zu einer ber-Ganzzahl-Codierung, bevor der Nonce-Wert zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="20d77-160">This method normalizes the input to a BER INTEGER encoding before assigning the nonce value.</span></span>
<span data-ttu-id="20d77-161">Der normalisierte Wert wird von der <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce>-Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="20d77-161">The normalized value is returned by the <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20d77-162"><paramref name="signerInfo" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-162"><paramref name="signerInfo" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20d77-163"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="20d77-163"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="20d77-164">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-164">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="20d77-165"><paramref name="hashAlgorithm" /> ist kein bekannter Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="20d77-165"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="rfc3161TimestampRequest.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d77-166">Codiert die Zeitstempelanforderung und gibt sie als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="20d77-166">Encodes the timestamp request and returns it as a byte array.</span></span></summary>
        <returns><span data-ttu-id="20d77-167">Ein Bytearray, das die DER-codierte Zeitstempelanforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="20d77-167">A byte array containing the DER-encoded timestamp request.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensions () As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="rfc3161TimestampRequest.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d77-168">Ruft eine Auflistung mit einer Kopie der in dieser Anforderung vorhandenen Erweiterungen ab.</span><span class="sxs-lookup"><span data-stu-id="20d77-168">Gets a collection with a copy of the extensions present on this request.</span></span></summary>
        <returns><span data-ttu-id="20d77-169">Eine Auflistung mit einer Kopie der in dieser Anforderung vorhandenen Erweiterungen.</span><span class="sxs-lookup"><span data-stu-id="20d77-169">A collection with a copy of the extensions present on this request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="20d77-170">Die Auflistung, die von dieser Methode zurückgegeben wird, stellt eine Momentaufnahme der Daten dar.</span><span class="sxs-lookup"><span data-stu-id="20d77-170">The collection returned by this method represents a snapshot of the data.</span></span>
<span data-ttu-id="20d77-171">Keine Änderung der Auflistung oder einer Instanz innerhalb der Auflistung führt zu einer Änderung in dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="20d77-171">No modification of the collection or any instance within the collection will result in a change in this instance.</span></span>

<span data-ttu-id="20d77-172">Diese Methode gibt eine leere Auflistung zurück, wenn Sie über keine Erweiterungen verfügt.</span><span class="sxs-lookup"><span data-stu-id="20d77-172">This method returns an empty collection when it has no extensions.</span></span>
<span data-ttu-id="20d77-173">Um die Objekt Erstellung in diesem gängigen Szenario zu vermeiden, lesen Sie <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions>.</span><span class="sxs-lookup"><span data-stu-id="20d77-173">To avoid the object creation in this common scenario, read <xref:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageHash">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; GetMessageHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; GetMessageHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageHash () As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;System::Byte&gt; GetMessageHash();" />
      <MemberSignature Language="F#" Value="member this.GetMessageHash : unit -&gt; ReadOnlyMemory&lt;byte&gt;" Usage="rfc3161TimestampRequest.GetMessageHash " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d77-174">Ruft den Datenhash für diese Zeitstempelanforderung ab.</span><span class="sxs-lookup"><span data-stu-id="20d77-174">Gets the data hash for this timestamp request.</span></span></summary>
        <returns><span data-ttu-id="20d77-175">Der Datenhash für diese Zeitstempelanforderung als schreibgeschützter Arbeitsspeicherwert.</span><span class="sxs-lookup"><span data-stu-id="20d77-175">The data hash for this timestamp request as a read-only memory value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonce">
      <MemberSignature Language="C#" Value="public Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; GetNonce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; GetNonce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNonce () As Nullable(Of ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; GetNonce();" />
      <MemberSignature Language="F#" Value="member this.GetNonce : unit -&gt; Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt;" Usage="rfc3161TimestampRequest.GetNonce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d77-176">Ruft die Nonce für diese Zeitstempelanforderung ab.</span><span class="sxs-lookup"><span data-stu-id="20d77-176">Gets the nonce for this timestamp request.</span></span></summary>
        <returns><span data-ttu-id="20d77-177">Die Nonce für diese Zeitstempelanforderung als schreibgeschützter Arbeitsspeicherwert, wenn eine vorhanden war. Andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-177">The nonce for this timestamp request as a read-only memory value, if one was present; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExtensions">
      <MemberSignature Language="C#" Value="public bool HasExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasExtensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasExtensions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasExtensions : bool" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d77-178">Zeigt an, ob die Anforderung eine Erweiterung besitzt oder nicht.</span><span class="sxs-lookup"><span data-stu-id="20d77-178">Indicates whether or not the request has extensions.</span></span></summary>
        <value><span data-ttu-id="20d77-179"><see langword="true" />, wenn die Anforderung über Erweiterungen verfügt. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-179"><see langword="true" /> if the request has any extensions; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid HashAlgorithmId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid HashAlgorithmId" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithmId As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ HashAlgorithmId { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmId : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d77-180">Ruft den Objektbezeichner (OID) für den der Anforderung zugeordneten Hashalgorithmus ab.</span><span class="sxs-lookup"><span data-stu-id="20d77-180">Gets the Object Identifier (OID) for the hash algorithm associated with the request.</span></span></summary>
        <value><span data-ttu-id="20d77-181">Der Objekt Bezeichner (OID) für den Hash Algorithmus, der der Anforderung zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="20d77-181">The Object Identifier (OID) for the hash algorithm associated with the request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessResponse">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Rfc3161TimestampToken ProcessResponse (ReadOnlyMemory&lt;byte&gt; responseBytes, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Rfc3161TimestampToken ProcessResponse(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; responseBytes, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessResponse (responseBytes As ReadOnlyMemory(Of Byte), ByRef bytesConsumed As Integer) As Rfc3161TimestampToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Rfc3161TimestampToken ^ ProcessResponse(ReadOnlyMemory&lt;System::Byte&gt; responseBytes, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="member this.ProcessResponse : ReadOnlyMemory&lt;byte&gt; * int -&gt; System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" Usage="rfc3161TimestampRequest.ProcessResponse (responseBytes, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Rfc3161TimestampToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseBytes" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="responseBytes"><span data-ttu-id="20d77-182">Die DER-codierte Zeitstempelantwort.</span><span class="sxs-lookup"><span data-stu-id="20d77-182">The DER encoded timestamp response.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="20d77-183">Mit dieser Methode wird die Anzahl der Bytes zurückgegeben, die aus <paramref name="responseBytes" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="20d77-183">When this method returns, the number of bytes that were read from <paramref name="responseBytes" />.</span></span> <span data-ttu-id="20d77-184">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-184">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="20d77-185">Kombiniert eine codierte Zeitstempelantwort mit dieser Anforderung, um eine <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" /> zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="20d77-185">Combines an encoded timestamp response with this request to produce a <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />.</span></span></summary>
        <returns><span data-ttu-id="20d77-186">Das Zeitstempeltoken aus der Antwort, das dieser Anforderung entspricht.</span><span class="sxs-lookup"><span data-stu-id="20d77-186">The timestamp token from the response that corresponds to this request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="20d77-187">Diese Methode interpretiert den Anfang `responseBytes` als IETF RFC 3161-`TimeStampResp`.</span><span class="sxs-lookup"><span data-stu-id="20d77-187">This method interprets the beginning of `responseBytes` as an IETF RFC 3161 `TimeStampResp`.</span></span>
<span data-ttu-id="20d77-188">Wenn die Antwort nicht decodiert werden kann, lautet der Antwortstatus nicht `granted` oder `grantedWithMods`, das ausgegebene Zeitstempel Token kann nicht erfolgreich decodiert werden, oder das Zeitstempel-Token entspricht dieser Anforderung nicht gemäß den Akzeptanz Kriterien von IETF RFC 3161 (vor allem Abschnitte 2.4.1 und 2.4.2), dann wird ein <xref:System.Security.Cryptography.CryptographicException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="20d77-188">If the response cannot be decoded, the response status is not `granted` or `grantedWithMods`, the issued timestamp token does not successfully decode, or the timestamp token does not match this request per the acceptance criteria of IETF RFC 3161 (chiefly, sections 2.4.1 and 2.4.2), then a <xref:System.Security.Cryptography.CryptographicException> is thrown.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestedPolicyId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid RequestedPolicyId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid RequestedPolicyId" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestedPolicyId As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ RequestedPolicyId { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestedPolicyId : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d77-189">Ruft die Richtlinien-ID für die Anforderung ab oder <see langword="null" />, wenn keine Richtlinien-ID angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="20d77-189">Gets the policy ID for the request, or <see langword="null" /> when no policy ID was requested.</span></span></summary>
        <value><span data-ttu-id="20d77-190">Die Richtlinien-ID für die Anforderung oder <see langword="null" />, wenn keine Richtlinien-ID angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="20d77-190">The policy ID for the request, or <see langword="null" /> when no policy ID was requested.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestSignerCertificate">
      <MemberSignature Language="C#" Value="public bool RequestSignerCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequestSignerCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestSignerCertificate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequestSignerCertificate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestSignerCertificate : bool" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d77-191">Ruft einen Wert ab, der anzeigt, ob die Anforderung angegeben hat, dass das Zeitstempel-Autoritätszertifikat in der Antwort vorhanden sein muss.</span><span class="sxs-lookup"><span data-stu-id="20d77-191">Gets a value indicating whether or not the request indicated that the timestamp authority certificate is required to be in the response.</span></span></summary>
        <value><span data-ttu-id="20d77-192"><see langword="true" />, wenn die Antwort das Zeitstempel Zertifizierungsstellen-Zertifikat enthalten muss. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-192"><see langword="true" /> if the response must include the timestamp authority certificate; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecode">
      <MemberSignature Language="C#" Value="public static bool TryDecode (ReadOnlyMemory&lt;byte&gt; encodedBytes, out System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest request, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryDecode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; encodedBytes, [out] class System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest&amp; request, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryDecode (encodedBytes As ReadOnlyMemory(Of Byte), ByRef request As Rfc3161TimestampRequest, ByRef bytesConsumed As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryDecode(ReadOnlyMemory&lt;System::Byte&gt; encodedBytes, [Runtime::InteropServices::Out] System::Security::Cryptography::Pkcs::Rfc3161TimestampRequest ^ % request, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member TryDecode : ReadOnlyMemory&lt;byte&gt; * Rfc3161TimestampRequest * int -&gt; bool" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode (encodedBytes, request, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedBytes" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="request" Type="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="encodedBytes"><span data-ttu-id="20d77-193">Der Puffer, der eine DER-codierte Zeitstempelanforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="20d77-193">The buffer containing a DER-encoded timestamp request.</span></span></param>
        <param name="request"><span data-ttu-id="20d77-194">Mit dieser Methode wird die erfolgreich decodierte Zeitstempelanforderung zurückgegeben, falls die Decodierung erfolgreich war, oder <see langword="null" />, wenn die Decodierung fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="20d77-194">When this method returns, the successfully decoded timestamp request if decoding succeeded, or <see langword="null" /> if decoding failed.</span></span> <span data-ttu-id="20d77-195">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-195">This parameter is treated as uninitialized.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="20d77-196">Mit dieser Methode wird die Anzahl der Bytes zurückgegeben, die aus <paramref name="encodedBytes" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="20d77-196">When this method returns, the number of bytes that were read from <paramref name="encodedBytes" />.</span></span> <span data-ttu-id="20d77-197">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-197">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="20d77-198">Versucht, den Inhalt von <paramref name="encodedBytes" /> als DER-codierten Zeitstempelanforderung zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="20d77-198">Attemps to interpret the contents of <paramref name="encodedBytes" /> as a DER-encoded Timestamp Request.</span></span></summary>
        <returns><span data-ttu-id="20d77-199"><see langword="true" />, wenn <paramref name="encodedBytes" /> erfolgreich als Zeitstempelanforderung interpretiert wurde. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-199"><see langword="true" /> if <paramref name="encodedBytes" /> was successfully interpreted as a Timestamp Request; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="rfc3161TimestampRequest.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="20d77-200">Der Puffer, der die codierte Anforderung empfangen soll.</span><span class="sxs-lookup"><span data-stu-id="20d77-200">The buffer to receive the encoded request.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="20d77-201">Nach Ausführung dieser Methode die Gesamtzahl der in <paramref name="destination" /> geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="20d77-201">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="20d77-202">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="20d77-202">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="20d77-203">Versucht, die Instanz als <c>TimeStampReq</c> aus IETF RFC 3161 zu codieren, wobei die Bytes in den bereitgestellten Puffer geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="20d77-203">Attempts to encode the instance as an IETF RFC 3161 <c>TimeStampReq</c>, writing the bytes into the provided buffer.</span></span></summary>
        <returns><span data-ttu-id="20d77-204"><see langword="true" />, wenn <paramref name="destination" /> zum Empfangen der codierten Anforderung lang genug ist. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20d77-204"><see langword="true" />if <paramref name="destination" /> is long enough to receive the encoded request; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.1</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d77-205">Ruft die Versionsnummer des Datenformats für diese Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="20d77-205">Gets the data format version number for this request.</span></span></summary>
        <value><span data-ttu-id="20d77-206">Die Versionsnummer des Datenformats für diese Anforderung.</span><span class="sxs-lookup"><span data-stu-id="20d77-206">The data format version number for this request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
