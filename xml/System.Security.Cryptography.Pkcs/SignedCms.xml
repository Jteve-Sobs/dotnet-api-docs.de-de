<Type Name="SignedCms" FullName="System.Security.Cryptography.Pkcs.SignedCms">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b81e3bf5983d9ed46ce185ecdfdc77527146b7e4" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780847" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SignedCms" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SignedCms extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.SignedCms" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignedCms" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedCms sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Mit der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse können CMS/PKCS #7-Meldungen signiert und überprüft werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Cryptographic Message Syntax RFC gibt die folgenden MIME-Typen und die Dateinamenerweiterungen für CMS/PKCS #7-Nachrichten mit der Content-Arten an.  
  
|Inhaltstyp|MIME-Typ|Erweiterung|  
|------------------|---------------|---------------|  
|envelopedData|Anwendung/pkcs7-MIME-|P7M|  
|signedData|Anwendung/pkcs7-Signatur|.p7s.p7c|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Der <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" />-Konstruktor erstellt eine Instanz der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Cryptography.Pkcs.SignedCms> -Klasse verfügt über die folgenden Standardwerte für die Eigenschaft.  
  
|Eigenschaft|Standardwert|  
|--------------|-------------------|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>|1.2.840.113549.1.7.1 (Daten) Länge: 0 (null)|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>|Status getrennt: `false` der signierte Inhalt ist in der CMS/PKCS #7-Meldung zusammen mit den Informationen zur Signatur enthalten.|  
  
 Die Standardeinstellung <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> für Signaturgeber lautet SubjectIdentifierType.IssuerAndSerialNumber.  
  
 Wenn der getrennte Status ist `false` (Standard), der signierte Inhalt ist in der CMS/PKCS #7-Meldung zusammen mit den Informationen zur Signatur enthalten. Wenn der getrennte Status ist `true`, Clients, die nicht decodiert werden S/MIME-Nachrichten können können weiterhin den Inhalt der Nachricht angezeigt, gesondert gesendet. Dies kann in einer Anwendung zur Archivierung nützlich sein, der Nachrichteninhalt archiviert, ob der Absender der Nachricht für die Echtheit überprüft werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signerIdentifierType As SubjectIdentifierType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">Ein <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />-Member, der den Standard-Antragstellerbezeichnertyp für Signaturgeber angibt.</param>
        <summary>Der <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> Konstruktor erstellt eine Instanz der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse unter Verwendung des angegebenen Antragstellerbezeichnertyps als Standard-Antragstellerbezeichnertyp für Signaturgeber.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardwerte für Eigenschaften mit diesem Konstruktor verwendet, finden Sie unter <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Wenn der getrennte Status ist `false` (Standard), der signierte Inhalt ist in der CMS/PKCS #7-Meldung zusammen mit den Informationen zur Signatur enthalten. Wenn der getrennte Status ist `true`, Clients, die nicht decodiert werden S/MIME-Nachrichten können können weiterhin den Inhalt der Nachricht angezeigt, gesondert gesendet. Dies kann in einer Anwendung zur Archivierung nützlich sein, die Inhalte archiviert, ob der Absender der Nachricht für die Echtheit überprüft werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo contentInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As ContentInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <summary>Der <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" />-Konstruktor erstellt mithilfe der angegebenen Inhaltsinformationen als inneren Inhalt eine Instanz der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardwerte für Eigenschaften mit diesem Konstruktor verwendet, finden Sie unter <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Wenn der getrennte Status ist `false` (Standard), der signierte Inhalt ist in der CMS/PKCS #7-Meldung zusammen mit den Informationen zur Signatur enthalten. Wenn der getrennte Status ist `true`, Clients, die nicht decodiert werden S/MIME-Nachrichten können können weiterhin den Inhalt der Nachricht angezeigt, gesondert gesendet. Dies kann in einer Anwendung zur Archivierung nützlich sein, die Inhalte archiviert, ob der Absender der Nachricht für die Echtheit überprüft werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As ContentInfo, detached As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="detached" Type="System.Boolean" Index="1" />
      </Parameters>
      <Docs>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <param name="detached">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob es sich bei dem <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Objekt um eine getrennte Signatur handelt. Wenn <c>detached</c> den Wert <see langword="true" /> aufweist, ist die Signatur nicht getrennt. Wenn <c>detached</c> den Wert <see langword="false" /> aufweist, ist die Signatur nicht getrennt.</param>
        <summary>Der <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />-Konstruktor erstellt mithilfe der angegebenen Inhaltsinformationen als inneren Inhalt und mithilfe des Trennungszustands eine Instanz der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardwerte für Eigenschaften mit diesem Konstruktor verwendet, finden Sie unter <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Wenn der getrennte Status ist `false` (Standard), der signierte Inhalt ist in der CMS/PKCS #7-Meldung zusammen mit den Informationen zur Signatur enthalten. Wenn der getrennte Status ist `true`, Clients, die nicht decodiert werden S/MIME-Nachrichten können können weiterhin den Inhalt der Nachricht angezeigt, gesondert gesendet. Dies kann in einer Anwendung zur Archivierung nützlich sein, die Inhalte archiviert, ob der Absender der Nachricht für die Echtheit überprüft werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo contentInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signerIdentifierType As SubjectIdentifierType, content As ContentInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" Index="0" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">Ein <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />-Member, der den Standard-Antragstellerbezeichnertyp für Signaturgeber angibt.</param>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <summary>Der <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> Konstruktor erstellt eine Instanz der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse unter Verwendung des angegebenen Antragstellerbezeichnertyps als Standard-Antragstellerbezeichnertyp für Signaturgeber und mithilfe der Inhaltsinformationen als inneren Inhalt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardwerte für Eigenschaften mit diesem Konstruktor verwendet, finden Sie unter <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Wenn der getrennte Status ist `false` (Standard), der signierte Inhalt ist in der CMS/PKCS #7-Meldung zusammen mit den Informationen zur Signatur enthalten. Wenn der getrennte Status ist `true`, Clients, die nicht decodiert werden S/MIME-Nachrichten können können weiterhin den Inhalt der Nachricht angezeigt, gesondert gesendet. Dies kann in einer Anwendung zur Archivierung nützlich sein, die Inhalte archiviert, ob der Absender der Nachricht für die Echtheit überprüft werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signerIdentifierType As SubjectIdentifierType, content As ContentInfo, detached As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" Index="0" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="detached" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">Ein <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />-Member, der den Standard-Antragstellerbezeichnertyp für Signaturgeber angibt.</param>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <param name="detached">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob es sich bei dem <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Objekt um eine getrennte Signatur handelt. Wenn <c>detached</c> den Wert <see langword="true" /> aufweist, ist die Signatur nicht getrennt. Wenn detached den Wert <see langword="false" /> aufweist, ist die Signatur nicht getrennt.</param>
        <summary>Der <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> Konstruktor erstellt unter Verwendung des angegebenen Antragstellerbezeichnertyps als Standard-Antragstellerbezeichnertyp für Signaturgeber, mithilfe der Inhaltsinformationen als inneren Inhalt und unter Einbeziehung des Trennungszustands eine Instanz der <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der getrennte Status ist `false` (Standard), der signierte Inhalt ist in der CMS/PKCS #7-Meldung zusammen mit den Informationen zur Signatur enthalten. Wenn der getrennte Status ist `true`, Clients, die nicht decodiert werden S/MIME-Nachrichten können können weiterhin den Inhalt der Nachricht angezeigt, gesondert gesendet. Dies kann in einer Anwendung zur Archivierung nützlich sein, der Nachrichteninhalt archiviert, und zwar unabhängig davon, ob der Absender der Nachricht für die Echtheit überprüft werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Certificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificates As X509Certificate2Collection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ Certificates { System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />-Eigenschaft ruft die der codierten CMS/PKCS #7-Meldung zugeordneten Zertifikate ab.</summary>
        <value>Eine <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />-Auflistung, die die Gruppe der Zertifikate für die codierte CMS/PKCS #7-Meldung darstellt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="CheckHash">
      <MemberSignature Language="C#" Value="public void CheckHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckHash ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckHash();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />-Methode überprüft die Datenintegrität der CMS/PKCS #7-Meldung. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> ist eine spezialisierte Methode, die in bestimmten Sicherheitsinfrastrukturanwendungen verwendet wird, die nur den Hash von der CMS-Meldung überprüfen möchten, anstatt eine vollständige Überprüfung der digitalen Signatur auszuführen. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> authentifiziert weder den Autor noch den Absender der Meldung, da bei dieser Methode keine Überprüfung von digitalen Signaturen erfolgt. Zur allgemeinen Integritäts- und Authentizitätsprüfung einer CMS/PKCS #7-Meldung verwenden Sie die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />-Methode oder die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet keine Authentifizierung von der CMS/PKCS #7-Meldung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ein Methodenaufruf für den aktuellen Zustand des Objekts war ungültig.</exception>
        <altmember cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />
        <altmember cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Überprüft die digitalen Signaturen der CMS/PKCS #7-Meldung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifySignatureOnly">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob nur die digitalen Signaturen überprüft werden, ohne die Zertifikate der Signaturgeber zu validieren.  
  
 Wenn <c>verifySignatureOnly</c><see langword="true" /> ist, werden nur die digitalen Signaturen überprüft. Bei <see langword="false" /> werden die digitalen Signaturen überprüft sowie die Zertifikate der Signaturgeber und die Zwecke der Zertifikate validiert. Der Zertifikatszweck ist gültig, wenn das Zertifikat keine Schlüsselverwendung aufweist bzw. wenn die Schlüsselverwendung die digitalen Signaturen oder eine Nichtabstreitbarkeit unterstützt.</param>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />-Methode überprüft die digitalen Signaturen auf der CMS/PKCS #7-Meldung und validiert optional die Zertifikate der Signaturgeber.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft alle Signaturen, einschließlich der Gegensignaturen, auf der CMS/PKCS #7-Meldung. Wenn mit Vorzeichen mit der Nachricht enthaltenen Attribute vorhanden sind, werden diese Attribute auch überprüft werden. Wenn die Option ausgewählt wird, um Zertifikate zu überprüfen, wird der gesamte eingeschlossene Teil der Zertifikatskette validiert.  
  
 Diese Methode löst eine Ausnahme aus, wenn die Überprüfung einer digitalen Signatur ein Fehler auftritt oder Überprüfung nicht erfüllt sind.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Platzierung von <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29> zwischen die erforderlichen Schritte zum Überprüfen der Signaturen einer <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht. In diesem Beispiel wird der Nachrichteninhalt nicht getrennt werden. Der Inhalt der Meldung ist in enthalten die <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 Das folgende Beispiel zeigt die Platzierung von <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29> zwischen die erforderlichen Schritte zum Überprüfen der Signaturen einer <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht. In diesem Beispiel der Nachrichteninhalt wird getrennt, daher muss der Inhalt der Meldung überprüft, unabhängig von der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
        <exception cref="T:System.InvalidOperationException">Ein Methodenaufruf für den aktuellen Zustand des Objekts war ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (extraStore As X509Certificate2Collection, verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ extraStore, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraStore" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extraStore">Ein <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />-Objekt, mit dem die Zertifikatskette validiert werden kann. Wenn keine weiteren Zertifikate zur Validierung der Zertifikatskette herangezogen werden sollen, verwenden Sie <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> anstelle von <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</param>
        <param name="verifySignatureOnly">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob nur die digitalen Signaturen überprüft werden, ohne die Zertifikate der Signaturgeber zu validieren.  
  
 Wenn <c>verifySignatureOnly</c><see langword="true" /> ist, werden nur die digitalen Signaturen überprüft. Bei <see langword="false" /> werden die digitalen Signaturen überprüft sowie die Zertifikate der Signaturgeber und die Zwecke der Zertifikate validiert. Der Zertifikatszweck ist gültig, wenn das Zertifikat keine Schlüsselverwendung aufweist bzw. wenn die Schlüsselverwendung die digitalen Signaturen oder eine Nichtabstreitbarkeit unterstützt.</param>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />-Methode überprüft die digitalen Signaturen der CMS/PKCS #7-Meldung mithilfe der angebenen Auflistung von Zertifikaten und validiert optional die Zertifikate der Signaturgeber.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft alle Signaturen, einschließlich der Gegensignaturen, auf der CMS/PKCS #7-Meldung. Wenn mit Vorzeichen mit der Nachricht enthaltenen Attribute vorhanden sind, werden diese Attribute auch überprüft werden. Wenn die Option ausgewählt wird, um Zertifikate zu überprüfen, wird der gesamte eingeschlossene Teil der Zertifikatskette validiert.  
  
 Diese Methode löst eine Ausnahme aus, wenn die Überprüfung einer digitalen Signatur ein Fehler auftritt oder Überprüfung nicht erfüllt sind.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Platzierung von <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29> zwischen die erforderlichen Schritte zum Überprüfen der Signaturen einer <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht. In diesem Beispiel der Nachrichteninhalt nicht getrennt ist, damit der Inhalt der Meldung, in enthalten ist der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 Das folgende Beispiel zeigt die Platzierung von <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29> zwischen die erforderlichen Schritte zum Überprüfen der Signaturen einer <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht. In diesem Beispiel der Nachrichteninhalt wird getrennt, damit der Inhalt der Meldung werden, unabhängig von überprüft muss der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
        <exception cref="T:System.InvalidOperationException">Ein Methodenaufruf für den aktuellen Zustand des Objekts war ungültig.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Signatur und fügt der CMS/PKCS #7-Meldung die Signatur hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" />-Methode fordert den Benutzer auf, ein Signaturzertifikat auszuwählen, erstellt eine Signatur und fügt der CMS/PKCS #7-Meldung die Signatur hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode zeigt eine Benutzeroberfläche, in der Sie Signaturgeber für diese Nachricht auswählen. Dies erfordert, dass der aktuelle Prozess, in ausgeführt wird *interaktiven Modus*, d. h., die die <xref:System.Environment.UserInteractive%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`. Ein Prozess befindet sich normalerweise im interaktiven Modus, es sei denn, eine Dienstprozess oder die Ausführung in einer Webanwendung ist.  
  
 Signaturgeber, dessen Zertifikate die folgenden Bedingungen erfüllen, werden in der Liste angezeigt werden:  
  
-   Das Zertifikat verfügt über einen zugeordneten privaten Schlüssel.  
  
-   Das Zertifikat ist in seinem Gültigkeitszeitraum liegen.  
  
-   Das Zertifikat weist keine Schlüsselverwendung oder eine Schlüsselverwendung, die digitale Signaturen oder Nichtabstreitbarkeit unterstützt.  
  
 Signaturgeberzertifikate ausgewählt sind, aus dem persönlichen Speicher.  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Die folgenden Berechtigungen sind erforderlich, um die Benutzeroberfläche anzuzeigen:  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=nameWithType>  
  
 Die folgenden Berechtigungen sind erforderlich, auf den Signaturschlüssel zuzugreifen:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Schritte zum Berechnen einer Signatur ein <xref:System.Security.Cryptography.Pkcs.SignedCms> -Meldung mit dem Inhalt von Nachrichten, die nicht getrennt ist. In diesem Fall wird der Inhalt der Meldung enthalten, der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs_SignedCMS#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 Das folgende Beispiel zeigt die Schritte zum Berechnen einer Signatur ein <xref:System.Security.Cryptography.Pkcs.SignedCms> -Meldung mit dem Inhalt von Nachrichten, die getrennt ist. In diesem Fall muss der Inhalt der Meldung überprüft werden, unabhängig von der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs_SignedCMS#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (signer As CmsSigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::Pkcs::CmsSigner ^ signer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
      </Parameters>
      <Docs>
        <param name="signer">Ein <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />-Objekt, das den Signaturgeber darstellt.</param>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />-Methode erstellt mithilfe des angegebenen Signaturgebers eine Signatur und fügt der CMS/PKCS #7-Meldung die Signatur hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Die folgenden Berechtigungen sind erforderlich, auf den Signaturschlüssel zuzugreifen:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Schritte zum Berechnen einer Signatur ein <xref:System.Security.Cryptography.Pkcs.SignedCms> -Meldung mit dem Inhalt von Nachrichten, die nicht getrennt ist. In diesem Fall wird der Inhalt der Meldung enthalten, der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs_SignedCMS#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 Das folgende Beispiel zeigt die Schritte zum Berechnen einer Signatur ein <xref:System.Security.Cryptography.Pkcs.SignedCms> -Meldung mit dem Inhalt von Nachrichten, die getrennt ist. In diesem Fall muss der Inhalt der Meldung überprüft werden, unabhängig von der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs_SignedCMS#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (signer As CmsSigner, silent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::Pkcs::CmsSigner ^ signer, bool silent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
        <Parameter Name="silent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="signer">Ein <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />-Objekt, das den Signaturgeber darstellt.</param>
        <param name="silent">
          <see langword="false" />, um den Benutzer zum Auswählen eines Signaturzertifikats aufzufordern.</param>
        <summary>Erstellt mithilfe des angegebenen Signaturgebers eine Signatur und fügt der CMS/PKCS #7-Meldung die Signatur hinzu. Wenn der Wert des silent-Parameters <see langword="false" /> lautet und die <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" />-Eigenschaft des durch den Signaturgeber-Parameter angegebenen <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />-Objekts nicht auf ein gültiges Zertifikat festgelegt ist, wird der Benutzer durch diese Methode zum Auswählen eines Signaturzertifikats aufgefordert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Die folgenden Berechtigungen sind erforderlich, um die Benutzeroberfläche anzuzeigen:  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=nameWithType>  
  
 Die folgenden Berechtigungen sind erforderlich, auf den Signaturschlüssel zuzugreifen:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
        <exception cref="T:System.InvalidOperationException">Der Wert des <paramref name="silent" />-Parameters ist <see langword="true" />, und es wird kein Signaturzertifikat angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.ContentInfo ContentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentInfo As ContentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::ContentInfo ^ ContentInfo { System::Security::Cryptography::Pkcs::ContentInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.ContentInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />-Eigenschaft ruft den inneren Inhalt der codierten CMS/PKCS #7-Meldung ab.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" />-Objekt, das den Inhalt der codierten CMS/PKCS #7-Meldung darstellt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public void Decode (byte[] encodedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decode(unsigned int8[] encodedMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decode (encodedMessage As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decode(cli::array &lt;System::Byte&gt; ^ encodedMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedMessage" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedMessage">Ein Array von Bytewerten, das die codierte CMS/PKCS #7-Meldung darstellt, die decodiert werden soll.</param>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />-Methode decodiert eine codierte <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Meldung. Nach erfolgreicher Decodierung können die decodierten Informationen aus den Eigenschaften des <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Objekts abgerufen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode setzt alle Membervariablen des Objekts anhand der Informationen aus der erfolgreichen Decodierung abgerufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Platzierung der <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A> Methode beim Überprüfen der Signaturen einer <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht. In diesem Beispiel der Nachrichteninhalt nicht getrennt ist, damit der Inhalt der Meldung, in enthalten ist der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 Das folgende Beispiel zeigt die Platzierung der <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A> Methode beim Überprüfen der Signaturen einer <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht. In diesem Beispiel der Nachrichteninhalt wird getrennt, damit der Inhalt der Meldung werden, unabhängig von überprüft muss der <xref:System.Security.Cryptography.Pkcs.SignedCms> Nachricht.  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      </Docs>
    </Member>
    <Member MemberName="Detached">
      <MemberSignature Language="C#" Value="public bool Detached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Detached" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Detached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Detached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />-Eigenschaft ruft die Information ab, ob für das <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Objekt eine getrennte Signatur zu verwenden ist.</summary>
        <value>Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob es sich bei dem <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />-Objekt um eine getrennte Signatur handelt. Wenn diese Eigenschaft <see langword="true" /> ist, wird die Signatur getrennt. Wenn diese Eigenschaft <see langword="false" /> ist, wird die Signatur nicht getrennt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />-Methode codiert die im Objekt enthaltenen Informationen in eine CMS/PKCS #7-Meldung.</summary>
        <returns>Ein Array von Bytewerten, das die verschlüsselte Meldung darstellt. Die codierte Meldung kann von der <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />-Methode decodiert werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
        <exception cref="T:System.InvalidOperationException">Ein Methodenaufruf für den aktuellen Zustand des Objekts war ungültig.</exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Entfernt die angegebene Signatur aus der <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />-Auflistung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index der zu entfernenden ganzen Zahl.</param>
        <summary>Entfernt die Signatur am angegebenen Index aus der <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />-Auflistung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Eine CMS/PKCS #7-Meldung wird nicht signiert, und <paramref name="index" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.  
  
 - oder -   
  
 <paramref name="index" /> ist größer als die Signaturanzahl minus 1.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die Signatur konnte nicht entfernt werden.  
  
 - oder -   
  
 Ein interner kryptografischer Fehler trat auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Security.Cryptography.Pkcs.SignerInfo signerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(System::Security::Cryptography::Pkcs::SignerInfo ^ signerInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signerInfo" Type="System.Security.Cryptography.Pkcs.SignerInfo" />
      </Parameters>
      <Docs>
        <param name="signerInfo">Ein <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />-Objekt, das die zu entfernende Gegensignatur darstellt.</param>
        <summary>Die <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />-Methode entfernt die Signatur für das angegebene <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />-Objekt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Ein NULL-Verweis wurde an eine Methode übergeben, die diesen nicht als gültiges Argument annimmt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert eines Arguments lag außerhalb des zulässigen Wertebereichs, der durch die aufgerufene Methode definiert ist.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein kryptografischer Vorgang konnte nicht abgeschlossen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignerInfos">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignerInfos As SignerInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::SignerInfoCollection ^ SignerInfos { System::Security::Cryptography::Pkcs::SignerInfoCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SignerInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />-Eigenschaft ruft die der CMS/PKCS #7-Meldung zugeordnete <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />-Auflistung ab.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />-Objekt, das die Signaturgeberinformationen für die CMS/PKCS #7-Meldung angibt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />-Eigenschaft ruft die Version der CMS/PKCS #7-Meldung ab.</summary>
        <value>Ein int-Wert, der die Version einer CMS/PKCS #7-Meldung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Version bestimmt, ob die Nachricht eine PKCS #7-Nachricht oder eine Nachricht Cryptographic Message Syntax (CMS) ist. CMS ist eine neuere Obermenge von PKCS #7.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      </Docs>
    </Member>
  </Members>
</Type>