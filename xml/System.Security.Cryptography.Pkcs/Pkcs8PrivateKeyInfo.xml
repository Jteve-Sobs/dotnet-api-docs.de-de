<Type Name="Pkcs8PrivateKeyInfo" FullName="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6edf5b6c3f19258d605e125c1dc40128eec5ace3" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82473490" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs8PrivateKeyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs8PrivateKeyInfo sealed" />
  <TypeSignature Language="F#" Value="type Pkcs8PrivateKeyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="db04e-101">Ermöglicht die Untersuchung und Erstellung von PKCS#8-PrivateKeyInfo- und -EncryptedPrivateKeyInfo-Werten.</span><span class="sxs-lookup"><span data-stu-id="db04e-101">Enables the inspection of and creation of PKCS#8 PrivateKeyInfo and EncryptedPrivateKeyInfo values.</span></span> <span data-ttu-id="db04e-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="db04e-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs8PrivateKeyInfo (System.Security.Cryptography.Oid algorithmId, ReadOnlyMemory&lt;byte&gt;? algorithmParameters, ReadOnlyMemory&lt;byte&gt; privateKey, bool skipCopies = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Oid algorithmId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; algorithmParameters, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; privateKey, bool skipCopies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmId As Oid, algorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte)), privateKey As ReadOnlyMemory(Of Byte), Optional skipCopies As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo : System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * ReadOnlyMemory&lt;byte&gt; * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo (algorithmId, algorithmParameters, privateKey, skipCopies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="algorithmParameters" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="privateKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="skipCopies" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithmId"><span data-ttu-id="db04e-103">Der Objektbezeichner (OID), mit dem der asymmetrische Algorithmus identifiziert wird, für den dieser Schlüssel bestimmt ist.</span><span class="sxs-lookup"><span data-stu-id="db04e-103">The Object Identifier (OID) identifying the asymmetric algorithm this key is for.</span></span></param>
        <param name="algorithmParameters"><span data-ttu-id="db04e-104">Die BER-codierten Algorithmusparameter, die diesem Schlüssel zugeordnet sind, oder <see langword="null" />, um Algorithmusparameter beim Codieren wegzulassen.</span><span class="sxs-lookup"><span data-stu-id="db04e-104">The BER-encoded algorithm parameters associated with this key, or <see langword="null" /> to omit algorithm parameters when encoding.</span></span></param>
        <param name="privateKey"><span data-ttu-id="db04e-105">Der algorithmusspezifische codierte private Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="db04e-105">The algorithm-specific encoded private key.</span></span></param>
        <param name="skipCopies"><span data-ttu-id="db04e-106"><see langword="true" /> zum Speichern von <paramref name="algorithmParameters" /> und <paramref name="privateKey" />, ohne eine defensive Kopie zu erstellen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-106"><see langword="true" /> to store <paramref name="algorithmParameters" /> and <paramref name="privateKey" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="db04e-107">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-107">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="db04e-108">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="db04e-109">Für den `privateKey`-Parameter wird keine Validierung durchgeführt. nicht alle Algorithmen erfordern einen ber-codierten Wert.</span><span class="sxs-lookup"><span data-stu-id="db04e-109">No validation is done on the `privateKey` parameter; not all algorithms require a BER-encoded value.</span></span>

<span data-ttu-id="db04e-110">Das Standardverhalten dieses Konstruktors besteht darin, eine defensive Kopie der `algorithmParameters` und `privateKey` Parameter zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="db04e-110">The default behavior of this constructor is to make a defensive copy of both the `algorithmParameters` and the `privateKey` parameters.</span></span>
<span data-ttu-id="db04e-111">Wenn der `skipCopies`-Parameter `true`ist, wird diese Defensive Kopie übersprungen.</span><span class="sxs-lookup"><span data-stu-id="db04e-111">When the `skipCopies` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="db04e-112">Wenn die Defensive Kopie übersprungen wird und der Inhalt von `algorithmParameters` oder `privateKey` sich während der Lebensdauer des zurückgegebenen Werts oder eines beliebigen Objekts ändert, das von seinen Methoden oder Eigenschaften erzeugt wird, können Methoden und Eigenschaften für diese Objekte aufgrund des beschädigten Zustands zu Fehlern beim Ergebnis oder zum Auslösen von Ausnahmen führen.</span><span class="sxs-lookup"><span data-stu-id="db04e-112">If the defensive copy is skipped and the contents of either `algorithmParameters` or `privateKey` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="db04e-113">Bei Aufrufern wird daher empfohlen, nur einen `true` Wert für den Parameter `skipCopies` zu verwenden, wenn Sie sicher sein können, dass die Daten intakt bleiben.</span><span class="sxs-lookup"><span data-stu-id="db04e-113">Callers are therefore advised to only use a `true` value for the `skipCopies` parameter when they can be reasonably assured that the data will stay intact.</span></span>
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db04e-114">Der Parameter <paramref name="algorithmId" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-114">The <paramref name="algorithmId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="db04e-115">Der Parameter <paramref name="algorithmParameters" /> ist nicht <see langword="null" />, leer oder ein einzelner BER-codierter Wert.</span><span class="sxs-lookup"><span data-stu-id="db04e-115">The <paramref name="algorithmParameters" /> parameter is not <see langword="null" />, empty, or a single BER-encoded value.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid AlgorithmId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid AlgorithmId" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmId As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ AlgorithmId { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmId : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db04e-116">Ruft den Wert des Objektbezeichners (OID) ab, mit dem der Algorithmus identifiziert wird, für den dieser Schlüssel bestimmt ist.</span><span class="sxs-lookup"><span data-stu-id="db04e-116">Gets the Object Identifier (OID) value identifying the algorithm this key is for.</span></span></summary>
        <value><span data-ttu-id="db04e-117">Der OID-Wert (Object Identifier), der den Algorithmus identifiziert, für den dieser Schlüssel vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="db04e-117">The Object Identifier (OID) value identifying the algorithm this key is for.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmParameters">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt;? AlgorithmParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; AlgorithmParameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; AlgorithmParameters { Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmParameters : Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db04e-118">Ruft einen Arbeitsspeicherwert mit den BER-codierten Algorithmusparametern ab, die diesem Schlüssel zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="db04e-118">Gets a memory value containing the BER-encoded algorithm parameters associated with this key.</span></span></summary>
        <value><span data-ttu-id="db04e-119">Ein Speicher Wert, der die mit diesem Schlüssel verknüpften ber-codierten Algorithmusparameter enthält, oder <see langword="null" />, wenn keine Parameter vorhanden waren.</span><span class="sxs-lookup"><span data-stu-id="db04e-119">A memory value containing the BER-encoded algorithm parameters associated with this key, or <see langword="null" /> if no parameters were present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ Attributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Security.Cryptography.CryptographicAttributeObjectCollection" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db04e-120">Ruft die änderbare Sammlung mit Attributen für diesen privaten Schlüssel ab.</span><span class="sxs-lookup"><span data-stu-id="db04e-120">Gets the modifiable collection of attributes for this private key.</span></span></summary>
        <value><span data-ttu-id="db04e-121">Die änderbare Auflistung von Attributen, die mit dem privaten Schlüssel codiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-121">The modifiable collection of attributes to encode with the private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create (System.Security.Cryptography.AsymmetricAlgorithm privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create(class System.Security.Cryptography.AsymmetricAlgorithm privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (privateKey As AsymmetricAlgorithm) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ Create(System::Security::Cryptography::AsymmetricAlgorithm ^ privateKey);" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create privateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="privateKey"><span data-ttu-id="db04e-122">Der private Schlüssel, der in einem PKCS#8-PrivateKeyInfo-Element dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="db04e-122">The private key to represent in a PKCS#8 PrivateKeyInfo.</span></span></param>
        <summary><span data-ttu-id="db04e-123">Exportiert einen angegebenen Schlüssel als PKCS#8-PrivateKeyInfo-Element und gibt dessen decodierte Interpretation zurück.</span><span class="sxs-lookup"><span data-stu-id="db04e-123">Exports a specified key as a PKCS#8 PrivateKeyInfo and returns its decoded interpretation.</span></span></summary>
        <returns><span data-ttu-id="db04e-124">Die decodierte Interpretation des exportierten PKCS#8-PrivateKeyInfo-Elements.</span><span class="sxs-lookup"><span data-stu-id="db04e-124">The decoded interpretation of the exported PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db04e-125">Der Parameter <paramref name="privateKey" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-125">The <paramref name="privateKey" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode (ReadOnlyMemory&lt;byte&gt; source, out int bytesRead, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer, Optional skipCopy As Boolean = false) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; * int * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode (source, bytesRead, skipCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="db04e-126">Die Daten, die als PKCS#8-PrivateKeyInfo-Wert interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-126">The data to interpret as a PKCS#8 PrivateKeyInfo value.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="db04e-127">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die aus <paramref name="source" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="db04e-127">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="db04e-128">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="db04e-128">This parameter is treated as uninitialized.</span></span></param>
        <param name="skipCopy"><span data-ttu-id="db04e-129"><see langword="true" /> zum Speichern von <paramref name="source" />, ohne eine defensive Kopie zu erstellen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-129"><see langword="true" /> to store <paramref name="source" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="db04e-130">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-130">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="db04e-131">Liest die bereitgestellten Daten als PKCS#8-PrivateKeyInfo-Element aus und gibt eine Objektansicht des Inhalts zurück.</span><span class="sxs-lookup"><span data-stu-id="db04e-131">Reads the provided data as a PKCS#8 PrivateKeyInfo and returns an object view of the contents.</span></span></summary>
        <returns><span data-ttu-id="db04e-132">Eine Objektansicht des Inhalts, der als PKCS#8-PrivateKeyInfo-Element decodiert wurde.</span><span class="sxs-lookup"><span data-stu-id="db04e-132">An object view of the contents decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 <span data-ttu-id="db04e-133">Das Standardverhalten dieser Methode besteht darin, eine defensive Kopie der ersten `bytesConsumed` Bytes aus `source`zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="db04e-133">The default behavior of this method is to make a defensive copy of the first `bytesConsumed` bytes from `source`.</span></span>
<span data-ttu-id="db04e-134">Wenn der `skipCopy`-Parameter `true`ist, wird diese Defensive Kopie übersprungen.</span><span class="sxs-lookup"><span data-stu-id="db04e-134">When the `skipCopy` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="db04e-135">Wenn die Defensive Kopie übersprungen wird und sich der Inhalt der ersten `bytesConsumed` Bytes `source` während der Lebensdauer des zurückgegebenen Werts oder eines beliebigen Objekts ändert, das von seinen Methoden oder Eigenschaften erzeugt wird, können Methoden und Eigenschaften für diese Objekte aufgrund des beschädigten Zustands zu Fehlern beim Ergebnis führen oder Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="db04e-135">If the defensive copy is skipped and the contents of the first `bytesConsumed` bytes of `source` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="db04e-136">Bei Aufrufern wird daher empfohlen, nur einen `true` Wert für den Parameter `skipCopy` zu verwenden, wenn Sie sicher sein können, dass die Daten intakt bleiben.</span><span class="sxs-lookup"><span data-stu-id="db04e-136">Callers are therefore advised to only use a `true` value for the `skipCopy` parameter when they can be reasonably assured that the data will stay intact.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="db04e-137">Der Inhalt des Parameters <paramref name="source" /> wurde nicht erfolgreich als PKCS#8 PrivateKeyInfo decodiert.</span><span class="sxs-lookup"><span data-stu-id="db04e-137">The contents of the <paramref name="source" /> parameter were not successfully decoded as a PKCS#8 PrivateKeyInfo.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (passwordBytes As ReadOnlySpan(Of Byte), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;byte&gt; * ReadOnlyMemory&lt;byte&gt; * int -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (passwordBytes, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="db04e-138">Die Bytes, die als Kennwort bei der Entschlüsselung des Schlüsselmaterials verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="db04e-138">The bytes to use as a password when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="db04e-139">Die Daten, die als PKCS#8-EncryptedPrivateKeyInfo-Struktur in der ASN.1-BER-Codierung gelesen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-139">The data to read as a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="db04e-140">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die aus <paramref name="source" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="db04e-140">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="db04e-141">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="db04e-141">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="db04e-142">Entschlüsselt die angegebenen Daten mit dem bereitgestellten bytebasierten Kennwort und decodiert die Ausgabe in eine Objektansicht von PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="db04e-142">Decrypts the provided data using the provided byte-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="db04e-143">Eine Objektansicht des entschlüsselten Inhalts, der als PKCS#8-PrivateKeyInfo-Element decodiert wurde.</span><span class="sxs-lookup"><span data-stu-id="db04e-143">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db04e-144">Die Kenn Wort Bytes werden direkt an die kdf (Key derivations Function) übergeben, die vom Algorithmus verwendet wird, der durch `pbeParameters`angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="db04e-144">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="db04e-145">Dadurch wird die Kompatibilität mit anderen Systemen ermöglicht, bei denen bei der Verarbeitung von Kenn Wörtern mit PBKDF2 eine andere Text Codierung als UTF-8 verwendet wird (Kenn Wort basierte Schlüssel abderivations Funktion 2).</span><span class="sxs-lookup"><span data-stu-id="db04e-145">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 <span data-ttu-id="db04e-146">Diese Methode unterstützt nur die binäre Codierung (ber/CER/der) von "verschlüsseltedprivatekeyinfo".</span><span class="sxs-lookup"><span data-stu-id="db04e-146">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="db04e-147">Wenn der Wert Base64-codiert ist oder im PEM-Textformat vorliegt, muss der Aufrufer den Inhalt vor dem Aufrufen dieser Methode Base64-decodieren.</span><span class="sxs-lookup"><span data-stu-id="db04e-147">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="db04e-148">Das Kennwort ist falsch.</span><span class="sxs-lookup"><span data-stu-id="db04e-148">The password is incorrect.</span></span>

<span data-ttu-id="db04e-149">Oder</span><span class="sxs-lookup"><span data-stu-id="db04e-149">-or-</span></span>

<span data-ttu-id="db04e-150">Der Inhalt von <paramref name="source" /> gibt an, dass die anzuwendende Schlüsselableitungsfunktion die Legacy-PKCS#12-KDF ist, die <see cref="T:System.Char" />-basierte Kennwörter erfordert.</span><span class="sxs-lookup"><span data-stu-id="db04e-150">The contents of <paramref name="source" /> indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires <see cref="T:System.Char" />-based passwords.</span></span>

<span data-ttu-id="db04e-151">Oder</span><span class="sxs-lookup"><span data-stu-id="db04e-151">-or-</span></span>

<span data-ttu-id="db04e-152">Der Inhalt von <paramref name="source" /> stellt keine ASN.1-BER-codierte PKCS#8-EncryptedPrivateKeyInfo-Struktur dar.</span><span class="sxs-lookup"><span data-stu-id="db04e-152">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span></exception>
      </Docs>
      <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey" />
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (password As ReadOnlySpan(Of Char), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;char&gt; * ReadOnlyMemory&lt;byte&gt; * int -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (password, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="db04e-153">Das Kennwort, das bei der Entschlüsselung des Schlüsselmaterials verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="db04e-153">The password to use when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="db04e-154">Die Bytes einer PKCS#8-EncryptedPrivateKeyInfo-Struktur in der ASN.1-BER-Codierung.</span><span class="sxs-lookup"><span data-stu-id="db04e-154">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="db04e-155">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die aus <paramref name="source" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="db04e-155">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="db04e-156">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="db04e-156">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="db04e-157">Entschlüsselt die angegebenen Daten mit dem bereitgestellten zeichenbasierten Kennwort und decodiert die Ausgabe in eine Objektansicht von PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="db04e-157">Decrypts the provided data using the provided character-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="db04e-158">Eine Objektansicht des entschlüsselten Inhalts, der als PKCS#8-PrivateKeyInfo-Element decodiert wurde.</span><span class="sxs-lookup"><span data-stu-id="db04e-158">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db04e-159">Wenn der Inhalt `source` einen Algorithmus angibt, der PBKDF1 (Kenn Wort basierte Schlüssel abderivations Funktion 1) oder PBKDF2 (Kenn Wort basierte Schlüssel abderivations Funktion 2) verwendet, wird das Kennwort über die UTF-8-Codierung in Bytes konvertiert.</span><span class="sxs-lookup"><span data-stu-id="db04e-159">When the contents of `source` indicate an algorithm that uses PBKDF1 (Password-Based Key Derivation Function 1) or PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 <span data-ttu-id="db04e-160">Diese Methode unterstützt nur die binäre Codierung (ber/CER/der) von "verschlüsseltedprivatekeyinfo".</span><span class="sxs-lookup"><span data-stu-id="db04e-160">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="db04e-161">Wenn der Wert Base64-codiert ist oder im PEM-Textformat vorliegt, muss der Aufrufer den Inhalt vor dem Aufrufen dieser Methode Base64-decodieren.</span><span class="sxs-lookup"><span data-stu-id="db04e-161">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db04e-162">Codiert die Eigenschaftsdaten dieser Instanz als PKCS#8 PrivateKeyInfo und gibt die Codierung als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="db04e-162">Encodes the property data of this instance as a PKCS#8 PrivateKeyInfo and returns the encoding as a byte array.</span></span></summary>
        <returns><span data-ttu-id="db04e-163">Ein Bytearray, das die codierte Form von PKCS#8 PrivateKeyInfo darstellt.</span><span class="sxs-lookup"><span data-stu-id="db04e-163">A byte array representing the encoded form of the PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (passwordBytes As ReadOnlySpan(Of Byte), pbeParameters As PbeParameters) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="db04e-164">Die Bytes, die als Kennwort bei der Verschlüsselung des Schlüsselmaterials verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="db04e-164">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="db04e-165">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-165">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="db04e-166">Erzeugt ein PKCS#8-EncryptedPrivateKeyInfo-Element aus dem Eigenschafteninhalt dieses Objekts, nachdem die Verschlüsselung mit dem angegebenen bytebasierten Kennwort und Verschlüsselungsparametern durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="db04e-166">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="db04e-167">Ein Bytearray, das die codierte Form des PKCS#8-EncryptedPrivateKeyInfo-Elements enthält.</span><span class="sxs-lookup"><span data-stu-id="db04e-167">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db04e-168">Die Kenn Wort Bytes werden direkt an die kdf (Key derivations Function) übergeben, die vom Algorithmus verwendet wird, der durch `pbeParameters`angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="db04e-168">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="db04e-169">Dadurch wird die Kompatibilität mit anderen Systemen ermöglicht, bei denen bei der Verarbeitung von Kenn Wörtern mit PBKDF2 eine andere Text Codierung als UTF-8 verwendet wird (Kenn Wort basierte Schlüssel abderivations Funktion 2).</span><span class="sxs-lookup"><span data-stu-id="db04e-169">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="db04e-170"><paramref name="pbeParameters" /> gibt an, dass <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> verwendet werden soll, wofür <see cref="T:System.Char" />-basierte Kennwörter erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="db04e-170"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (password As ReadOnlySpan(Of Char), pbeParameters As PbeParameters) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="db04e-171">Das Kennwort, das bei der Verschlüsselung des Schlüsselmaterials verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="db04e-171">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="db04e-172">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-172">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="db04e-173">Erzeugt ein PKCS#8-EncryptedPrivateKeyInfo-Element aus dem Eigenschafteninhalt dieses Objekts, nachdem die Verschlüsselung mit dem angegebenen zeichenbasierten Kennwort und Verschlüsselungsparametern durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="db04e-173">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="db04e-174">Ein Bytearray, das die codierte Form des PKCS#8-EncryptedPrivateKeyInfo-Elements enthält.</span><span class="sxs-lookup"><span data-stu-id="db04e-174">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db04e-175">Wenn `pbeParameters` einen Algorithmus angibt, der PBKDF2 (Kenn Wort basierte Schlüssel abderivations Funktion 2) verwendet, wird das Kennwort über die UTF-8-Codierung in Bytes konvertiert.</span><span class="sxs-lookup"><span data-stu-id="db04e-175">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKeyBytes">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; PrivateKeyBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; PrivateKeyBytes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateKeyBytes As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; PrivateKeyBytes { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKeyBytes : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db04e-176">Ruft einen Arbeitsspeicherwert ab, der den algorithmusspezifischen codierten privaten Schlüssel darstellt.</span><span class="sxs-lookup"><span data-stu-id="db04e-176">Gets a memory value that represents the algorithm-specific encoded private key.</span></span></summary>
        <value><span data-ttu-id="db04e-177">Ein Speicher Wert, der den algorithmusspezifischen codierten privaten Schlüssel darstellt.</span><span class="sxs-lookup"><span data-stu-id="db04e-177">A memory value that represents the algorithm-specific encoded private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="db04e-178">Die Bytespanne, in der die PKCS#8-PrivateKeyInfo-Daten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-178">The byte span to receive the PKCS#8 PrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="db04e-179">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="db04e-179">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="db04e-180">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="db04e-180">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="db04e-181">Versucht, die Eigenschaftendaten dieser Instanz als PKCS#8 PrivateKeyInfo zu codieren und die Ergebnisse in einen bereitgestellten Puffer zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="db04e-181">Attempts to encode the property data of this instance as a PKCS#8 PrivateKeyInfo, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="db04e-182"><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-182"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncrypt (passwordBytes As ReadOnlySpan(Of Byte), pbeParameters As PbeParameters, destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (passwordBytes, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="db04e-183">Die Bytes, die als Kennwort bei der Verschlüsselung des Schlüsselmaterials verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="db04e-183">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="db04e-184">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-184">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="db04e-185">Die Bytespanne, in der die PKCS#8-EncryptedPrivateKeyInfo-Daten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-185">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="db04e-186">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="db04e-186">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="db04e-187">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="db04e-187">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="db04e-188">Versucht, ein PKCS#8-EncryptedPrivateKeyInfo-Element aus dem Eigenschafteninhalt dieses Objekts zu erzeugen, nachdem die Verschlüsselung mit dem angegebenen bytebasierten Kennwort und Verschlüsselungsparametern durchgeführt wurde. Anschließend werden die Ergebnisse in einen bereitgestellten Puffer geschrieben.</span><span class="sxs-lookup"><span data-stu-id="db04e-188">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="db04e-189"><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-189"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db04e-190">Die Kenn Wort Bytes werden direkt an die kdf (Key derivations Function) übergeben, die vom Algorithmus verwendet wird, der durch `pbeParameters`angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="db04e-190">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="db04e-191">Dadurch wird die Kompatibilität mit anderen Systemen ermöglicht, bei denen bei der Verarbeitung von Kenn Wörtern mit PBKDF2 eine andere Text Codierung als UTF-8 verwendet wird (Kenn Wort basierte Schlüssel abderivations Funktion 2).</span><span class="sxs-lookup"><span data-stu-id="db04e-191">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncrypt (password As ReadOnlySpan(Of Char), pbeParameters As PbeParameters, destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (password, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="db04e-192">Das Kennwort, das bei der Verschlüsselung des Schlüsselmaterials verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="db04e-192">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="db04e-193">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-193">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="db04e-194">Die Bytespanne, in der die PKCS#8-EncryptedPrivateKeyInfo-Daten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="db04e-194">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="db04e-195">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="db04e-195">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="db04e-196">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="db04e-196">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="db04e-197">Versucht, ein PKCS#8-EncryptedPrivateKeyInfo-Element aus dem Eigenschafteninhalt dieses Objekts zu erzeugen, nachdem die Verschlüsselung mit dem angegebenen zeichenbasierten Kennwort und Verschlüsselungsparametern durchgeführt wurde. Anschließend wird das Ergebnis in einen bereitgestellten Puffer geschrieben.</span><span class="sxs-lookup"><span data-stu-id="db04e-197">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters, writing the result into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="db04e-198"><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="db04e-198"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db04e-199">Wenn `pbeParameters` einen Algorithmus angibt, der PBKDF2 (Kenn Wort basierte Schlüssel abderivations Funktion 2) verwendet, wird das Kennwort über die UTF-8-Codierung in Bytes konvertiert.</span><span class="sxs-lookup"><span data-stu-id="db04e-199">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
  </Members>
</Type>
