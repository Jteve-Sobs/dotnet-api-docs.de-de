<Type Name="Pkcs12SafeBag" FullName="System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6dfbd2524f19c38e6a820e4f82f13757f506be39" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70543411" /></Metadata><TypeSignature Language="C#" Value="public abstract class Pkcs12SafeBag" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Pkcs12SafeBag extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Pkcs12SafeBag" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12SafeBag abstract" />
  <TypeSignature Language="F#" Value="type Pkcs12SafeBag = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert das Kernverhalten eines SafeBag-Werts aus der PKCS#12-Spezifikation und stellt eine Basis für abgeleitete Klassen bereit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Pkcs12SafeBag (string bagIdValue, ReadOnlyMemory&lt;byte&gt; encodedBagValue, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string bagIdValue, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; encodedBagValue, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (bagIdValue As String, encodedBagValue As ReadOnlyMemory(Of Byte), Optional skipCopy As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Pkcs.Pkcs12SafeBag : string * ReadOnlyMemory&lt;byte&gt; * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs12SafeBag" Usage="new System.Security.Cryptography.Pkcs.Pkcs12SafeBag (bagIdValue, encodedBagValue, skipCopy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bagIdValue" Type="System.String" />
        <Parameter Name="encodedBagValue" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bagIdValue">Der Objektbezeichner (OID) in Dezimalform mit Punkttrennzeichen, der den Datentyp dieses SafeBag angibt.</param>
        <param name="encodedBagValue">Der ASN.1 BER-codierte Wert des SafeBag-Inhalts.</param>
        <param name="skipCopy"><see langword="true" /> zum Speichern von <paramref name="encodedBagValue" />, ohne eine defensive Kopie zu erstellen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</param>
        <summary>Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" />-Klasse zu initialisieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks
 Das Standardverhalten dieser Methode besteht darin, eine defensive Kopie von `encodedBagValue`zu erstellen.
Wenn der `skipCopy` -Parameter `true`ist, wird diese Defensive Kopie übersprungen.
Wenn die Defensive Kopie übersprungen und der Inhalt der `encodedBagValue` Änderung während der Lebensdauer des Werts oder eines beliebigen Objekts, das von seinen Methoden oder Eigenschaften erzeugt wird, nicht mehr vorhanden ist, können Methoden und Eigenschaften für diese Objekte aufgrund der beschädigter Zustand.
Bei Aufrufern wird daher empfohlen, `true` nur einen Wert `skipCopy` für den-Parameter zu verwenden, wenn Sie sicher sein können, dass die Daten intakt bleiben.
 
 Wenn das `bagIdValue` kein zulässiges gepunktetes Dezimal Format eines OID-Werts ist, wird eine Ausnahme <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode> von <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode%2A>oder ausgelöst.
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="bagIdValue" />-Parameter ist <see langword="null" /> oder die leere Zeichenfolge.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="encodedBagValue" />-Parameter stellt keinen einzelnen ASN.1 BER-codierten Wert dar.</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ Attributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Security.Cryptography.CryptographicAttributeObjectCollection" Usage="System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die änderbare Sammlung von Attributen ab, die mit dem SafeBag-Wert codiert werden sollen.</summary>
        <value>Die änderbare Auflistung von Attributen, die mit dem safebag-Wert codiert werden sollen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs12SafeBag.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Codiert den SafeBag-Wert und gibt ihn als Bytearray zurück.</summary>
        <returns>Ein Bytearray, das die codierte Form des SafeBag darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der an den Konstruktor über gegebene Objektbezeichnerwert war ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedBagValue">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; EncodedBagValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; EncodedBagValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncodedBagValue As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; EncodedBagValue { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodedBagValue : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ASN.1 BER-Codierung des Inhalts dieses SafeBag ab.</summary>
        <value>Die ASN. 1 ber-Codierung des Inhalts dieser safebag.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 In der codierten Struktur wird der safebag. bagvalue-Wert als `[0] EXPLICIT`markiert. Der Wert dieser Eigenschaft ist nur der Inhalt innerhalb des expliziten Tags.
Das explizite Tag wird automatisch von <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode> oder <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode%2A>angewendet und während <xref:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode%2A> und ähnlichen Methoden entfernt.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBagId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid GetBagId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Oid GetBagId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBagId () As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Oid ^ GetBagId();" />
      <MemberSignature Language="F#" Value="member this.GetBagId : unit -&gt; System.Security.Cryptography.Oid" Usage="pkcs12SafeBag.GetBagId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Objektbezeichner (OID) ab, der den Inhaltstyp dieses SafeBag identifiziert.</summary>
        <returns>Der Objektbezeichner (OID), der den Inhaltstyp dieses SafeBag identifiziert.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs12SafeBag.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">Der Bytebereich, der den codierten SafeBag-Wert empfangen soll.</param>
        <param name="bytesWritten">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <summary>Versucht, den SafeBag-Wert in einen bereitgestellten Puffer zu codieren.</summary>
        <returns><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der an den Konstruktor über gegebene Objektbezeichnerwert war ungültig.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
