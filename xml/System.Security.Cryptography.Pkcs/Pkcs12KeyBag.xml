<Type Name="Pkcs12KeyBag" FullName="System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
  <Metadata><Meta Name="ms.openlocfilehash" Value="509695ba0e32e9e9f318669a2a6120ae5f6418f7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75080048" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12KeyBag : System.Security.Cryptography.Pkcs.Pkcs12SafeBag" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12KeyBag extends System.Security.Cryptography.Pkcs.Pkcs12SafeBag" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12KeyBag&#xA;Inherits Pkcs12SafeBag" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12KeyBag sealed : System::Security::Cryptography::Pkcs::Pkcs12SafeBag" />
  <TypeSignature Language="F#" Value="type Pkcs12KeyBag = class&#xA;    inherit Pkcs12SafeBag" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Pkcs.Pkcs12SafeBag</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt den KeyBag aus PKCS#12 dar, einen Container, der einen PKCS#8 PrivateKeyInfo-Wert enthält. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs12KeyBag (ReadOnlyMemory&lt;byte&gt; pkcs8PrivateKey, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; pkcs8PrivateKey, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pkcs8PrivateKey As ReadOnlyMemory(Of Byte), Optional skipCopy As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Pkcs.Pkcs12KeyBag : ReadOnlyMemory&lt;byte&gt; * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs12KeyBag" Usage="new System.Security.Cryptography.Pkcs.Pkcs12KeyBag (pkcs8PrivateKey, skipCopy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pkcs8PrivateKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pkcs8PrivateKey">Ein BER-codierter PKCS#8 PrivateKeyInfo-Wert.</param>
        <param name="skipCopy"><see langword="true" /> zum Speichern von <paramref name="pkcs8PrivateKey" />, ohne eine defensive Kopie zu erstellen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz des <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> aus einem vorhandenen codierten PKCS#8 PrivateKeyInfo-Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Diese Methode überprüft, ob `pkcs8PrivateKey` ein einzelner ber-codierter Wert ist, überprüft jedoch nicht, ob es sich bei dem Wert um einen korrekten PKCS # 8 privatekeyinfo-Wert handelt.

Der Transport von privaten Schlüsseln in einer keybag ist durch den PKCS # 12-Standard zulässig, aber nicht für alle PFX-Leser, die das Koppeln von Zertifikaten mit Schlüsseln aus einer Schlüssel Sammlung unterstützen.
Um die beste Unterstützung zu erhalten, transportieren Sie die Schlüssel in einem "grabdedkeybag (<xref:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag>).

Das Standardverhalten dieser Methode besteht darin, eine defensive Kopie von `pkcs8PrivateKey`vorzunehmen.
Wenn der `skipCopy`-Parameter `true`ist, wird diese Defensive Kopie übersprungen.
Wenn die Defensive Kopie übersprungen wird und sich der Inhalt von `pkcs8PrivateKey` während der Lebensdauer des zurückgegebenen Werts oder eines Objekts ändert, das von seinen Methoden oder Eigenschaften erzeugt wird, können Methoden und Eigenschaften für diese Objekte aufgrund des beschädigten Zustands zu Fehlern beim Ergebnis oder zum Auslösen von Ausnahmen führen.
Bei Aufrufern wird daher empfohlen, nur einen `true` Wert für den Parameter `skipCopy` zu verwenden, wenn Sie sicher sein können, dass die Daten intakt bleiben.
    
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="pkcs8privateKey" />-Parameter stellt keinen einzelnen ASN.1 BER-codierten Wert dar.</exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)" />
      </Docs>
    </Member>
    <Member MemberName="Pkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; Pkcs8PrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; Pkcs8PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pkcs8PrivateKey As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; Pkcs8PrivateKey { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Pkcs8PrivateKey : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Arbeitsspeicherwert ab, der den mit diesem KeyBag transportierten PKCS#8 PrivateKeyInfo-Wert enthält.</summary>
        <value>Ein-Speicher Wert, der den von diesem Behälter Transporten Wert von "PKCS # 8 privatekeyinfo" enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Es wird keine Validierung ausgeführt, weil der zurückgegebene Wert ein gültiger PKCS # 8 privatekeyinfo-Wert ist.

Diese Eigenschaft ist ein Alias für die <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue?displayProperty=nameWithType>-Eigenschaft.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
