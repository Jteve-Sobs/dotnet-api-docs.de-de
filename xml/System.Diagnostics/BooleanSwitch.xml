<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6564db7122b177d9bbfd39ab52b9be1d89f366a9" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75138210" /></Metadata><TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bietet einen EIN/AUS-Schalter, der die Debugging- und Ablaufverfolgungsausgabe steuert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen booleschen Ablauf Verfolgungs Schalter verwenden, um Nachrichten basierend auf ihrer Wichtigkeit zu aktivieren oder zu deaktivieren. Verwenden Sie die <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>-Eigenschaft, um den aktuellen Wert des Schalters zu erhalten.  
  
 Sie können ein <xref:System.Diagnostics.BooleanSwitch> über die Anwendungs Konfigurationsdatei aktivieren oder deaktivieren und dann den konfigurierten <xref:System.Diagnostics.BooleanSwitch> Wert in der Anwendung verwenden. Alternativ können Sie einen <xref:System.Diagnostics.BooleanSwitch> in Ihrem Code erstellen und die <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>-Eigenschaft direkt festlegen, um einen bestimmten Code Abschnitt zu instrumentieren.  
  
 Um einen <xref:System.Diagnostics.BooleanSwitch>zu konfigurieren, bearbeiten Sie die Konfigurationsdatei, die dem Namen der Anwendung entspricht. Innerhalb dieser Datei können Sie einen Schalter hinzufügen oder entfernen, den Wert eines Schalters festlegen oder alle Switches löschen, die zuvor von der Anwendung festgelegt wurden. Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Dieser Beispiel Konfigurations Abschnitt definiert eine <xref:System.Diagnostics.BooleanSwitch>, bei der die <xref:System.Diagnostics.Switch.DisplayName%2A>-Eigenschaft auf `mySwitch` festgelegt ist und der <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> Wert auf `true`festgelegt ist. In Ihrer Anwendung können Sie den konfigurierten switchwert verwenden, indem Sie eine <xref:System.Diagnostics.BooleanSwitch> mit dem gleichen Namen erstellen, wie im folgenden Codebeispiel gezeigt.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 Standardmäßig wird die <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>-Eigenschaft mit dem in der Konfigurationsdatei angegebenen Wert festgelegt. Konfigurieren Sie den Schalter mit dem Wert 0, um die <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>-Eigenschaft auf `false`festzulegen. Konfigurieren Sie den Switch mit einem Wert ungleich NULL, um die <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>-Eigenschaft auf `true`festzulegen. Wenn der <xref:System.Diagnostics.BooleanSwitch>-Konstruktor keine anfänglichen Switcheinstellungen in der Konfigurationsdatei finden kann, wird die <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>-Eigenschaft des neuen Schalters standardmäßig auf `false` festgelegt.  
  
 Sie müssen die Ablauf Verfolgung oder das Debuggen zur Verwendung eines Schalters aktivieren Die folgende Syntax ist compilerspezifisch. Wenn Sie andere Compiler als C# oder Visual Basic verwenden, finden Sie in der Dokumentation Ihres Compiler weitere Informationen.  
  
-   Um das Debuggen in C#zu aktivieren, fügen Sie das `/d:DEBUG`-Flag zur Compilerbefehlszeile hinzu, wenn Sie den Code kompilieren, oder Sie können `#define DEBUG` am Anfang der Datei hinzufügen. Fügen Sie in Visual Basic der Compilerbefehlszeile das `/d:DEBUG=True`-Flag hinzu.  
  
-   Fügen Sie zum Aktivieren C#der Ablauf Verfolgung in der Compilerbefehlszeile das `/d:TRACE`-Flag hinzu, wenn Sie den Code kompilieren, oder fügen Sie `#define TRACE` am Anfang der Datei hinzu. Fügen Sie in Visual Basic der Compilerbefehlszeile das `/d:TRACE=True`-Flag hinzu.  
  
> [!NOTE]
>  Diese Debug-und Trace-Compilerschalter sind nicht erforderlich, wenn die <xref:System.Diagnostics.BooleanSwitch>-Klasse isoliert verwendet wird. Sie sind nur in Verbindung mit <xref:System.Diagnostics.Trace> oder <xref:System.Diagnostics.Debug> Methoden erforderlich, die bedingt kompiliert werden.  
  
 Weitere Informationen zum Instrumentieren Ihrer Anwendung finden Sie unter <xref:System.Diagnostics.Debug> und <xref:System.Diagnostics.Trace>. Weitere Informationen zum Konfigurieren und Verwenden von Ablauf Verfolgungs Schaltern finden Sie unter Ablauf [Verfolgungs Schalter](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Um die Leistung zu verbessern, können Sie <xref:System.Diagnostics.BooleanSwitch> Member in der Klasse `static`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Diagnostics.BooleanSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob eine Fehlermeldung gedruckt werden soll. Sie erstellen den Switch auf Klassenebene. Die `Main`-Methode übergibt den Speicherort an `MyMethod`, der eine Fehlermeldung ausgibt und in der der Fehler aufgetreten ist.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.BooleanSwitch" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Der Name, der auf einer Benutzeroberfläche angezeigt werden soll.</param>
        <param name="description">Die Beschreibung des Schalters.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.BooleanSwitch" />-Klasse mit dem angegebenen Anzeigenamen und der angegebenen Beschreibung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine <xref:System.Diagnostics.BooleanSwitch>erstellen, wird der `displayName` Parameter verwendet, um anfängliche Switcheinstellungen zu suchen. Wenn der Konstruktor keine anfänglichen Einstellungen finden kann, wird die <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>-Eigenschaft auf `false` (deaktiviert) festgelegt.  
  
 Um die Ebene der <xref:System.Diagnostics.BooleanSwitch>festzulegen, bearbeiten Sie die Konfigurationsdatei entsprechend dem Namen Ihrer Anwendung. In dieser Datei können Sie einen Switch hinzufügen und dessen Wert festlegen, einen Switch entfernen oder alle Switches löschen, die zuvor von der Anwendung festgelegt wurden. Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  Die von Ihnen erstellten Switches sollten `static`werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Diagnostics.BooleanSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob eine Fehlermeldung gedruckt werden soll. Der Schalter wird auf Klassenebene erstellt. Die `Main`-Methode übergibt den Speicherort an `MyMethod`, der eine Fehlermeldung ausgibt und in der der Fehler aufgetreten ist.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName">Der Name, der auf der Benutzeroberfläche angezeigt werden soll.</param>
        <param name="description">Die Beschreibung des Schalters.</param>
        <param name="defaultSwitchValue">Der Standardwert des Schalters.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.BooleanSwitch" />-Klasse mit dem angegebenen Anzeigenamen, der angegebenen Beschreibung und dem angegebenen Standardschalterwert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `displayName`-Parameter wird verwendet, um den Wert der <xref:System.Diagnostics.Switch.DisplayName%2A>-Eigenschaft festzulegen, und der `description`-Parameter wird verwendet, um den Wert der <xref:System.Diagnostics.Switch.Description%2A>-Eigenschaft festzulegen. Der `defaultSwitchValue`-Parameter wird als Feld gespeichert und zum Initialisieren der <xref:System.Diagnostics.Switch.Value%2A>-Eigenschaft beim ersten Verweis verwendet. Weitere Informationen zur Verwendung des Konstruktors finden Sie im <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>-Konstruktor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Schalter aktiviert oder deaktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Schalter aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ist dieses Feld auf `false` (deaktiviert) festgelegt. Um den Switch zu aktivieren, weisen Sie diesem Feld den Wert `true`zu. Um den Switch zu deaktivieren, weisen Sie den Wert `false`zu.  Der Wert dieser Eigenschaft wird durch den Wert der Eigenschaft <xref:System.Diagnostics.Switch.SwitchSetting%2A>der Basisklasse bestimmt.  
  
> [!NOTE]
>  Diese Methode verwendet das <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>-Flag, um zu verhindern, dass von nicht vertrauenswürdigem Code aufgerufen wird. nur der unmittelbare Aufrufer muss über <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> Berechtigung verfügen. Wenn Ihr Code von teilweise vertrauenswürdigem Code aufgerufen werden kann, übergeben Sie die Benutzereingabe nicht an <xref:System.Runtime.InteropServices.Marshal>-Klassen Methoden ohne Validierung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Diagnostics.BooleanSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob eine Fehlermeldung gedruckt werden soll. Der Schalter wird auf Klassenebene erstellt. Die `Main`-Methode übergibt den Speicherort an `MyMethod`, wodurch eine Fehlermeldung und der Speicherort ausgegeben werden, an dem der Fehler aufgetreten ist.  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die richtige Berechtigung.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit nicht verwaltetem Code. <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />für den Abruf Wert; Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob der neue Wert der <see cref="P:System.Diagnostics.Switch.Value" />-Eigenschaft als boolescher Wert analysiert werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A>-Methode bestimmt, ob der neue Wert eine gültige Zeichen folgen Darstellung eines booleschen Werts ("false" oder "true") ist. Wenn dies der Fall ist, legt die-Methode die <xref:System.Diagnostics.Switch.SwitchSetting%2A>-Eigenschaft auf 0 oder 1 fest.  Andernfalls wird die Basis Methode aufgerufen, die den Zeichen folgen Wert in einen ganzzahligen Wert konvertiert, der dann verwendet wird, um die <xref:System.Diagnostics.Switch.SwitchSetting%2A>-Eigenschaft festzulegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
