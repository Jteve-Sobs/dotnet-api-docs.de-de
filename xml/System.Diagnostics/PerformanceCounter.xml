<Type Name="PerformanceCounter" FullName="System.Diagnostics.PerformanceCounter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0fdfc2b32c51e1bd789d62979f52900eb554186" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70356818" /></Metadata><TypeSignature Language="C#" Value="public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounter extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounter&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounter sealed : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type PerformanceCounter = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.PerformanceCounterInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.PerformanceCounterDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Windows NT-Leistungsindikatorkomponente dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.PerformanceCounter> Komponente kann zum Lesen vorhandener, vordefinierter oder benutzerdefinierter Leistungsindikatoren und zum Veröffentlichen (schreiben) von Leistungsdaten in benutzerdefinierten Leistungsindikatoren verwendet werden.  
  
 Im [Dialogfeld Leistungsindikatoren hinzufügen](https://go.microsoft.com/fwlink/p/?LinkId=257854)des Windows-System Monitors sind zahlreiche vordefinierte Indikatoren aufgelistet. Weitere Informationen zu den .NET Framework Leistungsindikatoren finden Sie unter [Leistungsindikatoren](~/docs/framework/debug-trace-profile/performance-counters.md).  
  
 Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle. Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen. Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf. Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic). Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.  
  
> [!IMPORTANT]
>  In den Versionen 1,0 und 1,1 des .NET Framework benötigt diese Klasse sofortige Aufrufer, damit Sie voll vertrauenswürdig sind. Beginnend mit der .NET Framework Version 2,0, erfordert <xref:System.Diagnostics.PerformanceCounterPermission> diese Klasse bestimmte Aktionen. Es wird dringend empfohlen, <xref:System.Diagnostics.PerformanceCounterPermission> nicht teilweise vertrauenswürdigem Code zu erhalten.  Durch die Fähigkeit, Leistungsindikatoren zu lesen und zu schreiben, kann Code Aktionen ausführen, z. b. das Auflisten von ausgeführten Prozessen und das Abrufen von Informationen zu diesen.  
>   
>  Außerdem kann das Übergeben eines <xref:System.Diagnostics.PerformanceCounter> -Objekts an weniger vertrauenswürdigen Code zu einem Sicherheitsproblem führen. Übergeben Sie niemals Leistungs Objekt Objekte (z <xref:System.Diagnostics.PerformanceCounterCategory> . b. oder <xref:System.Diagnostics.PerformanceCounter>) an weniger vertrauenswürdigen Code.  
  
 Zum Lesen eines Leistungs Zählers erstellen Sie eine Instanz der <xref:System.Diagnostics.PerformanceCounter> -Klasse, <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>legen Sie, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>und, optional, die <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> oder die-Eigenschaft fest, <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> und rufen Sie dann die-Methode auf, um eine Leistung zu erzielen. gegen lesen.  
  
 Erstellen Sie zum Veröffentlichen von Leistungsindikator Daten einen oder mehrere benutzerdefinierte Leistungs <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> Indikatoren mithilfe der-Methode, erstellen <xref:System.Diagnostics.PerformanceCounter> Sie eine Instanz der- <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> Klasse, und legen Sie <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> die <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Eigenschaften, und optional <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> oder fest. und dann die <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>Methoden, <xref:System.Diagnostics.PerformanceCounter.Increment%2A>oder <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> , oder legen Sie die- <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> Eigenschaft fest, um den Wert des benutzerdefinierten Zählers zu ändern.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.PerformanceCounter.Increment%2A>Methoden <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, und<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> verwenden zum Aktualisieren des Leistungs Zählers Interlocks. Dies trägt dazu bei, dass der Leistungswert in Multithread-oder multiprozessszenarien genau ist, aber auch zu Leistungseinbußen führen. Wenn Sie die Genauigkeit nicht benötigen, die von Interlocked-Vorgängen bereitgestellt wird <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> , können Sie die Eigenschaft direkt aktualisieren, um die Leistung zu verbessern.  In Multithread-Szenarien werden jedoch möglicherweise einige Updates des Leistungs Zählers ignoriert, was zu ungenauen Daten führt.  
  
 Der Leistungs-und Leistungsdaten Wert ist der Mechanismus, mit dem Leistungsdaten gesammelt werden. In der Registrierung werden die Namen aller Indikatoren gespeichert, die jeweils mit einem bestimmten Bereich der Systemfunktionalität verknüpft sind. Beispiele hierfür sind die ausgelastete Zeit des Prozessors, die Speicherauslastung oder die Anzahl von Bytes, die über eine Netzwerkverbindung empfangen werden.  
  
 Jeder Counter wird durch seinen Namen und seinen Speicherort eindeutig identifiziert. Auf dieselbe Weise wie ein Dateipfad ein Laufwerk, ein Verzeichnis, ein oder mehrere Unterverzeichnisse und einen Dateinamen enthält, besteht die Anzahl der Informationen aus vier Elementen: dem Computer, der Kategorie, der Kategorieinstanz und dem Namen des Zählers.  
  
 Die Informationen zu den Leistungsindikatoren müssen die Kategorie oder das Leistungs Objekt enthalten, für das der Leistungsindikatoren Daten misst. Zu den Kategorien eines Computers gehören physische Komponenten, z. b. Prozessoren, Datenträger und Arbeitsspeicher. Es gibt auch System Kategorien, z. b. Prozesse und Threads. Jede Kategorie bezieht sich auf ein funktionales Element innerhalb des Computers, dem eine Reihe von Standardindikatoren zugewiesen ist. Diese Objekte werden in der Dropdown Liste Leistungs Objekt im Dialogfeld Leistungsindikatoren hinzufügen im Windows 2000-System Monitor aufgelistet, und Sie müssen Sie in den Indikator Pfad einschließen. Die Leistungsdaten werden nach der Kategorie gruppiert, mit der Sie verknüpft ist.  
  
 In bestimmten Fällen können mehrere Kopien derselben Kategorie vorhanden sein. Beispielsweise werden mehrere Prozesse und Threads gleichzeitig ausgeführt, und einige Computer enthalten mehr als einen Prozessor. Die kategoriekopien werden als Kategorieinstanzen bezeichnet, und jeder Instanz ist ein Satz von Standardindikatoren zugewiesen. Wenn eine Kategorie mehr als eine Instanz aufweisen kann, muss in den gegen Informationen eine Instanzspezifikation enthalten sein.  
  
 Rufen Sie die <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> -Methode zweimal auf, und verwenden Sie die Informationen, die zurückgegeben werden, wenn die erforderliche Berechnung erforderlich ist, um Leistungsdaten für Leistungsindikatoren abzurufen, für die die erforderliche Berechnung erforderlich war.  
  
> [!NOTE]
>  Leistungs Indikatorenkategorien, die [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] mit installiert werden, verwenden separaten freigegebenen Speicher, wobei jede Leistungs Indikatorenkategorie über einen eigenen Arbeitsspeicher verfügt. Sie können die Größe des separaten freigegebenen Speichers angeben, indem Sie ein DWORD namens FileMappingSize im Registrierungsschlüssel\\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services*\<Category Name >* \Performance erstellen. Der Wert FileMappingSize ist auf die Größe des freigegebenen Speichers der Kategorie festgelegt. Die Standardgröße ist 131072 Decimal. Wenn der FileMappingSize-Wert nicht vorhanden ist, `fileMappingSize` wird der-Attribut `performanceCounters` Wert für das in der Datei Machine. config angegebene-Element verwendet, wodurch zusätzlicher Verwaltungsaufwand für die Verarbeitung von Konfigurationsdateien verursacht wird. Sie können eine Leistungsverbesserung für den Anwendungsstart erzielen, indem Sie in der Registrierung die Größe der Datei Zuordnung festlegen. Weitere Informationen zur Größe der Datei Zuordnung finden [ &lt;Sie unter Performance Counters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung <xref:System.Diagnostics.PerformanceCounter> der-Klasse zum Erstellen und Verwenden eines <xref:System.Diagnostics.PerformanceCounterType.AverageCount64> Counter-Typs veranschaulicht. Im Beispiel werden Kategorien erstellt, Indikatoren eingerichtet, Daten aus den Leistungsindikatoren gesammelt und die <xref:System.Diagnostics.CounterSampleCalculator> -Klasse aufgerufen, um die Leistungsindikator Daten zu interpretieren. Die Zwischenergebnisse und Endergebnisse werden im Konsolenfenster angezeigt. Weitere Beispiele für andere Leistungsdaten Typen finden Sie unter der <xref:System.Diagnostics.PerformanceCounterType> -Enumeration.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
    <altmember cref="T:System.Diagnostics.CounterCreationData" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
    <altmember cref="T:System.Diagnostics.CounterSampleCalculator" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">für volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Diese Klasse kann von teilweise vertrauenswürdigem Code nicht verwendet werden.</permission>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse, ohne diese Instanz einem System- oder benutzerdefinierten Leistungsindikator zuzuordnen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Überladung des Konstruktors werden <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>die <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>Eigenschaften, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> und auf leere Zeichen folgen ("") festgelegt, <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> und die-Eigenschaft wird auf den lokalen Computer (".") festgelegt.  
  
 Dieser Konstruktor initialisiert den Leistungs Bezeichner nicht, sodass die Instanz nicht mit einem vorhandenen Leistungs Bezeichner auf dem lokalen Computer verknüpft wird. Legen <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Sie die <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>Eigenschaften, und, optional, die <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> -Eigenschaft und die- <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> Eigenschaft fest, bevor Sie andere Eigenschaften lesen oder einen Lesevorgang ausführen, um auf einen bestimmten Leistungswert zu verweisen. Legen Sie die <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> - `false`Eigenschaft auf fest, um in einen Leistungswert zu schreiben.  
  
> [!NOTE]
>  Das <xref:System.Security.Permissions.HostProtectionAttribute> auf diesen Member angewendete-Attribut <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> besitzt den folgenden <xref:System.Security.Permissions.HostProtectionResource.Synchronization> -Eigenschafts Wert: &#124; <xref:System.Security.Permissions.HostProtectionResource.SharedState>. Das <xref:System.Security.Permissions.HostProtectionAttribute> hat keine Auswirkungen auf Desktopanwendungen (die normalerweise durch Doppelklicken auf ein Symbol, Eingeben eines Befehls oder einer URL in einem Browser gestartet werden). Weitere Informationen finden Sie unter der <xref:System.Security.Permissions.HostProtectionAttribute> -Klasse oder [SQL Server-Programmier-und Host Schutz Attributen](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Standard Instanz der <xref:System.Diagnostics.PerformanceCounter> -Klasse erstellt. Nachdem die-Instanz erstellt wurde, <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>werden <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>die- <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> ,-und-Eigenschaftswerte festgelegt, <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> und die Ergebnisse eines Aufrufes der-Methode werden angezeigt.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
        <param name="counterName">Der Name des Leistungsindikators.</param>
        <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator auf dem lokalen Computer zu. Für diesen Konstruktor muss die Kategorie eine einzelne Instanz besitzen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei den Parameter Zeichenfolgen wird nicht nach Groß-/Kleinschreibung  
  
 Verwenden Sie diese Überladung, um auf einen Leistungs Bezeichner auf dem lokalen Computer zuzugreifen, der zu einer Kategorie gehört, die eine einzelne Instanz der Instanz der Leistungs Instanz Wenn Sie versuchen, diesen Konstruktor zu verwenden, um <xref:System.Diagnostics.PerformanceCounter> diese Instanz auf eine Kategorie zu verweisen, die mehrere Instanzen enthält, löst der Konstruktor eine Ausnahme aus. Diese Überladung kann auf einen schreibgeschützten oder Lese-/Schreib-Counter zugreifen, jedoch in einem schreibgeschützten Modus. Eine <xref:System.Diagnostics.PerformanceCounter> mit dieser Überladung erstellte-Instanz kann nicht in den-Wert schreiben, auch wenn der gegen Überlese-/Schreibmodus ist.  
  
 Diese Überladung des Konstruktors legt die <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> -Eigenschaft und die-Eigenschaft auf die Werte fest, <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> die Sie übergeben, legt die- <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> Eigenschaft auf den lokalen Computer " <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> ." fest und legt die-Eigenschaft auf eine leere Zeichenfolge ("") fest.  
  
 Dieser Konstruktor initialisiert den Leistungs Bezeichner und verknüpft die Instanz mit einem vorhandenen Leistungs Bezeichner (System oder benutzerdefinierter Leistungs Bezeichner) auf dem lokalen Computer. Die Werte, die Sie für die- <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Eigenschaft <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> und die-Eigenschaft übergeben, müssen auf einen vorhandenen Leistungs Zählers auf dem lokalen Computer verweisen.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="counterName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
Die angegebene Kategorie ist nicht vorhanden.  
  
- oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  
  
- oder - 
 <paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
        <param name="counterName">Der Name des Leistungsindikators.</param>
        <param name="readOnly"><see langword="true" />, um im schreibgeschützten Modus auf den Zähler zuzugreifen (wobei sich der Zähler selbst jedoch im Lese-/Schreibmodus befinden kann), <see langword="false" />, um im Lese-/Schreibmodus auf den Zähler zuzugreifen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse im schreibgeschützten oder Lese-/Schreibmodus und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator auf dem lokalen Computer zu. Für diesen Konstruktor muss die Kategorie eine einzelne Instanz enthalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei den Parameter Zeichenfolgen wird nicht nach Groß-/Kleinschreibung  
  
 Verwenden Sie diese Überladung, um auf einen schreibgeschützten oder Lese-/Schreib-Counter auf dem lokalen Computer zuzugreifen, der zu einer Kategorie gehört, die eine einzelne Leistungsindikatorkategorie Wenn Sie versuchen, diesen Konstruktor zu verwenden, um <xref:System.Diagnostics.PerformanceCounter> diese Instanz auf eine Kategorie zu verweisen, die mehrere Instanzen enthält, löst der Konstruktor eine Ausnahme aus.  
  
 Diese Überladung des Konstruktors legt die <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Eigenschaften <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, und <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> auf die Werte fest, die Sie übergeben, legt <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> die-Eigenschaft auf den lokalen Computer () fest und legt die <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> -Eigenschaft auf eine leere Zeichenfolge ("") fest.  
  
 Dieser Konstruktor initialisiert den Leistungs Bezeichner und verknüpft die Instanz mit einem vorhandenen Leistungs Bezeichner (System oder benutzerdefinierter Leistungs Bezeichner) auf dem lokalen Computer. Die Werte, die Sie für die- <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Eigenschaft <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> und die-Eigenschaft übergeben, müssen auf einen vorhandenen Leistungs Zählers auf dem lokalen Computer verweisen. Wenn die Instanz des Leistungs Zählers, auf die Sie verweisen, ungültig ist, wird beim Aufrufen des Konstruktors eine Ausnahme ausgelöst.  
  
> [!NOTE]
>  Sie können diese Überladung verwenden, um eine Verbindung mit einem System Counter herzustellen, aber Sie können nicht in einen System-Counter schreiben. Wenn beim Herstellen `readOnly` einer `false` Verbindung mit einem System-Counter auf festgelegt wird, löst der Konstruktor daher eine Ausnahme aus.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Instanz der <xref:System.Diagnostics.PerformanceCounter> -Klasse erstellt. In diesem Beispiel werden Kategorienamen, Leistungs Zähl Namen und ein Flagwert weitergeleitet, die angeben, dass der Leistungs Bewert nicht schreibgeschützt ist. Dieses Codebeispiel ist Teil eines größeren Beispiels für die <xref:System.Diagnostics.PerformanceCounter> -Klasse.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
Der <paramref name="counterName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
Die angegebene Kategorie ist nicht vorhanden. (Wenn <paramref name="readOnly" /><see langword="true" /> ist.)  
  
- oder - 
Die angegebene Kategorie ist keine benutzerdefinierte .NET Framework-Kategorie (wenn <paramref name="readOnly" /><see langword="false" /> ist).  
  
- oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  
  
- oder - 
 <paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
        <param name="counterName">Der Name des Leistungsindikators.</param>
        <param name="instanceName">Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn die Kategorie eine einzelne Instanz enthält.</param>
        <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator sowie der angegebenen Kategorieinstanz auf dem lokalen Computer zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei den Parameter Zeichenfolgen wird nicht nach Groß-/Kleinschreibung  
  
 Diese <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Überladung des Konstruktors legt die Eigenschaften, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>und <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> auf die Werte fest, die Sie übergeben, und legt <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> die-Eigenschaft auf den lokalen Computer "." fest.  
  
 Dieser Konstruktor initialisiert den Leistungs Bezeichner und verknüpft die Instanz mit einem vorhandenen Leistungs Bezeichner (System oder benutzerdefinierter Leistungs Bezeichner) auf dem lokalen Computer. Die Werte, die Sie für die <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Eigenschaften, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>und <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> übergeben, müssen auf einen vorhandenen Leistungswert auf dem lokalen Computer verweisen. Wenn die Instanz des Leistungs Zählers, auf die Sie verweisen, ungültig ist, wird beim Aufrufen des Konstruktors eine Ausnahme ausgelöst.  
  
 Diese Überladung kann auf einen schreibgeschützten oder Lese-/Schreib-Counter zugreifen, jedoch in einem schreibgeschützten Modus. Eine <xref:System.Diagnostics.PerformanceCounter> mit dieser Überladung erstellte-Instanz kann nicht in den-Wert schreiben, auch wenn der gegen Überlese-/Schreibmodus ist.  
  
 Um eine Instanz der Leistungs Kategorie zu erstellen, `instanceName` geben Sie <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> eine für den Konstruktor an. Wenn die von angegebene Kategorieinstanz bereits vorhanden ist, verweist das neue-Objekt auf `instanceName` die vorhandene Kategorieinstanz.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="counterName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
Die angegebene Kategorie ist ungültig.  
  
- oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  
  
- oder - 
 <paramref name="instanceName" /> ist länger als 127 Zeichen.  
  
- oder - 
 <paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
        <param name="counterName">Der Name des Leistungsindikators.</param>
        <param name="instanceName">Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn die Kategorie eine einzelne Instanz enthält.</param>
        <param name="readOnly"><see langword="true" />, um im schreibgeschützten Modus auf einen Zähler zuzugreifen, <see langword="false" />, um im Lese-/Schreibmodus auf einen Zähler zuzugreifen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse im schreibgeschützten oder Lese-/Schreibmodus und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator und der angegebenen Kategorieinstanz auf dem lokalen Computer zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei den Parameter Zeichenfolgen wird nicht nach Groß-/Kleinschreibung  
  
 Verwenden Sie diese Überladung, um entweder im schreibgeschützten Modus oder im Lese-/Schreibmodus auf einen Leistungswert zuzugreifen.  
  
 Diese <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Überladung des Konstruktors legt die Eigenschaften, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>und <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> auf die Werte fest, die Sie übergeben, und legt die <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> -Eigenschaft auf den lokalen Computer, ".", fest.  
  
 Dieser Konstruktor initialisiert den Leistungs Bezeichner und verknüpft die Instanz mit einem vorhandenen Leistungs Bezeichner (System oder benutzerdefinierter Leistungs Bezeichner) auf dem lokalen Computer. Die Werte, die Sie für die <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Eigenschaften, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>und <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> übergeben, müssen auf einen vorhandenen Leistungswert auf dem lokalen Computer verweisen. Wenn die Instanz des Leistungs Zählers, auf die Sie verweisen, ungültig ist, wird beim Aufrufen des Konstruktors eine Ausnahme ausgelöst.  
  
> [!NOTE]
>  Sie können diese Überladung verwenden, um eine Verbindung mit einem System Counter herzustellen, aber Sie können nicht in einen System-Counter schreiben. Wenn beim Herstellen `readOnly` einer `false` Verbindung mit einem System-Counter auf festgelegt wird, löst der Konstruktor daher eine Ausnahme aus.  
  
 Um eine Instanz der Leistungs Kategorie zu erstellen, `instanceName` geben Sie <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> eine für den Konstruktor an. Wenn die von angegebene Kategorieinstanz bereits vorhanden ist, verweist das neue-Objekt auf `instanceName` die vorhandene Kategorieinstanz.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="counterName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
Die angeforderte Einstellung für die Lese-/Schreibberechtigung ist für diesen Zähler ungültig.  
  
- oder - 
Die angegebene Kategorie ist nicht vorhanden (wenn <paramref name="readOnly" /><see langword="true" /> ist).  
  
- oder - 
Die angegebene Kategorie ist keine benutzerdefinierte .NET Framework-Kategorie (wenn <paramref name="readOnly" /><see langword="false" /> ist).  
  
- oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  
  
- oder - 
 <paramref name="instanceName" /> ist länger als 127 Zeichen.  
  
- oder - 
 <paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</param>
        <param name="counterName">Der Name des Leistungsindikators.</param>
        <param name="instanceName">Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn die Kategorie eine einzelne Instanz enthält.</param>
        <param name="machineName">Der Computer, auf dem der Leistungsindikator sowie die ihm zugeordnete Kategorie vorhanden sind.</param>
        <summary>Initialisiert eine neue, schreibgeschützte Instanz der <see cref="T:System.Diagnostics.PerformanceCounter" />-Klasse und ordnet sie dem angegebenen System- oder benutzerdefinierten Leistungsindikator sowie der angegebenen Kategorieinstanz auf dem angegebenen Computer zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei den Parameter Zeichenfolgen wird nicht nach Groß-/Kleinschreibung  
  
 Diese über <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>Ladung des Konstruktors legt die Eigenschaften, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, und <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> auf die Werte fest, die Sie übergeben.  
  
 Dieser Konstruktor initialisiert den Leistungs Bezeichner und verknüpft die Instanz mit einem vorhandenen Leistungs Bezeichner (System oder benutzerdefinierter Leistungs Bezeichner) auf dem angegebenen Computer. Die Werte, die Sie <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>für die Eigenschaften <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> , <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>und <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> übergeben, müssen auf einen vorhandenen Leistungs Leistungswert zeigen. Wenn die Instanz des Leistungs Zählers, auf die Sie verweisen, ungültig ist, wird beim Aufrufen des Konstruktors eine Ausnahme ausgelöst. Diese Überladung kann auf einen schreibgeschützten oder Lese-/Schreib-Counter zugreifen, jedoch in einem schreibgeschützten Modus. Eine <xref:System.Diagnostics.PerformanceCounter> mit dieser Überladung erstellte-Instanz kann nicht in den-Wert schreiben, auch wenn der gegen Überlese-/Schreibmodus ist.  
  
> [!NOTE]
>  Sie können nicht in Remote Leistungsindikatoren schreiben. Es gibt keine Überladung, die es Ihnen ermöglicht, eine Lese-/Schreibinstanz der <xref:System.Diagnostics.PerformanceCounter> Klasse anzugeben, die eine Verbindung mit einem Remote Computer herstellt.  
  
 Um eine Instanz der Leistungs Kategorie zu erstellen, `instanceName` geben Sie <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> eine für den Konstruktor an. Wenn die von angegebene Kategorieinstanz bereits vorhanden ist, verweist das neue-Objekt auf `instanceName` die vorhandene Kategorieinstanz.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
> [!NOTE]
>  Wenn der Remote Computer in Windows Vista Mitglied einer Arbeitsgruppe ist, müssen Sie ggf. die Benutzerkontensteuerung deaktivieren, damit das lokale Benutzerkonto nicht gefiltert wird und auf ein Administrator Konto erhöht werden kann. Aus Sicherheitsgründen sollte die Deaktivierung der Benutzerkontensteuerung ein letztes Mittel sein. Weitere Informationen zum Deaktivieren von UAC finden Sie unter [Benutzerkontensteuerung und WMI](https://go.microsoft.com/fwlink/?LinkId=91617).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="counterName" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
Die angeforderte Einstellung für die Lese-/Schreibberechtigung ist für diesen Zähler ungültig.  
  
- oder - 
Der Zähler ist auf dem angegebenen Computer nicht vorhanden.  
  
- oder - 
Die angegebene Kategorie ist als eine Kategorie mit mehreren Instanzen markiert und erfordert, dass der Leistungsindikator mit einem Instanznamen erstellt wird.  
  
- oder - 
 <paramref name="instanceName" /> ist länger als 127 Zeichen.  
  
- oder - 
 <paramref name="categoryName" /> und <paramref name="counterName" /> wurden in verschiedenen Sprachen lokalisiert.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="machineName" />-Parameter ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> oder <paramref name="counterName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="performanceCounter.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beginnt die Initialisierung einer <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz für die Verwendung in einem Formular oder durch eine andere Komponente. Die Initialisierung erfolgt zur Laufzeit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Entwurfs Umgebung verwendet diese Methode, um die Initialisierung einer Komponente zu starten, die in einem Formular oder von einer anderen Komponente verwendet wird. Die <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> -Methode beendet die Initialisierung. Die Verwendung <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> der <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> -Methode und der-Methode verhindert, dass die Komponente verwendet wird, bevor Sie vollständig initialisiert wird  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Leistungsindikatorkategorie für diesen Leistungsindikator ab oder legt diesen fest.</summary>
        <value>Der Name der Leistungsindikatorkategorie (bzw. des Leistungsobjekts), der dieser Leistungsindikator zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird im Dialogfeld "MMC-Snap-in" des Leistungs- `Add Counter` und Leistungs Dienst-Managersangezeigt.`Performance Object` <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>  
  
 Ein Leistungs Monitor überwacht das Verhalten einer Kategorie oder eines Leistungsobjekts auf einem Computer. Zu den Kategorien gehören physische Komponenten (z. b. Prozessoren, Datenträger und Arbeitsspeicher) und Systemobjekte (z. b. Prozesse und Threads). System Leistungsindikatoren, die sich auf das gleiche Leistungs Objekt beziehen, werden in eine Kategorie eingeteilt, die ihren allgemeinen Fokus angibt. Wenn Sie eine Instanz der <xref:System.Diagnostics.PerformanceCounter> -Klasse erstellen, geben Sie zuerst die Kategorie an, mit der die Komponente interagiert, und wählen Sie dann einen Indikator aus dieser Kategorie aus.  
  
 Eine Windows-gegen Kategorie ist beispielsweise die Arbeitsspeicher Kategorie. System Leistungsindikatoren in dieser Kategorie verfolgen Arbeitsspeicher Daten, wie z. b. die Anzahl der verfügbaren Bytes und die Anzahl der zwischengespeicherten Bytes. Wenn Sie mit den in der Anwendung zwischengespeicherten Bytes arbeiten möchten, erstellen Sie eine Instanz der <xref:System.Diagnostics.PerformanceCounter> Komponente, verbinden Sie Sie mit der Kategorie Speicher, und wählen Sie dann den entsprechenden Counter (in diesem Fall zwischengespeicherte Bytes) aus dieser Kategorie aus.  
  
 Obwohl Ihr System viele weitere Indikatorenkategorien zur Verfügung stellt, sind die Kategorien, mit denen Sie wahrscheinlich häufig interagieren werden, die Cache-, Arbeitsspeicher-, Objekt-, PhysicalDisk-, Prozess-, Prozessor-, Server-, System-und Thread Kategorien.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Standard Instanz der <xref:System.Diagnostics.PerformanceCounter> -Klasse erstellt. Nachdem die-Instanz erstellt wurde, <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>werden <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>die- <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> ,-und-Eigenschaftswerte festgelegt, <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> und die Ergebnisse eines Aufrufes der-Methode werden angezeigt.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> ist <see langword="null" />.</exception>
        <altmember cref="P:System.Diagnostics.Process.ProcessName" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="performanceCounter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet den Leistungsindikator und gibt sämtliche von dieser Leistungsindikatorinstanz reservierten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diese <xref:System.Diagnostics.PerformanceCounter> Instanz einem Leistungs Bezeichner zuordnen, der sich auf dem Server befindet, initialisiert das System die Instanz und ordnet Arbeitsspeicher zu, um Informationen zu Leistungs Proben zu enthalten. Die <xref:System.Diagnostics.PerformanceCounter.Close%2A> -Methode gibt die Ressourcen frei, die vom-Objekt zugeordnet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseSharedResources">
      <MemberSignature Language="C#" Value="public static void CloseSharedResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseSharedResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.CloseSharedResources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CloseSharedResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CloseSharedResources();" />
      <MemberSignature Language="F#" Value="static member CloseSharedResources : unit -&gt; unit" Usage="System.Diagnostics.PerformanceCounter.CloseSharedResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die von den Zählern angeforderte gemeinsame Verwendung der Leistungsindikatorenbibliothek zurück.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Lesen der Leistungsindikatorkategorie. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CounterHelp">
      <MemberSignature Language="C#" Value="public string CounterHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterHelp : string" Usage="System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("A description describing the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_CounterHelp")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschreibung für diesen Leistungsindikator ab.</summary>
        <value>Eine Beschreibung des Elements oder der Menge, die dieser Leistungsindikator misst.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Dialogfeld Leistungsindikatoren hinzufügen des Leistungsindikator-Manager-MMC- <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> Snap-Ins wird der Text angezeigt, wenn ein Benutzer einen Indikator aus der Liste Indikatoren auswählt und auf die Schaltfläche "Erläuterung" klickt  
  
 Verwenden Sie beim Erstellen eines neuen Zählers den <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> Text, um zu beschreiben, wie die Indikatoren überwacht werden, damit der Benutzer feststellen kann, ob der Indikatoren der System Monitor Anzeige hinzugefügt wird.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz ist keinem Leistungsindikator zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Lesen der Leistungsindikatorkategorie. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberSignature Language="VB.NET" Value="Public Property CounterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CounterName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Leistungsindikators ab, der dieser <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz zugeordnet ist, oder legt diesen fest.</summary>
        <value>Der Name des Zählers, der i. d. R. die zu messende Menge beschreibt. Dieser Name wird im Dialogfeld Leistungsindikatoren hinzufügen des MMC-Snap-Ins Leistungsindikator-Manager in der Zählerliste angezeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im [Dialogfeld Leistungsindikatoren hinzufügen](https://go.microsoft.com/fwlink/p/?LinkId=257854)von Windows Performance Manager finden Sie eine Liste verfügbarer bereits vorhandener Leistungsindikatoren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie Sie <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> die-Eigenschaft auf einen typischen Namen des Zählers festlegen.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CounterType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterType CounterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterType CounterType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterType As PerformanceCounterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterType CounterType { System::Diagnostics::PerformanceCounterType get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterType : System.Diagnostics.PerformanceCounterType" Usage="System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_CounterType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zählertyp des zugeordneten Leistungsindikators ab.</summary>
        <value>Ein <see cref="T:System.Diagnostics.PerformanceCounterType" />, der sowohl die Interaktionsweise zwischen Zähler und Überwachungsanwendung als auch die Art der enthaltenen Werte beschreibt (z. B. berechnet oder nicht berechnet).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.PerformanceCounterType> -Enumeration enthält die Typen von Leistungsindikatoren, mit denen Sie interagieren können. Einige der Zählers stellen berechnete Werte dar, z. b. den Durchschnitt der vom System vorgenommenen Mess wermesswerte. Andere Typen stellen Rohwerte oder nicht berechnete Werte dar. In der folgenden Tabelle sind die-Counter-Typen aufgeführt, mit denen Sie am häufigsten interagieren werden.  
  
|Verantwortung des Zählers|PerformanceCounterType-Wert|Beispiel|  
|------------------------------|----------------------------------|-------------|  
|Behalten Sie eine einfache Anzahl von Elementen oder Vorgängen bei.|`NumberOfItems32`|Nachverfolgen der Anzahl von Bestellungen, die als 32-Bit-Ganzzahl empfangen werden.|  
|Sorgen Sie für eine einfache Anzahl höherer Kapazität.|`NumberOfItems64`|Nachverfolgen der Anzahl der Bestellungen für eine Website mit sehr hoher Menge, die als 64-Bit-Ganzzahl gespeichert wird.|  
|Nachverfolgen der Anzahl von Elementen oder Vorgängen pro Sekunde.|`RateOfCountsPerSecond32`|Nach Verfolgungs Aufträge, die pro Sekunde an einem Standort empfangen werden.|  
|Verfolgen Sie eine Anzahl von Elementen oder Vorgängen mit höherer Kapazität pro Sekunde nach.|`RateOfCountsPerSecond64`|Nachverfolgen von Bestellungen, die pro Sekunde auf einem Standort mit sehr hohem Volumen empfangen werden.|  
|Berechnen der durchschnittlichen Zeit zum Ausführen eines Prozesses oder Verarbeiten eines Elements|`AverageTimer32`|Berechnen Sie die durchschnittliche Zeit, die für die Verarbeitung einer Bestellung benötigt wird.|  
  
 Wenn Sie einen-Wert erstellen, dessen Typ die Verwendung eines entsprechenden Basis Zählers erfordert, müssen Sie den-Wert und die Basis <xref:System.Diagnostics.CounterCreationDataCollection> in der, die <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> Sie an die-Methode übergeben, deklarieren.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Lesen der Leistungsindikatorkategorie. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /></permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public long Decrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Decrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Decrement" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrement () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Decrement();" />
      <MemberSignature Language="F#" Value="member this.Decrement : unit -&gt; int64" Usage="performanceCounter.Decrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dekrementiert durch eine effiziente atomare Operation den zugeordneten Leistungsindikator um eins.</summary>
        <returns>Der dekrementierte Zählerwert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nur in benutzerdefinierte Leistungsindikatoren schreiben. Alle System Zähler sind schreibgeschützt.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.PerformanceCounter.Increment%2A>Methoden <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, und<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> verwenden zum Aktualisieren des Leistungs Zählers Interlocks. Dies trägt dazu bei, dass der Leistungswert in Multithread-oder multiprozessszenarien genau ist, aber auch zu Leistungseinbußen führen. Wenn Sie die Genauigkeit nicht benötigen, die von Interlocked-Vorgängen bereitgestellt wird <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> , können Sie die Eigenschaft direkt aktualisieren, um die Leistung zu verbessern.  In Multithread-Szenarien werden jedoch möglicherweise einige Updates des Leistungs Zählers ignoriert, was zu ungenauen Daten führt.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Zähler ist schreibgeschützt, sodass er von der Anwendung nicht dekrementiert werden kann.  
  
- oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
        <threadsafe>Diese Methode ist Thread sicher.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileMappingSize">
      <MemberSignature Language="C#" Value="public static int DefaultFileMappingSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 DefaultFileMappingSize" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared DefaultFileMappingSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static int DefaultFileMappingSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultFileMappingSize : int" Usage="System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This field has been deprecated and is not used.  Use machine.config or an application configuration file to set the size of the PerformanceCounter file mapping.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Größe des globalen Speichers (in Bytes) an, der von den Leistungsindikatoren gemeinsam genutzt wird. Die Standardgröße ist 524.288 Bytes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="performanceCounter.Dispose disposing" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="performanceCounter.Dispose disposing" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="performanceCounter.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die Initialisierung einer <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Entwurfs Umgebung verwendet diese Methode, um die Initialisierung einer Komponente zu beenden, die in einem Formular oder von einer anderen Komponente verwendet wird. Die <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> -Methode startet die Initialisierung. Die Verwendung <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> der <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> -Methode und der-Methode verhindert, dass die Komponente verwendet wird, bevor Sie vollständig initialisiert wird  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public long Increment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Increment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Function Increment () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Increment();" />
      <MemberSignature Language="F#" Value="member this.Increment : unit -&gt; int64" Usage="performanceCounter.Increment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inkrementiert durch eine effiziente atomare Operation den zugeordneten Leistungsindikator um eins.</summary>
        <returns>Der inkrementelle Zählerwert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nur in benutzerdefinierte Leistungsindikatoren schreiben. Alle System Zähler sind schreibgeschützt.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.PerformanceCounter.Increment%2A>Methoden <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, und<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> verwenden zum Aktualisieren des Leistungs Zählers Interlocks. Dies trägt dazu bei, dass der Leistungswert in Multithread-oder multiprozessszenarien genau ist, aber auch zu Leistungseinbußen führen. Wenn Sie die Genauigkeit nicht benötigen, die von Interlocked-Vorgängen bereitgestellt wird <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> , können Sie die Eigenschaft direkt aktualisieren, um die Leistung zu verbessern.  In Multithread-Szenarien werden jedoch möglicherweise einige Updates des Leistungs Zählers ignoriert, was zu ungenauen Daten führt.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Zähler ist schreibgeschützt, sodass er von der Anwendung nicht inkrementiert werden kann.  
  
- oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
        <threadsafe>Diese Methode ist Thread sicher.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="IncrementBy">
      <MemberSignature Language="C#" Value="public long IncrementBy (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 IncrementBy(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function IncrementBy (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long IncrementBy(long value);" />
      <MemberSignature Language="F#" Value="member this.IncrementBy : int64 -&gt; int64" Usage="performanceCounter.IncrementBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert, um den inkrementiert werden soll. (Durch einen negativen Wert wird der Zähler dekrementiert.)</param>
        <summary>Inkrementiert oder dekrementiert durch eine effiziente atomare Operation den Wert des zugeordneten Leistungsindikators um einen angegebenen Betrag.</summary>
        <returns>Der neue Zählerwert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nur in benutzerdefinierte Leistungsindikatoren schreiben. Alle System Zähler sind schreibgeschützt.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.PerformanceCounter.Increment%2A>Methoden <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, und<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> verwenden zum Aktualisieren des Leistungs Zählers Interlocks. Dies trägt dazu bei, dass der Leistungswert in Multithread-oder multiprozessszenarien genau ist, aber auch zu Leistungseinbußen führen. Wenn Sie die Genauigkeit nicht benötigen, die von Interlocked-Vorgängen bereitgestellt wird <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> , können Sie die Eigenschaft direkt aktualisieren, um die Leistung zu verbessern.  In Multithread-Szenarien werden jedoch möglicherweise einige Updates des Leistungs Zählers ignoriert, was zu ungenauen Daten führt.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> -Methode zum Hinzufügen von Inkrementen zu einem-Wert verwendet wird. Dieses Codebeispiel ist Teil eines größeren Beispiels für die <xref:System.Diagnostics.PerformanceCounter> -Klasse.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Zähler ist schreibgeschützt, sodass er von der Anwendung nicht inkrementiert werden kann.  
  
- oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie <see langword="false" />, wenn die <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Eigenschaft ist. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
        <threadsafe>Diese Methode ist Thread sicher.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="InstanceLifetime">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceLifetime As PerformanceCounterInstanceLifetime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterInstanceLifetime InstanceLifetime { System::Diagnostics::PerformanceCounterInstanceLifetime get(); void set(System::Diagnostics::PerformanceCounterInstanceLifetime value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceLifetime : System.Diagnostics.PerformanceCounterInstanceLifetime with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterInstanceLifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Lebenszeit eines Prozesses ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />-Werte. Die Standardeinstellung ist <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Leistungsindikatorkategorie mit dem .NET Framework, Version 1,0 oder 1,1, erstellt wird, wird der globale frei <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> gegebene Speicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>verwendet, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
> [!NOTE]
>  Wenn der Wert <xref:System.Diagnostics.PerformanceCounter.CounterType%2A> der-Eigenschaft ist <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, muss <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> der Wert des Leistungs Zählers sein <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Wert ist kein Member der <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />-Enumeration.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> wird festgelegt, nachdem der <see cref="T:System.Diagnostics.PerformanceCounter" /> initialisiert wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstanceName">
      <MemberSignature Language="C#" Value="public string InstanceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstanceName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InstanceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Instanznamen für diesen Leistungsindikator ab oder legt diesen fest.</summary>
        <value>Der Name der Instanz der Leistungsindikatorkategorie oder eine leere Zeichenfolge (""), wenn der Zähler ein Einzelinstanzzähler ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Instanznamen dürfen nicht länger als 128 Zeichen sein.  
  
 In einigen Situationen werden Kategorien in-Instanzen unterteilt, die Daten über mehrere Vorkommen des Objekts nachverfolgen, dem eine Kategorie zugeordnet ist. -Instanzen gelten für die Kategorie als Ganzes und nicht für einzelne Leistungsindikatoren. Jeder Leistungswert in einer Kategorie verfügt über jede Instanz, die für die Kategorie definiert ist. Beispielsweise enthält die Prozess Kategorie Instanzen mit dem Namen "idle" und "System". Jeder-Wert in der Prozess Kategorie enthält daher Daten für jede Instanz, die Informationen über Leerlauf Prozesse oder System Prozesse anzeigt.  
  
 Viele Kategorien enthalten nicht mehrere Instanzen. Daher können Sie diese Eigenschaft leer lassen, um anzugeben, dass der Kategorie keine Instanz zugeordnet ist.  
  
 Wenn diese <xref:System.Diagnostics.PerformanceCounter> Instanz auf eine Nichtbenutzer definierte Kategorie verweist, können Sie nur aus den vorhandenen Kategorieinstanzen auswählen. Sie können neue Kategorieinstanzen nur in benutzerdefinierten Kategorien erstellen, mit denen Sie beliebig viele Indikatoren und Kategorieinstanzen definieren können.  
  
 Um eine Instanz der Leistungs Kategorie zu erstellen, `instanceName` geben Sie <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> eine für den Konstruktor an. Wenn die von angegebene Kategorieinstanz bereits vorhanden ist, verweist das neue-Objekt auf `instanceName` die vorhandene Kategorieinstanz.  
  
> [!NOTE]
>  Verwenden Sie nicht die Zeichen "(", ")", "#", "\\" oder "/" im Instanznamen. Wenn eines dieser Zeichen verwendet wird, werden die Instanzwerte von der Leistungs Konsole (siehe [Laufzeitprofil Erstellung](~/docs/framework/debug-trace-profile/runtime-profiling.md)) möglicherweise nicht ordnungsgemäß angezeigt.  
  
 Wenn der Instanzname automatisch generiert wird und die Zeichen "(", ")", "#", "\\" oder "/" enthalten kann, verwenden Sie die Zeichen Zuordnung in der folgenden Tabelle.  
  
|Zeichen|Zugeordnetes Zeichen|  
|---------------|----------------------|  
|(|[|  
|)|]|  
|#|_|  
|\|_|  
|/|_|  
  
 Die <xref:System.AppDomain.FriendlyName%2A> -Eigenschaft <xref:System.AppDomain> des Objekts, das aus <xref:System.AppDomain.CurrentDomain%2A?displayProperty=nameWithType> der-Eigenschaft abgerufen wird, ist eine gängige Quelle von Instanznamen, die ungültige Zeichen enthalten können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Standard Instanz der <xref:System.Diagnostics.PerformanceCounter> -Klasse erstellt. Nachdem die-Instanz erstellt wurde, <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>werden <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>die- <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> ,-und-Eigenschaftswerte festgelegt, <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> und die Ergebnisse eines Aufrufes der-Methode werden angezeigt.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("What's the machine name format?")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Computernamen für diesen Leistungsindikator ab oder legt diesen fest.</summary>
        <value>Der Server, auf dem der Leistungsindikator sowie die ihm zugeordnete Kategorie vorhanden sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können Werte nur in Indikatoren schreiben, die sich auf dem lokalen Computer befinden. Allerdings können Sie die Werte aller Computer im Unternehmen lesen, für die Sie Zugriffsberechtigungen besitzen.  
  
 Wenn Sie die <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> -Eigenschaft so festlegen, dass Sie auf einen Remote <xref:System.Diagnostics.PerformanceCounter> Computer verweist, versucht die-Instanz, den-Wert auf diesem Computer zu öffnen. Wenn der-Wert nicht vorhanden ist, wird durch das Festlegen dieser Eigenschaft eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" />-Format ist ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextSample">
      <MemberSignature Language="C#" Value="public System.Diagnostics.CounterSample NextSample ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Diagnostics.CounterSample NextSample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextSample" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSample () As CounterSample" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::CounterSample NextSample();" />
      <MemberSignature Language="F#" Value="member this.NextSample : unit -&gt; System.Diagnostics.CounterSample" Usage="performanceCounter.NextSample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CounterSample</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zählermessung ab und gibt dafür den unformatierten bzw. nicht berechneten Wert zurück.</summary>
        <returns>Ein <see cref="T:System.Diagnostics.CounterSample" />, das den nächsten Rohwert darstellt, den das System für diesen Zähler abruft.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird im Allgemeinen für Leistungsindikatoren verwendet, die nicht berechnete Werte enthalten.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> -Methode verwendet wird, um den nächsten nicht berechneten Wert eines Zählers abzurufen. Dieses Codebeispiel ist Teil eines größeren Beispiels für die <xref:System.Diagnostics.PerformanceCounter> -Klasse.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Lesen der Leistungsindikatorkategorie. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="NextValue">
      <MemberSignature Language="C#" Value="public float NextValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 NextValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextValue" />
      <MemberSignature Language="VB.NET" Value="Public Function NextValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float NextValue();" />
      <MemberSignature Language="F#" Value="member this.NextValue : unit -&gt; single" Usage="performanceCounter.NextValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zählermessung ab und gibt den dafür berechneten Wert zurück.</summary>
        <returns>Der nächste berechnete Wert, den das System für diesen Zähler abruft.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Wenn der berechnete Wert eines Zählers von zwei Lesevorgängen abhängt, gibt der erste Lesevorgang 0,0 zurück. Das Zurücksetzen der Leistungswert Eigenschaften zum Angeben eines anderen Leistungs Zählers entspricht dem Erstellen eines neuen Leistungs Zählers, und der erste Lesevorgang mit den neuen Eigenschaften gibt 0,0 zurück. Die empfohlene Verzögerungszeit zwischen den Aufrufen <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> der-Methode beträgt eine Sekunde, damit der Leistungs-Counter den nächsten inkrementellen Lesevorgang ausführen kann.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren müssen Sie über Administratorrechte verfügen. Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Diagnostics.PerformanceCounterType.ElapsedTime> -Counter erstellt und <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> die-Methode verwendet, um die Werte des Zählers über einen Zeitraum anzuzeigen.  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Lesen der Leistungsindikatorkategorie. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RawValue">
      <MemberSignature Language="C#" Value="public long RawValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RawValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberSignature Language="VB.NET" Value="Public Property RawValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RawValue { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.RawValue : int64 with get, set" Usage="System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The raw value of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_RawValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den unformatierten bzw. nicht berechneten Wert dieses Zählers ab oder legt diesen fest.</summary>
        <value>Der Rohwert des Zählers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der zähtertyp eine 32-Bit-Größe ist und Sie versuchen, diese Eigenschaft auf einen Wert festzulegen, der zu groß für die Anpassung ist, wird der Wert von der-Eigenschaft auf 32 Bits abgeschnitten. Wenn Sie benutzerdefinierte Leistungsindikatoren auf dem lokalen Computer lesen <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> , kann die Verwendung der-Eigenschaft anstelle eines berechneten Werts in Szenarios, in denen der Rohwert ausreichend ist, zu einer erheblich besseren Leistung führen.  
  
 Wenn der zu lesende Wert schreibgeschützt ist, wird beim Aufrufen der <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> -Eigenschaft der-Wert zu dem Zeitpunkt, zu dem die-Eigenschaft aufgerufen wird, als Stichprobe angezeigt. Diese Aktion entspricht dem ersten Abrufen der <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> -Methode. Wenn Sie anschließend Aufrufen <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>, können Sie Berechnungen für die Werte durchführen, die von beiden Aufrufen zurückgegeben werden.  
  
 Da System Indikatoren schreibgeschützt sind, können Sie Ihre Rohwerte erhalten, aber nicht festlegen.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.PerformanceCounter.Increment%2A>Methoden <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, und<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> verwenden zum Aktualisieren des Leistungs Zählers Interlocks. Dies trägt dazu bei, dass der Leistungswert in Multithread-oder multiprozessszenarien genau ist, aber auch zu Leistungseinbußen führen. Wenn Sie die Genauigkeit nicht benötigen, die von Interlocked-Vorgängen bereitgestellt wird <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> , können Sie die Eigenschaft direkt aktualisieren, um die Leistung zu verbessern.  In Multithread-Szenarien werden jedoch möglicherweise einige Updates des Leistungs Zählers ignoriert, was zu ungenauen Daten führt.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
> [!NOTE]
>  Zum Lesen von Leistungsindikatoren in Windows Vista, Windows XP Professional x64 Edition oder Windows Server 2003 müssen Sie entweder Mitglied der Gruppe "System Monitor Benutzer" sein oder über Administratorrechte verfügen.  
>   
>  Um zu vermeiden, dass Sie Ihre Berechtigungen für den Zugriff auf Leistungsindikatoren in Windows Vista erhöhen müssen, können Sie sich selbst zur Gruppe der System Monitor Benutzer hinzufügen.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Um den Code auszuführen, der auf Leistungsindikatoren zugreift, müssen Sie zunächst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Diagnostics.CounterSample> -Klasse verwendet, um den Wert <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> der-Eigenschaft für einen Leistungs Bearbeiter anzuzeigen.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Sie versuchen, den Rohwert des Zählers festzulegen, der Zähler ist jedoch schreibgeschützt.  
  
- oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Ohne Administratorrechte ausgeführter Code hat versucht, einen Leistungsindikator zu lesen.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The accessability level of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_ReadOnly")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob sich diese <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz im schreibgeschützten Modus befindet, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn sich die <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz im schreibgeschützten Modus befindet (auch wenn der Zähler selbst ein benutzerdefinierter .NET Framework-Leistungsindikator ist). <see langword="false" />, wenn sie sich im Lese-/Schreibmodus befindet. Der Standardwert wird durch den Konstruktor festgelegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei einem System Counter <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> sollte immer `true`sein. Sie können nicht in einen System-Counter schreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInstance">
      <MemberSignature Language="C#" Value="public void RemoveInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.RemoveInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInstance();" />
      <MemberSignature Language="F#" Value="member this.RemoveInstance : unit -&gt; unit" Usage="performanceCounter.RemoveInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die von der <see cref="T:System.Diagnostics.PerformanceCounter" />-Eigenschaft des <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />-Objekts angegebene Kategorieinstanz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine Instanz nur für einen benutzerdefinierten-Counter entfernen. Alle System Indikatoren sind schreibgeschützt, sodass beim Versuch, eine davon zu entfernen, eine Ausnahme ausgelöst wird.  
  
> [!NOTE]
>  Um eine mögliche Racebedingung zu vermeiden, wenn der freigegebene Arbeitsspeicher des Leistungs Zählers freigegeben <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> wird, wird empfohlen, <xref:System.AppDomain.DomainUnload> dass die-Methode vom-Ereignishandler aufgerufen wird.  
  
 Um eine Instanz der Leistungs Kategorie zu erstellen, `instanceName` geben Sie <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> eine für den Konstruktor an. Wenn die von angegebene Kategorieinstanz bereits vorhanden ist, verweist das neue-Objekt auf `instanceName` die vorhandene Kategorieinstanz.  
  
> [!NOTE]
>  Wenn der Wert für die <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> -Eigenschaft <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> ist und die Leistungs Objekt Kategorie mit .NET Framework-Version 1,0 oder 1,1 erstellt wurde <xref:System.InvalidOperationException> , wird eine ausgelöst. Leistungs Indikatorenkategorien, die in früheren Versionen erstellt wurden, verwenden globalen gemeinsam genutzten <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Arbeitsspeicher <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>, und der Wert für muss lauten. Wenn die Kategorie nicht von Anwendungen verwendet wird, die unter Version 1,0 oder 1,1 des .NET Framework ausgeführt werden, löschen Sie die Kategorie, und erstellen Sie Sie neu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Dieser Zähler ist schreibgeschützt, sodass die der Kategorie zugeordneten Instanzen nicht entfernt werden können.  
  
- oder - 
Die Instanz ist keinem Leistungsindikator ordnungsgemäß zugeordnet.  
  
- oder - 
Die <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />-Eigenschaft wird auf <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> festgelegt, wenn der globale gemeinsam genutzte Speicherbereich verwendet wird.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Beim Zugreifen auf eine System-API ist ein Fehler aufgetreten.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">zum Schreiben der Leistungsindikatorkategorie. Zugeordnete Enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
