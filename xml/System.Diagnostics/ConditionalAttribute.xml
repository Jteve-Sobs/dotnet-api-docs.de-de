<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c4ddb57047d2ed06769244f6296fa3fe7a7bbf1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69253335" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConditionalAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt den Compilern an, dass ein Methodenaufruf oder ein Attribut ignoriert werden soll, wenn kein angegebenes bedingtes Kompilierungssymbol definiert ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können das <xref:System.Diagnostics.ConditionalAttribute> -Attribut auf Methoden und Klassen anwenden. Allerdings ist die Verwendung für Klassen nur für Typen gültig, die von <xref:System.Attribute>abgeleitet sind. <xref:System.Diagnostics.ConditionalAttribute>wird entweder ignoriert oder erzeugt eine Compilerwarnung oder eine Fehlermeldung, wenn Sie Sie auf einen anderen Typ anwenden.  
  
 Durch <xref:System.Diagnostics.ConditionalAttribute> das Anwenden auf eine Methode <xref:System.Diagnostics.ConditionalAttribute> wird den Compilern angezeigt, dass ein Methodenaufrufe nicht in MSIL (Microsoft Intermediate Language) kompiliert werden dürfen, es sei denn, das bedingte Kompilierungs Symbol, das zugeordnet ist, ist definiert. Sie erhalten einen Kompilierungsfehler in Visual Studio, wenn Sie dieses Attribut auf eine Methode anwenden, die nicht "void" zurückgibt. Die <xref:System.Diagnostics.ConditionalAttribute> Anwendung auf ein Attribut gibt an, dass das Attribut nicht an Metadaten ausgegeben werden soll, es sei denn, das bedingte Kompilierungs Symbol ist definiert. Alle Argumente, die an die Methode oder das Attribut weitergegeben werden, werden vom Compiler immer noch vom Compiler geprüft.  
  
 Sie können die folgenden Verfahren verwenden, um Symbole für die bedingte Kompilierung zu definieren:  
  
-   Compilerbefehlszeilenoptionen verwenden; Beispiel **:/define: Debug**.  
  
-   Verwenden von Umgebungsvariablen in der Betriebssystemshell Legen Sie z. b. **Debug = 1 fest**.  
  
-   Verwenden Sie Pragmas im Quellcode. definieren Sie z. b. die Kompilierungs Variable wie folgt:  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     Um die Variable zu definieren, verwenden Sie Folgendes:  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 Compiler, die die Common Language Specification (CLS) einhalten, dürfen ignorieren <xref:System.Diagnostics.ConditionalAttribute>. Die C#-,-Visual Basic C++ -und- <xref:System.Diagnostics.ConditionalAttribute>Compiler unterstützen. der JScript-Compiler unterstützt das-Attribut nicht.  
  
> [!NOTE]
>  In Visual Basic wird der `AddressOf` -Operator nicht von diesem Attribut beeinflusst. Beispielsweise `Call CType(AddressOf delegate, Action)` ruft `delegate`immer auf, obwohl `Call delegate()` dies nicht möglich ist.  
  
 <xref:System.Diagnostics.ConditionalAttribute>wird auf die Methoden angewendet, die in der- <xref:System.Diagnostics.Debug> Klasse <xref:System.Diagnostics.Trace> und der-Klasse definiert sind.  
  
 Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.Diagnostics.ConditionalAttribute>. Im Beispiel wird davon ausgegangen, dass die Bedingung mit der **/define** -Compileroption definiert ist. Sie können unterschiedliche Ergebnisse abrufen, indem Sie die-Compileroption ändern. Sie können die Bedingungen optional mithilfe von Pragmas im Beispielcode definieren, anstatt Sie als Compileroptionen zu identifizieren.  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConditionalAttribute : string -&gt; System.Diagnostics.ConditionalAttribute" Usage="new System.Diagnostics.ConditionalAttribute conditionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">Eine Zeichenfolge, die das dem Attribut zugeordnete Symbol für die bedingte Kompilierung angibt, bei dem die Groß-/Kleinschreibung beachtet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConditionalAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung des <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> -Konstruktors veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.ConditionalAttribute> -Klasse bereitgestellt wird.  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionString : string" Usage="System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das dem <see cref="T:System.Diagnostics.ConditionalAttribute" />-Attribut zugeordnete Symbol für die bedingte Kompilierung ab.</summary>
        <value>Eine Zeichenfolge, die das dem <see cref="T:System.Diagnostics.ConditionalAttribute" />-Attribut zugeordnete Symbol für die bedingte Kompilierung angibt, bei dem die Groß-/Kleinschreibung beachtet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist schreibgeschützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
