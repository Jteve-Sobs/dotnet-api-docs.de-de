<Type Name="EventInstance" FullName="System.Diagnostics.EventInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fcc37af9f4bf30ee84633c9cccf19d242a1bba9" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46675518" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class EventInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventInstance" />
  <TypeSignature Language="F#" Value="type EventInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt sprachneutrale Informationen für einen Ereignisprotokolleintrag dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Diagnostics.EventInstance> ein Ereignisprotokolleintrags eine Ressourcen-ID anstelle der Zeichenfolge zu schreiben. Um einen Eintrag im Ereignisprotokoll zu schreiben, Initialisieren der <xref:System.Diagnostics.EventInstance.InstanceId%2A> Eigenschaft, und übergeben Sie die Instanz, die die <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode. Die Ereignisanzeige verwendet die Instanz-ID zu finden und die entsprechende Zeichenfolge aus der lokalisierten Ressourcendatei, die basierend auf aktuellen spracheinstellungen anzuzeigen. Sie müssen die Ereignisquelle mit der entsprechenden Ressourcendatei registrieren, vor dem Schreiben von Ereignissen mithilfe von Ressourcenbezeichnern.  
  
 Beim Schreiben von Ereignissen können Sie festlegen der <xref:System.Diagnostics.EventInstance.EntryType%2A> Eigenschaft, um das Symbol anzugeben, in dem die Ereignisanzeige für den Eintrag angezeigt. Sie können auch angeben, ein <xref:System.Diagnostics.EventInstance.CategoryId%2A> Eigenschaft, um die Kategorie anzugeben, in dem die Ereignisanzeige für den Eintrag angezeigt.  
  
 Die Ereignisanzeige verwendet, Kategorie, die Ereignisse filtern, die von einer Ereignisquelle geschrieben wird. Der Ereignisanzeige können die Kategorie als numerischen Wert anzeigen, oder es kann die Kategorie als eine Ressourcen-ID verwenden, um eine lokalisierte Kategorie-Zeichenfolge anzuzeigen.  
  
 Um lokalisierte Kategoriezeichenfolgen in der Ereignisanzeige anzuzeigen, müssen Sie eine Ereignisquelle mit einer Kategorieressourcendatei konfiguriert, und legen Sie verwenden die <xref:System.Diagnostics.EventInstance.CategoryId%2A> zu einer Ressource-ID in der Kategorieressourcendatei. Wenn die Ereignisquelle einen konfigurierten Kategorieressourcendatei verwendet werden soll, oder das angegebene keinen <xref:System.Diagnostics.EventInstance.CategoryId%2A> ist nicht der Index einer Zeichenfolge in der Kategorieressourcendatei, und klicken Sie dann mit der Ereignisanzeige zeigt den Wert der Kategorie "numeric" für diesen Eintrag. Konfigurieren die Kategorieressourcendatei, sowie die Anzahl der der Kategoriezeichenfolgen in der Ressourcendatei, über die <xref:System.Diagnostics.EventLogInstaller> oder <xref:System.Diagnostics.EventSourceCreationData> Klasse.  
  
 Sie müssen eine Quelle für ein Ereignisprotokoll registrieren, bevor Sie mit <xref:System.Diagnostics.EventInstance> zum Schreiben eines Ereignisses mit der <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode. Die Quelle muss konfiguriert werden, zum Schreiben lokalisierter Einträge in das Protokoll und die Quelle muss mindestens eine Ressourcendatei für die Nachricht zu definieren.  
  
 Erstellen Sie die neue Ereignisquelle, während der Installation der Anwendung. Dadurch wird die Zeit für das Betriebssystem, um die Liste der registrierten Ereignisquellen und deren Konfigurationen zu aktualisieren. Wenn das Betriebssystem nicht die Liste der unterstützten Ereignisquellen aktualisiert wurde, und Sie versuchen, ein Ereignis mit den neuen Quellserver, Schreiben der Write-Vorgang fehl. Sie können konfigurieren, einer neuen Datenquelle mithilfe einer <xref:System.Diagnostics.EventLogInstaller>, oder die <xref:System.Diagnostics.EventLog.CreateEventSource%2A> Methode. Sie müssen über Administratorrechte verfügen, auf dem Computer, um eine neue Ereignisquelle zu erstellen.  
  
 Weitere Informationen zum Definieren von ereignismeldungen, und Erstellen von Ressourcendateien für das Ereignisprotokoll, finden Sie unter im Thema "Meldungs-Compiler" in der Platform SDK-Dokumentation unter [ http://msdn.microsoft.com ](http://msdn.microsoft.com).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Informationsereignis Eintrag geschrieben und dann erneut die <xref:System.Diagnostics.EventInstance> um einen Eintrag für ein Warnungsereignis in eines vorhandenen Ereignisprotokollnamens zu schreiben. Der Ereignismeldungstext wird über eine Ressourcen-ID in einer Ressourcendatei für die Nachricht angegeben. Im Codebeispiel wird davon ausgegangen, dass die entsprechenden Nachrichtenressourcendatei für die Datenquelle registriert wurde.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Das Codebeispiel verwendet die folgende Meldung-Textdatei, die Ressourcenbibliothek EventLogMsgs.dll integriert. Eine Nachricht Text-Datei ist die Quelle, aus der Meldungsressourcendatei erstellt wird. Die Nachricht-Text-Datei definiert die Ressourcen-IDs und der Text für die Kategorie, ereignismeldung und Parameter einfügen-Zeichenfolgen.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert mithilfe sprachneutraler Informationen zum Definieren eines Ereignisprotokolleintrags eine neue Instanz der <see cref="T:System.Diagnostics.EventInstance" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instanceId">Ein Ressourcenbezeichner, der mit einer in der Meldungsressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt.</param>
        <param name="categoryId">Ein Ressourcenbezeichner, der mit einer in der Kategorieressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt oder gleich 0 (null) ist und damit keine Kategorie für das Ereignis spezifiziert.</param>
        <summary>Initialisiert mithilfe der angegebenen Ressourcenbezeichner für die lokalisierte Meldung und des Kategorietexts des Ereigniseintrags eine neue Instanz der <see cref="T:System.Diagnostics.EventInstance" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um einen Informationseintrag in ein Ereignisprotokoll zu schreiben, Initialisieren einer <xref:System.Diagnostics.EventInstance> und übergeben es an der <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode. Legen Sie die `instanceId` auf die Ressourcen-ID des in der ereignismeldung wird in der entsprechenden <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> -Eigenschaft für die Quelle. Legen Sie die `categoryId` auf einen Wert für die Kategorie "numeric", oder der Ressourcenbezeichner der Ereigniskategorie in der <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> -Eigenschaft für die Quelle; Set der `categoryId` 0 (null) für nicht-Ereigniskategorie. Die <xref:System.Diagnostics.EventInstance.EntryType%2A> für die neue Instanz-Eigenschaftensatz auf <xref:System.Diagnostics.EventLogEntryType.Information> standardmäßig.  
  
 Die Ereignisanzeige verwendet die Ressourcen-IDs, um die entsprechenden Zeichenfolgen aus die lokalisierten Ressourcendateien für die Datenquelle anzuzeigen. Sie müssen die Quelle mit den entsprechenden Ressourcendateien registrieren, bevor Sie Ereignisse, die mithilfe von Ressourcenbezeichnern schreiben können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Informationsereignis Eintrag geschrieben und dann erneut die <xref:System.Diagnostics.EventInstance> um einen Eintrag für ein Warnungsereignis in eines vorhandenen Ereignisprotokollnamens zu schreiben. Der Ereignismeldungstext wird über eine Ressourcen-ID in einer Ressourcendatei für die Nachricht angegeben. Im Codebeispiel wird davon ausgegangen, dass die entsprechenden Nachrichtenressourcendatei für die Datenquelle registriert wurde.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Das Codebeispiel verwendet die folgende Meldung-Textdatei, die Ressourcenbibliothek EventLogMsgs.dll integriert. Eine Nachricht Text-Datei ist die Quelle, aus der Meldungsressourcendatei erstellt wird. Die Nachricht-Text-Datei definiert die Ressourcen-IDs und der Text für die Kategorie, ereignismeldung und Parameter einfügen-Zeichenfolgen.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="instanceId" />-Parameter ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt32.MaxValue" />.  
  
- oder -  
Der <paramref name="categoryId" />-Parameter ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId, valuetype System.Diagnostics.EventLogEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer, entryType As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId, System::Diagnostics::EventLogEntryType entryType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int * System.Diagnostics.EventLogEntryType -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId, entryType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
        <Parameter Name="entryType" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="instanceId">Ein Ressourcenbezeichner, der mit einer in der Meldungsressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt.</param>
        <param name="categoryId">Ein Ressourcenbezeichner, der mit einer in der Kategorieressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt oder gleich 0 (null) ist und damit keine Kategorie für das Ereignis spezifiziert.</param>
        <param name="entryType">Ein <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert, der den Ereignistyp angibt.</param>
        <summary>Initialisiert mithilfe der angegebenen Ressourcenbezeichner für die lokalisierte Meldung und des Kategorietexts des Ereigniseintrags sowie des angegebenen Typs des Ereignisprotokolleintrags eine neue Instanz der <see cref="T:System.Diagnostics.EventInstance" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um einen Eintrag in ein Ereignisprotokoll schreiben möchten, Initialisieren einer <xref:System.Diagnostics.EventInstance> und übergeben es an der <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode. Legen Sie die `instanceId` auf die Ressourcen-ID des in der ereignismeldung wird in der entsprechenden <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> -Eigenschaft für die Quelle. Legen Sie die `categoryId` auf einen Wert für die Kategorie "numeric", oder der Ressourcenbezeichner der Ereigniskategorie in der <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> -Eigenschaft für die Quelle; Set der `categoryId` 0 (null) für nicht-Ereigniskategorie.  
  
 Die Ereignisanzeige verwendet die Ressourcen-IDs, um die entsprechenden Zeichenfolgen aus die lokalisierten Ressourcendateien für die Datenquelle anzuzeigen. Sie müssen die Quelle mit den entsprechenden Ressourcendateien registrieren, bevor Sie Ereignisse, die mithilfe von Ressourcenbezeichnern schreiben können.  
  
 Legen Sie die `entryType` auf eine der vordefinierten Eintragstypen. Die Ereignisanzeige verwendet den Ereignistyp, um zu bestimmen, welches Symbol in der Listenansicht des Ereignisprotokolls angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel schreibt zwei Überwachungsereigniseinträge in das Ereignisprotokoll `myNewLog`. Das Codebeispiel erstellt eine neue Ereignisquelle und ein neues Ereignisprotokoll, wenn sie nicht auf dem lokalen Computer vorhanden sind. Der Ereignismeldungstext wird über eine Ressourcen-ID in einer Ressourcendatei angegeben.  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 Das Codebeispiel verwendet die folgende Meldung-Textdatei, die Ressourcenbibliothek EventLogMsgs.dll integriert. Eine Nachricht Text-Datei ist die Quelle, aus der Meldungsressourcendatei erstellt wird. Die Nachricht-Text-Datei definiert die Ressourcen-IDs und der Text für die Kategorie, ereignismeldung und Parameter einfügen-Zeichenfolgen.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="entryType" /> ist kein gültiger <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="instanceId" /> ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt32.MaxValue" />.  
  
- oder -  
 <paramref name="categoryId" /> ist ein negativer Wert oder ein Wert größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName="CategoryId">
      <MemberSignature Language="C#" Value="public int CategoryId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.CategoryId" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryId : int with get, set" Usage="System.Diagnostics.EventInstance.CategoryId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ressourcenbezeichner ab, der die anwendungsdefinierte Kategorie des Ereigniseintrags angibt, oder legt diesen fest.</summary>
        <value>Ein numerischer Kategoriewert oder Ressourcenbezeichner, der mit einer in der Kategorieressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt. Der Standardwert ist 0 (null) und bedeutet, dass für den Ereigniseintrag keine Kategorie angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ereignisprotokoll-Kategorien sind Anwendung definierte Werte, die Hilfe Ereignisse gefiltert, oder geben Sie weitere Informationen über das Ereignis. Beispielsweise kann die Anwendung separate Kategorien für die unterschiedlichen Komponenten oder verschiedene Vorgänge definieren.  
  
 Legen Sie die <xref:System.Diagnostics.EventInstance.CategoryId%2A> Eigenschaft, um die Kategorie anzugeben, in dem die Ereignisanzeige für den Eintrag angezeigt. Der Ereignisanzeige können die Kategorie als numerischen Wert anzeigen, oder sie können die <xref:System.Diagnostics.EventInstance.CategoryId%2A> als Ressource Bezeichner, der eine lokalisierte Kategoriezeichenfolge anzeigen auf der Grundlage der aktuellen spracheinstellungen.  
  
 Um lokalisierte Kategoriezeichenfolgen in der Ereignisanzeige anzuzeigen, müssen Sie eine Ereignisquelle mit einer Kategorieressourcendatei konfiguriert, und legen Sie verwenden die <xref:System.Diagnostics.EventInstance.CategoryId%2A> zu einer Ressource-ID in der Kategorieressourcendatei. Wenn die Ereignisquelle einen konfigurierten Kategorieressourcendatei verwendet werden soll, oder das angegebene keinen <xref:System.Diagnostics.EventInstance.CategoryId%2A> ist nicht der Index einer Zeichenfolge in der Kategorieressourcendatei, und klicken Sie dann mit der Ereignisanzeige zeigt den Wert der Kategorie "numeric" für diesen Eintrag.  
  
 Sie müssen die Quelle mit der entsprechenden Ressourcendatei registrieren, vor dem Schreiben von Ereigniskategorien, die mithilfe von Ressourcenbezeichnern. Konfigurieren die Kategorieressourcendatei, sowie die Anzahl der der Kategoriezeichenfolgen in der Ressourcendatei, über die <xref:System.Diagnostics.EventLogInstaller> oder <xref:System.Diagnostics.EventSourceCreationData> Klasse. Wenn Kategoriezeichenfolgen in einer Ressourcendatei zu definieren, die Kategorie-Ressourcen-IDs müssen werden nacheinander beginnend mit 1 nummeriert, bis zu den konfigurierten <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> -Eigenschaftswert.  
  
 Ereigniskategorien sind optional. Wenn Ihre Anwendung keine Kategorien verwendet werden, legen Sie keine der <xref:System.Diagnostics.EventInstance.CategoryId%2A> für den Eintrag im Ereignisprotokoll.  
  
 Weitere Informationen zum Definieren von ereignismeldungen, und Erstellen von Ressourcendateien, zum Ereignis finden Sie unter im Thema "Meldungs-Compiler" in der Platform SDK-Dokumentation unter [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Informationen zum Definieren von Ereigniskategorien in Ressourcendateien finden Sie im Thema "Ereigniskategorien" im Plattform-SDK  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Informationsereignis Eintrag geschrieben und dann erneut die <xref:System.Diagnostics.EventInstance> um einen Eintrag für ein Warnungsereignis in eines vorhandenen Ereignisprotokollnamens zu schreiben. Der Ereignismeldungstext wird über eine Ressourcen-ID in einer Ressourcendatei für die Nachricht angegeben. Im Codebeispiel wird davon ausgegangen, dass die entsprechenden Nachrichtenressourcendatei für die Datenquelle registriert wurde.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Das Codebeispiel verwendet die folgende Meldung-Textdatei, die Ressourcenbibliothek EventLogMsgs.dll integriert. Eine Nachricht Text-Datei ist die Quelle, aus der Meldungsressourcendatei erstellt wird. Die Nachricht-Text-Datei definiert die Ressourcen-IDs und der Text für die Kategorie, ereignismeldung und Parameter einfügen-Zeichenfolgen.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft ist auf einen negativen Wert oder einen Wert größer als <see cref="F:System.UInt16.MaxValue" /> festgelegt.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); void set(System::Diagnostics::EventLogEntryType value); };" />
      <MemberSignature Language="F#" Value="member this.EntryType : System.Diagnostics.EventLogEntryType with get, set" Usage="System.Diagnostics.EventInstance.EntryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Ereignistyp des Ereignisprotokolleintrags an oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert, der den Typ des Ereigniseintrags angibt. Der Standardwert ist <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Ereignis ist eines einzelnen Typs an, womit die Anwendung beim Melden des Ereignisses. Die Ereignisanzeige verwendet den Ereignistyp, um zu bestimmen, welches Symbol in der Listenansicht des Ereignisprotokolls angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Informationsereignis Eintrag geschrieben und dann erneut die <xref:System.Diagnostics.EventInstance> um einen Eintrag für ein Warnungsereignis in eines vorhandenen Ereignisprotokollnamens zu schreiben. Der Ereignismeldungstext wird über eine Ressourcen-ID in einer Ressourcendatei für die Nachricht angegeben. Im Codebeispiel wird davon ausgegangen, dass die entsprechenden Nachrichtenressourcendatei für die Datenquelle registriert wurde.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Das Codebeispiel verwendet die folgende Meldung-Textdatei, die Ressourcenbibliothek EventLogMsgs.dll integriert. Eine Nachricht Text-Datei ist die Quelle, aus der Meldungsressourcendatei erstellt wird. Die Nachricht-Text-Datei definiert die Ressourcen-IDs und der Text für die Kategorie, ereignismeldung und Parameter einfügen-Zeichenfolgen.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Die Eigenschaft wurde auf keinen gültigen <see cref="T:System.Diagnostics.EventLogEntryType" />-Wert festgelegt.</exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : int64 with get, set" Usage="System.Diagnostics.EventInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ressourcenbezeichner ab, der den Meldungstext des Ereigniseintrags bezeichnet, oder legt diesen fest.</summary>
        <value>Ein Ressourcenbezeichner, der mit einer in der Meldungsressourcendatei der Ereignisquelle definierten Zeichenfolge übereinstimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.EventInstance.InstanceId%2A> Eigenschaft identifiziert eindeutig einen Ereigniseintrag für eine konfigurierte Ereignisquelle. Für Ereignisse in Ressourcendateien der Nachricht, definiert der <xref:System.Diagnostics.EventInstance.InstanceId%2A> entspricht der Ressourcenbezeichner, der aus der Definition Nachrichtenfelder in der Nachricht Text-Datei kompiliert. Ihre Anwendung kann lokalisierten Ereignisprotokolleinträge schreiben, durch Festlegen der <xref:System.Diagnostics.EventInstance.InstanceId%2A> auf einen Ressourcenbezeichner. Die Ereignisanzeige verwendet die <xref:System.Diagnostics.EventInstance.InstanceId%2A> Ressourcenbezeichner zum Suchen und Anzeigen der entsprechenden Zeichenfolge aus der lokalisierten Ressourcendatei auf der Grundlage von aktuellen spracheinstellungen. Sie müssen die Quelle mit der entsprechenden Ressourcendatei registrieren, vor dem Schreiben von Ereignissen mithilfe von Ressourcenbezeichnern.  
  
 Weitere Informationen zum Definieren von ereignismeldungen, und Erstellen von Ressourcendateien für das Ereignisprotokoll, finden Sie unter im Thema "Meldungs-Compiler" in der Platform SDK-Dokumentation unter [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Weitere Informationen zu Event Log-IDs finden Sie unter im Thema "Ereignis-IDs" im Platform SDK.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Informationsereignis Eintrag geschrieben und dann erneut die <xref:System.Diagnostics.EventInstance> um einen Eintrag für ein Warnungsereignis in eines vorhandenen Ereignisprotokollnamens zu schreiben. Der Ereignismeldungstext wird über eine Ressourcen-ID in einer Ressourcendatei für die Nachricht angegeben. Im Codebeispiel wird davon ausgegangen, dass die entsprechenden Nachrichtenressourcendatei für die Datenquelle registriert wurde.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Das Codebeispiel verwendet die folgende Meldung-Textdatei, die Ressourcenbibliothek EventLogMsgs.dll integriert. Eine Nachricht Text-Datei ist die Quelle, aus der Meldungsressourcendatei erstellt wird. Die Nachricht-Text-Datei definiert die Ressourcen-IDs und der Text für die Kategorie, ereignismeldung und Parameter einfügen-Zeichenfolgen.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft ist auf einen negativen Wert oder einen Wert größer als <see cref="F:System.UInt32.MaxValue" /> festgelegt.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
  </Members>
</Type>