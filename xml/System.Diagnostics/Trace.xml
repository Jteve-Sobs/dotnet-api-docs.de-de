<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c8f4df49b9f3e7cd9063718cc20e6c2c3f7893f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75137131" /></Metadata><TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <TypeSignature Language="F#" Value="type Trace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e018e-101">Stellt eine Reihe von Methoden und Eigenschaften für das Verfolgen der Ausführung von Code bereit.</span><span class="sxs-lookup"><span data-stu-id="e018e-101">Provides a set of methods and properties that help you trace the execution of your code.</span></span> <span data-ttu-id="e018e-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-103">Sie können die Eigenschaften und Methoden in der <xref:System.Diagnostics.Trace>-Klasse verwenden, um Releasebuilds zu instrumentieren.</span><span class="sxs-lookup"><span data-stu-id="e018e-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="e018e-104">Mithilfe der Instrumentation können Sie die Integrität Ihrer Anwendung überwachen, die in realen Einstellungen ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="e018e-105">Die Ablauf Verfolgung hilft Ihnen, Probleme zu isolieren und zu beheben, ohne ein Betriebssystem zu stören.</span><span class="sxs-lookup"><span data-stu-id="e018e-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="e018e-106">Diese Klasse stellt Methoden bereit, um ein <xref:System.Diagnostics.Trace.Assert%2A> Dialogfeld anzuzeigen und eine-Assertion auszugeben, die immer <xref:System.Diagnostics.Trace.Fail%2A>.</span><span class="sxs-lookup"><span data-stu-id="e018e-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="e018e-107">Diese Klasse stellt Schreib Methoden in den folgenden Variationen bereit: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>und <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="e018e-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="e018e-108">Die Klassen <xref:System.Diagnostics.BooleanSwitch> und <xref:System.Diagnostics.TraceSwitch> bieten die Möglichkeit, die Ablauf Verfolgungs Ausgabe dynamisch zu steuern.</span><span class="sxs-lookup"><span data-stu-id="e018e-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="e018e-109">Sie können die Werte dieser Switches ändern, ohne die Anwendung neu zu kompilieren.</span><span class="sxs-lookup"><span data-stu-id="e018e-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="e018e-110">Informationen zum Verwenden der Konfigurationsdatei zum Festlegen eines Schalters finden Sie in der <xref:System.Diagnostics.Switch>-Klasse und im Thema Gewusst [wie: erstellen, initialisieren und Konfigurieren von Ablauf Verfolgungs Schaltern](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) .</span><span class="sxs-lookup"><span data-stu-id="e018e-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="e018e-111">Sie können das Ziel der Ablauf Verfolgungs Ausgabe anpassen, indem Sie <xref:System.Diagnostics.TraceListener> Instanzen hinzufügen oder aus der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung entfernen.</span><span class="sxs-lookup"><span data-stu-id="e018e-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="e018e-112">Die <xref:System.Diagnostics.Trace.Listeners%2A>-Auflistung wird sowohl vom <xref:System.Diagnostics.Debug> als auch vom <xref:System.Diagnostics.Trace>-Klassen gemeinsam verwendet. durch das Hinzufügen eines Ablaufverfolgungslistener zu einer der Klassen wird der Listener</span><span class="sxs-lookup"><span data-stu-id="e018e-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="e018e-113">Standardmäßig wird die Ausgabe der Ablauf Verfolgung mit der <xref:System.Diagnostics.DefaultTraceListener>-Klasse ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-114">Das Hinzufügen eines Ablaufverfolgungslistener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung kann dazu führen, dass während der Ablauf Verfolgung eine Ausnahme ausgelöst wird, wenn eine vom Ablaufverfolgungslistener verwendete Ressource</span><span class="sxs-lookup"><span data-stu-id="e018e-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="e018e-115">Die Bedingungen und die ausgelöste Ausnahme hängen vom Ablaufverfolgungslistener ab und können in diesem Thema nicht aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="e018e-116">Es kann sinnvoll sein, Aufrufe an die <xref:System.Diagnostics.Trace> Methoden in `try`/`catch` Blöcke zu platzieren, um Ausnahmen von Ablaufverfolgungslistenern zu erkennen und zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="e018e-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-117">Wenn Sie Ablaufverfolgungslistener teilweise vertrauenswürdigem Code hinzufügen, erhalten Sie eine <xref:System.Security.SecurityException> Ausnahme, da das hinzu <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> fügen von ablaufverfolgungslisten</span><span class="sxs-lookup"><span data-stu-id="e018e-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="e018e-118">Zum Verfolgen von teilweise vertrauenswürdigem Code, der in einer Sandbox in Visual Studio ausgeführt wird, sollten Sie keine Ablaufverfolgungslistener</span><span class="sxs-lookup"><span data-stu-id="e018e-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="e018e-119">Sehen Sie sich stattdessen die <xref:System.Diagnostics.Trace> und <xref:System.Diagnostics.Debug> Meldungen im **Ausgabe** Fenster an.</span><span class="sxs-lookup"><span data-stu-id="e018e-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="e018e-120">Die <xref:System.Diagnostics.Trace>-Klasse stellt Eigenschaften bereit, um die Ebene der <xref:System.Diagnostics.Trace.Indent%2A>, die <xref:System.Diagnostics.Trace.IndentSize%2A>zu erhalten oder festzulegen, und ob nach jedem Schreibvorgang <xref:System.Diagnostics.Trace.AutoFlush%2A> werden soll.</span><span class="sxs-lookup"><span data-stu-id="e018e-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="e018e-121">Wenn Sie die <xref:System.Diagnostics.Trace.AutoFlush%2A> und <xref:System.Diagnostics.Trace.IndentSize%2A> für <xref:System.Diagnostics.Trace>festlegen möchten, können Sie die Konfigurationsdatei bearbeiten, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e018e-122">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:</span><span class="sxs-lookup"><span data-stu-id="e018e-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="e018e-123">Das <xref:System.Diagnostics.ConditionalAttribute>-Attribut wird auf die Methoden von <xref:System.Diagnostics.Trace>angewendet.</span><span class="sxs-lookup"><span data-stu-id="e018e-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="e018e-124">Compiler, die <xref:System.Diagnostics.ConditionalAttribute> unterstützen, ignorieren Aufrufe dieser Methoden, es sei denn, "Trace" ist als Symbol für die bedingte Kompilierung definiert.</span><span class="sxs-lookup"><span data-stu-id="e018e-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="e018e-125">In der Dokumentation eines Compilers können Sie feststellen, ob <xref:System.Diagnostics.ConditionalAttribute> unterstützt wird, sowie die Syntax zum Definieren eines Symbols für die bedingte Kompilierung.</span><span class="sxs-lookup"><span data-stu-id="e018e-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-126">In Visual Studio-Projekten ist standardmäßig das Symbol für die bedingte Kompilierung "Debuggen" für Debugbuilds definiert, und das Symbol "Trace" wird sowohl für Debug-als auch für Releasebuilds definiert.</span><span class="sxs-lookup"><span data-stu-id="e018e-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="e018e-127">Informationen dazu, wie Sie dieses Verhalten deaktivieren, finden Sie in der Visual Studio-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="e018e-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="e018e-128">Um das bedingte Kompilierungs Symbol "Trace" in C#zu definieren, fügen Sie die `/d:TRACE`-Option der Compilerbefehlszeile hinzu, wenn Sie den Code mithilfe einer Befehlszeile kompilieren, oder fügen Sie `#define TRACE` am Anfang der Datei hinzu.</span><span class="sxs-lookup"><span data-stu-id="e018e-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="e018e-129">Fügen Sie in Visual Basic die `/d:TRACE=True`-Option der Compilerbefehlszeile hinzu, oder fügen Sie der Datei `#Const TRACE=True` hinzu.</span><span class="sxs-lookup"><span data-stu-id="e018e-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="e018e-130"><xref:System.Diagnostics.ConditionalAttribute> wird vom C++ Compiler nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e018e-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="e018e-131">Um die entsprechende Funktionalität bereitzustellen, müssen Sie die Methoden von <xref:System.Diagnostics.Trace> in einem `#if defined(TRACE) ... #endif`-Block einschließen und die `/DTRACE`-Option der Compilerbefehlszeile hinzufügen oder `#define TRACE` zur Datei hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="e018e-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-132">Im folgenden Beispiel wird <xref:System.Diagnostics.Trace> verwendet, um den Anfang und das Ende der Ausführung eines Programms anzugeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="e018e-133">Im Beispiel werden auch die Methoden <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> und <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> verwendet, um die Ablauf Verfolgungs Ausgabe zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="e018e-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="e018e-134">Ein ausführeres Beispiel für die Verwendung von <xref:System.Diagnostics.Trace>finden Sie unter Gewusst [wie: Hinzufügen von Ablauf Verfolgungs Anweisungen zu Anwendungs Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span><span class="sxs-lookup"><span data-stu-id="e018e-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e018e-135">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="e018e-135">for operating with unmanaged code.</span></span> <span data-ttu-id="e018e-136">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e018e-137">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e018e-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <threadsafe><span data-ttu-id="e018e-138">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="e018e-138">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-139">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, werden Meldungen ausgegeben und ein Meldungsfeld mit der Aufrufliste angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Trace.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-140">Der auszuwertende bedingte Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e018e-140">The conditional expression to evaluate.</span></span> <span data-ttu-id="e018e-141">Wenn die Bedingung <see langword="true" /> ist, wird weder eine Fehlermeldung gesendet noch das Meldungsfeld angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span></span></param>
        <summary><span data-ttu-id="e018e-142">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, wird ein Meldungsfeld mit der Aufrufliste angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-143">Verwenden Sie die <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>-Methode, wenn Sie Assertionen in Releasebuilds ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="e018e-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="e018e-144">Die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>-Methode funktioniert nur in Debugbuilds.</span><span class="sxs-lookup"><span data-stu-id="e018e-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="e018e-145">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="e018e-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="e018e-146">In der Regel wird die <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29>-Methode verwendet, um während der Programmentwicklung logische Fehler zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="e018e-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="e018e-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> wertet die Bedingung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="e018e-148">Wenn das Ergebnis `false`ist, sendet es eine Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="e018e-149">Sie können dieses Verhalten anpassen, indem Sie der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung eine <xref:System.Diagnostics.TraceListener> hinzufügen oder daraus entfernen.</span><span class="sxs-lookup"><span data-stu-id="e018e-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="e018e-150">Wenn die Anwendung im Benutzeroberflächen Modus ausgeführt wird, wird ein Meldungs Feld angezeigt, in dem die aufrufsstapel mit Datei-und Zeilennummern angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="e018e-151">Das Meldungs Feld enthält drei Schaltflächen: **Abbrechen**, **wiederholen**und **ignorieren**.</span><span class="sxs-lookup"><span data-stu-id="e018e-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="e018e-152">Wenn Sie auf die Schaltfläche **Abbrechen** klicken, wird die Anwendung beendet.</span><span class="sxs-lookup"><span data-stu-id="e018e-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="e018e-153">Wenn Sie auf **wiederholen** klicken, werden Sie an den Code im Debugger gesendet, wenn die Anwendung in einem Debugger ausgeführt wird, oder es wird angeboten, einen Debugger zu öffnen, wenn dies nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="e018e-154">Das Klicken auf " **ignorieren** " wird mit der nächsten Anweisung im Code fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="e018e-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-155">Die Anzeige des Meldungs Felds hängt davon ab, ob das <xref:System.Diagnostics.DefaultTraceListener>vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e018e-156">Wenn sich die <xref:System.Diagnostics.DefaultTraceListener> nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung befindet, wird das Meldungs Feld nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="e018e-157">Der <xref:System.Diagnostics.DefaultTraceListener> kann vom [&lt;Clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), dem [&lt;Remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>-Methode für die <xref:System.Diagnostics.Trace.Listeners%2A>-Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`) entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="e018e-158">Sie können das Verhalten der <xref:System.Diagnostics.DefaultTraceListener> in der Konfigurationsdatei ändern, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e018e-159">In dieser Datei können Sie das Feld Assert-Nachricht aktivieren und deaktivieren oder die <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>-Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="e018e-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e018e-160">Die Konfigurationsdatei sollte wie folgt formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="e018e-160">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e018e-161">Im folgenden Beispiel wird ein Index für ein Array erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-161">The following example creates an index for an array.</span></span> <span data-ttu-id="e018e-162">Anschließend wird eine Aktion ausgeführt, mit der der Wert des Indexes festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="e018e-163">Anschließend ruft der Code <xref:System.Diagnostics.Trace.Assert%2A> auf, um zu überprüfen, ob der Indexwert gültig ist</span><span class="sxs-lookup"><span data-stu-id="e018e-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="e018e-164">Wenn Sie ungültig ist, gibt die <xref:System.Diagnostics.Trace.Assert%2A> die-aufrufsstapel aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-165">Der auszuwertende bedingte Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e018e-165">The conditional expression to evaluate.</span></span> <span data-ttu-id="e018e-166">Wenn die Bedingung <see langword="true" /> ist, wird die angegebene Meldung nicht gesendet, und das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="e018e-167">Die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="e018e-168">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, wird eine angegebene Meldung ausgegeben, und es wird ein Meldungsfeld mit der Aufrufliste angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-169">Verwenden Sie die <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>-Methode, wenn Sie Assertionen in Releasebuilds ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="e018e-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="e018e-170">Die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>-Methode funktioniert nur in Debugbuilds.</span><span class="sxs-lookup"><span data-stu-id="e018e-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="e018e-171">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="e018e-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="e018e-172">In der Regel wird die <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29>-Methode verwendet, um während der Programmentwicklung logische Fehler zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="e018e-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="e018e-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> wertet die Bedingung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="e018e-174">Wenn das Ergebnis `false`ist, sendet es die angegebene Diagnose Meldung an die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="e018e-175">Sie können dieses Verhalten anpassen, indem Sie der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung eine <xref:System.Diagnostics.TraceListener> hinzufügen oder daraus entfernen.</span><span class="sxs-lookup"><span data-stu-id="e018e-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="e018e-176">Wenn die Anwendung im Benutzeroberflächen Modus ausgeführt wird, wird ein Meldungs Feld angezeigt, in dem die aufrufsstapel mit Datei-und Zeilennummern angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="e018e-177">Das Meldungs Feld enthält drei Schaltflächen: **Abbrechen**, **wiederholen**und **ignorieren**.</span><span class="sxs-lookup"><span data-stu-id="e018e-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="e018e-178">Wenn Sie auf die Schaltfläche **Abbrechen** klicken, wird die Anwendung beendet.</span><span class="sxs-lookup"><span data-stu-id="e018e-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="e018e-179">Wenn Sie auf **wiederholen** klicken, werden Sie an den Code im Debugger gesendet, wenn die Anwendung in einem Debugger ausgeführt wird, oder es wird angeboten, einen Debugger zu öffnen, wenn dies nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="e018e-180">Das Klicken auf " **ignorieren** " wird mit der nächsten Anweisung im Code fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="e018e-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-181">Die Anzeige des Meldungs Felds hängt davon ab, ob das <xref:System.Diagnostics.DefaultTraceListener>vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e018e-182">Wenn sich die <xref:System.Diagnostics.DefaultTraceListener> nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung befindet, wird das Meldungs Feld nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="e018e-183">Der <xref:System.Diagnostics.DefaultTraceListener> kann vom [&lt;Clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), dem [&lt;Remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>-Methode für die <xref:System.Diagnostics.Trace.Listeners%2A>-Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`) entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="e018e-184">Sie können das Verhalten der <xref:System.Diagnostics.DefaultTraceListener> in der Konfigurationsdatei ändern, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e018e-185">In dieser Datei können Sie das Feld Assert-Nachricht aktivieren und deaktivieren oder die <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>-Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="e018e-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e018e-186">Die Konfigurationsdatei sollte wie folgt formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="e018e-186">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e018e-187">Im folgenden Beispiel wird überprüft, um festzustellen, ob der `type`-Parameter gültig ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="e018e-188">Wenn die `type` übermittelt `null`wird, gibt der <xref:System.Diagnostics.Trace.Assert%2A> eine Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-189">Der auszuwertende bedingte Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e018e-189">The conditional expression to evaluate.</span></span> <span data-ttu-id="e018e-190">Wenn die Bedingung <see langword="true" /> ist, werden die angegebenen Meldungen nicht gesendet, und das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="e018e-191">Die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="e018e-192">Die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung zu sendende ausführliche Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="e018e-193">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, werden zwei angegebene Meldungen ausgegeben, und es wird ein Meldungsfeld mit der Aufrufliste angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-194">Verwenden Sie die <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>-Methode, wenn Sie Assertionen in Releasebuilds ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="e018e-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="e018e-195">Die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>-Methode funktioniert nur in Debugbuilds.</span><span class="sxs-lookup"><span data-stu-id="e018e-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="e018e-196">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="e018e-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="e018e-197">In der Regel wird die <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29>-Methode verwendet, um während der Programmentwicklung logische Fehler zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="e018e-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="e018e-198"><xref:System.Diagnostics.Trace.Assert%2A> wertet die Bedingung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="e018e-199">Wenn das Ergebnis `false`ist, sendet es die angegebene Diagnose Meldung und die ausführliche Meldung an die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="e018e-200">Sie können dieses Verhalten anpassen, indem Sie der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung eine <xref:System.Diagnostics.TraceListener> hinzufügen oder daraus entfernen.</span><span class="sxs-lookup"><span data-stu-id="e018e-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="e018e-201">Wenn die Anwendung im Benutzeroberflächen Modus ausgeführt wird, wird ein Meldungs Feld angezeigt, in dem die aufrufsstapel mit Datei-und Zeilennummern angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="e018e-202">Das Meldungs Feld enthält drei Schaltflächen: **Abbrechen**, **wiederholen**und **ignorieren**.</span><span class="sxs-lookup"><span data-stu-id="e018e-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="e018e-203">Wenn Sie auf die Schaltfläche **Abbrechen** klicken, wird die Anwendung beendet.</span><span class="sxs-lookup"><span data-stu-id="e018e-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="e018e-204">Wenn Sie auf **wiederholen** klicken, werden Sie an den Code im Debugger gesendet, wenn die Anwendung in einem Debugger ausgeführt wird, oder es wird angeboten, einen Debugger zu öffnen, wenn dies nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="e018e-205">Das Klicken auf " **ignorieren** " wird mit der nächsten Anweisung im Code fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="e018e-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-206">Die Anzeige des Meldungs Felds hängt davon ab, ob das <xref:System.Diagnostics.DefaultTraceListener>vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e018e-207">Wenn sich die <xref:System.Diagnostics.DefaultTraceListener> nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung befindet, wird das Meldungs Feld nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="e018e-208">Der <xref:System.Diagnostics.DefaultTraceListener> kann vom [&lt;Clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), dem [&lt;Remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>-Methode für die <xref:System.Diagnostics.Trace.Listeners%2A>-Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`) entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="e018e-209">Sie können das Verhalten der <xref:System.Diagnostics.DefaultTraceListener> in der Konfigurationsdatei ändern, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e018e-210">In dieser Datei können Sie das Feld Assert-Nachricht aktivieren und deaktivieren oder die <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>-Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="e018e-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e018e-211">Die Konfigurationsdatei sollte wie folgt formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="e018e-211">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e018e-212">Im folgenden Beispiel wird überprüft, um festzustellen, ob der `type`-Parameter gültig ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="e018e-213">Wenn die `type` übermittelt `null`wird, gibt der <xref:System.Diagnostics.Trace.Assert%2A> eine Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Trace.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e018e-214">Ruft die Information ab, ob <see cref="M:System.Diagnostics.Trace.Flush" /> nach jedem Schreibvorgang für <see cref="P:System.Diagnostics.Trace.Listeners" /> aufgerufen werden soll, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="e018e-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span></span></summary>
        <value><span data-ttu-id="e018e-215"><see langword="true" />, wenn <see cref="M:System.Diagnostics.Trace.Flush" /> nach jedem Schreibvorgang für <see cref="P:System.Diagnostics.Trace.Listeners" /> aufgerufen wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-215"><see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-216">Der Standardwert ist `false`.</span><span class="sxs-lookup"><span data-stu-id="e018e-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="e018e-217">Das Leeren des Streams leert den zugrunde liegenden Encoder nicht, es sei denn, Sie haben explizit <xref:System.Diagnostics.Trace.Flush%2A> oder <xref:System.Diagnostics.Trace.Close%2A>aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e018e-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="e018e-218">Wenn Sie <xref:System.Diagnostics.Trace.AutoFlush%2A> auf `true` festlegen, werden Daten aus dem Puffer in den Stream geleert, aber der Codierungs Status wird nicht geleert.</span><span class="sxs-lookup"><span data-stu-id="e018e-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="e018e-219">Dies ermöglicht es dem Encoder, seinen Zustand (partielle Zeichen) beizubehalten, damit der nächste Zeichenblock ordnungsgemäß codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e018e-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="e018e-220">Dieses Szenario wirkt sich auf UTF8 und UTF7 aus, bei denen bestimmte Zeichen nur codiert werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfangen hat.</span><span class="sxs-lookup"><span data-stu-id="e018e-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="e018e-221">Wenn Sie die <xref:System.Diagnostics.Trace.AutoFlush%2A> und <xref:System.Diagnostics.Trace.IndentSize%2A> für <xref:System.Diagnostics.Trace>festlegen möchten, können Sie auch die Konfigurationsdatei bearbeiten, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e018e-222">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:</span><span class="sxs-lookup"><span data-stu-id="e018e-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e018e-223">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="e018e-223">for operating with unmanaged code.</span></span> <span data-ttu-id="e018e-224">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="e018e-225">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e018e-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Trace.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e018e-226">Leert den Ausgabepuffer und schließt dann die <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-227">Verwenden Sie diese Methode, wenn die Ausgabe in eine Datei, z. b. in die <xref:System.Diagnostics.TextWriterTraceListener>, erfolgt.</span><span class="sxs-lookup"><span data-stu-id="e018e-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-228">Das Leeren des Streams leert den zugrunde liegenden Encoder nicht, es sei denn, Sie haben explizit <xref:System.Diagnostics.Trace.Flush%2A> oder <xref:System.Diagnostics.Trace.Close%2A>aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e018e-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="e018e-229">Wenn Sie <xref:System.Diagnostics.Trace.AutoFlush%2A> auf `true` festlegen, werden Daten aus dem Puffer in den Stream geleert, aber der Codierungs Status wird nicht geleert.</span><span class="sxs-lookup"><span data-stu-id="e018e-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="e018e-230">Dies ermöglicht es dem Encoder, seinen Zustand (partielle Zeichen) beizubehalten, damit der nächste Zeichenblock ordnungsgemäß codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e018e-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="e018e-231">Dieses Szenario wirkt sich auf UTF8 und UTF7 aus, bei denen bestimmte Zeichen nur codiert werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfangen hat.</span><span class="sxs-lookup"><span data-stu-id="e018e-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-232">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="e018e-233">`myTextListener` verwendet einen <xref:System.IO.StreamWriter> namens `myOutputWriter`, um in eine Datei mit dem Namen `TestFile.txt`zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="e018e-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="e018e-234">Im Beispiel werden die Datei, der Stream und der TextWriter erstellt, eine Textzeile in die Datei geschrieben und dann die Ausgabe geleert und geschlossen.</span><span class="sxs-lookup"><span data-stu-id="e018e-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e018e-235">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="e018e-235">for operating with unmanaged code.</span></span> <span data-ttu-id="e018e-236">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e018e-237">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e018e-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationManager : System.Diagnostics.CorrelationManager" Usage="System.Diagnostics.Trace.CorrelationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e018e-238">Ruft den Korrelations-Manager für den Thread für diese Ablaufverfolgung ab.</span><span class="sxs-lookup"><span data-stu-id="e018e-238">Gets the correlation manager for the thread for this trace.</span></span></summary>
        <value><span data-ttu-id="e018e-239">Das dem Thread für diese Ablaufverfolgung zugeordnete <see cref="T:System.Diagnostics.CorrelationManager" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e018e-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e018e-240">Dabei handelt es sich um eine erweiterte Eigenschaft, die für die meisten Anwendungen nicht verwendet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="e018e-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="e018e-241">Die <xref:System.Diagnostics.CorrelationManager>-Klasse stellt Methoden bereit, die verwendet werden, um eine logische Vorgangs Identität in einem Thread gebundenen Kontext zu speichern und jedes vom Thread generierte Ablauf Verfolgungs Ereignis automatisch mit der gespeicherten Identität zu versehen.</span><span class="sxs-lookup"><span data-stu-id="e018e-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e018e-242">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="e018e-242">for operating with unmanaged code.</span></span> <span data-ttu-id="e018e-243">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="e018e-244">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e018e-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-245">Gibt eine Fehlermeldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-245">Emits an error message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Trace.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-246">Eine auszugebende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-246">A message to emit.</span></span></param>
        <summary><span data-ttu-id="e018e-247">Gibt die angegebene Fehlermeldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-247">Emits the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-248">Das Standardverhalten für den Standardablaufverfolgungslistener besteht darin, den `message`-Parameter an ein Meldungs Feld auszugeben, wenn die Anwendung im Benutzeroberflächen Modus ausgeführt wird, und auf die <xref:System.Diagnostics.TraceListener> Instanzen in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-249">Die Anzeige des Meldungs Felds ist abhängig vom vorhanden sein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="e018e-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e018e-250">Wenn sich die <xref:System.Diagnostics.DefaultTraceListener> nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung befindet, wird das Meldungs Feld nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="e018e-251">Der <xref:System.Diagnostics.DefaultTraceListener> kann vom [&lt;Clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), dem [&lt;Remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>-Methode für die <xref:System.Diagnostics.Trace.Listeners%2A>-Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`) entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="e018e-252">Sie können dieses Verhalten anpassen, indem Sie der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung eine <xref:System.Diagnostics.TraceListener> hinzufügen oder aus dieser entfernen.</span><span class="sxs-lookup"><span data-stu-id="e018e-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-253">Im folgenden Beispiel wird die <xref:System.Diagnostics.Trace.Fail%2A>-Methode verwendet, um während der Ausnahmebehandlung eine Meldung zu drucken.</span><span class="sxs-lookup"><span data-stu-id="e018e-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e018e-254">Sie können auch die <xref:System.Diagnostics.Trace.Fail%2A>-Methode in einer Switch-Anweisung verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-255">Eine auszugebende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-255">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="e018e-256">Eine detaillierte Meldung, die ausgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="e018e-256">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="e018e-257">Gibt eine Fehlermeldung sowie eine detaillierte Fehlermeldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-257">Emits an error message, and a detailed error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-258">Das Standardverhalten besteht darin, dass der Standardablaufverfolgungslistener den `message`-Parameter und den `detailedMessage`-Parameter an ein Meldungs Feld ausgibt, wenn die Anwendung im Benutzeroberflächen Modus ausgeführt wird, und auf die <xref:System.Diagnostics.TraceListener> Instanzen in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-259">Die Anzeige des Meldungs Felds ist abhängig vom vorhanden sein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="e018e-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e018e-260">Wenn sich die <xref:System.Diagnostics.DefaultTraceListener> nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung befindet, wird das Meldungs Feld nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e018e-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="e018e-261">Der <xref:System.Diagnostics.DefaultTraceListener> kann vom [&lt;Clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), dem [&lt;Remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>-Methode für die <xref:System.Diagnostics.Trace.Listeners%2A>-Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`) entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="e018e-262">Sie können dieses Verhalten anpassen, indem Sie der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung eine <xref:System.Diagnostics.TraceListener> hinzufügen oder aus dieser entfernen.</span><span class="sxs-lookup"><span data-stu-id="e018e-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-263">Im folgenden Beispiel wird die <xref:System.Diagnostics.Trace.Fail%2A>-Methode verwendet, um während der Ausnahmebehandlung eine Meldung zu drucken.</span><span class="sxs-lookup"><span data-stu-id="e018e-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e018e-264">Sie können auch die <xref:System.Diagnostics.Trace.Fail%2A>-Methode in einer Switch-Anweisung verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Trace.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e018e-265">Leert den Ausgabepuffer und führt dazu, dass gepufferte Daten in die <see cref="P:System.Diagnostics.Trace.Listeners" /> geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-266">Das Leeren des Streams leert den zugrunde liegenden Encoder nicht, es sei denn, Sie haben explizit <xref:System.Diagnostics.Trace.Flush%2A> oder <xref:System.Diagnostics.Trace.Close%2A>aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e018e-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="e018e-267">Wenn Sie <xref:System.Diagnostics.Trace.AutoFlush%2A> auf `true` festlegen, werden Daten aus dem Puffer in den Stream geleert, aber der Codierungs Status wird nicht geleert.</span><span class="sxs-lookup"><span data-stu-id="e018e-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="e018e-268">Dies ermöglicht es dem Encoder, seinen Zustand (partielle Zeichen) beizubehalten, damit der nächste Zeichenblock ordnungsgemäß codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e018e-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="e018e-269">Dieses Szenario wirkt sich auf UTF8 und UTF7 aus, bei denen bestimmte Zeichen nur codiert werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfangen hat.</span><span class="sxs-lookup"><span data-stu-id="e018e-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-270">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="e018e-271">`myTextListener` verwendet einen <xref:System.IO.StreamWriter> namens `myOutputWriter`, um in eine Datei mit dem Namen `TestFile.txt`zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="e018e-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="e018e-272">Im Beispiel werden die Datei, der Stream und der TextWriter erstellt, eine Textzeile in die Datei geschrieben und dann die Ausgabe geleert und geschlossen.</span><span class="sxs-lookup"><span data-stu-id="e018e-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e018e-273">Erhöht die aktuelle <see cref="P:System.Diagnostics.Trace.IndentLevel" /> um 1.</span><span class="sxs-lookup"><span data-stu-id="e018e-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e018e-274">Im folgenden Beispiel wird die Einzugs Ebene erhöht und verringert, und es werden Ablauf Verfolgungs Meldungen ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e018e-275">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e018e-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Trace.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e018e-276">Ruft die Einzugsebene ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="e018e-276">Gets or sets the indent level.</span></span></summary>
        <value><span data-ttu-id="e018e-277">Die Einzugebene.</span><span class="sxs-lookup"><span data-stu-id="e018e-277">The indent level.</span></span> <span data-ttu-id="e018e-278">Der Standardwert ist 0.</span><span class="sxs-lookup"><span data-stu-id="e018e-278">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-279">Die <xref:System.Diagnostics.Trace.IndentLevel%2A>-Eigenschaft stellt die Häufigkeit dar, mit der der Einzug der Größe <xref:System.Diagnostics.Trace.IndentSize%2A> angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="e018e-280">Diese Eigenschaft wird pro Thread/pro Anforderung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="e018e-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-281">Im folgenden Beispiel wird die Einzugs Ebene erhöht und verringert, und es werden Ablauf Verfolgungs Meldungen ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e018e-282">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e018e-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Trace.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e018e-283">Ruft die Anzahl der Leerzeichen in einem Einzug ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="e018e-283">Gets or sets the number of spaces in an indent.</span></span></summary>
        <value><span data-ttu-id="e018e-284">Die Anzahl der Leerzeichen in einem Einzug.</span><span class="sxs-lookup"><span data-stu-id="e018e-284">The number of spaces in an indent.</span></span> <span data-ttu-id="e018e-285">Der Standardwert ist 4.</span><span class="sxs-lookup"><span data-stu-id="e018e-285">The default is four.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-286">Eine <xref:System.Diagnostics.TextWriterTraceListener> die diese Zahl als Leerzeichen interpretiert.</span><span class="sxs-lookup"><span data-stu-id="e018e-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="e018e-287">Ein-<xref:System.Diagnostics.EventLogTraceListener> ignoriert diesen Wert.</span><span class="sxs-lookup"><span data-stu-id="e018e-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="e018e-288">Diese Eigenschaft wird pro Thread/pro Anforderung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="e018e-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="e018e-289">Wenn Sie die <xref:System.Diagnostics.Trace.AutoFlush%2A> und <xref:System.Diagnostics.Trace.IndentSize%2A> für <xref:System.Diagnostics.Trace>festlegen möchten, können Sie auch die Konfigurationsdatei bearbeiten, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e018e-290">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:</span><span class="sxs-lookup"><span data-stu-id="e018e-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Trace.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e018e-291">Ruft die Auflistung der Listener ab, durch die die Ausgabe der Ablaufverfolgung überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-291">Gets the collection of listeners that is monitoring the trace output.</span></span></summary>
        <value><span data-ttu-id="e018e-292">Eine <see cref="T:System.Diagnostics.TraceListenerCollection" />, die eine Auflistung vom Typ <see cref="T:System.Diagnostics.TraceListener" /> darstellt und die Ausgabe der Ablaufverfolgung überwacht.</span><span class="sxs-lookup"><span data-stu-id="e018e-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-293">Die Listener liefern eine formatierte Ausgabe aus der Ausgabe der Ablauf Verfolgung.</span><span class="sxs-lookup"><span data-stu-id="e018e-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="e018e-294">Standardmäßig enthält die-Auflistung eine Instanz der <xref:System.Diagnostics.DefaultTraceListener>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="e018e-295">Wenn Sie den Standardlistener entfernen möchten, müssen Sie die <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>-Methode abrufen und die Instanz der <xref:System.Diagnostics.DefaultTraceListener>übergeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e018e-296">Fügen Sie eine Instanz der <xref:System.Diagnostics.ConsoleTraceListener>-Klasse hinzu, um die Ausgabe an das Konsolenfenster umzuleiten.</span><span class="sxs-lookup"><span data-stu-id="e018e-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-297">Die <xref:System.Diagnostics.Trace.Listeners%2A>-Auflistung wird sowohl vom <xref:System.Diagnostics.Debug> als auch vom <xref:System.Diagnostics.Trace>-Klassen gemeinsam verwendet. durch das Hinzufügen eines Ablaufverfolgungslistener zu einer der Klassen wird der Listener</span><span class="sxs-lookup"><span data-stu-id="e018e-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-298">Im folgenden Beispiel wird eine <xref:System.Diagnostics.ConsoleTraceListener> erstellt, die an den Konsolenbildschirm ausgibt.</span><span class="sxs-lookup"><span data-stu-id="e018e-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="e018e-299">Der Code fügt dann den neuen Listener dem <xref:System.Diagnostics.Trace.Listeners%2A>hinzu.</span><span class="sxs-lookup"><span data-stu-id="e018e-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e018e-300">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="e018e-300">for operating with unmanaged code.</span></span> <span data-ttu-id="e018e-301">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e018e-302">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e018e-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberSignature Language="F#" Value="static member Refresh : unit -&gt; unit" Usage="System.Diagnostics.Trace.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e018e-303">Aktualisiert die Konfigurationsdaten für die Ablaufverfolgung.</span><span class="sxs-lookup"><span data-stu-id="e018e-303">Refreshes the trace configuration data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-304">Ablauf Verfolgungs Konfigurationsdaten werden aufgezeichnet, wenn die Anwendung gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="e018e-305">Wenn die Konfigurationsdaten geändert werden, nachdem die Anwendung gestartet wurde, können Sie die <xref:System.Diagnostics.Trace.Refresh%2A>-Methode zum Aktualisieren der Daten der Ablauf Verfolgungs Konfiguration aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="e018e-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-306">Schreibt Fehlerinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceError : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-307">Die zu schreibende Informationsmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-307">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="e018e-308">Schreibt eine Fehlermeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-309"><xref:System.Diagnostics.Trace.TraceError%2A> Ruft die `TraceEvent`-Methode für jeden Ablaufverfolgungslistener mit dem Ablaufverfolgungstyp <xref:System.Diagnostics.TraceEventType.Error>auf und übergibt die informative Nachricht als Meldungs Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="e018e-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceError : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceError (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e018e-310">Eine Formatzeichenfolge, die mindestens null Formatelemente enthält, was den Objekten im <paramref name="args" />-Array entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-310">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="e018e-311">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="e018e-311">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="e018e-312">Schreibt eine Fehlermeldung unter Verwendung des angegebenen Arrays von Objekten und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-313"><xref:System.Diagnostics.Trace.TraceError%2A> Ruft die `TraceEvent` Methoden in den Ablaufverfolgungslistenern mit dem Trace-Ereignistyp <xref:System.Diagnostics.TraceEventType.Error>auf und übergibt den Nachrichten Inhalt als Objekt Array mit Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="e018e-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="e018e-314">Weitere Informationen zu den Parametern `format` und `args` finden Sie in der <xref:System.String.Format%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="e018e-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-315">Schreibt eine Informationsmeldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-316">Die zu schreibende Informationsmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-316">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="e018e-317">Schreibt eine Informationsmeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> Ruft die `TraceEvent`-Methode für jeden Ablaufverfolgungslistener mit dem Ablaufverfolgungstyp <xref:System.Diagnostics.TraceEventType.Information>auf und übergibt die informative Nachricht als Meldungs Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="e018e-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e018e-319">Eine Formatzeichenfolge, die mindestens null Formatelemente enthält, was den Objekten im <paramref name="args" />-Array entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-319">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="e018e-320">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="e018e-320">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="e018e-321">Schreibt eine Informationsmeldung unter Verwendung des angegebenen Arrays von Objekten und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> Ruft die `TraceEvent` Methoden in den Ablaufverfolgungslistenern mit dem Trace-Ereignistyp <xref:System.Diagnostics.TraceEventType.Information>auf und übergibt den Nachrichten Inhalt als Objekt Array mit Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="e018e-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="e018e-323">Weitere Informationen zu den Parametern `format` und `args` finden Sie in der <xref:System.String.Format%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="e018e-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-324">Schreibt Warninformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-325">Die zu schreibende Informationsmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-325">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="e018e-326">Schreibt eine Warnmeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> Ruft die `TraceEvent`-Methode für jeden Ablaufverfolgungslistener mit dem Trace-Ereignistyp <xref:System.Diagnostics.TraceEventType.Warning>auf und übergibt die informative Nachricht als Meldungs Zeichen</span><span class="sxs-lookup"><span data-stu-id="e018e-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e018e-328">Eine Formatzeichenfolge, die mindestens null Formatelemente enthält, was den Objekten im <paramref name="args" />-Array entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-328">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="e018e-329">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="e018e-329">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="e018e-330">Schreibt eine Warnmeldung unter Verwendung des angegebenen Arrays von Objekten und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> Ruft die `TraceEvent` Methoden in den Ablaufverfolgungslistenern mit dem Trace-Ereignistyp <xref:System.Diagnostics.TraceEventType.Warning>auf und übergibt den Nachrichten Inhalt als Objekt Array mit Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="e018e-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="e018e-332">Weitere Informationen zu den Parametern `format` und `args` finden Sie in der <xref:System.String.Format%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="e018e-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e018e-333">Verringert die aktuelle <see cref="P:System.Diagnostics.Trace.IndentLevel" /> um 1.</span><span class="sxs-lookup"><span data-stu-id="e018e-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e018e-334">Im folgenden Beispiel wird die Einzugs Ebene erhöht und verringert, und es werden Ablauf Verfolgungs Meldungen ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e018e-335">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="e018e-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseGlobalLock : bool with get, set" Usage="System.Diagnostics.Trace.UseGlobalLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e018e-336">Ruft einen Wert ab, der angibt, ob die globale Sperre verwendet werden soll, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="e018e-336">Gets or sets a value indicating whether the global lock should be used.</span></span></summary>
        <value><span data-ttu-id="e018e-337"><see langword="true" />, wenn die globale Sperre verwendet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-337"><see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e018e-338">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-338">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-339">Die globale Sperre wird immer verwendet, wenn der Ablaufverfolgungslistener nicht Thread sicher ist, unabhängig vom Wert <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="e018e-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="e018e-340">Die <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>-Eigenschaft wird verwendet, um zu bestimmen, ob der Listener Thread sicher ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="e018e-341">Die globale Sperre wird nur dann verwendet, wenn der Wert von <xref:System.Diagnostics.Trace.UseGlobalLock%2A> `false` ist und der Wert <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> `true`ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="e018e-342">Das Standardverhalten ist die Verwendung der globalen Sperre.</span><span class="sxs-lookup"><span data-stu-id="e018e-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="e018e-343">Um die <xref:System.Diagnostics.Trace.UseGlobalLock%2A> für <xref:System.Diagnostics.Trace>festzulegen, können Sie auch die Konfigurationsdatei bearbeiten, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e018e-344">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:</span><span class="sxs-lookup"><span data-stu-id="e018e-344">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e018e-345">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="e018e-345">for operating with unmanaged code.</span></span> <span data-ttu-id="e018e-346">Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="e018e-347">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e018e-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-348">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Trace.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e018e-349">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="e018e-350">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-351">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-352">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-353">ASP.net bietet für Webseiten angepasste Ablauf Verfolgungs Funktionen.</span><span class="sxs-lookup"><span data-stu-id="e018e-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="e018e-354">Um Ablauf Verfolgungs Meldungen in ASP.NET Seiten zu schreiben, verwenden Sie die <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e018e-355">Standardmäßig ist in Code, der einer ASP.NET-Webseite zugeordnet ist, die-Anweisung `Trace.Write("...")` ein Aufrufder <xref:System.Web.TraceContext.Write%2A>-Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e018e-356">Wenn Sie die <xref:System.Diagnostics.Trace?displayProperty=nameWithType>-Klasse in Webseiten verwenden möchten, müssen Sie den-Namespace einschließen, z. b. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="e018e-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-357">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-358">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-359">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel den Vornamen des `value` Parameters an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-360">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-361">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel eine Nachricht in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="e018e-362">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Trace.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-363">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-363">A message to write.</span></span></param>
        <summary><span data-ttu-id="e018e-364">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-365">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-366">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-367">ASP.net bietet für Webseiten angepasste Ablauf Verfolgungs Funktionen.</span><span class="sxs-lookup"><span data-stu-id="e018e-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="e018e-368">Um Ablauf Verfolgungs Meldungen in ASP.NET Seiten zu schreiben, verwenden Sie die <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e018e-369">Standardmäßig ist in Code, der einer ASP.NET-Webseite zugeordnet ist, die-Anweisung `Trace.Write("...")` ein Aufrufder <xref:System.Web.TraceContext.Write%2A>-Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e018e-370">Wenn Sie die <xref:System.Diagnostics.Trace?displayProperty=nameWithType>-Klasse in Webseiten verwenden möchten, müssen Sie den-Namespace einschließen, z. b. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="e018e-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-371">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-372">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-373">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-374">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-375">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-376">Ein Zeichen für den Zeilen Abschluss folgt der zweiten Nachricht.</span><span class="sxs-lookup"><span data-stu-id="e018e-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e018e-377">Ein <see cref="T:System.Object" />-Name wird an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet.</span><span class="sxs-lookup"><span data-stu-id="e018e-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-378">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-378">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-379">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in den Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-380">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-381">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-382">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-383">ASP.net bietet für Webseiten angepasste Ablauf Verfolgungs Funktionen.</span><span class="sxs-lookup"><span data-stu-id="e018e-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="e018e-384">Um Ablauf Verfolgungs Meldungen in ASP.NET Seiten zu schreiben, verwenden Sie die <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e018e-385">Standardmäßig ist in Code, der einer ASP.NET-Webseite zugeordnet ist, die-Anweisung `Trace.Write("...")` ein Aufrufder <xref:System.Web.TraceContext.Write%2A>-Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e018e-386">Wenn Sie die <xref:System.Diagnostics.Trace?displayProperty=nameWithType>-Klasse in Webseiten verwenden möchten, müssen Sie den-Namespace einschließen, z. b. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="e018e-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-387">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-388">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-389">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Verbose`festgelegt ist, gibt das Beispiel den Namen des `myObject` und die `category` für den <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-390">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-391">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Error` oder höher festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-392">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-393">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-393">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-394">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-394">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-395">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-396">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-397">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-398">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e018e-399">ASP.net bietet für Webseiten angepasste Ablauf Verfolgungs Funktionen.</span><span class="sxs-lookup"><span data-stu-id="e018e-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="e018e-400">Um Ablauf Verfolgungs Meldungen in ASP.NET Seiten zu schreiben, verwenden Sie die <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e018e-401">Standardmäßig ist in Code, der einer ASP.NET-Webseite zugeordnet ist, die-Anweisung `Trace.Write("...")` ein Aufrufder <xref:System.Web.TraceContext.Write%2A>-Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e018e-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e018e-402">Wenn Sie die <xref:System.Diagnostics.Trace?displayProperty=nameWithType>-Klasse in Webseiten verwenden möchten, müssen Sie den-Namespace einschließen, z. b. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="e018e-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-403">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-404">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-405">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Verbose`festgelegt ist, wird im Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-406">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-407">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Error` oder höher festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-408">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-409">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-410"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-410"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="e018e-411">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="e018e-412">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-413">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-414">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-415">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-416">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-417">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel den Vornamen des value-Parameters an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-418">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-419">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel eine Nachricht in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="e018e-420">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-421">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-421">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-422">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-422">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-423">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.Write(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-423">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="e018e-424">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-424">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-425">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-425">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-426">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-426">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-427">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-427">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-428"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-428"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="e018e-429">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-429">A message to write.</span></span></param>
        <summary><span data-ttu-id="e018e-430">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-430">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-431">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-431">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-432">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-432">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-433">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-433">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-434">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-434">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-435">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-435">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-436">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-436">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-437">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-437">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-438">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-438">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-439">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-439">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-440">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-440">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-441">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.Write(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-441">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="e018e-442">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-442">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-443">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-443">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-444">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-444">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-445">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-445">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-446"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-446"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="e018e-447">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-447">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-448">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-448">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-449">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-449">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-450">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-450">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-451">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-451">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-452">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-452">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-453">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-453">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-454">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-454">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-455">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Verbose`festgelegt ist, gibt das Beispiel den Namen des `myObject` und die `category` für den <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-455">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-456">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-456">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-457">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Error` oder höher festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-457">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-458">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-458">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-459">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-459">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-460">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-460">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-461">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.Write(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-461">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="e018e-462">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-462">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-463">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-463">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-464">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-464">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-465">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-465">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-466"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-466"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="e018e-467">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-467">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-468">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-468">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-469">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-469">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-470">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-470">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-471">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-471">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-472">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-472">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-473">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-473">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-474">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-474">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-475">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Verbose`festgelegt ist, wird im Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-475">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-476">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-476">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-477">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Error` oder höher festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-477">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-478">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-478">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-479">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-479">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-480">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-480">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-481">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.Write(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-481">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="e018e-482">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-482">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-483">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-483">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-484">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-484">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-485">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-485">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-486">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-486">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e018e-487">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-487">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="e018e-488">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-489">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-489">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-490">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-490">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-491">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-491">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-492">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-492">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-493">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-493">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-494">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-494">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-495">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel den Namen des Objekts in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-495">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="e018e-496">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-496">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-497">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-497">A message to write.</span></span></param>
        <summary><span data-ttu-id="e018e-498">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-498">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-499">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-499">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-500">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-501">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-502">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-503">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-504">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-505">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-506">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e018e-507">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-507">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-508">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-508">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-509">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in den Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-509">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-510">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-510">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-511">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-511">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-512">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-513">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-514">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-515">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-516">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-517">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-518">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e018e-519">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-519">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-520">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-520">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-521">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="e018e-521">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-522">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-522">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-523">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-523">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-524">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-525">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-526">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-527">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-528">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-529">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, wird im Beispiel die zweite Fehlermeldung ausgegeben, und die `category` wird in derselben Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="e018e-530">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e018e-531">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-531">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-532"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-532"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="e018e-533">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="e018e-534">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-534">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-535">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-535">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-536">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-536">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-537">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-537">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-538">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-538">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-539">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-539">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-540">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-540">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-541">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel den Namen des Objekts in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-541">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="e018e-542">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-542">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-543">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-543">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-544">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-544">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-545">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-545">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="e018e-546">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-546">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-547">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-547">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-548">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-548">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-549">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-549">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-550"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-550"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="e018e-551">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-551">A message to write.</span></span></param>
        <summary><span data-ttu-id="e018e-552">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-552">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-553">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-554">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-554">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-555">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-555">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-556">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-556">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-557">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-557">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-558">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-558">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-559">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-559">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-560">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-560">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-561">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-561">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-562">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-562">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-563">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-563">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="e018e-564">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-564">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-565">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-565">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-566">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-566">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-567">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-567">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-568"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-568"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="e018e-569">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-569">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-570">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-570">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-571">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-571">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-572">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-572">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-573">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-573">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-574">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-574">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-575">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-575">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-576">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-576">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-577">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-577">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-578">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-578">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-579">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, gibt das Beispiel die zweite Fehlermeldung in derselben Zeile wie die erste Meldung aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-579">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="e018e-580">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-580">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-581">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-581">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-582">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-582">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-583">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-583">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="e018e-584">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-584">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-585">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-585">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-586">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-586">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-587">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-587">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="e018e-588"><see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e018e-588"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="e018e-589">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-589">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="e018e-590">Ein Kategoriename für die Anordnung der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="e018e-590">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="e018e-591">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="e018e-591">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e018e-592">Standardmäßig wird die Ausgabe in eine Instanz von <xref:System.Diagnostics.DefaultTraceListener>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="e018e-592">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="e018e-593">Der `category`-Parameter kann zum Gruppieren von Ausgabe Nachrichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e018e-593">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="e018e-594">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A>-Methode des Ablaufverfolgungslistener auf.</span><span class="sxs-lookup"><span data-stu-id="e018e-594">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e018e-595">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`erstellt.</span><span class="sxs-lookup"><span data-stu-id="e018e-595">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="e018e-596">Dieser Schalter wird außerhalb des Code Beispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e018e-596">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="e018e-597">Wenn der Schalter auf die <xref:System.Diagnostics.TraceLevel>`Error` oder höher festgelegt ist, gibt das Beispiel die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>aus.</span><span class="sxs-lookup"><span data-stu-id="e018e-597">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="e018e-598">Weitere Informationen zum Hinzufügen eines Listener zur <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie in der <xref:System.Diagnostics.TraceListenerCollection>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e018e-598">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="e018e-599">Wenn die <xref:System.Diagnostics.TraceLevel> auf `Verbose`festgelegt ist, wird im Beispiel die zweite Fehlermeldung ausgegeben, und die `category` wird in derselben Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e018e-599">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="e018e-600">Auf die zweite Meldung folgt ein Zeichen für den Zeilen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="e018e-600">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e018e-601">Sie können die Leistungseinbußen beim Instrumentieren der Anwendung mit <see langword="If...Then" />-Anweisungen minimieren, anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />-Anweisungen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="e018e-601">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="e018e-602">Die folgenden beiden Codebeispiele senden dieselbe Debugmeldung.</span><span class="sxs-lookup"><span data-stu-id="e018e-602">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="e018e-603">Das erste Beispiel ist jedoch viel schneller, wenn die Ablauf Verfolgung deaktiviert ist, denn wenn <c>mySwitch. TraceError</c> ergibt, <see langword="false" /> Sie <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />nicht aufwertet.</span><span class="sxs-lookup"><span data-stu-id="e018e-603">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="e018e-604">Im zweiten Beispiel wird immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />aufgerufen, auch wenn <c>mySwitch. TraceError</c> <see langword="false" /> ist und keine Ablauf Verfolgungs Ausgabe erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-604">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="e018e-605">Dies kann dazu führen, dass beliebig komplexer Code nicht mehr ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e018e-605">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="e018e-606">**Erstes Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-606">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="e018e-607">**Zweites Beispiel**</span><span class="sxs-lookup"><span data-stu-id="e018e-607">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
