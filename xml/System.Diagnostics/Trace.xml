<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ce349e938cbbfe615cd631111cb2663fbd39683" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f5382-101">Stellt eine Reihe von Methoden und Eigenschaften für das Verfolgen der Ausführung von Code bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5382-101">Provides a set of methods and properties that help you trace the execution of your code.</span>
      </span>
      <span data-ttu-id="f5382-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5382-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-103">Sie können die Eigenschaften und Methoden in der <xref:System.Diagnostics.Trace> Klasse zu instrumentieren erstellt.</span><span class="sxs-lookup"><span data-stu-id="f5382-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="f5382-104">Instrumentation können Sie zur Überwachung der Integrität Ihrer Anwendung in der Praxis Einstellungen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="f5382-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="f5382-105">Verfolgen die hilft Isolieren von Problemen und ohne Beeinträchtigung ein laufendes System korrigieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="f5382-106">Diese Klasse stellt Methoden zum Anzeigen einer <xref:System.Diagnostics.Trace.Assert%2A> (Dialogfeld), und die Ausgabe einer Assertion, die immer <xref:System.Diagnostics.Trace.Fail%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="f5382-107">Diese Klasse bietet Write-Methoden in den folgenden Variationen: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, und <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="f5382-108">Die <xref:System.Diagnostics.BooleanSwitch> und <xref:System.Diagnostics.TraceSwitch> Klassen bieten bedeutet, dass die Ablaufverfolgungsausgabe dynamisch zu steuern.</span><span class="sxs-lookup"><span data-stu-id="f5382-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="f5382-109">Sie können die Werte dieser Optionen ändern, ohne Ihre Anwendung neu zu kompilieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="f5382-110">Informationen zum Verwenden der Konfigurationsdatei zum Festlegen eines Schalters finden Sie unter der <xref:System.Diagnostics.Switch> Klasse und die [Vorgehensweise: erstellen, initialisieren und Konfigurieren von Ablaufverfolgungsschaltern](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="f5382-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="f5382-111">Sie können die Ablaufverfolgungsausgabe Ziel anpassen, indem hinzufügen <xref:System.Diagnostics.TraceListener> -Instanzen hinzu oder Entfernen von Instanzen aus der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="f5382-112">Die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung von beiden gemeinsam genutzt der <xref:System.Diagnostics.Debug> und <xref:System.Diagnostics.Trace> Klassen; ein Ablaufverfolgungslistener zur Klasse fügt den Listener für beide hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="f5382-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="f5382-113">Standardmäßig wird Ablaufverfolgungsausgabe ausgegeben, mit der <xref:System.Diagnostics.DefaultTraceListener> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-114">Einen Ablaufverfolgungslistener Hinzufügen der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung kann dazu führen, dass eine Ausnahme ausgelöst wird, während der Ablaufverfolgung, wenn eine Ressource, die vom Ablaufverfolgungslistener verwendet nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f5382-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="f5382-115">Die Bedingungen und die Ausnahme wird ausgelöst, richten sich nach der Ablaufverfolgungslistener und können nicht aufgezählt werden, in diesem Thema.</span><span class="sxs-lookup"><span data-stu-id="f5382-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="f5382-116">Möglicherweise empfiehlt es sich, Aufrufe der <xref:System.Diagnostics.Trace> Methoden in `try` / `catch` zu erkennen und Behandeln von Ausnahmen vom Ablaufverfolgungslistener Blöcke.</span><span class="sxs-lookup"><span data-stu-id="f5382-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-117">Wenn Sie teilweise vertrauenswürdigem Code Ablaufverfolgungslistener hinzugefügt haben, erhalten Sie eine <xref:System.Security.SecurityException> Ausnahme hinzufügen Ablaufverfolgungslistener Quellformat, sodass <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="f5382-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="f5382-118">Um teilweise vertrauenswürdigem Code zu verfolgen, der in einem Sandkasten in Visual Studio ausgeführt wird, fügen Sie keine Ablaufverfolgungslistener.</span><span class="sxs-lookup"><span data-stu-id="f5382-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="f5382-119">Stattdessen zeigen Sie an der <xref:System.Diagnostics.Trace> und <xref:System.Diagnostics.Debug> Nachrichten der **Ausgabe** Fenster.</span><span class="sxs-lookup"><span data-stu-id="f5382-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="f5382-120">Die <xref:System.Diagnostics.Trace> Klasse enthält Eigenschaften zum Abrufen oder Festlegen der Ebene der <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, und ob <xref:System.Diagnostics.Trace.AutoFlush%2A> nach jedem Schreibvorgang.</span><span class="sxs-lookup"><span data-stu-id="f5382-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="f5382-121">Festlegen der <xref:System.Diagnostics.Trace.AutoFlush%2A> und <xref:System.Diagnostics.Trace.IndentSize%2A> für <xref:System.Diagnostics.Trace>, können Sie die Konfigurationsdatei, die den Namen der Anwendung entspricht bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="f5382-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f5382-122">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="f5382-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="f5382-123">Die <xref:System.Diagnostics.ConditionalAttribute> -Attribut angewendet wird, um die Methoden der <xref:System.Diagnostics.Trace>.</span><span class="sxs-lookup"><span data-stu-id="f5382-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="f5382-124">Compiler, unterstützen <xref:System.Diagnostics.ConditionalAttribute> Aufrufe dieser Methoden ignoriert, es sei denn, die "TRACE" als ein bedingtes Kompilierungssymbol definiert ist.</span><span class="sxs-lookup"><span data-stu-id="f5382-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="f5382-125">Finden Sie in der Dokumentation des Compilers, um zu bestimmen, ob <xref:System.Diagnostics.ConditionalAttribute> wird unterstützt und die Syntax zum Definieren eines Symbols für die bedingte Kompilierung.</span><span class="sxs-lookup"><span data-stu-id="f5382-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-126">In Visual Studio-Projekte werden standardmäßig die bedingtes Kompilierungssymbol "DEBUG" für Debug-Builds definiert ist und für Debug- und Releasebuilds, ist das Symbol "TRACE" definiert.</span><span class="sxs-lookup"><span data-stu-id="f5382-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="f5382-127">Informationen zum Deaktivieren dieses Verhaltens finden Sie in der Visual Studio-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="f5382-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="f5382-128">Die "TRACE" bedingtes Kompilierungssymbol in c# definieren möchten, fügen die `/d:TRACE` -Option in der Befehlszeile des Compilers, beim Kompilieren von Code mithilfe einer Befehlszeile aus, oder fügen `#define TRACE` an den Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="f5382-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="f5382-129">Fügen Sie in Visual Basic die `/d:TRACE=True` -Option in der Befehlszeile des Compilers, oder fügen `#Const TRACE=True` in die Datei.</span><span class="sxs-lookup"><span data-stu-id="f5382-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="f5382-130"><xref:System.Diagnostics.ConditionalAttribute> wird vom C++-Compiler nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="f5382-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="f5382-131">Um die entsprechende Funktionalität bereitstellen zu können, müssen Sie Aufrufe an die Methode der einschließen <xref:System.Diagnostics.Trace> in einer `#if defined(TRACE) ... #endif` blockieren, und fügen die `/DTRACE` -Option in der Befehlszeile des Compilers, oder fügen `#define TRACE` in die Datei.</span><span class="sxs-lookup"><span data-stu-id="f5382-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-132">Im folgenden Beispiel wird <xref:System.Diagnostics.Trace> am Anfang und Ende der Ausführung des Programms an.</span><span class="sxs-lookup"><span data-stu-id="f5382-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="f5382-133">Das Beispiel verwendet außerdem die <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> und <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> Methoden, um die Ablaufverfolgungsausgabe zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="f5382-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="f5382-134">Ein ausführlicheres Beispiel für die Verwendung der <xref:System.Diagnostics.Trace>, finden Sie unter [wie: Hinzufügen von Ablaufverfolgungsanweisungen zu Anwendungscode](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span><span class="sxs-lookup"><span data-stu-id="f5382-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="f5382-135">für den Betrieb mit nicht verwaltetem Code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5382-135">for operating with unmanaged code.</span>
      </span>
      <span data-ttu-id="f5382-136">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5382-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      </span>
      <span data-ttu-id="f5382-137">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="f5382-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="f5382-138">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5382-138">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-139">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, werden Meldungen ausgegeben und ein Meldungsfeld mit der Aufrufliste angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-140">Der auszuwertende bedingte Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-140">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="f5382-141">Wenn die Bedingung <see langword="true" /> ist, wird weder eine Fehlermeldung gesendet noch das Meldungsfeld angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-142">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, wird ein Meldungsfeld mit der Aufrufliste angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-143">Verwenden der <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> builds Methode, wenn Sie Assertionen in Version ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="f5382-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="f5382-144">Die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Methode funktioniert nur in Debug-Builds.</span><span class="sxs-lookup"><span data-stu-id="f5382-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="f5382-145">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="f5382-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="f5382-146">In der Regel die <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> Methode wird verwendet, um Logikfehler während der Programmentwicklung zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="f5382-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> wertet die Bedingung an.</span><span class="sxs-lookup"><span data-stu-id="f5382-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="f5382-148">Wenn das Ergebnis `false`, sendet er eine Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="f5382-149">Sie können dieses Verhalten anpassen, indem Hinzufügen einer <xref:System.Diagnostics.TraceListener> zu, oder Entfernen aus, die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="f5382-150">Wenn die Anwendung im Benutzeroberflächenmodus ausgeführt wird, wird ein Meldungsfeld mit die Aufrufliste mit der Datei und die Zeilennummern angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="f5382-151">Das Meldungsfeld enthält drei Schaltflächen: **Abort**, **wiederholen**, und **ignorieren**.</span><span class="sxs-lookup"><span data-stu-id="f5382-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="f5382-152">Klicken auf die **Abort** Schaltfläche wird die Anwendung beendet.</span><span class="sxs-lookup"><span data-stu-id="f5382-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="f5382-153">Auf **wiederholen** sendet Sie an den Code im Debugger, wenn Ihre Anwendung in einem Debugger ausgeführt wird, oder um einen Debugger zu öffnen, ist er nicht bietet.</span><span class="sxs-lookup"><span data-stu-id="f5382-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="f5382-154">Auf **ignorieren** weiterhin mit der nächsten Anweisung im Code.</span><span class="sxs-lookup"><span data-stu-id="f5382-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-155">Die Anzeige des Meldungsfelds hängt das Vorhandensein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f5382-156">Wenn die <xref:System.Diagnostics.DefaultTraceListener> befindet sich nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> -Auflistung, das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="f5382-157">Die <xref:System.Diagnostics.DefaultTraceListener> kann entfernt werden, indem die [ &lt;deaktivieren&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), die [ &lt;entfernen&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> Methode für die <xref:System.Diagnostics.Trace.Listeners%2A> Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="f5382-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="f5382-158">Sie können das Verhalten des ändern die <xref:System.Diagnostics.DefaultTraceListener> in der Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f5382-159">In dieser Datei können Sie aktivieren und deaktivieren Sie im Meldungsfeld Assert oder Festlegen der <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f5382-160">Die Konfigurationsdatei sollte wie folgt formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="f5382-160">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f5382-161">Das folgende Beispiel erstellt einen Index für ein Array.</span><span class="sxs-lookup"><span data-stu-id="f5382-161">The following example creates an index for an array.</span></span> <span data-ttu-id="f5382-162">Anschließend wird eine Aktion ausgeführt, die den Wert des Indexes festlegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="f5382-163">Als Nächstes ruft der Code <xref:System.Diagnostics.Trace.Assert%2A> Wert um zu überprüfen, ob den Index ist gültig.</span><span class="sxs-lookup"><span data-stu-id="f5382-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="f5382-164">Wenn er nicht gültig ist, ist die <xref:System.Diagnostics.Trace.Assert%2A> gibt die Aufrufliste.</span><span class="sxs-lookup"><span data-stu-id="f5382-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-165">Der auszuwertende bedingte Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-165">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="f5382-166">Wenn die Bedingung <see langword="true" /> ist, wird die angegebene Meldung nicht gesendet, und das Meldungsfeld wird nicht angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="f5382-167">Die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung zu sendende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-168">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, wird eine angegebene Meldung ausgegeben, und es wird ein Meldungsfeld mit der Aufrufliste angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-169">Verwenden der <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> builds Methode, wenn Sie Assertionen in Version ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="f5382-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="f5382-170">Die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Methode funktioniert nur in Debug-Builds.</span><span class="sxs-lookup"><span data-stu-id="f5382-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="f5382-171">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="f5382-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="f5382-172">In der Regel die <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> Methode wird verwendet, um Logikfehler während der Programmentwicklung zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="f5382-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> wertet die Bedingung an.</span><span class="sxs-lookup"><span data-stu-id="f5382-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="f5382-174">Wenn das Ergebnis `false`, sendet er die angegebene diagnosemeldung, um die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="f5382-175">Sie können dieses Verhalten anpassen, indem Hinzufügen einer <xref:System.Diagnostics.TraceListener> zu, oder Entfernen aus, die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="f5382-176">Wenn die Anwendung im Benutzeroberflächenmodus ausgeführt wird, wird ein Meldungsfeld mit die Aufrufliste mit der Datei und die Zeilennummern angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="f5382-177">Das Meldungsfeld enthält drei Schaltflächen: **Abort**, **wiederholen**, und **ignorieren**.</span><span class="sxs-lookup"><span data-stu-id="f5382-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="f5382-178">Klicken auf die **Abort** Schaltfläche wird die Anwendung beendet.</span><span class="sxs-lookup"><span data-stu-id="f5382-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="f5382-179">Auf **wiederholen** sendet Sie an den Code im Debugger, wenn Ihre Anwendung in einem Debugger ausgeführt wird, oder um einen Debugger zu öffnen, ist er nicht bietet.</span><span class="sxs-lookup"><span data-stu-id="f5382-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="f5382-180">Auf **ignorieren** weiterhin mit der nächsten Anweisung im Code.</span><span class="sxs-lookup"><span data-stu-id="f5382-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-181">Die Anzeige des Meldungsfelds hängt das Vorhandensein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f5382-182">Wenn die <xref:System.Diagnostics.DefaultTraceListener> befindet sich nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> -Auflistung, das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="f5382-183">Die <xref:System.Diagnostics.DefaultTraceListener> kann entfernt werden, indem die [ &lt;deaktivieren&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), die [ &lt;entfernen&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> Methode für die <xref:System.Diagnostics.Trace.Listeners%2A> Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="f5382-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="f5382-184">Sie können das Verhalten des ändern die <xref:System.Diagnostics.DefaultTraceListener> in der Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f5382-185">In dieser Datei können Sie aktivieren und deaktivieren Sie im Meldungsfeld Assert oder Festlegen der <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f5382-186">Die Konfigurationsdatei sollte wie folgt formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="f5382-186">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f5382-187">Im folgenden Beispiel wird überprüft, ob die `type` Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="f5382-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="f5382-188">Wenn die `type` übergebene `null`, die <xref:System.Diagnostics.Trace.Assert%2A> wird eine Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-189">Der auszuwertende bedingte Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-189">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="f5382-190">Wenn die Bedingung <see langword="true" /> ist, werden die angegebenen Meldungen nicht gesendet, und das Meldungsfeld wird nicht angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="f5382-191">Die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung zu sendende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="f5382-192">Die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung zu sendende ausführliche Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-193">Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, werden zwei angegebene Meldungen ausgegeben, und es wird ein Meldungsfeld mit der Aufrufliste angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-194">Verwenden der <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> builds Methode, wenn Sie Assertionen in Version ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="f5382-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="f5382-195">Die <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Methode funktioniert nur in Debug-Builds.</span><span class="sxs-lookup"><span data-stu-id="f5382-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="f5382-196">Weitere Informationen finden Sie unter [Assertionen in verwaltetem Code](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="f5382-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="f5382-197">In der Regel die <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> Methode wird verwendet, um Logikfehler während der Programmentwicklung zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="f5382-198"><xref:System.Diagnostics.Trace.Assert%2A> wertet die Bedingung an.</span><span class="sxs-lookup"><span data-stu-id="f5382-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="f5382-199">Wenn das Ergebnis `false`, sendet er den angegebenen diagnosemeldung aus und detaillierte Meldung, die die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="f5382-200">Sie können dieses Verhalten anpassen, indem Hinzufügen einer <xref:System.Diagnostics.TraceListener> zu, oder Entfernen aus, die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="f5382-201">Wenn die Anwendung im Benutzeroberflächenmodus ausgeführt wird, wird ein Meldungsfeld mit die Aufrufliste mit der Datei und die Zeilennummern angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="f5382-202">Das Meldungsfeld enthält drei Schaltflächen: **Abort**, **wiederholen**, und **ignorieren**.</span><span class="sxs-lookup"><span data-stu-id="f5382-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="f5382-203">Klicken auf die **Abort** Schaltfläche wird die Anwendung beendet.</span><span class="sxs-lookup"><span data-stu-id="f5382-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="f5382-204">Auf **wiederholen** sendet Sie an den Code im Debugger, wenn Ihre Anwendung in einem Debugger ausgeführt wird, oder um einen Debugger zu öffnen, ist er nicht bietet.</span><span class="sxs-lookup"><span data-stu-id="f5382-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="f5382-205">Auf **ignorieren** weiterhin mit der nächsten Anweisung im Code.</span><span class="sxs-lookup"><span data-stu-id="f5382-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-206">Die Anzeige des Meldungsfelds hängt das Vorhandensein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f5382-207">Wenn die <xref:System.Diagnostics.DefaultTraceListener> befindet sich nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> -Auflistung, das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="f5382-208">Die <xref:System.Diagnostics.DefaultTraceListener> kann entfernt werden, indem die [ &lt;deaktivieren&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), die [ &lt;entfernen&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> Methode für die <xref:System.Diagnostics.Trace.Listeners%2A> Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="f5382-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="f5382-209">Sie können das Verhalten des ändern die <xref:System.Diagnostics.DefaultTraceListener> in der Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f5382-210">In dieser Datei können Sie aktivieren und deaktivieren Sie im Meldungsfeld Assert oder Festlegen der <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f5382-211">Die Konfigurationsdatei sollte wie folgt formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="f5382-211">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f5382-212">Im folgenden Beispiel wird überprüft, ob die `type` Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="f5382-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="f5382-213">Wenn die `type` übergebene `null`, die <xref:System.Diagnostics.Trace.Assert%2A> wird eine Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-214">Ruft die Information ab, ob <see cref="M:System.Diagnostics.Trace.Flush" /> nach jedem Schreibvorgang für <see cref="P:System.Diagnostics.Trace.Listeners" /> aufgerufen werden soll, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5382-215">
            <see langword="true" />, wenn <see cref="M:System.Diagnostics.Trace.Flush" /> nach jedem Schreibvorgang für <see cref="P:System.Diagnostics.Trace.Listeners" /> aufgerufen wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-215">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-216">Der Standardwert ist `false`.</span><span class="sxs-lookup"><span data-stu-id="f5382-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="f5382-217">Das Leeren des Streams wird die zugrunde liegende Encoder nicht entleert, es sei denn, Sie explizit aufrufen <xref:System.Diagnostics.Trace.Flush%2A> oder <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="f5382-218">Festlegen von <xref:System.Diagnostics.Trace.AutoFlush%2A> zu `true` ist, werden Daten aus dem Puffer geleert werden, in den Stream, aber die Encoder-Status wird nicht geleert werden.</span><span class="sxs-lookup"><span data-stu-id="f5382-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f5382-219">Dadurch wird den Encoder seinen Zustand (teilweise Zeichen) beibehalten, sodass er den nächsten Block von Zeichen richtig zu codieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f5382-220">Dieses Szenario betrifft UTF8 und UTF7, in denen bestimmte Zeichen nur verschlüsselt werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfängt.</span><span class="sxs-lookup"><span data-stu-id="f5382-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="f5382-221">Festlegen der <xref:System.Diagnostics.Trace.AutoFlush%2A> und <xref:System.Diagnostics.Trace.IndentSize%2A> für <xref:System.Diagnostics.Trace>, Sie können auch bearbeiten die Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f5382-222">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="f5382-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f5382-223">für den Betrieb mit nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-223">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="f5382-224">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="f5382-225">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5382-226">Leert den Ausgabepuffer und schließt dann die <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-227">Verwenden Sie diese Methode, wenn die Ausgabe in eine Datei, z. B. um also die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-228">Das Leeren des Streams wird die zugrunde liegende Encoder nicht entleert, es sei denn, Sie explizit aufrufen <xref:System.Diagnostics.Trace.Flush%2A> oder <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="f5382-229">Festlegen von <xref:System.Diagnostics.Trace.AutoFlush%2A> zu `true` ist, werden Daten aus dem Puffer geleert werden, in den Stream, aber die Encoder-Status wird nicht geleert werden.</span><span class="sxs-lookup"><span data-stu-id="f5382-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f5382-230">Dadurch wird den Encoder seinen Zustand (teilweise Zeichen) beibehalten, sodass er den nächsten Block von Zeichen richtig zu codieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f5382-231">Dieses Szenario betrifft UTF8 und UTF7, in denen bestimmte Zeichen nur verschlüsselt werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfängt.</span><span class="sxs-lookup"><span data-stu-id="f5382-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-232">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="f5382-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="f5382-233">`myTextListener` verwendet eine <xref:System.IO.StreamWriter> aufgerufen `myOutputWriter` zum Schreiben in eine Datei namens `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="f5382-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="f5382-234">Das Beispiel erstellt die Datei, Streams und ein TextWriter, schreibt eine Textzeile in der Datei, und klicken Sie dann leert und schließt die Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="f5382-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f5382-235">für den Betrieb mit nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-235">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="f5382-236">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="f5382-237">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-238">Ruft den Korrelations-Manager für den Thread für diese Ablaufverfolgung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-238">Gets the correlation manager for the thread for this trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5382-239">Das dem Thread für diese Ablaufverfolgung zugeordnete <see cref="T:System.Diagnostics.CorrelationManager" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f5382-240">Hierbei handelt es sich um eine erweiterte Eigenschaft, die meisten Anwendungen keine Gelegenheit verwenden sollten.</span><span class="sxs-lookup"><span data-stu-id="f5382-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="f5382-241">Die <xref:System.Diagnostics.CorrelationManager> Klasse enthält Methoden, die eine logische Operation-Identität in einem Thread datengebundenen Kontext speichern, und jedes Ablaufverfolgungsereignis generiert, die für den Thread mit der gespeicherten Identität verwendet.</span><span class="sxs-lookup"><span data-stu-id="f5382-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f5382-242">für den Betrieb mit nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-242">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="f5382-243">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="f5382-244">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-245">Gibt eine Fehlermeldung aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-245">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-246">Eine auszugebende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-246">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-247">Gibt die angegebene Fehlermeldung aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-247">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-248">Das Standardverhalten für den Standard-Ablaufverfolgungslistener ist in die Ausgabe der `message` Parameter in einem Meldungsfeld an, wenn die Anwendung in der Benutzeroberflächen-Modus ausgeführt wird die <xref:System.Diagnostics.TraceListener> -Instanzen lautet in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-249">Die Anzeige des Meldungsfelds hängt das Vorhandensein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f5382-250">Wenn die <xref:System.Diagnostics.DefaultTraceListener> befindet sich nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> -Auflistung, das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="f5382-251">Die <xref:System.Diagnostics.DefaultTraceListener> kann entfernt werden, indem die [ &lt;deaktivieren&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), die [ &lt;entfernen&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> Methode für die <xref:System.Diagnostics.Trace.Listeners%2A> Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="f5382-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="f5382-252">Sie können dieses Verhalten anpassen, indem das Hinzufügen einer <xref:System.Diagnostics.TraceListener> an, oder Entfernen aus, die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-253">Im folgenden Beispiel wird die <xref:System.Diagnostics.Trace.Fail%2A> Methode, um eine Meldung auszugeben, während der Ausnahmebehandlung.</span><span class="sxs-lookup"><span data-stu-id="f5382-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f5382-254">Sie können auch die <xref:System.Diagnostics.Trace.Fail%2A> Methode in einer Switch-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="f5382-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-255">Eine auszugebende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-255">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="f5382-256">Eine detaillierte Meldung, die ausgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-256">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-257">Gibt eine Fehlermeldung sowie eine detaillierte Fehlermeldung aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-257">Emits an error message, and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-258">Das Standardverhalten für den Standard-Ablaufverfolgungslistener ausgegeben wird die `message` Parameter und die `detailedMessage` Parameter in einem Meldungsfeld an, wenn die Anwendung in der Benutzeroberflächen-Modus ausgeführt wird die <xref:System.Diagnostics.TraceListener> -Instanzen lautet in der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung .</span><span class="sxs-lookup"><span data-stu-id="f5382-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-259">Die Anzeige des Meldungsfelds hängt das Vorhandensein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f5382-260">Wenn die <xref:System.Diagnostics.DefaultTraceListener> befindet sich nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> -Auflistung, das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="f5382-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="f5382-261">Die <xref:System.Diagnostics.DefaultTraceListener> kann entfernt werden, indem die [ &lt;deaktivieren&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), die [ &lt;entfernen&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> Methode für die <xref:System.Diagnostics.Trace.Listeners%2A> Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="f5382-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="f5382-262">Sie können dieses Verhalten anpassen, indem das Hinzufügen einer <xref:System.Diagnostics.TraceListener> an, oder Entfernen aus, die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f5382-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-263">Im folgenden Beispiel wird die <xref:System.Diagnostics.Trace.Fail%2A> Methode, um eine Meldung auszugeben, während der Ausnahmebehandlung.</span><span class="sxs-lookup"><span data-stu-id="f5382-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f5382-264">Sie können auch die <xref:System.Diagnostics.Trace.Fail%2A> Methode in einer Switch-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="f5382-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5382-265">Leert den Ausgabepuffer und führt dazu, dass gepufferte Daten in die <see cref="P:System.Diagnostics.Trace.Listeners" /> geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-266">Das Leeren des Streams wird die zugrunde liegende Encoder nicht entleert, es sei denn, Sie explizit aufrufen <xref:System.Diagnostics.Trace.Flush%2A> oder <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="f5382-267">Festlegen von <xref:System.Diagnostics.Trace.AutoFlush%2A> zu `true` ist, werden Daten aus dem Puffer geleert werden, in den Stream, aber die Encoder-Status wird nicht geleert werden.</span><span class="sxs-lookup"><span data-stu-id="f5382-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f5382-268">Dadurch wird den Encoder seinen Zustand (teilweise Zeichen) beibehalten, sodass er den nächsten Block von Zeichen richtig zu codieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f5382-269">Dieses Szenario betrifft UTF8 und UTF7, in denen bestimmte Zeichen nur verschlüsselt werden können, nachdem der Encoder die angrenzenden Zeichen oder Zeichen empfängt.</span><span class="sxs-lookup"><span data-stu-id="f5382-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-270">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="f5382-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="f5382-271">`myTextListener` verwendet eine <xref:System.IO.StreamWriter> aufgerufen `myOutputWriter` zum Schreiben in eine Datei namens `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="f5382-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="f5382-272">Das Beispiel erstellt die Datei, Streams und ein TextWriter, schreibt eine Textzeile in der Datei, und klicken Sie dann leert und schließt die Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="f5382-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5382-273">Erhöht die aktuelle <see cref="P:System.Diagnostics.Trace.IndentLevel" /> um 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f5382-274">Das folgende Beispiel-inkrementiert und dekrementiert die Einzugsebene und Ablaufverfolgungsmeldungen ausgibt.</span><span class="sxs-lookup"><span data-stu-id="f5382-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f5382-275">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="f5382-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-276">Ruft die Einzugsebene ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-276">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5382-277">Die Einzugebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-277">The indent level.</span>
          </span>
          <span data-ttu-id="f5382-278">Der Standardwert ist 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-278">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-279">Die <xref:System.Diagnostics.Trace.IndentLevel%2A> Eigenschaft stellt die Anzahl der Vorkommen den Einzug der Größe <xref:System.Diagnostics.Trace.IndentSize%2A> angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="f5382-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="f5382-280">Diese Eigenschaft ist für jeden Thread/pro Anforderung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="f5382-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-281">Das folgende Beispiel-inkrementiert und dekrementiert die Einzugsebene und Ablaufverfolgungsmeldungen ausgibt.</span><span class="sxs-lookup"><span data-stu-id="f5382-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f5382-282">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="f5382-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-283">Ruft die Anzahl der Leerzeichen in einem Einzug ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-283">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5382-284">Die Anzahl der Leerzeichen in einem Einzug.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-284">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="f5382-285">Der Standardwert ist 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-285">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-286">Ein <xref:System.Diagnostics.TextWriterTraceListener> interpretiert diese Zahl als Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="f5382-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="f5382-287">Ein <xref:System.Diagnostics.EventLogTraceListener> dieser Wert ignoriert.</span><span class="sxs-lookup"><span data-stu-id="f5382-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="f5382-288">Diese Eigenschaft ist für jeden Thread/pro Anforderung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="f5382-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="f5382-289">Festlegen der <xref:System.Diagnostics.Trace.AutoFlush%2A> und <xref:System.Diagnostics.Trace.IndentSize%2A> für <xref:System.Diagnostics.Trace>, Sie können auch bearbeiten die Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f5382-290">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="f5382-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-291">Ruft die Auflistung der Listener ab, durch die die Ausgabe der Ablaufverfolgung überwacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-291">Gets the collection of listeners that is monitoring the trace output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5382-292">Eine <see cref="T:System.Diagnostics.TraceListenerCollection" />, die eine Auflistung vom Typ <see cref="T:System.Diagnostics.TraceListener" /> darstellt und die Ausgabe der Ablaufverfolgung überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-293">Die Listener erzeugen formatierten Ausgabe in der Ablaufverfolgungsausgabe.</span><span class="sxs-lookup"><span data-stu-id="f5382-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="f5382-294">Standardmäßig enthält die Auflistung eine Instanz von der <xref:System.Diagnostics.DefaultTraceListener> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="f5382-295">Wenn Sie den Standardlistener zu entfernen möchten, rufen Sie die <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> -Methode, und übergeben sie die Instanz von der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f5382-296">Um die Ausgabe an das Konsolenfenster umzuleiten, fügen Sie eine Instanz des der <xref:System.Diagnostics.ConsoleTraceListener> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-297">Die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung von beiden gemeinsam genutzt der <xref:System.Diagnostics.Debug> und <xref:System.Diagnostics.Trace> Klassen; ein Ablaufverfolgungslistener zur Klasse fügt den Listener für beide hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="f5382-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-298">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.ConsoleTraceListener> im Konsolenfenster ausgibt.</span><span class="sxs-lookup"><span data-stu-id="f5382-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="f5382-299">Der Code fügt dann den neue Listener die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f5382-300">für den Betrieb mit nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-300">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="f5382-301">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="f5382-302">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5382-303">Aktualisiert die Konfigurationsdaten für die Ablaufverfolgung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-303">Refreshes the trace configuration data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-304">Trace-Konfigurationsdaten werden erfasst, wenn die Anwendung gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="f5382-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="f5382-305">Wenn die Konfigurationsdaten werden nach dem Start der Anwendung geändert werden, rufen Sie die <xref:System.Diagnostics.Trace.Refresh%2A> Methode, um die Ablaufverfolgungsdaten für die Konfiguration zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-306">Schreibt Fehlerinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-307">Die zu schreibende Informationsmeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-307">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-308">Schreibt eine Fehlermeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-309"><xref:System.Diagnostics.Trace.TraceError%2A> Ruft die `TraceEvent` Methode für jeden Ablaufverfolgungslistener, mit der Ablaufverfolgungs-Ereignistyp <xref:System.Diagnostics.TraceEventType.Error>, übergeben die informationsmeldung als die Meldungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="f5382-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f5382-310">Eine Formatzeichenfolge mit 0 oder mehr Formatelementen, die Objekten im <c>args</c>-Array entsprechen</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-310">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="f5382-311">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-311">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-312">Schreibt eine Fehlermeldung unter Verwendung des angegebenen Arrays von Objekten und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-313"><xref:System.Diagnostics.Trace.TraceError%2A> Ruft die `TraceEvent` Methoden in die Ablaufverfolgungslistener mit der Ablaufverfolgungs-Ereignistyp <xref:System.Diagnostics.TraceEventType.Error>, übergeben den Nachrichteninhalt als ein Objektarray mit Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="f5382-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="f5382-314">Finden Sie unter der <xref:System.String.Format%2A> Methode Weitere Informationen zu den `format` und `args` Parameter.</span><span class="sxs-lookup"><span data-stu-id="f5382-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-315">Schreibt eine Informationsmeldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-316">Die zu schreibende Informationsmeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-316">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-317">Schreibt eine Informationsmeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> Ruft die `TraceEvent` Methode für jeden Ablaufverfolgungslistener, mit der Ablaufverfolgungs-Ereignistyp <xref:System.Diagnostics.TraceEventType.Information>, übergeben die informationsmeldung als die Meldungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="f5382-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f5382-319">Eine Formatzeichenfolge mit 0 oder mehr Formatelementen, die Objekten im <c>args</c>-Array entsprechen</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-319">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="f5382-320">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-320">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-321">Schreibt eine Informationsmeldung unter Verwendung des angegebenen Arrays von Objekten und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> Ruft die `TraceEvent` Methoden in die Ablaufverfolgungslistener mit der Ablaufverfolgungs-Ereignistyp <xref:System.Diagnostics.TraceEventType.Information>, übergeben den Nachrichteninhalt als ein Objektarray mit Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="f5382-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="f5382-323">Finden Sie unter der <xref:System.String.Format%2A> Methode Weitere Informationen zu den `format` und `args` Parameter.</span><span class="sxs-lookup"><span data-stu-id="f5382-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-324">Schreibt Warninformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-325">Die zu schreibende Informationsmeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-325">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-326">Schreibt eine Warnmeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> Ruft die `TraceEvent` Methode für jeden Ablaufverfolgungslistener mit der Ablaufverfolgungs-Ereignistyp <xref:System.Diagnostics.TraceEventType.Warning>, übergeben die informationsmeldung als die Meldungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="f5382-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f5382-328">Eine Formatzeichenfolge mit 0 oder mehr Formatelementen, die Objekten im <c>args</c>-Array entsprechen</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-328">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="f5382-329">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-329">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-330">Schreibt eine Warnmeldung unter Verwendung des angegebenen Arrays von Objekten und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> Ruft die `TraceEvent` Methoden in die Ablaufverfolgungslistener mit der Ablaufverfolgungs-Ereignistyp <xref:System.Diagnostics.TraceEventType.Warning>, übergeben den Nachrichteninhalt als ein Objektarray mit Formatierungsinformationen.</span><span class="sxs-lookup"><span data-stu-id="f5382-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="f5382-332">Finden Sie unter der <xref:System.String.Format%2A> Methode Weitere Informationen zu den `format` und `args` Parameter.</span><span class="sxs-lookup"><span data-stu-id="f5382-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5382-333">Verringert die aktuelle <see cref="P:System.Diagnostics.Trace.IndentLevel" /> um 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f5382-334">Das folgende Beispiel-inkrementiert und dekrementiert die Einzugsebene und Ablaufverfolgungsmeldungen ausgibt.</span><span class="sxs-lookup"><span data-stu-id="f5382-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f5382-335">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="f5382-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-336">Ruft einen Wert ab, der angibt, ob die globale Sperre verwendet werden soll, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-336">Gets or sets a value indicating whether the global lock should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5382-337">
            <see langword="true" />, wenn die globale Sperre verwendet werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-337">
              <see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f5382-338">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-338">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-339">Die globale Sperre wird immer verwendet, wenn der Ablaufverfolgungslistener threadsicher ist, unabhängig vom Wert des nicht ist <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="f5382-340">Die <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> Eigenschaft wird verwendet, um zu bestimmen, ob der Listener threadsicher ist.</span><span class="sxs-lookup"><span data-stu-id="f5382-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="f5382-341">Die globale Sperre wird nicht verwendet werden, nur dann, wenn der Wert der <xref:System.Diagnostics.Trace.UseGlobalLock%2A> ist `false` und der Wert des <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="f5382-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="f5382-342">Das Standardverhalten wird die globale Sperre verwendet.</span><span class="sxs-lookup"><span data-stu-id="f5382-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="f5382-343">Festlegen der <xref:System.Diagnostics.Trace.UseGlobalLock%2A> für <xref:System.Diagnostics.Trace>, Sie können auch bearbeiten die Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f5382-344">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="f5382-344">The configuration file should be formatted like the following example:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f5382-345">für den Betrieb mit nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-345">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="f5382-346">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="f5382-347">Zugeordnete Enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-348">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5382-349">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-350">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-351">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-352">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-353">ASP.NET bietet Ablaufverfolgungsfunktionen, die speziell für die Webseiten.</span><span class="sxs-lookup"><span data-stu-id="f5382-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="f5382-354">Verwenden Sie zum Schreiben von Ablaufverfolgungsmeldungen in ASP.NET-Seiten der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f5382-355">Standardmäßig im Code eine ASP.NET-Webseite der Anweisung zugeordneten `Trace.Write("...")` aufgerufen wird, die <xref:System.Web.TraceContext.Write%2A> Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f5382-356">Verwenden der <xref:System.Diagnostics.Trace?displayProperty=nameWithType> Klasse in Webseiten, fügen Sie den Namespace, z. B. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="f5382-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-357">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-358">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-359">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt den ersten Vornamen des der `value` Parameter an die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-360">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-361">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel wird eine Meldung in derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="f5382-362">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-363">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-363">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-364">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-365">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-366">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-367">ASP.NET bietet Ablaufverfolgungsfunktionen, die speziell für die Webseiten.</span><span class="sxs-lookup"><span data-stu-id="f5382-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="f5382-368">Verwenden Sie zum Schreiben von Ablaufverfolgungsmeldungen in ASP.NET-Seiten der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f5382-369">Standardmäßig im Code eine ASP.NET-Webseite der Anweisung zugeordneten `Trace.Write("...")` aufgerufen wird, die <xref:System.Web.TraceContext.Write%2A> Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f5382-370">Verwenden der <xref:System.Diagnostics.Trace?displayProperty=nameWithType> Klasse in Webseiten, fügen Sie den Namespace, z. B. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="f5382-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-371">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-372">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-373">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-374">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-375">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel gibt die zweite Fehlermeldung auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-376">Ein Zeilenabschlusszeichen folgt die zweite Meldung.</span><span class="sxs-lookup"><span data-stu-id="f5382-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5382-377">Ein <see cref="T:System.Object" />-Name wird an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-378">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-378">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-379">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in den Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-380">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-381">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-382">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-383">ASP.NET bietet Ablaufverfolgungsfunktionen, die speziell für die Webseiten.</span><span class="sxs-lookup"><span data-stu-id="f5382-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="f5382-384">Verwenden Sie zum Schreiben von Ablaufverfolgungsmeldungen in ASP.NET-Seiten der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f5382-385">Standardmäßig im Code eine ASP.NET-Webseite der Anweisung zugeordneten `Trace.Write("...")` aufgerufen wird, die <xref:System.Web.TraceContext.Write%2A> Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f5382-386">Verwenden der <xref:System.Diagnostics.Trace?displayProperty=nameWithType> Klasse in Webseiten, fügen Sie den Namespace, z. B. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="f5382-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-387">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-388">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-389">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Verbose`, im Beispiel gibt den Namen des der `myObject` und die `category` auf die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-390">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-391">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Error` oder höher wird im Beispiel wird die zweite Fehlermeldung in derselben Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-392">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-393">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-393">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-394">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-394">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-395">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-396">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-397">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-398">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5382-399">ASP.NET bietet Ablaufverfolgungsfunktionen, die speziell für die Webseiten.</span><span class="sxs-lookup"><span data-stu-id="f5382-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="f5382-400">Verwenden Sie zum Schreiben von Ablaufverfolgungsmeldungen in ASP.NET-Seiten der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f5382-401">Standardmäßig im Code eine ASP.NET-Webseite der Anweisung zugeordneten `Trace.Write("...")` aufgerufen wird, die <xref:System.Web.TraceContext.Write%2A> Methode der <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f5382-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f5382-402">Verwenden der <xref:System.Diagnostics.Trace?displayProperty=nameWithType> Klasse in Webseiten, fügen Sie den Namespace, z. B. `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="f5382-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-403">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-404">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-405">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Verbose`, im Beispiel gibt die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-406">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-407">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Error` oder höher wird im Beispiel wird die zweite Fehlermeldung in derselben Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-408">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-409">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-410">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-410">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f5382-411">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-412">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-413">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-414">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-415">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-416">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-417">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt den Vornamen der Value-Parameter der <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-418">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-419">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel wird eine Meldung in derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="f5382-420">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-421">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-421">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-422">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-422">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-423">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-423">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-424">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-424">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-425">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-425">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-426">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-426">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-427">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-427">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-428">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-428">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="f5382-429">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-429">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-430">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-430">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-431">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-431">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-432">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-432">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-433">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-433">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-434">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-434">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-435">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-435">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-436">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-436">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-437">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel gibt die zweite Fehlermeldung auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-437">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-438">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-438">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-439">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-439">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-440">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-440">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-441">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-441">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-442">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-442">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-443">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-443">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-444">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-444">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-445">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-445">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-446">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-446">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f5382-447">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-447">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-448">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-448">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-449">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-449">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-450">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-450">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-451">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-451">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-452">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-452">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-453">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-453">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-454">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-454">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-455">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Verbose`, im Beispiel gibt den Namen des der `myObject` und die `category` auf die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-455">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-456">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-456">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-457">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Error` oder höher wird im Beispiel wird die zweite Fehlermeldung in derselben Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-457">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-458">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-458">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-459">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-459">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-460">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-460">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-461">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-461">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-462">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-462">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-463">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-463">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-464">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-464">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-465">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-465">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-466">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-466">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="f5382-467">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-467">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-468">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-468">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-469">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-469">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-470">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-470">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-471">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-471">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-472">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.Write%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-472">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-473">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-473">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-474">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-474">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-475">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Verbose`, im Beispiel gibt die erste Fehlermeldung an die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-475">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-476">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-476">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-477">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Error` oder höher wird im Beispiel wird die zweite Fehlermeldung in derselben Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-477">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-478">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-478">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-479">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-479">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-480">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-480">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-481">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-481">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-482">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-482">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-483">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-483">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-484">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-484">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-485">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-485">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-486">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-486">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5382-487">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-487">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-488">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-489">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-489">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-490">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-490">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-491">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-491">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-492">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-492">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-493">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-493">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-494">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-494">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-495">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel wird der Name des Objekts in der gleichen Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-495">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="f5382-496">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-496">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-497">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-497">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-498">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-498">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-499">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-499">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-500">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-501">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-502">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-503">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-504">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-505">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel gibt die zweite Fehlermeldung auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-506">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5382-507">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-507">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-508">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-508">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-509">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in den Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-509">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-510">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-510">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-511">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-511">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-512">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-513">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-514">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-515">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-516">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-517">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel gibt die zweite Fehlermeldung auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-518">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f5382-519">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-519">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-520">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-520">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-521">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-521">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-522">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-522">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-523">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-523">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-524">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-525">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-526">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-527">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-528">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-529">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel wird die zweite Fehlermeldung ausgegeben und die `category` auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="f5382-530">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5382-531">Schreibt Informationen über die Ablaufverfolgung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-531">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-532">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-532">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f5382-533">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-534">Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-534">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-535">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-535">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-536">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-536">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-537">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-537">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-538">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-538">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-539">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-539">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-540">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-540">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-541">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel wird der Name des Objekts in der gleichen Zeile wie die erste Meldung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="f5382-541">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="f5382-542">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-542">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-543">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-543">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-544">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-544">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-545">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-545">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-546">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-546">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-547">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-547">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-548">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-548">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-549">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-549">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-550">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-550">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="f5382-551">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-551">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-552">Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-552">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-553">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-554">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-554">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-555">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-555">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-556">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-556">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-557">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-557">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-558">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-558">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-559">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel gibt die zweite Fehlermeldung auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-559">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-560">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-560">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-561">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-561">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-562">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-562">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-563">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-563">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-564">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-564">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-565">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-565">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-566">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-566">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-567">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-567">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-568">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-568">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f5382-569">Ein <see cref="T:System.Object" />, dessen Name an die <see cref="P:System.Diagnostics.Trace.Listeners" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-569">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-570">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-570">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-571">Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-571">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-572">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-572">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-573">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-573">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-574">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-574">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-575">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-575">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-576">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-576">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-577">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-577">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-578">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-578">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-579">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel gibt die zweite Fehlermeldung auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-579">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="f5382-580">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-580">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-581">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-581">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-582">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-582">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-583">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-583">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-584">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-584">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-585">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-585">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-586">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-586">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-587">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-587">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="f5382-588">
            <see langword="true" />, um das Schreiben einer Meldung zu bewirken, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-588">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="f5382-589">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-589">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="f5382-590">Ein Kategoriename für die Anordnung der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-590">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5382-591">Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5382-591">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5382-592">Standardmäßig wird die Ausgabe geschrieben, mit einer Instanz von <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f5382-592">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="f5382-593">Die `category` Parameter kann verwendet werden, um die Ausgabenachrichten gruppieren.</span><span class="sxs-lookup"><span data-stu-id="f5382-593">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="f5382-594">Diese Methode ruft die <xref:System.Diagnostics.TraceListener.WriteLine%2A> Methode des Ablaufverfolgungslisteners.</span><span class="sxs-lookup"><span data-stu-id="f5382-594">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5382-595">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TraceSwitch> mit dem Namen `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="f5382-595">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="f5382-596">Dieser Schalter wird außerhalb des Codebeispiels festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f5382-596">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="f5382-597">Wenn der Schalter, um festgelegt ist die <xref:System.Diagnostics.TraceLevel> `Error` oder höher wird im Beispiel gibt die erste Fehlermeldung, die <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5382-597">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="f5382-598">Weitere Informationen zum Hinzufügen eines Listeners zum der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung finden Sie unter der <xref:System.Diagnostics.TraceListenerCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f5382-598">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="f5382-599">Wenn danach die <xref:System.Diagnostics.TraceLevel> festgelegt ist, um `Verbose`, im Beispiel wird die zweite Fehlermeldung ausgegeben und die `category` auf derselben Zeile wie die erste Nachricht.</span><span class="sxs-lookup"><span data-stu-id="f5382-599">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="f5382-600">Die zweite Nachricht von einem Zeilenabschluss folgt.</span><span class="sxs-lookup"><span data-stu-id="f5382-600">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5382-601">Sie können die Leistungseinbußen durch Instrumentieren der Anwendung mithilfe von Minimieren <see langword="If...Then" /> Anweisungen anstatt <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> Anweisungen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-601">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="f5382-602">Die folgenden zwei Codebeispiele senden dieselbe Debugmeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-602">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="f5382-603">Im erste Beispiel ist jedoch wesentlich schneller, wenn die Ablaufverfolgung deaktiviert ist, wird da Wenn <c>mySwitch.TraceError</c> ergibt <see langword="false" /> rufen Sie nicht <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-603">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="f5382-604">Im zweite Beispiel ruft immer <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, selbst wenn <c>mySwitch.TraceError</c> ist <see langword="false" /> und keine Ablaufverfolgungsausgabe erstellt wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-604">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="f5382-605">Dies kann zu unnötig beliebig komplexe codeausführung führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-605">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="f5382-606">**Erste Beispiel**</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5382-606">**First example**</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="f5382-607">**Zweite Beispiel**</span><span class="sxs-lookup"><span data-stu-id="f5382-607">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>