<Type Name="ActivityTraceId" FullName="System.Diagnostics.ActivityTraceId">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2084a968067dda6308548d9ba0c77e286826f742" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86993849" /></Metadata><TypeSignature Language="C#" Value="public struct ActivityTraceId : IEquatable&lt;System.Diagnostics.ActivityTraceId&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ActivityTraceId extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Diagnostics.ActivityTraceId&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ActivityTraceId" />
  <TypeSignature Language="VB.NET" Value="Public Structure ActivityTraceId&#xA;Implements IEquatable(Of ActivityTraceId)" />
  <TypeSignature Language="C++ CLI" Value="public value class ActivityTraceId : IEquatable&lt;System::Diagnostics::ActivityTraceId&gt;" />
  <TypeSignature Language="F#" Value="type ActivityTraceId = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Diagnostics.ActivityTraceId&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="450a2-101">Stellt eine <see cref="P:System.Diagnostics.Activity.TraceId" /> dar, die auf einem W3C-Standard basierend formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="450a2-101">Represents a <see cref="P:System.Diagnostics.Activity.TraceId" /> whose format is based on a W3C standard.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="450a2-102">Die `ActivityTraceId` Struktur spiegelt das Format wider, das der W3C-Standard für die ID der gesamten Ablauf Verfolgung erfordert.</span><span class="sxs-lookup"><span data-stu-id="450a2-102">The `ActivityTraceId` structure reflects the format that the W3C standard requires for the ID of the entire trace.</span></span> <span data-ttu-id="450a2-103">Sie besteht aus 16 Bytes, die in der Regel als 32 hexadezimal Zeichen dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="450a2-103">It consists of 16 bytes, typically represented as 32 hexadecimal characters.</span></span> <span data-ttu-id="450a2-104">Eine `ActivityTraceId` wird von der- <xref:System.Diagnostics.Activity.TraceId?displayProperty=nameWithtype> Eigenschaft zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="450a2-104">An `ActivityTraceId` is returned by the <xref:System.Diagnostics.Activity.TraceId?displayProperty=nameWithtype> property.</span></span>

<span data-ttu-id="450a2-105">Da eine `ActivityTraceId` Struktur ist, die 16 Bytes enthält, kann Sie problemlos als Verweis übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="450a2-105">Because an `ActivityTraceId` is a structure that contains 16 bytes, it can be passed easily by reference.</span></span> <span data-ttu-id="450a2-106">`ActivityTraceId` enthält Methoden für die Konvertierung in und aus der hexadezimalen Zeichen folgen Darstellung, versucht, das Ändern von Formaten bis zu vermeiden, und speichert seine Zeichen folgen Darstellung nach dem Erstellen zwischen.</span><span class="sxs-lookup"><span data-stu-id="450a2-106">`ActivityTraceId` contains methods for converting to and from its hexadecimal string representation, tries to avoid changing formats until it has to, and caches its string representation after it is created.</span></span> <span data-ttu-id="450a2-107">Es ist größtenteils als Austauschtyp nützlich.</span><span class="sxs-lookup"><span data-stu-id="450a2-107">It is mostly useful as an exchange type.</span></span>

    ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;byte&gt; -&gt; unit" Usage="activityTraceId.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="450a2-108">Die Spanne, in die die 16 Bytes der Ablaufverfolgungs-ID kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="450a2-108">The span to which the 16 bytes of the trace ID are to be copied.</span></span></param>
        <summary><span data-ttu-id="450a2-109">Kopiert die 16 Bytes der aktuellen <see cref="T:System.Diagnostics.ActivityTraceId" /> in eine angegebene Spanne.</span><span class="sxs-lookup"><span data-stu-id="450a2-109">Copies the 16 bytes of the current <see cref="T:System.Diagnostics.ActivityTraceId" /> to a specified span.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromBytes">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivityTraceId CreateFromBytes (ReadOnlySpan&lt;byte&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivityTraceId CreateFromBytes(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromBytes (idData As ReadOnlySpan(Of Byte)) As ActivityTraceId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivityTraceId CreateFromBytes(ReadOnlySpan&lt;System::Byte&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromBytes : ReadOnlySpan&lt;byte&gt; -&gt; System.Diagnostics.ActivityTraceId" Usage="System.Diagnostics.ActivityTraceId.CreateFromBytes idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityTraceId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="idData"><span data-ttu-id="450a2-110">Eine schreibgeschützte Spanne von 16 Bytes.</span><span class="sxs-lookup"><span data-stu-id="450a2-110">A read-only span of 16 bytes.</span></span></param>
        <summary><span data-ttu-id="450a2-111">Erstellt einen neuen <see cref="T:System.Diagnostics.ActivityTraceId" />-Wert aus einer schreibgeschützten Spanne von 16 Bytes.</span><span class="sxs-lookup"><span data-stu-id="450a2-111">Creates a new <see cref="T:System.Diagnostics.ActivityTraceId" /> value from a read-only span of 16 bytes.</span></span></summary>
        <returns><span data-ttu-id="450a2-112">Die neue Ablaufverfolgungs-ID.</span><span class="sxs-lookup"><span data-stu-id="450a2-112">The new trace ID.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="450a2-113"><paramref name="idData" /> enthält nicht acht Bytes.</span><span class="sxs-lookup"><span data-stu-id="450a2-113"><paramref name="idData" /> does not contain eight bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromString">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivityTraceId CreateFromString (ReadOnlySpan&lt;char&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivityTraceId CreateFromString(valuetype System.ReadOnlySpan`1&lt;char&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromString (idData As ReadOnlySpan(Of Char)) As ActivityTraceId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivityTraceId CreateFromString(ReadOnlySpan&lt;char&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromString : ReadOnlySpan&lt;char&gt; -&gt; System.Diagnostics.ActivityTraceId" Usage="System.Diagnostics.ActivityTraceId.CreateFromString idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityTraceId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="idData"><span data-ttu-id="450a2-114">Eine Spanne, die 32 Hexadezimalzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="450a2-114">A span that contains 32 hexadecimal characters.</span></span></param>
        <summary><span data-ttu-id="450a2-115">Erstellt einen neuen <see cref="T:System.Diagnostics.ActivityTraceId" />-Wert aus einer schreibgeschützten Spanne von 32 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="450a2-115">Creates a new <see cref="T:System.Diagnostics.ActivityTraceId" /> value from a read-only span of 32 hexadecimal characters.</span></span></summary>
        <returns><span data-ttu-id="450a2-116">Die neue Ablaufverfolgungs-ID.</span><span class="sxs-lookup"><span data-stu-id="450a2-116">The new trace ID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="450a2-117">`idData` kann aus Ziffern und Kleinbuchstaben oder aus Nullen bestehen.</span><span class="sxs-lookup"><span data-stu-id="450a2-117">`idData` can consist either of numbers and lower-case hexadecimal characters or of all zeros.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="450a2-118"><paramref name="idData" /> enthält nicht 16 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="450a2-118"><paramref name="idData" /> does not contain 16 hexadecimal characters.</span></span>

<span data-ttu-id="450a2-119">- oder -</span><span class="sxs-lookup"><span data-stu-id="450a2-119">-or-</span></span>

<span data-ttu-id="450a2-120">Die Zeichen in <paramref name="idData" /> sind nicht alle Kleinbuchstaben-Hexadezimalzeichen oder alle Nullen (0).</span><span class="sxs-lookup"><span data-stu-id="450a2-120">The characters in <paramref name="idData" /> are not all lower-case hexadecimal characters or all zeros.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromUtf8String">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivityTraceId CreateFromUtf8String (ReadOnlySpan&lt;byte&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivityTraceId CreateFromUtf8String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromUtf8String (idData As ReadOnlySpan(Of Byte)) As ActivityTraceId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivityTraceId CreateFromUtf8String(ReadOnlySpan&lt;System::Byte&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromUtf8String : ReadOnlySpan&lt;byte&gt; -&gt; System.Diagnostics.ActivityTraceId" Usage="System.Diagnostics.ActivityTraceId.CreateFromUtf8String idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityTraceId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="idData"><span data-ttu-id="450a2-121">Eine schreibgeschützte Spanne von UTF8-codierten Bytes.</span><span class="sxs-lookup"><span data-stu-id="450a2-121">A read-only span of UTF8-encoded bytes.</span></span></param>
        <summary><span data-ttu-id="450a2-122">Erstellt einen neuen <see cref="T:System.Diagnostics.ActivityTraceId" />-Wert aus einer schreibgeschützten Spanne von UTF8-codierten Bytes.</span><span class="sxs-lookup"><span data-stu-id="450a2-122">Creates a new <see cref="T:System.Diagnostics.ActivityTraceId" /> value from a read-only span of UTF8-encoded bytes.</span></span></summary>
        <returns><span data-ttu-id="450a2-123">Die neue Ablaufverfolgungs-ID.</span><span class="sxs-lookup"><span data-stu-id="450a2-123">The new trace ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRandom">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivityTraceId CreateRandom ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivityTraceId CreateRandom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.CreateRandom" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRandom () As ActivityTraceId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivityTraceId CreateRandom();" />
      <MemberSignature Language="F#" Value="static member CreateRandom : unit -&gt; System.Diagnostics.ActivityTraceId" Usage="System.Diagnostics.ActivityTraceId.CreateRandom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityTraceId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="450a2-124">Erstellt eine neue <see cref="T:System.Diagnostics.ActivitySpanId" /> basierend auf einer Zufallszahl (die höchstwahrscheinlich eindeutig ist).</span><span class="sxs-lookup"><span data-stu-id="450a2-124">Creates a new <see cref="T:System.Diagnostics.ActivitySpanId" /> based on a random number (that is very likely to be unique).</span></span></summary>
        <returns><span data-ttu-id="450a2-125">Die neue Spannen-ID.</span><span class="sxs-lookup"><span data-stu-id="450a2-125">The new span ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.ActivityTraceId traceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Diagnostics.ActivityTraceId traceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (traceId As ActivityTraceId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Diagnostics::ActivityTraceId traceId);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Diagnostics.ActivityTraceId -&gt; bool" Usage="activityTraceId.Equals traceId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceId" Type="System.Diagnostics.ActivityTraceId" />
      </Parameters>
      <Docs>
        <param name="traceId"><span data-ttu-id="450a2-126">Die zu vergleichende Instanz.</span><span class="sxs-lookup"><span data-stu-id="450a2-126">The instance to compare.</span></span></param>
        <summary><span data-ttu-id="450a2-127">Bestimmt, ob die aktuelle Instanz und eine angegebene <see cref="T:System.Diagnostics.ActivityTraceId" /> identisch sind.</span><span class="sxs-lookup"><span data-stu-id="450a2-127">Determines whether the current instance and a specified <see cref="T:System.Diagnostics.ActivityTraceId" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="450a2-128"><see langword="true" />, wenn <paramref name="traceId" /> den gleichen Hexadezimalwert wie die aktuelle Instanz aufweist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="450a2-128"><see langword="true" /> if <paramref name="traceId" /> has the same hex value as the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="activityTraceId.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="450a2-129">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="450a2-129">The object to compare.</span></span></param>
        <summary><span data-ttu-id="450a2-130">Bestimmt, ob diese Instanz und ein angegebenes Objekt, das ebenfalls eine <see cref="T:System.Diagnostics.ActivityTraceId" />-Instanz sein muss, den gleichen Wert haben.</span><span class="sxs-lookup"><span data-stu-id="450a2-130">Determines whether this instance and a specified object, which must also be an <see cref="T:System.Diagnostics.ActivityTraceId" /> instance, have the same value.</span></span></summary>
        <returns><span data-ttu-id="450a2-131"><see langword="true" />, wenn <paramref name="obj" /> eine Instanz von <see cref="T:System.Diagnostics.ActivityTraceId" /> ist und den gleichen Hexadezimalwert wie die aktuelle Instanz aufweist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="450a2-131"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Diagnostics.ActivityTraceId" /> and has the same hex value as the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="activityTraceId.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="450a2-132">Gibt den Hashcode der TraceId zurück.</span><span class="sxs-lookup"><span data-stu-id="450a2-132">Returns the hash code of the TraceId.</span></span></summary>
        <returns><span data-ttu-id="450a2-133">Der Hashcode der TraceId.</span><span class="sxs-lookup"><span data-stu-id="450a2-133">The hash code of the TraceId.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Diagnostics.ActivityTraceId traceId1, System.Diagnostics.ActivityTraceId traceId2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Diagnostics.ActivityTraceId traceId1, valuetype System.Diagnostics.ActivityTraceId traceId2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (traceId1 As ActivityTraceId, traceId2 As ActivityTraceId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Diagnostics::ActivityTraceId traceId1, System::Diagnostics::ActivityTraceId traceId2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Diagnostics.ActivityTraceId * System.Diagnostics.ActivityTraceId -&gt; bool" Usage="traceId1 = traceId2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceId1" Type="System.Diagnostics.ActivityTraceId" />
        <Parameter Name="traceId2" Type="System.Diagnostics.ActivityTraceId" />
      </Parameters>
      <Docs>
        <param name="traceId1"><span data-ttu-id="450a2-134">Die erste zu vergleichende Instanz.</span><span class="sxs-lookup"><span data-stu-id="450a2-134">The first instance to compare.</span></span></param>
        <param name="traceId2"><span data-ttu-id="450a2-135">Die zweite zu vergleichende Instanz.</span><span class="sxs-lookup"><span data-stu-id="450a2-135">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="450a2-136">Bestimmt, ob zwei angegebene <see cref="T:System.Diagnostics.ActivityTraceId" />-Instanzen denselben Wert haben.</span><span class="sxs-lookup"><span data-stu-id="450a2-136">Determines whether two specified <see cref="T:System.Diagnostics.ActivityTraceId" /> instances have the same value.</span></span></summary>
        <returns><span data-ttu-id="450a2-137"><see langword="true" />, wenn die TraceId <paramref name="traceId1" /> mit der TraceId <paramref name="traceId2" /> identisch ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="450a2-137"><see langword="true" /> if the TraceId of <paramref name="traceId1" /> is the same as the TraceId of <paramref name="traceId2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Diagnostics.ActivityTraceId traceId1, System.Diagnostics.ActivityTraceId traceId2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Diagnostics.ActivityTraceId traceId1, valuetype System.Diagnostics.ActivityTraceId traceId2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (traceId1 As ActivityTraceId, traceId2 As ActivityTraceId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Diagnostics::ActivityTraceId traceId1, System::Diagnostics::ActivityTraceId traceId2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Diagnostics.ActivityTraceId * System.Diagnostics.ActivityTraceId -&gt; bool" Usage="System.Diagnostics.ActivityTraceId.op_Inequality (traceId1, traceId2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceId1" Type="System.Diagnostics.ActivityTraceId" />
        <Parameter Name="traceId2" Type="System.Diagnostics.ActivityTraceId" />
      </Parameters>
      <Docs>
        <param name="traceId1"><span data-ttu-id="450a2-138">Die erste zu vergleichende Instanz.</span><span class="sxs-lookup"><span data-stu-id="450a2-138">The first instance to compare.</span></span></param>
        <param name="traceId2"><span data-ttu-id="450a2-139">Die zweite zu vergleichende Instanz.</span><span class="sxs-lookup"><span data-stu-id="450a2-139">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="450a2-140">Bestimmt, ob zwei angegebene <see cref="T:System.Diagnostics.ActivityTraceId" />-Instanzen denselben Wert haben.</span><span class="sxs-lookup"><span data-stu-id="450a2-140">Determines whether two specified <see cref="T:System.Diagnostics.ActivityTraceId" /> instances have the same value.</span></span></summary>
        <returns><span data-ttu-id="450a2-141"><see langword="true" />, wenn sich die TraceId <paramref name="traceId1" /> von der TraceId <paramref name="traceId2" /> unterscheidet; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="450a2-141"><see langword="true" /> if the TraceId of <paramref name="traceId1" /> is different from the TraceId of <paramref name="traceId2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHexString">
      <MemberSignature Language="C#" Value="public string ToHexString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToHexString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.ToHexString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHexString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToHexString();" />
      <MemberSignature Language="F#" Value="member this.ToHexString : unit -&gt; string" Usage="activityTraceId.ToHexString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="450a2-142">Gibt eine Hexadezimalzeichenfolge von 16 Zeichen zurück, die diese Spannen-ID darstellt.</span><span class="sxs-lookup"><span data-stu-id="450a2-142">Returns a 16-character hexadecimal string that represents this span ID.</span></span></summary>
        <returns><span data-ttu-id="450a2-143">Die Zeichenfolgendarstellung dieser Ablaufverfolgungs-ID mit 32 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="450a2-143">The 32-character hexadecimal string representation of this trace ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityTraceId.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="activityTraceId.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="450a2-144">Gibt eine Hexadezimalzeichenfolge mit 32 Zeichen zurück, die diese Ablaufverfolgungs-ID darstellt.</span><span class="sxs-lookup"><span data-stu-id="450a2-144">Returns a 32-character hexadecimal string that represents this trace ID.</span></span></summary>
        <returns><span data-ttu-id="450a2-145">Die Zeichenfolgendarstellung dieser Ablaufverfolgungs-ID mit 32 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="450a2-145">The 32-character hexadecimal string representation of this trace ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
