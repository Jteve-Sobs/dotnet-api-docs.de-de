<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a11ff8549563b2a37cda1e0a18c8dcf3731da03" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39870853" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt für einen Thread und einen Prozess spezifische Daten für Ablaufverfolgungsereignisse bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.TraceEventCache> Klasse, die als zur leistungsoptimierung für Trace-Listener-Aufrufe, ist nur für Entwickler, die benutzerdefinierte Ablaufverfolgungslistener erstellen von Interesse sind.  
  
 Die <xref:System.Diagnostics.TraceEventCache> Klasse wird als Parameter in Methoden für die Ablaufverfolgung verwendet, um genau die Quelle eines Ereignisses für die Ablaufverfolgung zu identifizieren. Beispiele für Methoden, mit denen <xref:System.Diagnostics.TraceEventCache> sind <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> und <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>. Die <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> Eigenschaft enthält Daten, die zum Korrelieren der Ablaufverfolgungs mit zugehörigen ablaufverfolgungen verwendet werden können.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceEventCache" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Aufrufliste für den aktuellen Thread ab.</summary>
        <value>Eine Zeichenfolge, die Stapelüberwachungsinformationen enthält. Dieser Wert kann eine leere Zeichenfolge ("") sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceEventCache.Callstack%2A> -Eigenschaft ruft die Aufrufliste aus der <xref:System.Environment.StackTrace%2A> Eigenschaft der <xref:System.Environment> Klasse. Den Wert der Eigenschaft werden die Methodenaufrufe in umgekehrter chronologischer Reihenfolge aufgeführt. Der letzte Methodenaufruf ist, also zuerst beschrieben. Eine Zeile der Stapelüberwachungsinformationen wird für jeden Aufruf einer Methode auf dem Stapel aufgelistet. Weitere Informationen finden Sie unter <xref:System.Environment.StackTrace%2A>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">für den Vollzugriff auf die durch die Berechtigung geschützte Ressource. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datum und die Uhrzeit ab, an dem die Ereignisablaufverfolgung aufgetreten ist.</summary>
        <value>Eine <see cref="T:System.DateTime" />-Struktur, deren Wert ein in koordinierter Weltzeit (Coordinated Universal Time, UTC) ausgedrücktes Datum und eine entsprechende Uhrzeit ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim ersten Zugriff auf die Eigenschaft in einer Instanz von der <xref:System.Diagnostics.TraceEventCache> Klasse, die aktuelle Uhrzeit zurückgegeben. Nachfolgende Abfragen dieser Eigenschaft in dieser Instanz zurück, die gleichen <xref:System.DateTime> Wert ist, wobei es als Timestamp verwendet werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Korrelationsdaten ab, die in einem Stapel enthalten sind.</summary>
        <value>Ein <see cref="T:System.Collections.Stack" />, der Korrelationsdaten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Korrelationsdaten werden als ein Objekt im Aufrufkontext, mit dem Namen "System.Diagnostics.Trace.CorrelationManagerSlot" gespeichert. Die <xref:System.Diagnostics.CorrelationManager> -Klasse bietet Methoden verwendet, um eine logische Operation-Identität in einem Thread gebundenen Kontext speichern, und jedes Ablaufverfolgungsereignis generiert, von dem Thread mit der gespeicherten Identität. Die <xref:System.Diagnostics.CorrelationManager> erfolgt über die <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> Eigenschaft. Jeder Aufruf der <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> Methode legt eine neue logische Operation Identität im Stapel. Jeder Aufruf der <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> Methode öffnet eine logische Operation-Identität aus dem Stapel  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den eindeutigen Bezeichner des aktuellen Prozesses ab.</summary>
        <value>Der vom System generierte eindeutige Bezeichner des aktuellen Prozesses.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bis der Prozess beendet wird, wird die Prozess-ID eindeutig identifiziert den Prozess im gesamten System.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">die Möglichkeit zum Aufrufen von nicht verwalteten Codes. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen eindeutigen Bezeichner für den aktuellen verwalteten Thread ab.</summary>
        <value>Eine Zeichenfolge, die einen eindeutigen ganzzahligen Bezeichner für diesen verwalteten Thread darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Thread-ID ist der Wert der <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> Eigenschaft als Zeichenfolge formatiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die aktuelle Anzahl der Ticks im Zeitgebermechanismus ab.</summary>
        <value>Der Teilstrichzählerwert des zugrunde liegenden Zeitgebermechanismus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Get-Accessor Ruft die <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> -Methode zum Abrufen des Zeitstempels. Wenn die <xref:System.Diagnostics.Stopwatch> Klasse verwendet einen hochauflösenden Leistungsindikator <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> gibt den aktuellen Wert dieses Indikators. Wenn die <xref:System.Diagnostics.Stopwatch> Klasse verwendet den systemtimer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> gibt die <xref:System.DateTime.Ticks%2A> Eigenschaft <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>