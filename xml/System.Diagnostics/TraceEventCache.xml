<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f248477caa08d5845236670b0faaf374d5af7298" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69075419" /></Metadata><TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e1e06-101">Stellt für einen Thread und einen Prozess spezifische Daten für Ablaufverfolgungsereignisse bereit.</span><span class="sxs-lookup"><span data-stu-id="e1e06-101">Provides trace event data specific to a thread and a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1e06-102">Die <xref:System.Diagnostics.TraceEventCache> -Klasse, die als Leistungsoptimierung für Ablaufverfolgungslistener-Aufrufe konzipiert ist, ist nur für Entwickler von Interesse, die benutzerdefinierte Ablauf</span><span class="sxs-lookup"><span data-stu-id="e1e06-102">The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</span></span>  
  
 <span data-ttu-id="e1e06-103">Die <xref:System.Diagnostics.TraceEventCache> -Klasse wird als Parameter in den Ablauf Verfolgungsmethoden verwendet, um die Quelle eines Ablauf Verfolgungs Ereignisses genau zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="e1e06-103">The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</span></span> <span data-ttu-id="e1e06-104">Beispiele für Methoden, die <xref:System.Diagnostics.TraceEventCache> verwenden <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> , <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>sind und.</span><span class="sxs-lookup"><span data-stu-id="e1e06-104">Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e1e06-105">Die <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> -Eigenschaft enthält Daten, die verwendet werden können, um die Ablauf Verfolgung mit zugehörigen Ablauf Verfolgungen zu korrelieren.</span><span class="sxs-lookup"><span data-stu-id="e1e06-105">The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1e06-106">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceEventCache" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e1e06-106">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1e06-107">Ruft die Aufrufliste für den aktuellen Thread ab.</span><span class="sxs-lookup"><span data-stu-id="e1e06-107">Gets the call stack for the current thread.</span></span></summary>
        <value><span data-ttu-id="e1e06-108">Eine Zeichenfolge, die Stapelüberwachungsinformationen enthält.</span><span class="sxs-lookup"><span data-stu-id="e1e06-108">A string containing stack trace information.</span></span> <span data-ttu-id="e1e06-109">Dieser Wert kann eine leere Zeichenfolge ("") sein.</span><span class="sxs-lookup"><span data-stu-id="e1e06-109">This value can be an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e06-110">Die <xref:System.Diagnostics.TraceEventCache.Callstack%2A> -Eigenschaft ruft die-Eigenschaft der <xref:System.Environment.StackTrace%2A> -Eigenschaft <xref:System.Environment> der-Klasse ab.</span><span class="sxs-lookup"><span data-stu-id="e1e06-110">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class.</span></span> <span data-ttu-id="e1e06-111">Der Eigenschafts Wert listet Methodenaufrufe in umgekehrter chronologischer Reihenfolge auf.</span><span class="sxs-lookup"><span data-stu-id="e1e06-111">The property value lists method calls in reverse chronological order.</span></span> <span data-ttu-id="e1e06-112">Das heißt, dass der aktuellste Methoden Aufrufwert zuerst beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="e1e06-112">That is, the most recent method call is described first.</span></span> <span data-ttu-id="e1e06-113">Für jeden Methodenaufrufe im Stapel ist eine Zeile mit Stapel Überwachungsinformationen aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="e1e06-113">One line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="e1e06-114">Weitere Informationen finden Sie unter <xref:System.Environment.StackTrace%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1e06-114">For more information, see <xref:System.Environment.StackTrace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="e1e06-115">für vollständigen Zugriff auf die durch die Berechtigung geschützte Ressource.</span><span class="sxs-lookup"><span data-stu-id="e1e06-115">for full access to the resource protected by the permission.</span></span> <span data-ttu-id="e1e06-116">Zugehörige Enumeration:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="e1e06-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1e06-117">Ruft das Datum und die Uhrzeit ab, an dem die Ereignisablaufverfolgung aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="e1e06-117">Gets the date and time at which the event trace occurred.</span></span></summary>
        <value><span data-ttu-id="e1e06-118">Eine <see cref="T:System.DateTime" />-Struktur, deren Wert ein in koordinierter Weltzeit (Coordinated Universal Time, UTC) ausgedrücktes Datum und eine entsprechende Uhrzeit ist.</span><span class="sxs-lookup"><span data-stu-id="e1e06-118">A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e06-119">Wenn der Zugriff auf die Eigenschaft zum ersten Mal in einer Instanz <xref:System.Diagnostics.TraceEventCache> der-Klasse erfolgt, wird die aktuelle Zeit zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e1e06-119">The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned.</span></span> <span data-ttu-id="e1e06-120">Nachfolgende Abfragen dieser Eigenschaft in dieser Instanz geben denselben <xref:System.DateTime> Wert zurück, sodass er als Zeitstempel verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e1e06-120">Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1e06-121">Ruft die Korrelationsdaten ab, die in einem Stapel enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="e1e06-121">Gets the correlation data, contained in a stack.</span></span></summary>
        <value><span data-ttu-id="e1e06-122">Ein <see cref="T:System.Collections.Stack" />, der Korrelationsdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="e1e06-122">A <see cref="T:System.Collections.Stack" /> containing correlation data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e06-123">Die Korrelations Daten werden als Objekt im Aufrufkontext mit dem Namen "System. Diagnostics. Trace. correlationmanagerslot" gespeichert.</span><span class="sxs-lookup"><span data-stu-id="e1e06-123">The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</span></span> <span data-ttu-id="e1e06-124">Die <xref:System.Diagnostics.CorrelationManager> -Klasse stellt Methoden bereit, mit denen eine logische Vorgangs Identität in einem Thread gebundenen Kontext gespeichert wird und jedes vom Thread generierte Ablauf Verfolgungs Ereignis automatisch mit der gespeicherten Identität versehen wird.</span><span class="sxs-lookup"><span data-stu-id="e1e06-124">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span> <span data-ttu-id="e1e06-125">Der <xref:System.Diagnostics.CorrelationManager> Zugriff auf die erfolgt <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> über die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e1e06-125">The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e1e06-126">Jeder Aufrufe der <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> -Methode schiebt eine neue logische Vorgangs Identität auf den Stapel.</span><span class="sxs-lookup"><span data-stu-id="e1e06-126">Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack.</span></span> <span data-ttu-id="e1e06-127">Jeder Aufrufe der <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> -Methode ruft eine logische Vorgangs Identität aus dem Stapel ab.</span><span class="sxs-lookup"><span data-stu-id="e1e06-127">Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1e06-128">Ruft den eindeutigen Bezeichner des aktuellen Prozesses ab.</span><span class="sxs-lookup"><span data-stu-id="e1e06-128">Gets the unique identifier of the current process.</span></span></summary>
        <value><span data-ttu-id="e1e06-129">Der vom System generierte eindeutige Bezeichner des aktuellen Prozesses.</span><span class="sxs-lookup"><span data-stu-id="e1e06-129">The system-generated unique identifier of the current process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e06-130">Bis der Prozess beendet wird, identifiziert die Prozess-ID den Prozess im gesamten System eindeutig.</span><span class="sxs-lookup"><span data-stu-id="e1e06-130">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e1e06-131">, wenn nicht verwalteter Code aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="e1e06-131">for the ability to call unmanaged code.</span></span> <span data-ttu-id="e1e06-132">Zugehörige Enumeration:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e1e06-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1e06-133">Ruft einen eindeutigen Bezeichner für den aktuellen verwalteten Thread ab.</span><span class="sxs-lookup"><span data-stu-id="e1e06-133">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="e1e06-134">Eine Zeichenfolge, die einen eindeutigen ganzzahligen Bezeichner für diesen verwalteten Thread darstellt.</span><span class="sxs-lookup"><span data-stu-id="e1e06-134">A string that represents a unique integer identifier for this managed thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e06-135">Der Thread Bezeichner ist der Wert der <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> Eigenschaft, die als Zeichenfolge formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="e1e06-135">The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1e06-136">Ruft die aktuelle Anzahl der Ticks im Zeitgebermechanismus ab.</span><span class="sxs-lookup"><span data-stu-id="e1e06-136">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <value><span data-ttu-id="e1e06-137">Der Teilstrichzählerwert des zugrunde liegenden Zeitgebermechanismus.</span><span class="sxs-lookup"><span data-stu-id="e1e06-137">The tick counter value of the underlying timer mechanism.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e06-138">Der Get-Accessor ruft <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> die-Methode auf, um den Zeitstempel zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e1e06-138">The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp.</span></span> <span data-ttu-id="e1e06-139">Wenn die <xref:System.Diagnostics.Stopwatch> Klasse einen Leistungs Bearbeiter mit hoher Auflösung verwendet <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> , wird der aktuelle Wert dieses Leistungs Zählers zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e1e06-139">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="e1e06-140">Wenn die <xref:System.Diagnostics.Stopwatch> Klasse den System-Timer verwendet <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> , gibt <xref:System.DateTime.Ticks%2A> die- <xref:System.DateTime.Now%2A?displayProperty=nameWithType>Eigenschaft von zurück.</span><span class="sxs-lookup"><span data-stu-id="e1e06-140">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
