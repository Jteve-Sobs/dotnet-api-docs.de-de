<Type Name="EventLogTraceListener" FullName="System.Diagnostics.EventLogTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c03f3f380a80d2b730b014703f4b6861298fcf03" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39972662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogTraceListener sealed : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type EventLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen einfachen Listener bereit, der Ablaufverfolgungs- und Debugausgaben an ein <see cref="T:System.Diagnostics.EventLog" /> leitet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz dieses <xref:System.Diagnostics.EventLogTraceListener> hinzugefügt werden kann die <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>, <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>, oder <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> Sammlungen zum Senden der Ausgabe von Ablaufverfolgungs- oder zum Debuggen einer <xref:System.Diagnostics.EventLog>. Sie können die Instanz in Ihrem Code hinzufügen oder geben Sie es in der Konfigurationsdatei der Anwendung. Hinzufügen einer <xref:System.Diagnostics.EventLogTraceListener> mithilfe einer Anwendungskonfigurationsdatei, bearbeiten Sie die Datei, die den Namen der Anwendung entspricht, oder der Datei "App.config" in einem [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Projekt. In dieser Datei fügen Sie ein Element für eine <xref:System.Diagnostics.EventLogTraceListener?displayProperty=nameWithType> Typ.  
  
 Im folgenden Beispiel wird eine <xref:System.Diagnostics.EventLogTraceListener> Objekt mit dem Namen `myListener` auf die <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Auflistung. Die `initializeData` Parameter gibt den Namen der Quelle der Ereignisprotokoll, die übergeben werden die <xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29> Konstruktor.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener"  
          type="System.Diagnostics.EventLogTraceListener"  
          initializeData="TraceListenerLog" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 Weitere Informationen zur Vorgehensweise beim Hinzufügen der Ablaufverfolgungslistener in der Anwendungskonfigurationsdatei finden Sie unter oder.  
  
> [!NOTE]
>  Wenn die <xref:System.Diagnostics.EventLog.Source%2A> für das Ereignisprotokoll, die zugeordnet wird die <xref:System.Diagnostics.EventLogTraceListener> Instanz ist nicht vorhanden, wird eine neue Ereignisquelle erstellt wird. Um eine Ereignisquelle in Windows Vista, Windows XP Professional oder Windows Server 2003 zu erstellen, müssen Sie über Administratorrechte verfügen.  
>   
>  Der Grund für diese Anforderung ist, dass alle Ereignisprotokolle, einschließlich Sicherheit, durchsucht werden müssen, um zu bestimmen, ob die Ereignisquelle eindeutig ist. In Windows Vista haben Benutzer die Berechtigung zum Zugriff auf das Sicherheitsprotokoll nicht; aus diesem Grund eine <xref:System.Security.SecurityException> ausgelöst.  
>   
>  Unter Windows Vista werden die Berechtigungen eines Benutzers über die Benutzerkontensteuerung (User Account Control, UAC) bestimmt. Als Mitglied der integrierten Administratorgruppe sind Ihnen zwei Zugriffstoken für die Laufzeit zugewiesen: ein Standardbenutzertoken und ein Administratorzugriffstoken. Standardmäßig verwenden Sie die Standardbenutzerrolle. Zum Ausführen des Codes, der auf das Sicherheitsprotokoll zugreift, müssen Sie zuerst Ihre Berechtigungen von Standardbenutzer auf Administrator erhöhen. Dazu starten Sie eine Anwendung, indem Sie mit der rechten Maustaste auf das Anwendungssymbol klicken und angeben, dass Sie die Anwendung als Administrator ausführen möchten.   
  
 Die Klasse bietet die <xref:System.Diagnostics.EventLogTraceListener.EventLog%2A> Eigenschaft zum Abrufen oder Festlegen der im Ereignisprotokoll, der die Ablaufverfolgungs- oder Debugausgabe, empfängt und die <xref:System.Diagnostics.EventLogTraceListener.Name%2A> Eigenschaft, um den Namen der der <xref:System.Diagnostics.EventLogTraceListener>.  
  
 Die <xref:System.Diagnostics.EventLogTraceListener.Close%2A> Methode schließt das Ereignisprotokoll, sodass es nicht mehr empfängt, Ablaufverfolgungs- oder Debugausgabe. Die <xref:System.Diagnostics.EventLogTraceListener.Write%2A> und <xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A> Methoden schreiben eine Nachricht in das Ereignisprotokoll geschrieben.  
  
> [!NOTE]
>  Vermeiden Sie die Möglichkeit, große Mengen von Daten in das Ereignisprotokoll schreiben die <xref:System.Diagnostics.EventLogTraceListener> gibt keine der optionalen Ablaufverfolgungsdaten, die gemäß der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt einen Trace-Listener, der Ausgabe an ein Ereignisprotokoll gesendet. Der Code erstellt zunächst ein neues <xref:System.Diagnostics.EventLogTraceListener> , verwendet die Quelle `myEventLogSource`. Als Nächstes `myTraceListener` wird hinzugefügt, um die <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Auflistung. Im Beispiel wird schließlich eine Zeile der Ausgabe auf die <xref:System.Diagnostics.Trace.Listeners%2A> Objekt.  
  
 [!code-cpp[Classic EventLogTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLogTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/CS/source.cs#1)]
 [!code-vb[Classic EventLogTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist threadsicher.</threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLogTraceListener" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLogTraceListener" />-Klasse ohne Ablaufverfolgungslistener.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogTraceListener (System.Diagnostics.EventLog eventLog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.EventLog eventLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogTraceListener(System::Diagnostics::EventLog ^ eventLog);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLogTraceListener : System.Diagnostics.EventLog -&gt; System.Diagnostics.EventLogTraceListener" Usage="new System.Diagnostics.EventLogTraceListener eventLog" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventLog" Type="System.Diagnostics.EventLog" />
      </Parameters>
      <Docs>
        <param name="eventLog">Das Ereignisprotokoll, in das geschrieben werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLogTraceListener" />-Klasse unter Verwendung des angegebenen Ereignisprotokolls.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogTraceListener (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogTraceListener(System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLogTraceListener : string -&gt; System.Diagnostics.EventLogTraceListener" Usage="new System.Diagnostics.EventLogTraceListener source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Der Name einer vorhandenen Ereignisprotokollquelle.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventLogTraceListener" />-Klasse unter Verwendung der angegebenen Quelle.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="eventLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt das Ereignisprotokoll, sodass keine Ablaufverfolgungs- oder Debugausgaben mehr empfangen werden.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eventLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLog EventLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogTraceListener.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public Property EventLog As EventLog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLog ^ EventLog { System::Diagnostics::EventLog ^ get(); void set(System::Diagnostics::EventLog ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EventLog : System.Diagnostics.EventLog with get, set" Usage="System.Diagnostics.EventLogTraceListener.EventLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ereignisprotokoll ab, in das geschrieben werden soll, oder legt dieses fest.</summary>
        <value>Das Ereignisprotokoll, in das geschrieben werden soll.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogTraceListener.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Diagnostics.EventLogTraceListener.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen dieser <see cref="T:System.Diagnostics.EventLogTraceListener" /> ab oder legt diesen fest.</summary>
        <value>Der Name des Ablaufverfolgungslisteners.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert dieser Eigenschaft ist auf den Quellennamen des Ereignisprotokolls an.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt Ablaufverfolgungsdaten in das Ereignisprotokoll.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, object data);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, object data) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, data As Object)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, System::Object ^ data);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="eventLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" />
        <Parameter Name="source" Type="System.String" Index="1" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" />
        <Parameter Name="data" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
        <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
        <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <c>source</c> und <c>id</c> bezeichnet ein Ereignis eindeutig.</param>
        <param name="data">Ein Datenobjekt, das in die Ausgabedatei oder den Stream geschrieben werden soll.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, ein Datenobjekt und Ereignisinformationen in das Ereignisprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Die <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> Methoden sollen nicht von Anwendungscode aufgerufen werden. Sie werden aufgerufen, durch die Methoden der der <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, und <xref:System.Diagnostics.TraceSource> -Klassen, um die Ausgabe von Ablaufverfolgungsdaten.  
  
 Die <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> Methode, z. B. die <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Methode richtet sich automatisierte Tools, sondern ermöglicht auch das Anfügen zusätzlicher Objekte, z. B. eine Ausnahmeinstanz, um die Ablaufverfolgung.  
  
 Die `eventCache` und `source` Parameter werden verwendet, um zu bestimmen, ob das Ereignis nachverfolgt werden sollen. `id` Dient zum Erstellen einer <xref:System.Diagnostics.EventInstance> Objekt und die <xref:System.Diagnostics.TraceEventType> gleichgesetzt ein <xref:System.Diagnostics.EventLogEntryType> für die <xref:System.Diagnostics.EventInstance.EntryType%2A> Eigenschaft. Die <xref:System.Diagnostics.EventInstance> wird geschrieben, in das Ereignisprotokoll mit der `data` Object, formatiert als eine Zeichenfolge, mit der <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode.  
  
> [!NOTE]
>  Der maximale Wert, der die `id` -Parameter ist 65.535. Wenn die `id` angegebene Wert ist größer als 65.535, wird der maximale Wert verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="source" /> wurde nicht angegeben.  
  
- oder -  
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, params object[] data);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, object[] data) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, ParamArray data As Object())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="eventLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" />
        <Parameter Name="source" Type="System.String" Index="1" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" />
        <Parameter Name="data" Type="System.Object[]" Index="4">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
        <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
        <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <c>source</c> und <c>id</c> bezeichnet ein Ereignis eindeutig.</param>
        <param name="data">Ein Array von Datenobjekten.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, ein Array von Datenobjekten und Ereignisinformationen in das Ereignisprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Die <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> Methoden sollen nicht von Anwendungscode aufgerufen werden. Sie werden aufgerufen, durch die Methoden der der <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, und <xref:System.Diagnostics.TraceSource> -Klassen, um die Ausgabe von Ablaufverfolgungsdaten.  
  
 Die <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> Methode, z. B. die <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Methode richtet sich automatisierte Tools, sondern ermöglicht auch das Anfügen zusätzlicher Objekte, z. B. eine Ausnahmeinstanz, um die Ablaufverfolgung.  
  
 Die `severity` und `id` Parameterdaten dient zum Erstellen einer <xref:System.Diagnostics.EventInstance> -Objekt, das in das Ereignisprotokoll mit den Daten aus dem Array von Datenobjekten geschrieben wird.  
  
 Die `eventCache` und `source` Parameter werden verwendet, um zu bestimmen, ob das Ereignis nachverfolgt werden sollen. `id` Dient zum Erstellen einer <xref:System.Diagnostics.EventInstance> Objekt und die <xref:System.Diagnostics.TraceEventType> gleichgesetzt ein <xref:System.Diagnostics.EventLogEntryType> für die <xref:System.Diagnostics.EventInstance.EntryType%2A> Eigenschaft. Die <xref:System.Diagnostics.EventInstance> wird geschrieben, in das Ereignisprotokoll mit der `data` Object-Array formatiert als Zeichenfolgenarray, mit der <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode.  
  
> [!NOTE]
>  Der maximale Wert, der die `id` -Parameter ist 65.535. Wenn die `id` angegebene Wert ist größer als 65.535, wird der maximale Wert verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="source" /> wurde nicht angegeben.  
  
- oder -  
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt Ablaufverfolgungsinformationen in das Ereignisprotokoll.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string message);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, string message) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, message As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, System::String ^ message);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="eventLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" />
        <Parameter Name="source" Type="System.String" Index="1" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" />
        <Parameter Name="message" Type="System.String" Index="4" />
      </Parameters>
      <Docs>
        <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
        <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
        <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <c>source</c> und <c>id</c> bezeichnet ein Ereignis eindeutig.</param>
        <param name="message">Die Ablaufverfolgungsmeldung.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, eine Meldung und Ereignisinformationen in das Ereignisprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Die <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Methoden sollen nicht von Anwendungscode aufgerufen werden. Diese Methoden werden aufgerufen, durch die Methoden der der <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, und <xref:System.Diagnostics.TraceSource> Klassen zum Schreiben von Ablaufverfolgungsdaten.  
  
 Die <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Methode dient zum Verfolgen von Ereignissen, die automatisch von Tools verarbeitet werden können. Überwachungstools kann z. B. Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle nachverfolgt wird.  
  
 Die `eventCache` und `source` Parameter werden verwendet, um zu bestimmen, ob das Ereignis nachverfolgt werden sollen. `id` Dient zum Erstellen einer <xref:System.Diagnostics.EventInstance> Objekt und die <xref:System.Diagnostics.TraceEventType> gleichgesetzt ein <xref:System.Diagnostics.EventLogEntryType> für die <xref:System.Diagnostics.EventInstance.EntryType%2A> Eigenschaft. Die <xref:System.Diagnostics.EventInstance> wird geschrieben, in das Ereignisprotokoll mit der `message` Daten mithilfe der <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode.  
  
> [!NOTE]
>  Der maximale Wert, der die `id` -Parameter ist 65.535. Wenn die `id` angegebene Wert ist größer als 65.535, wird der maximale Wert verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="source" /> wurde nicht angegeben.  
  
- oder -  
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string format, params object[] args);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, string format, object[] args) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, format As String, ParamArray args As Object())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="eventLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" />
        <Parameter Name="source" Type="System.String" Index="1" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" />
        <Parameter Name="format" Type="System.String" Index="4" />
        <Parameter Name="args" Type="System.Object[]" Index="5">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Ein Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</param>
        <param name="source">Ein Name, der verwendet wird, um die Ausgabe zu bezeichnen, i. d. R. der Name der Anwendung, die das Ablaufverfolgungsereignis generiert hat.</param>
        <param name="severity">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp des Ereignisses angibt, das die Ablaufverfolgung angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis. Die Kombination von <c>source</c> und <c>id</c> bezeichnet ein Ereignis eindeutig.</param>
        <param name="format">Eine Formatzeichenfolge mit 0 oder mehr Formatelementen, die Objekten im <c>args</c>-Array entsprechen.</param>
        <param name="args">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, ein formatiertes Objektarray und Ereignisinformationen in das Ereignisprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Die <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Methoden sollen nicht von Anwendungscode aufgerufen werden. Diese Methoden werden aufgerufen, durch die Methoden der der <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, und <xref:System.Diagnostics.TraceSource> Klassen zum Schreiben von Ablaufverfolgungsdaten.  
  
 Die <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Methode dient zum Verfolgen von Ereignissen, die automatisch von Tools verarbeitet werden können. Überwachungstools kann z. B. Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle nachverfolgt wird.  
  
 Die `eventCache` und `source` Parameter werden verwendet, um zu bestimmen, ob das Ereignis nachverfolgt werden sollen. `id` Dient zum Erstellen einer <xref:System.Diagnostics.EventInstance> Objekt und die <xref:System.Diagnostics.TraceEventType> gleichgesetzt ein <xref:System.Diagnostics.EventLogEntryType> für die <xref:System.Diagnostics.EventInstance.EntryType%2A> Eigenschaft. Die <xref:System.Diagnostics.EventInstance> in das Ereignisprotokoll geschrieben mithilfe der <xref:System.Diagnostics.EventLog.WriteEvent%2A> Methode, mit der Meldung abgerufen, die von der `format` und `args` Parameter. Die `args` Objektarray konvertiert in eine Zeichenfolge mit der <xref:System.String.Format%2A> -Methode und übergeben die `format` Zeichenfolge und `args` Array zum Formatieren der Zeichenfolge als Meldung für das Ereignisprotokoll.  
  
> [!NOTE]
>  Der maximale Wert, der die `id` -Parameter ist 65.535. Wenn die `id` angegebene Wert ist größer als 65.535, wird der maximale Wert verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="source" /> wurde nicht angegeben.  
  
- oder -  
Die Protokolleintragszeichenfolge überschreitet 32.766 Zeichen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="eventLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die zu schreibende Meldung.</param>
        <summary>Schreibt eine Meldung in das Ereignisprotokoll für diese Instanz.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="message" /> überschreitet 32,766 Zeichen.</exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="eventLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die zu schreibende Meldung.</param>
        <summary>Schreibt eine Meldung in das Ereignisprotokoll für diese Instanz.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="message" /> überschreitet 32,766 Zeichen.</exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>