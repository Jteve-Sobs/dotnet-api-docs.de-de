<Type Name="EventTypeFilter" FullName="System.Diagnostics.EventTypeFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b17c8aed0332f1e37dec7502dbb98eacfde6b277" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86849895" /></Metadata><TypeSignature Language="C#" Value="public class EventTypeFilter : System.Diagnostics.TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventTypeFilter extends System.Diagnostics.TraceFilter" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventTypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventTypeFilter&#xA;Inherits TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventTypeFilter : System::Diagnostics::TraceFilter" />
  <TypeSignature Language="F#" Value="type EventTypeFilter = class&#xA;    inherit TraceFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TraceSource" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt an, ob ein Listener die Ablaufverfolgung auf Grundlage des Ereignistyps durchführen sollte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einem Ablaufverfolgungslistener kann mithilfe der-Eigenschaft einer von mehreren verschiedenen Filtertypen zugewiesen werden <xref:System.Diagnostics.TraceListener.Filter%2A> , um eine Ebene der Überprüfung über die bereitzustellen, die von bereitgestellt wird <xref:System.Diagnostics.TraceSwitch> . Der Filter kann verwendet werden, um die Ereignis Typen zu steuern, die vom Listener erzeugt werden.  
  
 Diese Klasse filtert Ereignisse auf der Grundlage des Werts der- <xref:System.Diagnostics.EventTypeFilter.EventType%2A> Eigenschaft.  Diese Eigenschaft kann durch Code oder in einer Konfigurationsdatei festgelegt werden, um den Ereignistyp von Meldungen anzugeben, die vom Listener verfolgt werden sollen. Der Wert der-Eigenschaft gibt den Schwellenwert an, ab dem die Ablauf Verfolgung begonnen werden soll. Ereignis Typen an und oberhalb der angegebenen Ebene werden nachverfolgt. Die Methode, die von Listenern aufgerufen wird, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> um zu bestimmen, ob ein Ereignis verfolgt werden soll, verwendet den Wert der- <xref:System.Diagnostics.EventTypeFilter.EventType%2A> Eigenschaft.  
  
 Um den Ereignistyp festzulegen, an dem die Ablauf Verfolgung beginnen soll, bearbeiten Sie die Konfigurationsdatei, die dem Namen der Anwendung entspricht. In dieser Datei können Sie einen Listener hinzufügen, seinen Filtertyp festlegen und den Ereignistyp für die Ablauf Verfolgung angeben. Die Konfigurationsdatei sollte wie folgt formatiert werden.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sharedListeners>  
      <add name="Console" type="System.Diagnostics.ConsoleTraceListener">  
        <filter type="System.Diagnostics.EventTypeFilter"   
          initializeData="Warning" />  
      </add>  
    </sharedListeners>  
  </system.diagnostics>  
</configuration>  
```  
  
 Weitere Informationen zum Initialisieren von Daten für eine finden Sie <xref:System.Diagnostics.EventTypeFilter> unter [ &lt; Filter &gt; ](/dotnet/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-sharedlisteners).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTypeFilter (System.Diagnostics.SourceLevels level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SourceLevels level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTypeFilter(System::Diagnostics::SourceLevels level);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventTypeFilter : System.Diagnostics.SourceLevels -&gt; System.Diagnostics.EventTypeFilter" Usage="new System.Diagnostics.EventTypeFilter level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="level">Eine bitweise Kombination der <see cref="T:System.Diagnostics.SourceLevels" />-Werte, die den Ereignistyp der zu verfolgenden Mitteilungen angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.EventTypeFilter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des- `level` Parameters wird verwendet, um die-Eigenschaft zu initialisieren <xref:System.Diagnostics.EventTypeFilter.EventType%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceLevels EventType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SourceLevels EventType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventTypeFilter.EventType" />
      <MemberSignature Language="VB.NET" Value="Public Property EventType As SourceLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceLevels EventType { System::Diagnostics::SourceLevels get(); void set(System::Diagnostics::SourceLevels value); };" />
      <MemberSignature Language="F#" Value="member this.EventType : System.Diagnostics.SourceLevels with get, set" Usage="System.Diagnostics.EventTypeFilter.EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceLevels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ereignistyp der zu verfolgenden Meldungen ab oder legt diesen fest.</summary>
        <value>Eine bitweise Kombination der <see cref="T:System.Diagnostics.SourceLevels" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Diagnostics.EventTypeFilter.EventType%2A> Eigenschaft gibt die Ebene an, auf der die Ablauf Verfolgung durchführen  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string? source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="eventTypeFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberSignature Language="C#" Value="public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">Ein <see cref="T:System.Diagnostics.TraceEventCache" />, der den Informationscache für das Ablaufverfolgungsereignis darstellt.</param>
        <param name="source">Der Name der Quelle.</param>
        <param name="eventType">Einer der <see cref="T:System.Diagnostics.TraceEventType" />-Werte.</param>
        <param name="id">Eine Ablaufverfolgungs-Bezeichnernummer.</param>
        <param name="formatOrMessage">Das für das Schreiben eines Arrays von Argumenten zu verwendende Format oder eine Meldung, die geschrieben werden soll.</param>
        <param name="args">Ein Array von Argumentobjekten.</param>
        <param name="data1">Ein Ablaufverfolgungs-Datenobjekt.</param>
        <param name="data">Ein Array von Ablaufverfolgungs-Datenobjekten.</param>
        <summary>Bestimmt, ob der Ablaufverfolgungslistener das Ereignis verfolgen soll.</summary>
        <returns><see langword="true" />, wenn die Ablaufverfolgung durchgeführt werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Wert des- `eventType` Parameters größer als der oder gleich dem Wert der- <xref:System.Diagnostics.EventTypeFilter.EventType%2A> Eigenschaft ist, gibt die Methode zurück `true` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
