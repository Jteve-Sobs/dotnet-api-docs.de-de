<Type Name="DefaultTraceListener" FullName="System.Diagnostics.DefaultTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e581445bf8b73278f54dd2d25bd773d01ccd85e1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DefaultTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DefaultTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="94756-101">Stellt die Standardmethoden für die Ausgabe und das Standardverhalten für die Ablaufverfolgung bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94756-101">Provides the default output methods and behavior for tracing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94756-102">Eine Instanz dieser Klasse wird automatisch hinzugefügt, um die <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> und <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Sammlungen.</span><span class="sxs-lookup"><span data-stu-id="94756-102">An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span></span> <span data-ttu-id="94756-103">Explizit Hinzufügen einer zweiten <xref:System.Diagnostics.DefaultTraceListener> Ursachen doppelte Nachrichten in das debuggerausgabefenster und doppelte Meldungsfelder für bestätigt.</span><span class="sxs-lookup"><span data-stu-id="94756-103">Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</span></span>  
  
 <span data-ttu-id="94756-104">Wird standardmäßig die <xref:System.Diagnostics.DefaultTraceListener.Write%2A> und <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> Methoden auszugeben, die Nachricht an die Win32 `OutputDebugString` Funktion und die <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="94756-104">By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="94756-105">Informationen zu den `OutputDebugString` funktionieren, finden Sie in der Platform SDK oder in MSDN.</span><span class="sxs-lookup"><span data-stu-id="94756-105">For information about the `OutputDebugString` function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="94756-106">Die <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> -Methode, in der Standardeinstellung zeigt ein Meldungsfeld, wenn die Anwendung in einem Benutzeroberflächenmodus ausgeführt wird; er auch ausgibt, die Nachricht mit <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="94756-106">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94756-107">Die Anzeige des Meldungsfelds für <xref:System.Diagnostics.Debug.Assert%2A> und <xref:System.Diagnostics.Debug.Fail%2A> Methodenaufrufe hängt das Vorhandensein der <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="94756-107">The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="94756-108">Wenn die <xref:System.Diagnostics.DefaultTraceListener> befindet sich nicht in der <xref:System.Diagnostics.Trace.Listeners%2A> -Auflistung, das Meldungsfeld wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="94756-108">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="94756-109">Die <xref:System.Diagnostics.DefaultTraceListener> kann entfernt werden, indem die [ \<deaktivieren > Element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), von der [ \<entfernen > Element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), oder durch Aufrufen der <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> Methode für die <xref:System.Diagnostics.Trace.Listeners%2A> Eigenschaft (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="94756-109">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="94756-110">Sie müssen die Ablaufverfolgungs- oder Debuggen verwenden Sie einen Ablaufverfolgungslistener aktivieren.</span><span class="sxs-lookup"><span data-stu-id="94756-110">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="94756-111">Die folgende Syntax ist compilerspezifisch.</span><span class="sxs-lookup"><span data-stu-id="94756-111">The following syntax is compiler specific.</span></span> <span data-ttu-id="94756-112">Wenn Sie den Compiler als c# oder Visual Basic verwenden, finden Sie in der Dokumentation für den Compiler.</span><span class="sxs-lookup"><span data-stu-id="94756-112">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="94756-113">Fügen Sie zum Aktivieren des Debuggens in C# geschrieben, die `/d:DEBUG` Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder fügen `#define DEBUG` an den Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="94756-113">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="94756-114">Fügen Sie in Visual Basic die `/d:DEBUG=True` -Kennzeichen an die Befehlszeile des Compilers.</span><span class="sxs-lookup"><span data-stu-id="94756-114">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="94756-115">Fügen Sie zum Aktivieren der Ablaufverfolgung in c# die `/d:TRACE` Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder fügen `#define TRACE` an den Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="94756-115">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="94756-116">Fügen Sie in Visual Basic die `/d:TRACE=True` -Kennzeichen an die Befehlszeile des Compilers.</span><span class="sxs-lookup"><span data-stu-id="94756-116">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="94756-117">Um einen Ablaufverfolgungslistener hinzufügen, bearbeiten Sie die Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="94756-117">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="94756-118">In dieser Datei können Sie einen Listener hinzufügen und dessen Typ und Parameter festlegen, einen Listener zu entfernen oder deaktivieren die Listener, die zuvor von der Anwendung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="94756-118">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="94756-119">Die Konfigurationsdatei sollte ähnlich wie im folgenden Beispiel formatiert werden:</span><span class="sxs-lookup"><span data-stu-id="94756-119">The configuration file should be formatted similar to the following example:</span></span>  
  
```  
<configuration>  
<system.diagnostics>  
  <trace autoflush="false" indentsize="4">  
    <listeners>  
      <remove name="Default" />  
      <add name="myListener"  type="System.Diagnostics.TextWriterTraceListener"    initializeData="c:\myListener.log" />  
    </listeners>  
  </trace>  
</system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="94756-120">Das folgende Codebeispiel berechnet die binomial-Koeffizienten, die Werte in Wahrscheinlichkeits- und Statistiken verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="94756-120">The following code example calculates binomial coefficients, which are values used in probability and statistics.</span></span> <span data-ttu-id="94756-121">Dieses Beispiel verwendet eine <xref:System.Diagnostics.DefaultTraceListener> Ergebnisse verfolgt und protokolliert Fehler.</span><span class="sxs-lookup"><span data-stu-id="94756-121">This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors.</span></span> <span data-ttu-id="94756-122">Er erstellt ein neues <xref:System.Diagnostics.DefaultTraceListener>, hinzugefügt der <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Auflistung und legt die <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> Eigenschaft in der Protokolldatei gespeichert, die in die Befehlszeilenargumente angegeben.</span><span class="sxs-lookup"><span data-stu-id="94756-122">It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 <span data-ttu-id="94756-123">Wenn ein Fehler bei der Verarbeitung des Eingabeparameters gefunden wird oder wenn die `CalcBinomial` Funktion eine Ausnahme auslöst, die <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> -Methode protokolliert und eine Fehlermeldung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="94756-123">If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message.</span></span> <span data-ttu-id="94756-124">Wenn die <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> Eigenschaft ist `false`, die Fehlermeldung wird auch in die Konsole geschrieben.</span><span class="sxs-lookup"><span data-stu-id="94756-124">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console.</span></span> <span data-ttu-id="94756-125">Wenn das Ergebnis ist erfolgreich, berechnet der <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> und <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> Methoden, um die Ergebnisse in die Protokolldatei geschrieben.</span><span class="sxs-lookup"><span data-stu-id="94756-125">When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.</span></span>  
  
 <span data-ttu-id="94756-126">Die <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, und <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> Methoden dazu führen, dass Ablaufverfolgungsinformationen nur geschrieben werden die <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="94756-126">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="94756-127">Zum Schreiben von Ablaufverfolgungsinformationen an alle Listener in der <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Sammlung, Nutzung der <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, und <xref:System.Diagnostics.Trace.WriteLine%2A> Methoden die <xref:System.Diagnostics.Trace> Klasse.</span><span class="sxs-lookup"><span data-stu-id="94756-127">To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="94756-128">Diese Klasse ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94756-128">This class is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94756-129">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DefaultTraceListener" />-Klasse, wobei ihr <see cref="P:System.Diagnostics.TraceListener.Name" />-Eigenschaftswert "Default" lautet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-129">Initializes a new instance of the <see cref="T:System.Diagnostics.DefaultTraceListener" /> class with "Default" as its <see cref="P:System.Diagnostics.TraceListener.Name" /> property value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94756-130">Im folgenden Codebeispiel Beispiel entfernt der <xref:System.Diagnostics.DefaultTraceListener> von der Anwendung aus bereitgestellt der <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Auflistung und erstellt dann ein neues <xref:System.Diagnostics.DefaultTraceListener> und fügt es der <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="94756-130">The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="AssertUiEnabled">
      <MemberSignature Language="C#" Value="public bool AssertUiEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssertUiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertUiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssertUiEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("AssertUiEnabled defaults to False; should follow Environment.UserInteractive.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94756-131">Ruft einen Wert ab, der angibt, ob die Anwendung im Benutzeroberflächenmodus ausgeführt wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-131">Gets or sets a value indicating whether the application is running in user-interface mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94756-132">
            <see langword="true" />, wenn der Benutzeroberflächenmodus aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-132">
              <see langword="true" /> if user-interface mode is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94756-133">Im folgenden Codebeispiel ruft eine Funktion aufgerufen, die <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> Methode, um eine Fehlermeldung protokolliert, wenn die Funktion eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="94756-133">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception.</span></span> <span data-ttu-id="94756-134">Wenn die <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> Eigenschaft ist `false`, die Methode wird auch die Fehlermeldung an die Konsole schreibt.</span><span class="sxs-lookup"><span data-stu-id="94756-134">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94756-135">Gibt eine Meldung und eine Stapelüberwachung für eine Assertion aus, die immer fehlschlägt, oder zeigt diese an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-135">Emits or displays a message and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="94756-136">Die auszugebende oder anzuzeigende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-136">The message to emit or display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94756-137">Gibt eine Meldung und eine Stapelüberwachung für eine Assertion aus, die immer fehlschlägt, oder zeigt diese an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-137">Emits or displays a message and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94756-138">Standardmäßig sendet diese Methode die `message` Parameter und eine stapelüberwachung, die in einem Meldungsfeld (wenn die Anwendung im Benutzeroberflächen-Modus ausgeführt wird) und die <xref:System.Diagnostics.DefaultTraceListener> Instanz.</span><span class="sxs-lookup"><span data-stu-id="94756-138">By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94756-139">Im folgenden Codebeispiel wird schreibt eine Fehlermeldung an eine <xref:System.Diagnostics.DefaultTraceListener> mithilfe der <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="94756-139">The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method.</span></span> <span data-ttu-id="94756-140">Die Methode schreibt die Nachricht auch an die Konsole, wenn eine neue Benutzeroberfläche nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="94756-140">The method also writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="94756-141">Die auszugebende oder anzuzeigende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-141">The message to emit or display.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="94756-142">Die detaillierte Meldung, die ausgegeben oder angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-142">The detailed message to emit or display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94756-143">Gibt eine detaillierte Meldung und eine Stapelüberwachung für eine Assertion aus, die immer fehlschlägt, oder zeigt diese an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-143">Emits or displays detailed messages and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94756-144">Wird standardmäßig diese Methode sendet die `message` Parameter, die `detailMessage` Parameter und eine stapelüberwachung, die in einem Meldungsfeld (wenn die Anwendung im Benutzeroberflächen-Modus ausgeführt wird) und die <xref:System.Diagnostics.DefaultTraceListener> Instanz.</span><span class="sxs-lookup"><span data-stu-id="94756-144">By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94756-145">Im folgenden Codebeispiel ruft eine Funktion aufgerufen, die <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> Methode, um eine detaillierte Fehlermeldung zu protokollieren, wenn die Funktion eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="94756-145">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception.</span></span> <span data-ttu-id="94756-146">Die Methode schreibt die Nachricht an die Konsole, wenn eine neue Benutzeroberfläche nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="94756-146">The method writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="LogFileName">
      <MemberSignature Language="C#" Value="public string LogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94756-147">Ruft den Namen einer Protokolldatei ab, in die Ablaufverfolgungs- oder Debugmeldungen geschrieben werden, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-147">Gets or sets the name of a log file to write trace or debug messages to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94756-148">Der Name einer Protokolldatei, in die Ablaufverfolgungs- oder Debugmeldungen geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-148">The name of a log file to write trace or debug messages to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94756-149">Das folgende Codebeispiel erstellt ein neues <xref:System.Diagnostics.DefaultTraceListener>, hinzugefügt der <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Auflistung und legt die <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> Eigenschaft in der Protokolldatei gespeichert, die in die Befehlszeilenargumente angegeben.</span><span class="sxs-lookup"><span data-stu-id="94756-149">The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="94756-150">Die in <see langword="OutputDebugString" /> und <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-150">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94756-151">Schreibt die Ausgabe in die <see langword="OutputDebugString" />-Funktion und die <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-151">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94756-152">Informationen über die Win32- `OutputDebugString` Debugfunktion finden Sie unter "OutputDebugString" in der Platform SDK oder in MSDN.</span><span class="sxs-lookup"><span data-stu-id="94756-152">For information about the Win32 `OutputDebugString` debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94756-153">Im folgenden Codebeispiel wird das Ergebnis einer Funktion formatiert und verwendet die <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> -Methode, den ersten Teil der Nachricht zum Schreiben einer <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="94756-153">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="94756-154">Die in <see langword="OutputDebugString" /> und <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-154">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94756-155">Schreibt die Ausgabe in die <see langword="OutputDebugString" />-Funktion und die <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />-Methode, gefolgt von einem Wagenrücklauf und einem Zeilenvorschub (\r\n).</span>
          <span class="sxs-lookup">
            <span data-stu-id="94756-155">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method, followed by a carriage return and line feed (\r\n).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94756-156">Der Standardzeilenabschluss ist ein Wagenrücklauf, gefolgt von einem Zeilenvorschub (\r\n).</span><span class="sxs-lookup"><span data-stu-id="94756-156">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span>  
  
 <span data-ttu-id="94756-157">Informationen über die Win32- `OutputDebugString` Debugfunktion finden Sie im Platform SDK oder in MSDN.</span><span class="sxs-lookup"><span data-stu-id="94756-157">For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="94756-158">Diese Methode legt die <xref:System.Diagnostics.TraceListener.NeedIndent%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="94756-158">This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94756-159">Im folgenden Codebeispiel wird das Ergebnis einer Funktion formatiert und verwendet die <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> Methode, um den letzten Teil der Nachricht zum Schreiben einer <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="94756-159">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>