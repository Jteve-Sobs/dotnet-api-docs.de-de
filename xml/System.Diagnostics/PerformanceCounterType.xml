<Type Name="PerformanceCounterType" FullName="System.Diagnostics.PerformanceCounterType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a49a13d54e8b85df421f1f3f82d34f9f247beb96" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39886947" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PerformanceCounterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PerformanceCounterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PerformanceCounterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PerformanceCounterType" />
  <TypeSignature Language="F#" Value="type PerformanceCounterType = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt die Formel an, mit der die <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" />-Methode für eine <see cref="T:System.Diagnostics.PerformanceCounter" />-Instanz berechnet wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einige Indikatortypen stellen Rohdaten dar, während andere berechnete Werte darstellen, die auf eine oder mehrere indikatorproben basieren. Die folgenden Kategorien klassifiziert werden die Typen der verfügbaren Leistungsindikatoren.  
  
-   Durchschnitt: einen Wert im Laufe der Zeit zu messen und den Durchschnitt der letzten zwei Messungen anzuzeigen. Jede Durchschnittsindikator zugeordnet ist, ein Basisindikator, der die Anzahl der Samplings, die Beteiligten nachverfolgt.  
  
-   Unterschied: die letzte Messung des aus dem vorherigen Beispiel subtrahieren und die Differenz angezeigt, wenn er positiv ist; Wenn Sie negativ ist, zeigen sie NULL.  
  
-   Sofortige: der neuste Messwert angezeigt werden.  
  
-   Prozentsatz: die berechneten Werte als Prozentsatz anzuzeigen.  
  
-   Rate: eine zunehmende Anzahl von Ereignissen im Laufe der Zeit und teilen Sie die Änderung in der Count-Werte von der Änderung, sodass eine Rate der Aktivität angezeigt.  
  
 Wenn Stichproben von Leistungsindikatordaten, die über einen Leistungsindikator vom Typ, der durchschnittlich darstellt Rohdatenwerte für die Verwendung von Bedeutung treffen kann. Z. B. die Rohdaten-Indikator `NumberOfItems64` Daten, die relativ zufällig aus einem Beispiel, ist verfügbar machen. Die Formel für eine Berechnung des Durchschnitts der Werte, die der Zähler gibt wäre (X 0 + X 1 +... + X n) / n, wobei jedes X geht auf einer basiszählermessung.  
  
 Rate-Leistungsindikatoren sind ähnlich, aber nützlicher für Situationen, in denen die Geschwindigkeit erhöht, wie eine Ressource verwendet wird. Eine Formel, die schnell den Mittelwert berechnet wird ((X n -X 0) / (T n -T 0)) / Häufigkeit, wobei jedes X geht auf eine indikatorprobe und jede T i ist die Zeit, die die entsprechenden Stichprobe erfasst wurde. Das Ergebnis ist die durchschnittliche Nutzung pro Sekunde.  
  
> [!NOTE]
>  Sofern nicht anders angegeben, ist die Zeitbasis Sekunden.  
  
 Beim Instrumentieren von Anwendungen (erstellen und Schreiben von benutzerdefinierten Leistungsindikatoren), können Sie mit Leistungsindikatortypen arbeiten, die eine begleitende Basisindikator abhängen, die in den Berechnungen verwendet wird. Basiszähler muss unmittelbar auf den zugehörigen Zähler in der <xref:System.Diagnostics.CounterCreationDataCollection> Auflistung, die Ihre Anwendung verwendet. Die folgende Tabelle enthält die Basiszählertypen mit den entsprechenden Zähler aufgeführt.  
  
|Basisleistungsindikator-Typ|Leistungsindikatortypen|  
|-----------------------|-------------------------------|  
|`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|  
|`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|  
|`RawBase`|`RawFraction`|  
|`SampleBase`|`SampleFraction`|  
  
   
  
## Examples  
 Die folgenden Beispiele veranschaulichen einige der Zählertypen in der <xref:System.Diagnostics.PerformanceCounterType> Enumeration.  
  
 `AverageCount64`  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 `AverageTimer32`  
  
 [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CPP/averagetimer32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CS/averagetimer32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/VB/averagetimer32.vb#2)]  
  
 `ElapsedTime`  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 `NumberOfItems32`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CPP/numberofitems32.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CS/numberofitems32.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/VB/numberofitems32.vb#1)]  
  
 `NumberOfItems64`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CPP/numberofitems64.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CS/numberofitems64.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/VB/numberofitems64.vb#1)]  
  
 `SampleFraction`  
  
 [!code-csharp[PerformanceCounterType.SampleFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/CS/program.cs#1)]
 [!code-vb[PerformanceCounterType.SampleFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/VB/program.vb#1)]  
  
 `RateOfCountsPerSecond32`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CPP/rateofcountspersecond32.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CS/rateofcountspersecond32.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/VB/rateofcountspersecond32.vb#1)]  
  
 `RateOfCountsPerSecond64`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CPP/rateofcountspersecond64.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CS/rateofcountspersecond64.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/VB/rateofcountspersecond64.vb#1)]  
  
 `RawFraction`  
  
 [!code-cpp[PerformanceCounterType.RawFraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CPP/rawfraction.cpp#1)]
 [!code-csharp[PerformanceCounterType.RawFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CS/rawfraction.cs#1)]
 [!code-vb[PerformanceCounterType.RawFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RawFraction/VB/rawfraction.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
  </Docs>
  <Members>
    <Member MemberName="AverageBase">
      <MemberSignature Language="C#" Value="AverageBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageBase = int32(1073939458)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberSignature Language="VB.NET" Value="AverageBase" />
      <MemberSignature Language="C++ CLI" Value="AverageBase" />
      <MemberSignature Language="F#" Value="AverageBase = 1073939458" Usage="System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939458</MemberValue>
      <Docs>
        <summary>Ein Basiszähler, der für die Berechnung der Durchschnittswerte von Zeit oder Anzahl verwendet wird, z. B. <see langword="AverageTimer32" /> und <see langword="AverageCount64" />. Speichert den Nenner für die Berechnung eines Indikators, um "Zeit pro Operation" oder "Anzahl pro Operation" auszugeben.</summary>
      </Docs>
    </Member>
    <Member MemberName="AverageCount64">
      <MemberSignature Language="C#" Value="AverageCount64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageCount64 = int32(1073874176)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberSignature Language="VB.NET" Value="AverageCount64" />
      <MemberSignature Language="C++ CLI" Value="AverageCount64" />
      <MemberSignature Language="F#" Value="AverageCount64 = 1073874176" Usage="System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073874176</MemberValue>
      <Docs>
        <summary>Ein Durchschnittsindikator, der die durchschnittliche Anzahl der während einer Operation verarbeiteten Elemente anzeigt. Indikatoren dieses Typs zeigen das Verhältnis der verarbeiteten Elemente und der Anzahl der durchgeführten Operationen an. Dieses Verhältnis wird durch Vergleich der Anzahl der innerhalb des letzten Zeitintervalls verarbeiteten Elemente mit der Anzahl der in diesem Intervall durchgeführten Operationen berechnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1 -N 0) / (0 B-1 -B), wobei N-1 "und" N "0 Leistungsindikator-Messwerte und die B-1 und B 0 werden die entsprechenden `AverageBase` Werte. Daher den Zähler darstellt, die Anzahl der Elemente, die während des Abtastintervalls verarbeitet, und den Nenner darstellt, die Anzahl der Vorgänge, die während des Abtastintervalls abgeschlossen.  
  
 Indikatoren dieses Typs enthalten PhysicalDisk\ durchschn. Bytes/Übertragung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageTimer32">
      <MemberSignature Language="C#" Value="AverageTimer32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageTimer32 = int32(805438464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberSignature Language="VB.NET" Value="AverageTimer32" />
      <MemberSignature Language="C++ CLI" Value="AverageTimer32" />
      <MemberSignature Language="F#" Value="AverageTimer32 = 805438464" Usage="System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>805438464</MemberValue>
      <Docs>
        <summary>Ein Durchschnittsindikator, der die durchschnittliche Dauer eines Prozesses oder einer Operation angibt. Indikatoren dieses Typs geben das Verhältnis der Gesamtdauer des Messintervalls und der Anzahl der während dieser Zeit durchgeführten Prozesse oder Operationen an. Dieser Indikatortyp misst die Zeit in Ticks der Systemuhr.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: ((N 1 -N 0) / f) / (0 B-1 -B), N-1 "und" N "0 Leistungsindikator-Messwerte sind, werden die entsprechenden B-1 und B 0 `AverageBase` Werte und F ist die Anzahl der Ticks pro Sekunde. Der Wert von F wird die Gleichung umgerechnet, damit das Ergebnis in Sekunden angezeigt werden kann. Daher den Zähler darstellt, die Anzahl der Ticks, die während des letzten Stichprobenintervalls gezählt, F stellt die Häufigkeit der Teilstriche und den Nenner darstellt, die Anzahl der Vorgänge, die während des letzten Stichprobenintervalls abgeschlossen wurden.  
  
 Indikatoren dieses Typs enthalten PhysicalDisk\ durchschn. Sek./Übertragung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta32">
      <MemberSignature Language="C#" Value="CounterDelta32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta32 = int32(4195328)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberSignature Language="VB.NET" Value="CounterDelta32" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta32" />
      <MemberSignature Language="F#" Value="CounterDelta32 = 4195328" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195328</MemberValue>
      <Docs>
        <summary>Ein Differenzindikator, der die Änderung des gemessenen Attributs zwischen den beiden letzten Messintervallen anzeigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: N-1 -N 0 (null), in dem N-1 "und" N "0 Leistungsindikator-Messwerte darstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta64">
      <MemberSignature Language="C#" Value="CounterDelta64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta64 = int32(4195584)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberSignature Language="VB.NET" Value="CounterDelta64" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta64" />
      <MemberSignature Language="F#" Value="CounterDelta64 = 4195584" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195584</MemberValue>
      <Docs>
        <summary>Ein Differenzindikator, der die Änderung des gemessenen Attributs zwischen den beiden letzten Messintervallen anzeigt. Er unterscheidet sich vom <see langword="CounterDelta32" />-Indikatortyp nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: N-1 -N 0 (null), in dem N-1 "und" N "0 Leistungsindikator-Messwerte darstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiBase">
      <MemberSignature Language="C#" Value="CounterMultiBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiBase = int32(1107494144)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberSignature Language="VB.NET" Value="CounterMultiBase" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiBase" />
      <MemberSignature Language="F#" Value="CounterMultiBase = 1107494144" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1107494144</MemberValue>
      <Docs>
        <summary>Ein Basisindikator, der die Anzahl der gemessenen Elemente angibt. Er wird als Nenner bei Durchschnittsberechnungen von Zeitwerten für mehrere gleichartige Elemente verwendet. Wird mit <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" /> und <see langword="CounterMultiTimer100NsInverse" /> verwendet.</summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer">
      <MemberSignature Language="C#" Value="CounterMultiTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer = int32(574686464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer" />
      <MemberSignature Language="F#" Value="CounterMultiTimer = 574686464" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>574686464</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls darstellt. Da der Zähler die Aktivitätsdauer von gleichzeitig aktiven Komponenten angibt, kann das prozentuale Ergebnis 100 Prozent überschreiten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Leistungsindikator ist ein Multitimer. Multitimer sammeln Daten von mehreren Instanzen einer Komponente, z. B. von Prozessoren oder Festplatten. Dieser Indikatortyp unterscheidet sich von `CounterMultiTimer100Ns` dadurch, dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Ticks des Systemzeitgebers gemessen wird.  
  
 Formel: ((N 1 - N 0) / (D 1 - D 0)) X 100 von B, wobei N-1 "und" N "0 Leistungsindikator-Messwerte sind, D 1 und D 0 die entsprechenden Messwerten der Zeit in Ticks des Systemzeitgebers werden und die Variable B gibt die Anzahl die Basis für die überwachten Komponenten (ein Bas e-Zähler des Typs `CounterMultiBase`). Der Zähler wird daher die Teile des Abtastintervalls an, in dem die überwachten Komponenten aktiv waren, und der Nenner der Gesamtdauer des Messintervalls, darstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100Ns">
      <MemberSignature Language="C#" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100Ns = int32(575735040)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100Ns = 575735040" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>575735040</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls anzeigt. Die Zeit wird dabei in Einheiten von 100 Nanosekunden (ns) gemessen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indikatortyp ist ein Multitimer. Multitimer sind zur Überwachung von mehreren Instanzen einer Komponente bestimmt, z. B. von Prozessoren oder Festplatten.  
  
 Formel: ((N 1 - N 0) / (D 1 - D 0)) X 100 von B, in dem N-1 "und" N "0 werden die Leistungsindikator-Messwerte, D-1" und "D 0 die entsprechende Zeit Messwerte in 100-Nanosekunden-Einheiten und die Variable B gibt die Anzahl die Basis für die überwachten Komponenten (Ein Basisindikator, des Typs  `CounterMultiBase`). Der Zähler wird daher die Teile des Abtastintervalls an, in dem die überwachten Komponenten aktiv waren, und der Nenner der Gesamtdauer des Messintervalls, darstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100NsInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100NsInverse = int32(592512256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100NsInverse = 592512256" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>592512256</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls anzeigt. Die Zeit wird bei diesem Indikatortyp in Einheiten von 100 Nanosekunden (ns) gemessen. Die Aktivitätszeit wird ermittelt, indem die Zeit gemessen wird, in der die Komponenten nicht aktiv waren, und das Ergebnis vom Produkt von 100 Prozent mit der Anzahl der überwachten Objekte subtrahiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indikatortyp ist ein inverser Multitimer. Multitimer sind zur Überwachung von mehreren Instanzen einer Komponente bestimmt, z. B. von Prozessoren oder Festplatten. Inverse Indikatoren messen die Zeit, die eine Komponente nicht aktiv ist, und leiten die Aktivitätsdauer aus der Messung der Inaktivitätsdauer ab  
  
 Formel: (B - ((N 1 - N 0) / (D 1 - D 0))) X 100, wenn der Nenner der Gesamtdauer des Messintervalls, der Zähler stellt die Zeit während des Intervalls bei überwachte Komponenten inaktiv waren, und B stellt dar, die Anzahl der Komponenten wird von m Onitored, verwenden ein Basisindikator vom Typ `CounterMultiBase`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimerInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimerInverse = int32(591463680)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimerInverse = 591463680" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>591463680</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der die Aktivitätsdauer mindestens einer Komponente als prozentualen Teil der Gesamtdauer des Messintervalls anzeigt. Die Aktivitätszeit wird ermittelt, indem die Zeit gemessen wird, in der die Komponenten nicht aktiv waren, und das Ergebnis vom Produkt von 100 Prozent mit der Anzahl der überwachten Objekte subtrahiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indikatortyp ist ein inverser Multitimer. Multitimer überwachen mehrere Instanzen einer Komponente, z. B. Prozessoren oder Festplatten. Inverse Indikatoren messen die Zeit, die eine Komponente nicht aktiv ist, und leiten die Aktivitätsdauer aus dieser Messung.  
  
 Dieser Indikator unterscheidet sich von `CounterMultiTimer100NsInverse` dadurch, dass die Zeit nicht in Einheiten von 100 Nanosekunden, sondern in Ticks des Systemzeitgebers gemessen wird.  
  
 Formel: (B - ((N 1 - N 0) / (D 1 - D 0))) X 100, wenn der Nenner der Gesamtdauer des Messintervalls, der Zähler stellt die Zeit während des Intervalls bei überwachte Komponenten inaktiv waren, und B stellt, die Anzahl der Komponenten dar wird überwacht, mit der ein Basisindikator vom Typ `CounterMultiBase`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterTimer">
      <MemberSignature Language="C#" Value="CounterTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimer = int32(541132032)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberSignature Language="VB.NET" Value="CounterTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterTimer" />
      <MemberSignature Language="F#" Value="CounterTimer = 541132032" Usage="System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>541132032</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der die mittlere Aktivitätsdauer einer Komponente als prozentualen Anteil der Gesamtdauer des Messintervalls anzeigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1 - N 0) / (D 1 - D 0), wobei N-1 "und" N "0 Leistungsindikator-Messwerte und D-1" und "D 0 werden die entsprechenden Zeit Messwerten. Der Zähler wird daher die Teile des Abtastintervalls an, in dem die überwachten Komponenten aktiv waren, und der Nenner der Gesamtdauer des Messintervalls, darstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterTimerInverse">
      <MemberSignature Language="C#" Value="CounterTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimerInverse = int32(557909248)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterTimerInverse" />
      <MemberSignature Language="F#" Value="CounterTimerInverse = 557909248" Usage="System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>557909248</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der den durchschnittlichen prozentualen Anteil der während eines Messintervalls beobachteten Aktivitätsdauer anzeigt. Der Wert dieser Indikatoren wird berechnet, indem der prozentuale Anteil der Aktivitätsdauer des Dienstes von 100 Prozent subtrahiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein inverser Indikatortyp. Inverse Indikatoren messen die Zeit, die eine Komponente ist aktiv und leiten die Aktivitätsdauer aus dieser Messung. Dieser Indikatortyp ist identisch mit `CounterTimer100NsInv` mit dem Unterschied, dass die Zeit in Ticks des Systemzeitgebers und nicht in Einheiten von 100 Nanosekunden gemessen.  
  
 Formel: (1 – ((N 1 - N 0) / (D 1 - D 0))) X 100, den Zähler, in dem die Zeit während des Intervalls, darstellt Wenn die überwachten Komponenten inaktiv waren, und der Nenner der Gesamtdauer des Messintervalls.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval32">
      <MemberSignature Language="C#" Value="CountPerTimeInterval32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval32 = int32(4523008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval32" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval32" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval32 = 4523008" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523008</MemberValue>
      <Docs>
        <summary>Ein Durchschnittsindikator, der die durchschnittliche Länge einer Warteschlange für eine Ressource über einen Zeitraum wiedergibt. Er zeigt den Quotienten aus der Differenz der während der letzten zwei Messintervalle beobachteten Warteschlangenlängen und der Dauer des Intervalls an. Dieser Typ eines Indikators wird i. d. R. zum Überwachen der Anzahl der Elemente verwendet, die sich in der Warteschlange oder im Wartezustand befinden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1 - N 0) / (D 1 - D 0), in dem der Zähler gibt die Anzahl der Elemente in der Warteschlange und den Nenner darstellt, die Zeit verstrichen während des letzten Stichprobenintervalls.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval64">
      <MemberSignature Language="C#" Value="CountPerTimeInterval64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval64 = int32(4523264)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval64" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval64" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval64 = 4523264" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523264</MemberValue>
      <Docs>
        <summary>Ein Durchschnittsindikator, der die durchschnittliche Länge einer Warteschlange für eine Ressource über einen Zeitraum wiedergibt. Zähler dieses Typs zeigen den Quotienten aus der Differenz der während der letzten zwei Messintervalle beobachteten Warteschlangenlängen und der Dauer des Intervalls an. Dieser Indikatortyp unterscheidet sich von <see langword="CountPerTimeInterval32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können. Dieser Typ eines Indikators wird i. d. R. zum Überwachen umfangreicher oder sehr zahlreicher Elemente verwendet, die sich in der Warteschlange oder im Wartezustand befinden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1 - N 0) / (D 1 - D 0), in dem der Zähler gibt die Anzahl der Elemente in einer Warteschlange und den Nenner darstellt, die Zeit verstrichen während des Abtastintervalls.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElapsedTime">
      <MemberSignature Language="C#" Value="ElapsedTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType ElapsedTime = int32(807666944)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberSignature Language="VB.NET" Value="ElapsedTime" />
      <MemberSignature Language="C++ CLI" Value="ElapsedTime" />
      <MemberSignature Language="F#" Value="ElapsedTime = 807666944" Usage="System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>807666944</MemberValue>
      <Docs>
        <summary>Ein Differenzzeitgeber, der die Gesamtzeit zwischen dem Startzeitpunkt der Komponente oder des Prozesses und dem Zeitpunkt der Berechnung dieses Werts anzeigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (D 0 - N 0) / F, wobei D 0 die aktuelle Uhrzeit darstellt, das N 0 stellt die Zeit, die das Objekt wurde gestartet und F der Anzahl der Zeiteinheiten, die pro Sekunde darstellt. Der Wert von F wird die Gleichung umgerechnet, damit das Ergebnis in Sekunden angezeigt werden kann.  
  
 Indikatoren dieses Typs enthalten Systembetriebszeit System\.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems32">
      <MemberSignature Language="C#" Value="NumberOfItems32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems32 = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems32" />
      <MemberSignature Language="F#" Value="NumberOfItems32 = 65536" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für Elemente oder Operationen zu verwalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: keine. Durchschnittlich wird nicht angezeigt, aber die unformatierten Daten zeigt, wie sie gesammelt werden.  
  
 Indikatoren dieses Typs enthalten Speicher\Verfügbare Bytes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems64">
      <MemberSignature Language="C#" Value="NumberOfItems64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems64 = int32(65792)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems64" />
      <MemberSignature Language="F#" Value="NumberOfItems64 = 65792" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65792</MemberValue>
      <Docs>
        <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für eine sehr große Anzahl von Elementen oder Operationen zu verwalten. Er unterscheidet sich von <see langword="NumberOfItems32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: keine. Durchschnittlich wird nicht angezeigt, aber die unformatierten Daten zeigt, wie sie gesammelt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX32">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX32 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX32 = 0" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert im Hexadezimalformat anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für Elemente oder Operationen zu verwalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: keine. Durchschnittlich wird nicht angezeigt, aber die unformatierten Daten zeigt, wie sie gesammelt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX64">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX64 = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX64 = 256" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Ein unmittelbarer Indikator, der den zuletzt beobachteten Wert anzeigt. Wird z. B. verwendet, um einen einfachen Zähler für eine sehr große Anzahl von Elementen oder Operationen zu verwalten. Er unterscheidet sich von <see langword="NumberOfItemsHEX32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten zu können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: keine. Durchschnittlich wird nicht angezeigt, aber die unformatierten Daten zeigt, wie sie gesammelt werden  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond32">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond32 = int32(272696320)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond32 = 272696320" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696320</MemberValue>
      <Docs>
        <summary>Ein Differenzindikator, der die mittlere Anzahl der pro Sekunde des Messintervalls durchgeführten Operationen anzeigt. Indikatoren dieses Typs messen die Zeit in Ticks der Systemuhr.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1 - N 0) / ((D 1-d 0) / F), wobei N-1 "und" N "0 Leistungsindikator-Messwerte, D-1" und "D 0 die entsprechende Zeit Messwerte werden darstellen und F für die Anzahl der Ticks pro Sekunde. Daher der Zähler gibt die Anzahl der Vorgänge, die während des letzten Stichprobenintervalls, der als Nenner darstellt, die die Anzahl der Ticks während des letzten Stichprobenintervalls verstrichene und F ist die Tickfrequenz. Der Wert von F wird die Gleichung umgerechnet, damit das Ergebnis in Sekunden angezeigt werden kann.  
  
 Indikatoren dieses Typs enthalten System\ Datei Lesevorgänge/s an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond64">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond64 = int32(272696576)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond64 = 272696576" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696576</MemberValue>
      <Docs>
        <summary>Ein Differenzindikator, der die mittlere Anzahl der pro Sekunde des Messintervalls durchgeführten Operationen anzeigt. Indikatoren dieses Typs messen die Zeit in Ticks der Systemuhr. Dieser Indikatortyp unterscheidet sich von <see langword="RateOfCountsPerSecond32" /> nur dadurch, dass er größere Felder verwendet, um größere Werte verarbeiten und eine große Anzahl von Elementen oder Operationen pro Sekunde verfolgen zu können, z. B. eine Byte-Übertragungsrate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1 - N 0) / ((D 1-d 0) / F), wobei N-1 "und" N "0 Leistungsindikator-Messwerte, D-1" und "D 0 die entsprechende Zeit Messwerte werden darstellen und F für die Anzahl der Ticks pro Sekunde. Daher der Zähler gibt die Anzahl der Vorgänge, die während des letzten Stichprobenintervalls, der als Nenner darstellt, die die Anzahl der Ticks während des letzten Stichprobenintervalls verstrichene und F ist die Tickfrequenz. Der Wert von F wird die Gleichung umgerechnet, damit das Ergebnis in Sekunden angezeigt werden kann.  
  
 Indikatoren dieses Typs enthalten System\ Datei gelesene Bytes/s an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawBase">
      <MemberSignature Language="C#" Value="RawBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawBase = int32(1073939459)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberSignature Language="VB.NET" Value="RawBase" />
      <MemberSignature Language="C++ CLI" Value="RawBase" />
      <MemberSignature Language="F#" Value="RawBase = 1073939459" Usage="System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939459</MemberValue>
      <Docs>
        <summary>Ein Basisindikator, in dem der Nenner eines Indikators gespeichert wird, der einen arithmetischen Bruch darstellt. Stellen Sie sicher, dass dieser Wert größer als 0 ist, bevor Sie ihn als Nenner in einer <see langword="RawFraction" />-Wertberechnung verwenden.</summary>
      </Docs>
    </Member>
    <Member MemberName="RawFraction">
      <MemberSignature Language="C#" Value="RawFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawFraction = int32(537003008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberSignature Language="VB.NET" Value="RawFraction" />
      <MemberSignature Language="C++ CLI" Value="RawFraction" />
      <MemberSignature Language="F#" Value="RawFraction = 537003008" Usage="System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>537003008</MemberValue>
      <Docs>
        <summary>Ein unmittelbarer Prozentindikator, der das Verhältnis einer Teilmenge zur zugehörigen Menge in Prozent anzeigt. Es kann z. B. die Anzahl der auf einer Festplatte verwendeten Bytes mit der Gesamtzahl der Bytes auf der Festplatte verglichen werden. Indikatoren dieses Typs zeigen keinen durchschnittlichen Wert über eine Zeitspanne an, sondern den aktuellen Prozentwert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (0-N / D 0) X 100, D 0, in denen ein gemessenes Attribut darstellt (Ein Basisindikator, des Typs mit `RawBase`) und N 0 eine Komponente dieses Attributs darstellt.  
  
 Indikatoren dieses Typs enthalten Paging-Datei\\% Belegung (%).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleBase">
      <MemberSignature Language="C#" Value="SampleBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleBase = int32(1073939457)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberSignature Language="VB.NET" Value="SampleBase" />
      <MemberSignature Language="C++ CLI" Value="SampleBase" />
      <MemberSignature Language="F#" Value="SampleBase = 1073939457" Usage="System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939457</MemberValue>
      <Docs>
        <summary>Ein Basisindikator, der die Anzahl der Samplingabtastungen speichert und als Nenner der Samplingbruchzahl verwendet wird. Die Samplingbruchzahl ist die Anzahl der Messungen, die für eine Messabtastung 1 (oder <see langword="true" />) ergeben haben. Stellen Sie sicher, dass dieser Wert größer als 0 (null) ist, bevor Sie ihn als Nenner in einer Berechnung von <see langword="SampleFraction" /> verwenden.</summary>
      </Docs>
    </Member>
    <Member MemberName="SampleCounter">
      <MemberSignature Language="C#" Value="SampleCounter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleCounter = int32(4260864)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberSignature Language="VB.NET" Value="SampleCounter" />
      <MemberSignature Language="C++ CLI" Value="SampleCounter" />
      <MemberSignature Language="F#" Value="SampleCounter = 4260864" Usage="System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4260864</MemberValue>
      <Docs>
        <summary>Ein Durchschnittsindikator, der die durchschnittliche Anzahl der in einer Sekunde durchgeführten Operationen anzeigt. Bei einem Indikator dieses Typs ergibt eine Samplingabtastung entweder 1 oder 0. Bei den Indikatordaten handelt es sich um die Anzahl der gemessenen Einsen. Die Zeiteinheit ist dabei ein Tick des Systemzeitgebers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1-N 0) / ((D 1 – D 0) / F), in dem der Zähler (N) stellt die Anzahl der durchgeführten Operationen, den Nenner (D) darstellt, verstrichene Zeit in Ticks des Systemzeitgebers und F die Anzahl von Ticks, die pro Sekunde darstellt. F wird die umgerechnet, damit das Ergebnis in Sekunden angezeigt werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFraction">
      <MemberSignature Language="C#" Value="SampleFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleFraction = int32(549585920)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberSignature Language="VB.NET" Value="SampleFraction" />
      <MemberSignature Language="C++ CLI" Value="SampleFraction" />
      <MemberSignature Language="F#" Value="SampleFraction = 549585920" Usage="System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>549585920</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der das durchschnittliche Verhältnis der Anzahl der Erfolge und der Gesamtzahl der Operationen während der letzten zwei Messintervalle angibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: ((N 1 - N 0) / (D 1 - D 0)) X 100, in dem der Zähler gibt die Anzahl der erfolgreichen Vorgänge während des letzten Stichprobenintervalls und den Nenner darstellt, die Änderung in die Anzahl aller Vorgänge (des Typs gemessen), während das Beispiel abgeschlossen Intervall, mithilfe von Leistungsindikatoren vom Typ `SampleBase`.  
  
 Indikatoren dieses Typs enthalten Lesetreffer %.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timer100Ns">
      <MemberSignature Language="C#" Value="Timer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100Ns = int32(542180608)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberSignature Language="VB.NET" Value="Timer100Ns" />
      <MemberSignature Language="C++ CLI" Value="Timer100Ns" />
      <MemberSignature Language="F#" Value="Timer100Ns = 542180608" Usage="System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>542180608</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der die Aktivitätsdauer einer Komponente als prozentualen Anteil der Gesamtdauer des Messintervalls darstellt. Die Zeit wird dabei in Einheiten von 100 Nanosekunden (ns) gemessen. Zeiger dieses Typs sind zur Messung der Aktivität einer einzelnen Komponente vorgesehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formel: (N 1 - N 0) / (D 1 - D 0) X 100, wobei der Zähler darstellt, die Teile des Abtastintervalls an, in dem die überwachten Komponenten aktiv waren, und es wird der Nenner der Gesamtdauer des Messintervalls.  
  
 Indikatoren dieses Typs enthalten prozess\% % Benutzerzeit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timer100NsInverse">
      <MemberSignature Language="C#" Value="Timer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100NsInverse = int32(558957824)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="Timer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="Timer100NsInverse" />
      <MemberSignature Language="F#" Value="Timer100NsInverse = 558957824" Usage="System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>558957824</MemberValue>
      <Docs>
        <summary>Ein Prozentindikator, der den durchschnittlichen prozentualen Anteil der während eines Messintervalls beobachteten Aktivitätsdauer anzeigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein inverser Indikator. Indikatoren dieses Typs berechnet wird durch messen die Zeit, die der Dienst nicht aktiv war, und den Anteil der Aktivitätsdauer von 100 Prozent subtrahiert wird.  
  
 Formel: (1 – ((N 1 - N 0) / (D 1 - D 0))) X 100, den Zähler, in dem die Zeit während des Intervalls, darstellt Wenn die überwachten Komponenten inaktiv waren, und der Nenner der Gesamtdauer des Messintervalls.  
  
 Indikatoren dieses Typs enthalten prozess\% Prozessorzeit (%).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>