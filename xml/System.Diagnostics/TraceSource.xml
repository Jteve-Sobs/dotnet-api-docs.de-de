<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02f3ebcb2dc70f7422883745d53ce585287d28b1" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77228171" /></Metadata><TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Gruppe von Methoden und Eigenschaften bereit, mit denen Anwendungen die Ausführung von Code verfolgen und Ablaufverfolgungsmeldungen ihrer jeweiligen Quelle zuordnen können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource>-Klasse wird von Anwendungen verwendet, um Ablaufverfolgungen zu erzeugen, die der Anwendung zugeordnet werden können. <xref:System.Diagnostics.TraceSource> stellt Ablaufverfolgungsmethoden bereit, mit denen Sie Ereignisse und Daten einfach verfolgen und Ablaufverfolgungen zu Informationszwecken ausgeben können. Die Ablauf Verfolgungs Ausgabe von <xref:System.Diagnostics.TraceSource> kann durch Einstellungen der Konfigurationsdatei gesteuert werden. Die Konfigurationsdatei befindet sich im Ordner mit der ausführbaren Datei der Anwendung und enthält den Namen der Anwendung, der die Dateinamenerweiterung. config hinzugefügt wurde. Der Name der Konfigurationsdatei für "TraceSourceSample. exe" lautet beispielsweise "TraceSourceSample. exe. config". Die Konfigurationsdatei kann verwendet werden, um zu bestimmen, wohin die Ablauf Verfolgungs Informationen gesendet werden sollen, und für welche Aktivitätsstufen eine Ablauf Verfolgung durchgeführt werden soll. Das folgende Beispiel zeigt den Inhalt einer Beispiel Anwendungs Konfigurationsdatei.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 Die <xref:System.Diagnostics.TraceSource>-Klasse wird durch den Namen einer Quelle, in der Regel der Name der Anwendung, identifiziert.  Die Ablauf Verfolgungs Meldungen, die von einer bestimmten Komponente stammen, können von einer bestimmten Ablauf Verfolgungs Quelle initiiert werden, sodass alle Nachrichten, die von dieser Komponente stammen, problemlos identifiziert werden können.  
  
 <xref:System.Diagnostics.TraceSource> definiert Ablauf Verfolgungsmethoden, bietet aber keinen spezifischen Mechanismus zum Erstellen und Speichern von Ablauf Verfolgungs Daten. Die Ablauf Verfolgungs Daten werden von Ablaufverfolgungslistenern erstellt, bei denen es sich um Plug-ins handelt, die von Ablauf Verfolgungs Quellen  
  
> [!NOTE]
>  Sie sollten die Ablauf Verfolgungsmethoden während der Finalisierung nicht aufzurufen. Dies kann dazu führen, dass ein <xref:System.ObjectDisposedException> ausgelöst wird.  
  
 Sie können das Ziel der Ablauf Verfolgungs Ausgabe anpassen, indem Sie <xref:System.Diagnostics.TraceListener> Instanzen zu oder aus der in der <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType>-Eigenschaft gespeicherten Auflistung hinzufügen oder daraus entfernen. Standardmäßig wird die Ausgabe der Ablauf Verfolgung mithilfe einer Instanz der <xref:System.Diagnostics.DefaultTraceListener>-Klasse erzeugt. Das vorangehende Beispiel für eine Konfigurationsdatei veranschaulicht das Entfernen des <xref:System.Diagnostics.DefaultTraceListener> und das Hinzufügen einer <xref:System.Diagnostics.ConsoleTraceListener>, um die Ausgabe der Ablauf Verfolgung für die Ablauf Verfolgungs Quelle zu Weitere Informationen finden Sie unter [&lt;Listener&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) und [&lt;sharedlistener&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).  
  
> [!NOTE]
>  Das Hinzufügen eines Ablaufverfolgungslistener zur <xref:System.Diagnostics.TraceSource.Listeners%2A> Auflistung kann dazu führen, dass während der Ablauf Verfolgung eine Ausnahme ausgelöst wird, wenn eine vom Ablaufverfolgungslistener verwendete Ressource Die Bedingungen und die ausgelöste Ausnahme hängen vom Ablaufverfolgungslistener ab und können in diesem Thema nicht aufgelistet werden. Es kann sinnvoll sein, Aufrufe an die <xref:System.Diagnostics.TraceSource> Methoden in `try`/`catch` Blöcke zu platzieren, um Ausnahmen von Ablaufverfolgungslistenern zu erkennen und zu behandeln.  
  
 Die <xref:System.Diagnostics.SourceSwitch>-Klasse bietet die Möglichkeit, die Ablauf Verfolgungs Ausgabe dynamisch zu steuern. Das vorangehende Beispiel für eine Konfigurationsdatei zeigt, wie Sie die Ablauf Verfolgung von einer Ablauf Verfolgungs Quelle ausschalten und die Ebene steuern können, auf der die Ablauf Verfolgung auftritt.  Sie können den Wert des Quell Schalters ändern, ohne die Anwendung neu zu kompilieren. Informationen zum Verwenden der Konfigurationsdatei zum Festlegen eines Schalters finden Sie unter <xref:System.Diagnostics.Switch> und Gewusst [wie: erstellen, initialisieren und Konfigurieren von Ablauf Verfolgungs Schaltern](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md).  
  
> [!NOTE]
>  Wenn Sie eine Konfigurationsdatei ändern, während eine Anwendung ausgeführt wird, muss die Anwendung angehalten und neu gestartet werden, oder die <xref:System.Diagnostics.Trace.Refresh%2A>-Methode muss aufgerufen werden, bevor die neuen Einstellungen wirksam werden.  
  
 Die <xref:System.Diagnostics.TraceEventType>-Enumeration wird verwendet, um den Ereignistyp der Ablauf Verfolgungs Meldung zu definieren. Ablauf Verfolgungs Filter verwenden die <xref:System.Diagnostics.TraceEventType>, um zu bestimmen, ob ein Ablaufverfolgungslistener die Ablauf Verfolgungs Meldung  
  
 Die Ablaufverfolgungslistener können optional über einen Ablauf Verfolgungs Filter eine zusätzliche Schicht filtern.  Wenn einem Ablaufverfolgungslistener ein Filter zugeordnet ist, ruft der Listener die <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>-Methode für diesen Filter auf, um zu bestimmen, ob die Ablauf Verfolgungs Informationen erzeugt werden sollen.  
  
 Die Ablaufverfolgungslistener verwenden die Werte der <xref:System.Diagnostics.Trace> Klasseneigenschaften <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>und <xref:System.Diagnostics.Trace.AutoFlush%2A>, um die Ablauf Verfolgungs Ausgabe zu formatieren. Sie können die Attribute der Konfigurationsdatei verwenden, um die Eigenschaften <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>und <xref:System.Diagnostics.Trace.AutoFlush%2A> festzulegen. Im folgenden Beispiel wird die <xref:System.Diagnostics.Trace.AutoFlush%2A>-Eigenschaft auf `false` und die <xref:System.Diagnostics.Trace.IndentSize%2A>-Eigenschaft auf 3 festgelegt.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Diagnostics.TraceSource>-Klasse, um Ablauf Verfolgungen an Listener weiterzuleiten.  Im Beispiel wird auch die Verwendung von Switch und Filtern veranschaulicht.  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist threadsicher.</threadsafe>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/trace-debug/index.md">Schema für Ablaufverfolgungs- und Debugeinstellungen</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Diagnostics.TraceSource" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Quelle (i. d. R. der Name der Anwendung).</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSource" />-Klasse, wobei der angegebene Namen der Quelle verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Quellname wird verwendet, um Ablauf Verfolgungen zu identifizieren. Sie wird von einem <xref:System.Diagnostics.SourceFilter> verwendet, um zu bestimmen, ob ein Ablaufverfolgungslistener die Ablauf Verfolgung erzeugt Es wird empfohlen, den Namen der Anwendung als Quellnamen zu verwenden.  
  
> [!NOTE]
>  Es ist nicht erforderlich, für jede Ablauf Verfolgungs Anforderung eine neue <xref:System.Diagnostics.TraceSource>-Instanz zu erstellen. Erstellen Sie eine <xref:System.Diagnostics.TraceSource> Instanz, und verwenden Sie Sie für alle Ablauf Verfolgungs Anforderungen für die Anwendung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie der <xref:System.Diagnostics.TraceSource.%23ctor%2A>-Konstruktor verwendet wird, um ein neues <xref:System.Diagnostics.TraceSource>-Objekt zu erstellen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> ist eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Quelle, i. d. R. der Name der Anwendung.</param>
        <param name="defaultLevel">Eine bitweise Kombination der Enumerationswerte, die die Standardebene der Quelle angibt, auf der die Ablaufverfolgung durchgeführt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSource" />-Klasse, wobei der angegebene Name der Quelle und die Standardebene der Quelle verwendet werden, auf der die Ablaufverfolgung durchgeführt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Quellname wird verwendet, um Ablauf Verfolgungen zu identifizieren. Sie kann von einem <xref:System.Diagnostics.SourceSwitch> verwendet werden, um zu bestimmen, ob die Ablauf Verfolgung stattfindet, und von einem <xref:System.Diagnostics.SourceFilter>, um zu bestimmen, ob die Ablauf Verfolgung erzeugt werden soll Die Standard-Quell Ebene wird von einem <xref:System.Diagnostics.EventTypeFilter> verwendet, um zu bestimmen, ob die Ablauf Verfolgung basierend auf der Quell Ebene der Nachricht erfolgen soll, die verfolgt werden soll.  
  
> [!NOTE]
>  Es ist nicht erforderlich, für jede Ablauf Verfolgungs Anforderung eine neue <xref:System.Diagnostics.TraceSource>-Instanz zu erstellen. Erstellen Sie eine <xref:System.Diagnostics.TraceSource> Instanz, und verwenden Sie Sie für alle Ablauf Verfolgungs Anforderungen für die Anwendung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> ist eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierten Schalterattribute ab, die in der Anwendungskonfigurationsdatei definiert sind.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.StringDictionary" />, das die benutzerdefinierten Attribute für den Ablaufverfolgungsschalter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Attributes%2A>-Eigenschaft identifiziert die benutzerdefinierten Attribute, auf die in der Konfigurationsdatei der Anwendung verwiesen wird. Benutzerdefinierte Attribute, auf die nicht verwiesen wird, werden nicht aufgelistet. Klassen, die von der <xref:System.Diagnostics.TraceSource>-Klasse erben, können benutzerdefinierte Attribute hinzufügen, indem Sie die <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType>-Methode überschreiben und ein Zeichen folgen Array mit benutzerdefinierten Attributnamen  
  
 Im folgenden finden Sie ein Beispiel für ein Trace-Quell Element, das das benutzerdefinierte Attribut `SecondTraceSourceAttribute`angibt:  
  
```xml  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie die benutzerdefinierten Attribute für eine <xref:System.Diagnostics.TraceSource>angezeigt werden.  Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt alle Ablaufverfolgungslistener in der Auflistung der Ablaufverfolgungslistener.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Close%2A>-Methode ruft die <xref:System.Diagnostics.TraceListener.Close%2A>-Methode jedes Ablaufverfolgungslistener in der <xref:System.Diagnostics.TraceSource.Listeners%2A> Auflistung auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie Sie die <xref:System.Diagnostics.TraceSource.Close%2A>-Methode verwenden können, um alle Listener in der Auflistung zu schließen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Ablaufverfolgungslistener aus der Auflistung der Ablaufverfolgungslistener.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Flush%2A>-Methode ruft die <xref:System.Diagnostics.TraceListener.Flush%2A>-Methode jedes Ablaufverfolgungslistener in der <xref:System.Diagnostics.TraceSource.Listeners%2A> Auflistung auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie Sie die <xref:System.Diagnostics.TraceSource.Flush%2A>-Methode verwenden können, um alle Listener in der Auflistung zu leeren. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected virtual string[] GetSupportedAttributes ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSupportedAttributes () As String()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die von der Ablaufverfolgungsquelle unterstützten benutzerdefinierten Attribute ab.</summary>
        <returns>Ein Zeichenfolgenarray, das die von der Ablaufverfolgungsquelle unterstützten benutzerdefinierten Attribute benennt, oder <see langword="null" />, wenn es keine benutzerdefinierten Attribute gibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standard Implementierung für <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> gibt `null`zurück.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Überschreibung der <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A>-Methode, um die benutzerdefinierten Attribute für die `MyTraceSource`-Klasse zu identifizieren.  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Diagnostics.TraceSource" />-Klasse oder einer abgeleiteten Klasse erben, können Sie die <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />-Methode überschreiben, um benutzerdefinierte Attribute für Ihre Klasse bereitzustellen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der Ablaufverfolgungslistener für die Ablaufverfolgungsquelle ab.</summary>
        <value>Eine <see cref="T:System.Diagnostics.TraceListenerCollection" />, die die aktiven Ablaufverfolgungslistener enthält, die der Quelle zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie auf die Ablaufverfolgungslistener zugreifen und diese ausführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Ablaufverfolgungsquelle ab.</summary>
        <value>Der Name der Ablaufverfolgungsquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name wird durch den `name`-Parameter festgelegt, der an den-Konstruktor übergeben wird. Sie können auf die Ablauf Verfolgungs Quelle verweisen, indem Sie das `name`-Attribut in der Konfigurationsdatei verwenden.  
  
 Das folgende XML-Element zeigt, wie in der Konfigurationsdatei auf eine Ablauf Verfolgungs Quelle verwiesen wird.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie eine Ablauf Verfolgungs Quelle im konstruktorbefehl als Name bezeichnet wird.  Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Quellschalters ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Diagnostics.SourceSwitch" />-Objekt, das den Wert des Quellschalters darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Switch%2A>-Eigenschaft ermöglicht das Filtern von Nachrichten, bevor die Ablauf Verfolgungs Quelle die Listener aufruft.  
  
 Der-Schalter wird verwendet, um zu überprüfen, ob Ablauf Verfolgungs Aufrufe generiert oder ignoriert werden sollen. Jede Ablauf Verfolgungs Methode ruft die <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>-Methode des <xref:System.Diagnostics.SourceSwitch> auf, um zu bestimmen, ob die Ablauf Verfolgung fortgesetzt werden soll. Wenn der Aufruf `true`zurückgibt, werden die Listener aufgerufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.TraceSource.Switch" /> ist auf <see langword="null" /> festgelegt.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt Ablaufverfolgungsdaten in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="data">Die Ablaufverfolgungsdaten.</param>
        <summary>Schreibt Ablaufverfolgungsdaten in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner und die angegebenen Ablaufverfolgungsdaten verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A>-Methode ist, wie die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode, für automatisierte Tools vorgesehen, ermöglicht aber auch das Anfügen eines zusätzlichen Objekts, z. b. einer Ausnahme Instanz, an die Ablauf Verfolgung.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A>-Methode ruft die <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType>-Methode des <xref:System.Diagnostics.SourceSwitch> Objekts auf, das von der <xref:System.Diagnostics.TraceSource.Switch%2A>-Eigenschaft zurückgegeben wird. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> `true`zurückgibt, ruft <xref:System.Diagnostics.TraceSource.TraceData%2A> die entsprechende <xref:System.Diagnostics.TraceListener.TraceData%2A> Methode für alle Listener auf. Andernfalls wird <xref:System.Diagnostics.TraceSource.TraceData%2A> zurückgegeben, ohne dass die Listener-Methoden aufgerufen werden.  
  
> [!NOTE]
>  Das <xref:System.Diagnostics.EventLogTraceListener>-Objekt ist auf einen maximalen `id` Wert von 65.535 beschränkt. Wenn der angegebene `id` Wert größer als 65.535 ist, verwendet das <xref:System.Diagnostics.EventLogTraceListener>-Objekt 65.535.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29>-Methode verwendet wird, um eine Ablauf Verfolgungs Meldung zu filtern und an die Listener weiterzuleiten. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="data">Ein Objektarray, das die Ablaufverfolgungsdaten enthält.</param>
        <summary>Schreibt Ablaufverfolgungsdaten in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner und das Array von Ablaufverfolgungsdaten verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A>-Methode ist, wie z. b. die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode, für automatisierte Tools vorgesehen, ermöglicht aber auch das Anfügen von zusätzlichen Objekten, z. b. eine Ausnahme Instanz und eine Stapel Überwachung, an die Ablauf Verfolgung.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A>-Methode ruft die <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>-Methode des <xref:System.Diagnostics.SourceSwitch> Objekts auf, das von der <xref:System.Diagnostics.TraceSource.Switch%2A>-Eigenschaft zurückgegeben wird. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> `true`zurückgibt, ruft <xref:System.Diagnostics.TraceSource.TraceData%2A> die entsprechende <xref:System.Diagnostics.TraceListener.TraceData%2A> Methode für alle Listener auf. Andernfalls wird <xref:System.Diagnostics.TraceSource.TraceData%2A> zurückgegeben, ohne dass die Listener-Methoden aufgerufen werden.  
  
> [!NOTE]
>  Das <xref:System.Diagnostics.EventLogTraceListener>-Objekt ist auf einen maximalen `id` Wert von 65.535 beschränkt. Wenn der angegebene `id` Wert größer als 65.535 ist, verwendet das <xref:System.Diagnostics.EventLogTraceListener>-Objekt 65.535.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt eine Meldung eines Ablaufverfolgungsereignisses in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <summary>Schreibt eine Meldung eines Ablaufverfolgungsereignisses in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp und Ereignisbezeichner verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode dient der Ablauf Verfolgung von Ereignissen, die von-Tools automatisch verarbeitet werden können. Beispielsweise kann ein Überwachungs Tool einen Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle verfolgt wird.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode ruft die <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>-Methode des <xref:System.Diagnostics.SourceSwitch> Objekts auf, das von der <xref:System.Diagnostics.TraceSource.Switch%2A>-Eigenschaft zurückgegeben wird. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> `true`zurückgibt, ruft <xref:System.Diagnostics.TraceSource.TraceEvent%2A> die entsprechende <xref:System.Diagnostics.TraceListener.TraceEvent%2A> Methode jedes Listener auf. Andernfalls wird <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zurückgegeben, ohne dass die Listener-Methoden aufgerufen werden.  
  
 Der Ablauf Verfolgungs Inhalt ist Listener-spezifisch. Wenn die-Methode von der Listenerimplementierung nicht überschrieben wird, ist die Standardausgabe der Name der Ablauf Verfolgungs Quelle, ihre numerische Identität und der Ereignistyp.  Zusätzlicher Ablauf Verfolgungs Inhalt ist abhängig vom <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschafts Wert des Listener.  
  
> [!NOTE]
>  Das <xref:System.Diagnostics.EventLogTraceListener>-Objekt ist auf einen maximalen `id` Wert von 65.535 beschränkt. Wenn der angegebene `id` Wert größer als 65.535 ist, verwendet der <xref:System.Diagnostics.EventLogTraceListener> 65.535.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>-Methode verwendet wird, um ein Ablauf Verfolgungs Ereignis an die Listener zu übergeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="message">Die zu schreibende Ablaufverfolgungsmeldung.</param>
        <summary>Schreibt eine Meldung eines Ablaufverfolgungsereignisses in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner und die angegebene Meldung verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode dient der Ablauf Verfolgung von Ereignissen, die von-Tools automatisch verarbeitet werden können. Beispielsweise kann ein Überwachungs Tool einen Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle verfolgt wird.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode ruft die <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>-Methode des <xref:System.Diagnostics.SourceSwitch> Objekts auf, das von der <xref:System.Diagnostics.TraceSource.Switch%2A>-Eigenschaft zurückgegeben wird. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> `true`zurückgibt, ruft <xref:System.Diagnostics.TraceSource.TraceEvent%2A> die entsprechende <xref:System.Diagnostics.TraceListener.TraceEvent%2A> Methode jedes Listener auf. Andernfalls wird <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zurückgegeben, ohne dass die Listener-Methoden aufgerufen werden.  
  
 Der Ablauf Verfolgungs Inhalt ist Listener-spezifisch. Wenn die Methode nicht durch die Listenerimplementierung überschrieben wird, ist die Standardausgabe der Name der Ablauf Verfolgungs Quelle, die numerische Identität, der Ereignistyp und die Nachricht.  Zusätzlicher Ablauf Verfolgungs Inhalt ist abhängig vom <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschafts Wert des Listener.  
  
> [!NOTE]
>  Das <xref:System.Diagnostics.EventLogTraceListener>-Objekt ist auf einen maximalen `id` Wert von 65.535 beschränkt. Wenn der angegebene `id` Wert größer als 65.535 ist, verwendet das <xref:System.Diagnostics.EventLogTraceListener>-Objekt 65.535.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>-Methode verwendet wird, um ein Ablauf Verfolgungs Ereignis an die Listener zu übergeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="format">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im Array <paramref name="args" /> entsprechen.</param>
        <param name="args">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</param>
        <summary>Schreibt ein Ablaufverfolgungsereignis in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner sowie das angegebene Argumentarray und Format verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum `format`-Parameter finden Sie unter [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md).  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode dient der Ablauf Verfolgung von Ereignissen, die von-Tools automatisch verarbeitet werden können. Beispielsweise kann ein Überwachungs Tool einen Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle verfolgt wird.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A>-Methode ruft die <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>-Methode des <xref:System.Diagnostics.SourceSwitch> Objekts auf, das von der <xref:System.Diagnostics.TraceSource.Switch%2A>-Eigenschaft zurückgegeben wird. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> `true`zurückgibt, ruft <xref:System.Diagnostics.TraceSource.TraceEvent%2A> die entsprechende <xref:System.Diagnostics.TraceListener.TraceEvent%2A> Methode jedes Listener auf. Andernfalls wird <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zurückgegeben, ohne dass die Listener-Methoden aufgerufen werden.  
  
 Der Ablauf Verfolgungs Inhalt ist Listener-spezifisch. Die Standard <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>-Methode schreibt den Quellnamen, den Ereignistyp und die numerische Identität in den Ablauf Verfolgungs Header, ruft dann die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>-Methode auf, übergibt die `format` Zeichenfolge und `args` Array und verwendet die <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>-Eigenschaft, um die Zeichenfolge als Nachrichten Ausgabe zu formatieren.  
  
> [!NOTE]
>  Das <xref:System.Diagnostics.EventLogTraceListener>-Objekt ist auf einen maximalen `id` Wert von 65.535 beschränkt. Wenn der angegebene `id` Wert größer als 65.535 ist, verwendet das <xref:System.Diagnostics.EventLogTraceListener>-Objekt 65.535.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>-Methode verwendet wird, um ein Ablauf Verfolgungs Ereignis an die Listener zu übergeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Diagnostics.TraceSource>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> ist <see langword="null" /></exception>
        <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig.  
  
Oder 
Die Zahl, die ein zu formatierendes Argument angibt, ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl der angegebenen zu formatierenden Objekte.</exception>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Kombinierte Formatierung</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardmäßige Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Benutzerdefinierte Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard mäßige DateTime-Format Zeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte DateTime-Format Zeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Enumerationsformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt eine Informationsmeldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die zu schreibende Informationsmeldung.</param>
        <summary>Schreibt eine Informationsmeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceInformation%2A>-Methode bietet eine Informations Meldung, die von Benutzern und nicht von Tools gelesen werden soll.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> Ruft die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>-Methode auf, wobei `eventType` auf <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> festgelegt und die informative Nachricht als Meldungs Zeichenfolge übergeben wird. Die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>-Methode ruft wiederum die <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>-Methode jedes ablaufverfolgungslisters auf.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im Array <paramref name="args" /> entsprechen.</param>
        <param name="args">Ein Array mit 0 oder mehr zu formatierenden Objekten.</param>
        <summary>Schreibt eine Informationsmeldung unter Verwendung des angegebenen Objektarrays und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum `format`-Parameter finden Sie unter [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md).  
  
 Die <xref:System.Diagnostics.TraceSource.TraceInformation%2A>-Methode bietet eine Informations Meldung, die von Benutzern und nicht von Tools gelesen werden soll.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> Ruft die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>-Methode auf, wobei `eventType` auf <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> und der Nachrichten Inhalt als Objekt Array mit Formatierungsinformationen übergeben wird. Die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>-Methode ruft wiederum die <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>-Methode jedes ablaufverfolgungslisters auf.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> ist <see langword="null" /></exception>
        <exception cref="T:System.FormatException">"<paramref name="format" />" ist ungültig.  
  
Oder 
Die Zahl, die ein zu formatierendes Argument angibt, ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl der angegebenen zu formatierenden Objekte.</exception>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Kombinierte Formatierung</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardmäßige Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Benutzerdefinierte Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard mäßige DateTime-Format Zeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte DateTime-Format Zeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Enumerationsformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="message">Die zu schreibende Ablaufverfolgungsmeldung.</param>
        <param name="relatedActivityId">Eine Struktur, die die verwandte Aktivität bezeichnet.</param>
        <summary>Schreibt eine Meldung der Ablaufverfolgungsübertragung in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene numerische Bezeichner, die Meldung und der verwandte Aktivitätsbezeichner verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>-Methode ruft die <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>-Methode jedes Ablaufverfolgungslistener in der <xref:System.Diagnostics.TraceSource.Listeners%2A>-Eigenschaft auf, um die Ablauf Verfolgungs Informationen Die standardmäßige <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>-Methode in der Basis <xref:System.Diagnostics.TraceListener> Klasse ruft die <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType>-Methode auf, um den Aufruf zu verarbeiten, wobei `eventType` festgelegt wird, <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> und eine Zeichen folgen Darstellung der `relatedActivityId` GUID an `message`angehängt werden soll.  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> ist für die Verwendung mit den logischen Vorgängen einer <xref:System.Diagnostics.CorrelationManager>vorgesehen. Der `relatedActivityId`-Parameter bezieht sich auf die <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>-Eigenschaft eines <xref:System.Diagnostics.CorrelationManager> Objekts. Wenn eine logische Operation in einer Aktivität beginnt und in eine andere übertragen wird, protokolliert die zweite Aktivität die Übertragung, indem Sie die <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>-Methode aufrufen. Der <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>-Befehl verknüpft die neue Aktivitäts Identität mit der vorherigen Identität. Der wahrscheinlichste Consumer dieser Funktionalität ist ein Ablaufverfolgungs-Viewer, der logische Vorgänge melden kann, die mehrere Aktivitäten umfassen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>
