<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d419a2319360270f7b350c1deb0a013ba37a66d" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52194152" /></Metadata><TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Gruppe von Methoden und Eigenschaften bereit, mit denen Anwendungen die Ausführung von Code verfolgen und Ablaufverfolgungsmeldungen ihrer jeweiligen Quelle zuordnen können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource>-Klasse wird von Anwendungen verwendet, um Ablaufverfolgungen zu erzeugen, die der Anwendung zugeordnet werden können. <xref:System.Diagnostics.TraceSource> stellt Ablaufverfolgungsmethoden bereit, mit denen Sie Ereignisse und Daten einfach verfolgen und Ablaufverfolgungen zu Informationszwecken ausgeben können. Ablaufverfolgungsausgabe von <xref:System.Diagnostics.TraceSource> kann durch Einstellungen in der Konfigurationsdatei gesteuert werden. Die Konfigurationsdatei befindet sich im Ordner mit die ausführbare Datei der Anwendung und den Namen der Anwendung mit der Dateierweiterung der .config-Datei hinzugefügt wurde. Beispielsweise ist der Name der Konfigurationsdatei für TraceSourceSample.exe TraceSourceSample.exe.config. Die Konfigurationsdatei kann verwendet werden, um zu ermitteln, in denen die Ablaufverfolgungsinformationen gesendet werden und welche Ebenen der Aktivität sind, verfolgt werden sollen. Das folgende Beispiel zeigt den Inhalt des eine Beispielkonfigurationsdatei für die Anwendung.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 Die <xref:System.Diagnostics.TraceSource> Klasse durch den Namen einer Quelle, i. d. r. der Name der Anwendung identifiziert.  Die Ablaufverfolgungsmeldungen, die von einer bestimmten Komponente können von einer bestimmten Ablaufverfolgungsquelle initiiert werden, können alle eingehenden Nachrichten von dieser Komponente leicht identifiziert werden.  
  
 <xref:System.Diagnostics.TraceSource> definiert Methoden für die Ablaufverfolgung, jedoch bietet tatsächlich keinen bestimmten Mechanismus zum Generieren und Speichern von Ablaufverfolgungsdaten. Von Ablaufverfolgungslistenern-Plug-ins, die von Ablaufverfolgungsquellen geladen werden kann, werden die Ablaufverfolgungsdaten erstellt.  
  
> [!NOTE]
>  Sie sollten die Methoden für die Ablaufverfolgung nicht während des Abschlusses aufrufen. Auf diese Weise kann dazu führen, eine <xref:System.ObjectDisposedException> ausgelöst wird.  
  
 Sie können die Ziel der Ablaufverfolgungsausgabe anpassen, indem hinzufügen oder Entfernen von <xref:System.Diagnostics.TraceListener> -Instanzen zu oder aus der Auflistung gespeichert werden, der <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> Eigenschaft. Standardmäßig ist Ausgabe der Ablaufverfolgung, die unter Verwendung einer Instanz von der <xref:System.Diagnostics.DefaultTraceListener> Klasse. Im vorangehenden Konfigurationsbeispiel-Datei veranschaulicht das Entfernen der <xref:System.Diagnostics.DefaultTraceListener> und das Hinzufügen einer <xref:System.Diagnostics.ConsoleTraceListener> um die Ausgabe der Ablaufverfolgung für die Ablaufverfolgungsquelle zu erzeugen. Weitere Informationen finden Sie unter [ &lt;Listener&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) und [ &lt;SharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).  
  
> [!NOTE]
>  Hinzufügen eines Ablaufverfolgungslisteners, um die <xref:System.Diagnostics.TraceSource.Listeners%2A> Sammlung kann eine Ausnahme während der Ablaufverfolgung, ausgelöst werden, wenn eine Ressource, die vom Ablaufverfolgungslistener verwendet werden, nicht verfügbar ist. Die Bedingungen und die Ausnahme wird ausgelöst, richten sich nach der Ablaufverfolgungs-Listener und können nicht aufgezählt werden, in diesem Thema. Es kann hilfreich sein, platzieren Sie Aufrufe an die <xref:System.Diagnostics.TraceSource> Methoden in `try` / `catch` zu erkennen und Behandeln von Ausnahmen vom Ablaufverfolgungslistener Blöcke.  
  
 Die <xref:System.Diagnostics.SourceSwitch> Klasse bietet die Möglichkeit, die Ablaufverfolgungsausgabe dynamisch zu steuern. Im vorangehenden Konfigurationsbeispiel-Datei zeigt, wie Sie deaktivieren, können die Ablaufverfolgung aus einer Ablaufverfolgungsquelle und das Steuerelement, die die Ebene auf der die Ablaufverfolgung tritt auf.  Sie können den Wert des Quellschalters ändern, ohne Erneutes Kompilieren der Anwendung. Weitere Informationen zur Verwendung der Konfigurationsdatei zum Festlegen eines Schalters, finden Sie unter <xref:System.Diagnostics.Switch> und [Vorgehensweise: erstellen, initialisieren und Konfigurieren von Ablaufverfolgungsschaltern](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md).  
  
> [!NOTE]
>  Wenn Sie eine Konfigurationsdatei ändern, während eine Anwendung ausgeführt wird, die Anwendung muss beendet und neu gestartet oder der <xref:System.Diagnostics.Trace.Refresh%2A> -Methode muss aufgerufen werden, damit die neuen Einstellungen wirksam werden.  
  
 Die <xref:System.Diagnostics.TraceEventType> Enumeration wird verwendet, um den Ereignistyp für die Ablaufverfolgungsmeldung zu definieren. Trace-Filter verwenden den <xref:System.Diagnostics.TraceEventType> zu bestimmen, ob Sie ein Ablaufverfolgungslistener erzeugt, die die Ablaufverfolgungsmeldung.  
  
 Die Ablaufverfolgungslistener können optional eine zusätzliche Ebene Filtern eines Ablaufverfolgungsfilters verfügen.  Wenn Sie ein Ablaufverfolgungslistener ein Filter zugeordnet ist, ruft der Listener die <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> Methode für diesen Filter, um zu bestimmen, ob die Ablaufverfolgungsinformationen zu erzeugen.  
  
 In die Ablaufverfolgungslistener verwenden Sie die Werte von der <xref:System.Diagnostics.Trace> Klasseneigenschaften <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, und <xref:System.Diagnostics.Trace.AutoFlush%2A> an Format-Trace-Ausgabe. Können Sie Konfigurationsdateiattribute legen Sie die <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, und <xref:System.Diagnostics.Trace.AutoFlush%2A> Eigenschaften. Im folgenden Beispiel wird die <xref:System.Diagnostics.Trace.AutoFlush%2A> Eigenschaft `false` und <xref:System.Diagnostics.Trace.IndentSize%2A> -Eigenschaft auf 3 fest.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Diagnostics.TraceSource> Klasse, um ablaufverfolgungen an Listener weiter.  Darüber hinaus wird veranschaulicht, Switches und Filter-Nutzung.  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist threadsicher.</threadsafe>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/trace-debug/index.md">Schema für Ablaufverfolgungs- und Debugeinstellungen</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSource" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Quelle (i. d. R. der Name der Anwendung).</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSource" />-Klasse, wobei der angegebene Namen der Quelle verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Quellname wird verwendet, um ablaufverfolgungen zu identifizieren. Hiermit wird durch eine <xref:System.Diagnostics.SourceFilter> zu bestimmen, ob ein Ablaufverfolgungslistener die Ablaufverfolgung erzeugen, die. Es wird empfohlen, den Namen der Anwendung für den Quellnamen zu verwenden.  
  
> [!NOTE]
>  Es ist nicht erforderlich, zum Erstellen eines neuen <xref:System.Diagnostics.TraceSource> Instanz für jede ablaufverfolgungsanforderung. Erstellen Sie eine <xref:System.Diagnostics.TraceSource> -Instanz und deren Verwendung für alle Trace-Anforderungen für die Anwendung.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Diagnostics.TraceSource.%23ctor%2A> Konstruktor zum Erstellen eines neuen <xref:System.Diagnostics.TraceSource> Objekt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> ist eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Quelle, i. d. R. der Name der Anwendung.</param>
        <param name="defaultLevel">Eine bitweise Kombination der Enumerationswerte, die die Standardebene der Quelle angibt, auf der die Ablaufverfolgung durchgeführt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSource" />-Klasse, wobei der angegebene Name der Quelle und die Standardebene der Quelle verwendet werden, auf der die Ablaufverfolgung durchgeführt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Quellname wird verwendet, um ablaufverfolgungen zu identifizieren. Kann verwendet werden, indem eine <xref:System.Diagnostics.SourceSwitch> zu bestimmen, ob die Ablaufverfolgung ausgeführt wird und durch eine <xref:System.Diagnostics.SourceFilter> zu bestimmen, ob die Ablaufverfolgung zu erstellen. Die Standardebene der Quelle wird verwendet, indem ein <xref:System.Diagnostics.EventTypeFilter> zu bestimmen, ob die Ablaufverfolgung ausgeführt wird basierend auf der Ebene der Quelle der Nachricht, die eine Ablaufverfolgung ausgeführt werden.  
  
> [!NOTE]
>  Es ist nicht erforderlich, zum Erstellen eines neuen <xref:System.Diagnostics.TraceSource> Instanz für jede ablaufverfolgungsanforderung. Erstellen Sie eine <xref:System.Diagnostics.TraceSource> -Instanz und deren Verwendung für alle Trace-Anforderungen für die Anwendung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> ist eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierten Schalterattribute ab, die in der Anwendungskonfigurationsdatei definiert sind.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.StringDictionary" />, das die benutzerdefinierten Attribute für den Ablaufverfolgungsschalter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Attributes%2A> Eigenschaft identifiziert, das die benutzerdefinierten Attribute, die in der Konfigurationsdatei der Anwendung verwiesen wird. Nicht referenzierte benutzerdefinierte Attribute werden nicht aufgezählt werden. Klassen, die von erben die <xref:System.Diagnostics.TraceSource> Klasse kann benutzerdefinierte Attribute hinzufügen, indem Sie überschreiben die <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> -Methode und ein Zeichenfolgenarray mit benutzerdefinierten Attributnamen zurückgegeben.  
  
 Folgendes ist ein Beispiel für ein Element einer Ablaufverfolgungsquelle, die das benutzerdefinierte Attribut `SecondTraceSourceAttribute`:  
  
```xml  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht, wie die benutzerdefinierten Attribute für die Anzeige einer <xref:System.Diagnostics.TraceSource>.  Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt alle Ablaufverfolgungslistener in der Auflistung der Ablaufverfolgungslistener.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Close%2A> Methodenaufrufe der <xref:System.Diagnostics.TraceListener.Close%2A> -Methode der einzelnen Ablaufverfolgungslistener in der <xref:System.Diagnostics.TraceSource.Listeners%2A> Auflistung.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Informationen zur Verwendung der <xref:System.Diagnostics.TraceSource.Close%2A> Methode zum Schließen alle Listener in der Auflistung. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit nicht verwaltetem Code. Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Ablaufverfolgungslistener aus der Auflistung der Ablaufverfolgungslistener.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Flush%2A> Methodenaufrufe der <xref:System.Diagnostics.TraceListener.Flush%2A> -Methode der einzelnen Ablaufverfolgungslistener in der <xref:System.Diagnostics.TraceSource.Listeners%2A> Auflistung.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Informationen zur Verwendung der <xref:System.Diagnostics.TraceSource.Flush%2A> Methode, um alle Listener in der Auflistung zu leeren. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die von der Ablaufverfolgungsquelle unterstützten benutzerdefinierten Attribute ab.</summary>
        <returns>Ein Zeichenfolgenarray, das die von der Ablaufverfolgungsquelle unterstützten benutzerdefinierten Attribute benennt, oder <see langword="null" />, wenn es keine benutzerdefinierten Attribute gibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung für <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> gibt `null`.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Überschreibung von der <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> Methode identifizieren Sie die benutzerdefinierten Attribute für die `MyTraceSource` Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Erben von der <see cref="T:System.Diagnostics.TraceSource" /> Klasse oder einer abgeleiteten Klasse, können Sie überschreiben die <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> Methode, um benutzerdefinierte Attribute für die Klasse bereitzustellen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der Ablaufverfolgungslistener für die Ablaufverfolgungsquelle ab.</summary>
        <value>Eine <see cref="T:System.Diagnostics.TraceListenerCollection" />, die die aktiven Ablaufverfolgungslistener enthält, die der Quelle zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zuzugreifen und Vorgänge für die Ablaufverfolgungslistener.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit nicht verwaltetem Code. Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Ablaufverfolgungsquelle ab.</summary>
        <value>Der Name der Ablaufverfolgungsquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name wird festgelegt, durch die `name` Parameter an den Konstruktor übergeben. Sehen Sie sich die Ablaufverfolgungsquelle mit dem `name` Attribut in der Konfigurationsdatei.  
  
 Das folgende XML-Element zeigt auf eine Ablaufverfolgungsquelle in der Konfigurationsdatei.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Ablaufverfolgungsquelle im Konstruktoraufruf benennen.  Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Quellschalters ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Diagnostics.SourceSwitch" />-Objekt, das den Wert des Quellschalters darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.Switch%2A> Eigenschaft ermöglicht das Filtern von Nachrichten, bevor die Ablaufverfolgungsquelle, die Listener aufgerufen.  
  
 Der Schalter wird verwendet, zu überprüfen, ob das Trace-Aufrufe generiert oder ignoriert werden soll. Jede Ablaufverfolgung-Methode ruft die <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> -Methode der der <xref:System.Diagnostics.SourceSwitch> zu bestimmen, ob die Ablaufverfolgung fortzusetzen. Wenn die Rückgabe des Aufrufs `true`, die Listener aufgerufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Für <see cref="P:System.Diagnostics.TraceSource.Switch" /> ist <see langword="null" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit nicht verwaltetem Code. Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt Ablaufverfolgungsdaten in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="data">Die Ablaufverfolgungsdaten.</param>
        <summary>Schreibt Ablaufverfolgungsdaten in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner und die angegebenen Ablaufverfolgungsdaten verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A> Methode, z. B. die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> -Methode ist für automatisierte Tools vorgesehen, aber kann auch das Anfügen eines zusätzlichen-Objekts, z. B. eine Ausnahmeinstanz, auf die Ablaufverfolgung.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A> Methodenaufrufe der <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> Methode der <xref:System.Diagnostics.SourceSwitch> zurückgegebenes Objekt der <xref:System.Diagnostics.TraceSource.Switch%2A> Eigenschaft. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> gibt `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> aufruft, die entsprechende <xref:System.Diagnostics.TraceListener.TraceData%2A> Methode für alle Listener. Andernfalls <xref:System.Diagnostics.TraceSource.TraceData%2A> zurück, ohne Aufrufen der Methoden der Listener.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.EventLogTraceListener> Objekt ist auf einen Maximalwert begrenzte `id` maximal 65.535. Wenn die `id` angegebene Wert ist größer als 65.535 sein, die <xref:System.Diagnostics.EventLogTraceListener> -Objekt 65.535.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> Methode zum Filtern und Weiterleiten von an die Listener eine Ablaufverfolgungsmeldung. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="data">Ein Objektarray, das die Ablaufverfolgungsdaten enthält.</param>
        <summary>Schreibt Ablaufverfolgungsdaten in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner und das Array von Ablaufverfolgungsdaten verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A> Methode, z. B. die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> -Methode ist für automatisierte Tools vorgesehen, aber kann auch das Anfügen von Objekten, z. B. eine Ausnahmeinstanz und eine stapelüberwachung, um die Ablaufverfolgung.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceData%2A> Methodenaufrufe der <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Methode der <xref:System.Diagnostics.SourceSwitch> zurückgegebenes Objekt der <xref:System.Diagnostics.TraceSource.Switch%2A> Eigenschaft. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> gibt `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> aufruft, die entsprechende <xref:System.Diagnostics.TraceListener.TraceData%2A> Methode für alle Listener. Andernfalls <xref:System.Diagnostics.TraceSource.TraceData%2A> zurück, ohne Aufrufen der Methoden der Listener.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.EventLogTraceListener> Objekt ist auf einen Maximalwert begrenzte `id` maximal 65.535. Wenn die `id` angegebene Wert ist größer als 65.535 sein, die <xref:System.Diagnostics.EventLogTraceListener> -Objekt 65.535.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt eine Meldung eines Ablaufverfolgungsereignisses in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <summary>Schreibt eine Meldung eines Ablaufverfolgungsereignisses in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp und Ereignisbezeichner verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Methode dient zum Verfolgen von Ereignissen, die automatisch von Tools verarbeitet werden können. Überwachungstool kann z. B. Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle nachverfolgt wird.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Methodenaufrufe der <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Methode der <xref:System.Diagnostics.SourceSwitch> zurückgegebenes Objekt der <xref:System.Diagnostics.TraceSource.Switch%2A> Eigenschaft. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> gibt `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> aufruft, die entsprechende <xref:System.Diagnostics.TraceListener.TraceEvent%2A> Methode für die einzelnen Listener. Andernfalls <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zurück, ohne Aufrufen der Methoden der Listener.  
  
 Der Ablaufverfolgungsinhalt ist Listener spezifisch. Wenn die Methode durch die Implementierung der Listener nicht überschrieben wird, ist die standardmäßigen Ausgabe der Name der Ablaufverfolgungsquelle, die numerische Identität und den Ereignistyp an.  Zusätzliche Ablaufverfolgungsinhalt richtet sich nach des Listeners <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> -Eigenschaftswert.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.EventLogTraceListener> Objekt ist auf einen Maximalwert begrenzte `id` maximal 65.535. Wenn die `id` angegebene Wert ist größer als 65.535 sein, die <xref:System.Diagnostics.EventLogTraceListener> verwendet 65.535.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> Methode, um ein Ablaufverfolgungsereignis an die Listener übergeben. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="message">Die zu schreibende Ablaufverfolgungsmeldung.</param>
        <summary>Schreibt eine Meldung eines Ablaufverfolgungsereignisses in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner und die angegebene Meldung verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Methode dient zum Verfolgen von Ereignissen, die automatisch von Tools verarbeitet werden können. Überwachungstool kann z. B. Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle nachverfolgt wird.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Methodenaufrufe der <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Methode der <xref:System.Diagnostics.SourceSwitch> zurückgegebenes Objekt der <xref:System.Diagnostics.TraceSource.Switch%2A> Eigenschaft. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> gibt `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> aufruft, die entsprechende <xref:System.Diagnostics.TraceListener.TraceEvent%2A> Methode für die einzelnen Listener. Andernfalls <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zurück, ohne Aufrufen der Methoden der Listener.  
  
 Der Ablaufverfolgungsinhalt ist Listener spezifisch. Wenn die Methode durch die Implementierung der Listener nicht überschrieben wird, ist die standardmäßigen Ausgabe der Name der Ablaufverfolgungsquelle, die numerische Identität, den Ereignistyp und die Nachricht an.  Zusätzliche Ablaufverfolgungsinhalt richtet sich nach des Listeners <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> -Eigenschaftswert.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.EventLogTraceListener> Objekt ist auf einen Maximalwert begrenzte `id` maximal 65.535. Wenn die `id` angegebene Wert ist größer als 65.535 sein, die <xref:System.Diagnostics.EventLogTraceListener> -Objekt 65.535.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> Methode, um ein Ablaufverfolgungsereignis an die Listener übergeben. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Einer der Enumerationswerte, der den Ereignistyp der Ablaufverfolgungsdaten angibt.</param>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="format">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im Array <paramref name="args" /> entsprechen.</param>
        <param name="args">Ein <see langword="object" />-Array mit 0 oder mehr zu formatierenden Objekten.</param>
        <summary>Schreibt ein Ablaufverfolgungsereignis in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene Ereignistyp, der Ereignisbezeichner sowie das angegebene Argumentarray und Format verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den `format` Parameter finden Sie unter [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md).  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Methode dient zum Verfolgen von Ereignissen, die automatisch von Tools verarbeitet werden können. Überwachungstool kann z. B. Administrator benachrichtigen, wenn ein bestimmtes Ereignis von einer bestimmten Quelle nachverfolgt wird.  
  
 Die <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Methodenaufrufe der <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Methode der <xref:System.Diagnostics.SourceSwitch> zurückgegebenes Objekt der <xref:System.Diagnostics.TraceSource.Switch%2A> Eigenschaft. Wenn <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> gibt `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> aufruft, die entsprechende <xref:System.Diagnostics.TraceListener.TraceEvent%2A> Methode für die einzelnen Listener. Andernfalls <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zurück, ohne Aufrufen der Methoden der Listener.  
  
 Der Ablaufverfolgungsinhalt ist Listener spezifisch. Der Standardwert <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> Methode schreibt den Namen der Datenquelle, Ereignistyp und numerische Identität in der Ablaufverfolgungsheader, und ruft dann die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> -Methode und übergeben die `format` Zeichenfolge und `args` Array und mithilfe der <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> Eigenschaft, um die als Ausgabe der Zeichenfolge.  
  
> [!NOTE]
>  Die <xref:System.Diagnostics.EventLogTraceListener> Objekt ist auf einen Maximalwert begrenzte `id` maximal 65.535. Wenn die `id` angegebene Wert ist größer als 65.535 sein, die <xref:System.Diagnostics.EventLogTraceListener> -Objekt 65.535.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> Methode, um ein Ablaufverfolgungsereignis an die Listener übergeben. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.TraceSource> Klasse.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> ist ungültig.  
  
- oder -  
Die Zahl, die ein zu formatierendes Argument angibt, ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl der angegebenen zu formatierenden Objekte.</exception>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Kombinierte Formatierung</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardmäßige Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Benutzerdefinierte Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">DateTime-Standardformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte DateTime-Formatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Enumerationsformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt eine Informationsmeldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die zu schreibende Informationsmeldung.</param>
        <summary>Schreibt eine Informationsmeldung unter Verwendung der angegebenen Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Methode bietet eine informative Meldung, die von Benutzern und nicht durch Tools gelesen werden sollen.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> Ruft die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> Methode `eventType` zu <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> und übergeben die informationsmeldung, als die Meldungszeichenfolge. Die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> Methode wiederum ruft die <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> -Methode der einzelnen Ablaufverfolgungslistener.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im Array <paramref name="args" /> entsprechen.</param>
        <param name="args">Ein Array mit 0 oder mehr zu formatierenden Objekten.</param>
        <summary>Schreibt eine Informationsmeldung unter Verwendung des angegebenen Objektarrays und der Formatierungsinformationen in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den `format` Parameter finden Sie unter [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md).  
  
 Die <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Methode bietet eine informative Meldung, die von Benutzern und nicht durch Tools gelesen werden sollen.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> Ruft die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> Methode `eventType` zu <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> und Inhalt der Nachricht als ein Objektarray mit Informationen zur Formatierung übergeben. Die <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> Methode wiederum ruft die <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> -Methode der einzelnen Ablaufverfolgungslistener.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> ist ungültig.  
  
- oder -  
Die Zahl, die ein zu formatierendes Argument angibt, ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl der angegebenen zu formatierenden Objekte.</exception>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, während des Abschlusses ein Ereignis nachzuverfolgen.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Kombinierte Formatierung</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardmäßige Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Benutzerdefinierte Zahlenformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">DateTime-Standardformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte DateTime-Formatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Enumerationsformatzeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">Ein numerischer Bezeichner für das Ereignis.</param>
        <param name="message">Die zu schreibende Ablaufverfolgungsmeldung.</param>
        <param name="relatedActivityId">Eine Struktur, die die verwandte Aktivität bezeichnet.</param>
        <summary>Schreibt eine Meldung der Ablaufverfolgungsübertragung in die Ablaufverfolgungslistener der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung. Hierbei werden der angegebene numerische Bezeichner, die Meldung und der verwandte Aktivitätsbezeichner verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Methodenaufrufe der <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> -Methode der einzelnen Ablaufverfolgungslistener in der <xref:System.Diagnostics.TraceSource.Listeners%2A> Eigenschaft, die Ablaufverfolgungsinformationen zu schreiben. Der Standardwert <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> -Methode in Basis- <xref:System.Diagnostics.TraceListener> -Klasse ruft die <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> Methode zum Verarbeiten des Aufrufs, Festlegen von `eventType` zu <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> von und Anhängen eine Zeichenfolgendarstellung der `relatedActivityId` GUID, die `message`.  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> mit den logischen Operationen verwendet werden soll eine <xref:System.Diagnostics.CorrelationManager>. Die `relatedActivityId` Parameter bezieht sich auf die <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Eigenschaft eine <xref:System.Diagnostics.CorrelationManager> Objekt. Wenn eine logische Operation in einer Aktivität beginnt und in einen anderen übertragen wird, protokolliert die zweite Aktivität die Übertragung durch Aufrufen der <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Methode. Die <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Aufruf bezieht sich die neue Aktivitätsidentität zur vorherigen Identität. Der wahrscheinlichste Consumer diese Funktionalität ist einen Ablaufverfolgungs-Viewer, der logische Operationen melden kann, die mehrere Aktivitäten umfassen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>