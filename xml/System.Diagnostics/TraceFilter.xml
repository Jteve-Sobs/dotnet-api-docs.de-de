<Type Name="TraceFilter" FullName="System.Diagnostics.TraceFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a85ce6746df275187269ff2c648a78241426979c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58737783" /></Metadata><TypeSignature Language="C#" Value="public abstract class TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceFilter abstract" />
  <TypeSignature Language="F#" Value="type TraceFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Basisklasse für Implementierungen von Ablaufverfolgungsfiltern bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ablaufverfolgungsfilter von Ablaufverfolgungslistenern zu einer zusätzlichen Authentifizierungsebene Filtern verwendet werden können darüber hinaus von Trace--Schaltern bereitgestellt. Der Ablaufverfolgungsfilter für einen Ablaufverfolgungslistener finden Sie in des Listeners der <xref:System.Diagnostics.TraceListener.Filter%2A> Eigenschaft. Ablaufverfolgungsschalter bestimmen, ob eine Ablaufverfolgung wird in die Ablaufverfolgungslistener gesendet werden. Ablaufverfolgungsfilter können die einzelnen Ablaufverfolgungslistener, um zu bestimmen, ob die Ablaufverfolgung ist in die jeweilige zugeordnete Ausgabemedium weiterleiten geschrieben werden sollen oder nicht. Beispielsweise gemäß jedes Ablaufverfolgungsfilter, eine Ablaufverfolgung kann geschrieben werden an die Konsole von einer <xref:System.Diagnostics.ConsoleTraceListener>, aber nicht in das Ereignisprotokoll durch eine <xref:System.Diagnostics.EventLogTraceListener>.  
  
 Filter, die von erben die <xref:System.Diagnostics.TraceFilter> Klasse kann verwendet werden, durch den Ablaufverfolgungslistener, die von erben die <xref:System.Diagnostics.TraceListener> -Klasse ausgeführt wird, Filtern von Ereignissen, die eine Ablaufverfolgung ausgeführt wird. <xref:System.Diagnostics.TraceFilter> enthält eine einzelne Methode, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, die akzeptiert Ereignisdaten, und gibt ein Flag, der angibt, ob das Ereignis nachverfolgt werden sollen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceFilter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="traceFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">Der <see cref="T:System.Diagnostics.TraceEventCache" />, der Informationen für das Ablaufverfolgungsereignis enthält.</param>
        <param name="source">Der Name der Quelle.</param>
        <param name="eventType">Einer der <see cref="T:System.Diagnostics.TraceEventType" />-Werte, der den Typ des Ereignisses angibt, das die Ablaufverfolgung verursacht hat.</param>
        <param name="id">Eine Ablaufverfolgungs-Bezeichnernummer.</param>
        <param name="formatOrMessage">Entweder das Format, das für das Schreiben eines Arrays von Argumenten verwendet werden soll, die vom <paramref name="args" />-Parameter angegeben werden, oder eine zu schreibende Meldung.</param>
        <param name="args">Ein Array von Argumentobjekten.</param>
        <param name="data1">Ein Ablaufverfolgungs-Datenobjekt.</param>
        <param name="data">Ein Array von Ablaufverfolgungs-Datenobjekten.</param>
        <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob der Ablaufverfolgungslistener eine Ablaufverfolgung für das Ereignis durchführen soll.</summary>
        <returns><see langword="true" />, um das angegebene Ereignis zu verfolgen, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> Methode, um anzugeben, Ablaufverfolgung sollte erfolgen, wenn die Ablaufverfolgungs-Ereignistyp des Ereignisses entspricht <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.  
  
 [!code-cpp[System.Diagnostics.TraceFilter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cpp/source.cpp#2)]
 [!code-csharp[System.Diagnostics.TraceFilter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cs/source.cs#2)]
 [!code-vb[System.Diagnostics.TraceFilter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.tracefilter/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Implementierungen dieser Methode zurückgeben soll <see langword="true" /> , wenn das Ereignis angegeben, die mit den übergebenen Parametern nachverfolgt werden sollen. Andernfalls sollte die Methode zurückgeben <see langword="false" />. Ein Filter, können nur Ereignisse für Fehler an den Listener übergeben, sollten überprüfen, z. B. die <paramref name="eventType" /> Parameter und Rückgabetypen <see langword="true" /> Wenn das Level der Ablaufverfolgung Ereignis Typ, um festgelegt ist <see cref="F:System.Diagnostics.TraceEventType.Error" /> oder größer ist; andernfalls, sollte zurückgegeben <see langword="false" />.  
  
Implementierungen der Methode sollte darauf vorbereitet sein behandeln <see langword="null" /> in den folgenden Parametern: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, und <paramref name="cache" />. Wenn der Parameterwert ist <see langword="null" />, der Parameter ist nicht Teil des Ereignisses. Z. B. wenn die <paramref name="args" /> Parameter <see langword="null" />, dies bedeutet, dass das Ereignis keine Argumente verfügt. Wenn die <paramref name="data" /> Parameter <see langword="null" />, und klicken Sie dann ein oder kein Datenobjekte vorhanden sind. Wenn es sich bei einem Datenobjekt vorhanden ist, es befindet sich in der <paramref name="data1" /> Parameter. Der Grund für die Unterscheidung zwischen einem einzelnen Datenobjekt und einem Array von Datenobjekten ist für die Leistung. Es gibt keinen Grund ein Objektarray erstellen, wenn nur ein Objekt eine Ablaufverfolgung ausgeführt wird, wie normalerweise der Fall ist. Wenn die <paramref name="data" /> -Parameter ist kein <see langword="null" />, <paramref name="data1" /> Parameter muss auch nicht <see langword="null" />.  
  
Es ist sichergestellt, dass die <paramref name="source" /> -Parameter ist kein <see langword="null" /> und nicht auf eine leere Zeichenfolge ("").  
  
Implementierungen der Methode können optional die folgenden Ausnahmen auslösen: 
-   <see cref="T:System.ArgumentNullException" /> Wenn <paramref name="source" /> ist <see langword="null" />.  
  
-   <see cref="T:System.ArgumentException" /> Wenn <paramref name="eventType" /> gehört nicht zu den <see cref="T:System.Diagnostics.TraceEventType" /> Werte.  
  
-Ausnahmen, die nicht mit der Implementierung der Methode. Z. B. eine <see cref="T:System.Threading.ThreadAbortException" />.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>