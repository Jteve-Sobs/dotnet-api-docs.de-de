<Type Name="TraceFilter" FullName="System.Diagnostics.TraceFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ca255b51a6e19bd19b607d741b37f014a068305" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39884717" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceFilter abstract" />
  <TypeSignature Language="F#" Value="type TraceFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8ff8e-101">Stellt die Basisklasse für Implementierungen von Ablaufverfolgungsfiltern bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ff8e-101">Provides the base class for trace filter implementations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ff8e-102">Ablaufverfolgungsfilter von Ablaufverfolgungslistenern zu einer zusätzlichen Authentifizierungsebene Filtern verwendet werden können darüber hinaus von Trace--Schaltern bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-102">Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches.</span></span> <span data-ttu-id="8ff8e-103">Der Ablaufverfolgungsfilter für einen Ablaufverfolgungslistener finden Sie in des Listeners der <xref:System.Diagnostics.TraceListener.Filter%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-103">The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property.</span></span> <span data-ttu-id="8ff8e-104">Ablaufverfolgungsschalter bestimmen, ob eine Ablaufverfolgung wird in die Ablaufverfolgungslistener gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-104">Trace switches determine if a trace is to be sent to the trace listeners.</span></span> <span data-ttu-id="8ff8e-105">Ablaufverfolgungsfilter können die einzelnen Ablaufverfolgungslistener, um zu bestimmen, ob die Ablaufverfolgung ist in die jeweilige zugeordnete Ausgabemedium weiterleiten geschrieben werden sollen oder nicht.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-105">Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium.</span></span> <span data-ttu-id="8ff8e-106">Beispielsweise gemäß jedes Ablaufverfolgungsfilter, eine Ablaufverfolgung kann geschrieben werden an die Konsole von einer <xref:System.Diagnostics.ConsoleTraceListener>, aber nicht in das Ereignisprotokoll durch eine <xref:System.Diagnostics.EventLogTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-106">For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.</span></span>  
  
 <span data-ttu-id="8ff8e-107">Filter, die von erben die <xref:System.Diagnostics.TraceFilter> Klasse kann verwendet werden, durch den Ablaufverfolgungslistener, die von erben die <xref:System.Diagnostics.TraceListener> -Klasse ausgeführt wird, Filtern von Ereignissen, die eine Ablaufverfolgung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-107">Filters that inherit from the <xref:System.Diagnostics.TraceFilter> class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced.</span></span> <span data-ttu-id="8ff8e-108"><xref:System.Diagnostics.TraceFilter> enthält eine einzelne Methode, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, die akzeptiert Ereignisdaten, und gibt ein Flag, der angibt, ob das Ereignis nachverfolgt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-108"><xref:System.Diagnostics.TraceFilter> contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ff8e-109">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceFilter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-109">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceFilter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="traceFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">
          <span data-ttu-id="8ff8e-110">Der <see cref="T:System.Diagnostics.TraceEventCache" />, der Informationen für das Ablaufverfolgungsereignis enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-110">The <see cref="T:System.Diagnostics.TraceEventCache" /> that contains information for the trace event.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="8ff8e-111">Der Name der Quelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-111">The name of the source.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="8ff8e-112">Einer der <see cref="T:System.Diagnostics.TraceEventType" />-Werte, der den Typ des Ereignisses angibt, das die Ablaufverfolgung verursacht hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-112">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="8ff8e-113">Eine Ablaufverfolgungs-Bezeichnernummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-113">A trace identifier number.</span>
          </span>
        </param>
        <param name="formatOrMessage">
          <span data-ttu-id="8ff8e-114">Entweder das Format, das für das Schreiben eines Arrays von Argumenten verwendet werden soll, die vom <c>args</c>-Parameter angegeben werden, oder eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-114">Either the format to use for writing an array of arguments specified by the <c>args</c> parameter, or a message to write.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="8ff8e-115">Ein Array von Argumentobjekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-115">An array of argument objects.</span>
          </span>
        </param>
        <param name="data1">
          <span data-ttu-id="8ff8e-116">Ein Ablaufverfolgungs-Datenobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-116">A trace data object.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="8ff8e-117">Ein Array von Ablaufverfolgungs-Datenobjekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-117">An array of trace data objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ff8e-118">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob der Ablaufverfolgungslistener eine Ablaufverfolgung für das Ereignis durchführen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-118">When overridden in a derived class, determines whether the trace listener should trace the event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ff8e-119">
            <see langword="true" />, um das angegebene Ereignis zu verfolgen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-119">
              <see langword="true" /> to trace the specified event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ff8e-120">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> Methode, um anzugeben, Ablaufverfolgung sollte erfolgen, wenn die Ablaufverfolgungs-Ereignistyp des Ereignisses entspricht <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8ff8e-120">The following code example shows how to override the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method to indicate tracing should occur when the trace event type of the event is equal to <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[System.Diagnostics.TraceFilter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cpp/source.cpp#2)]
 [!code-csharp[System.Diagnostics.TraceFilter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cs/source.cs#2)]
 [!code-vb[System.Diagnostics.TraceFilter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.tracefilter/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8ff8e-121">
            <para>Implementierungen dieser Methode zurückgeben soll <see langword="true" /> , wenn das Ereignis angegeben, die mit den übergebenen Parametern nachverfolgt werden sollen. Andernfalls sollte die Methode zurückgeben <see langword="false" />. Ein Filter, können nur Ereignisse für Fehler an den Listener übergeben, sollten überprüfen, z. B. die <paramref name="eventType" /> Parameter und Rückgabetypen <see langword="true" /> Wenn das Level der Ablaufverfolgung Ereignis Typ, um festgelegt ist <see cref="F:System.Diagnostics.TraceEventType.Error" /> oder größer ist; andernfalls, sollte zurückgegeben <see langword="false" />.  Implementierungen der Methode sollte darauf vorbereitet sein behandeln <see langword="null" /> in den folgenden Parametern: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, und <paramref name="cache" />. Wenn der Parameterwert ist <see langword="null" />, der Parameter ist nicht Teil des Ereignisses. Z. B. wenn die <paramref name="args" /> Parameter <see langword="null" />, dies bedeutet, dass das Ereignis keine Argumente verfügt. Wenn die <paramref name="data" /> Parameter <see langword="null" />, und klicken Sie dann ein oder kein Datenobjekte vorhanden sind. Wenn es sich bei einem Datenobjekt vorhanden ist, es befindet sich in der <paramref name="data1" /> Parameter. Der Grund für die Unterscheidung zwischen einem einzelnen Datenobjekt und einem Array von Datenobjekten ist für die Leistung. Es gibt keinen Grund ein Objektarray erstellen, wenn nur ein Objekt eine Ablaufverfolgung ausgeführt wird, wie normalerweise der Fall ist. Wenn die <paramref name="data" /> -Parameter ist kein <see langword="null" />, <paramref name="data1" /> Parameter muss auch nicht <see langword="null" />.  Es ist sichergestellt, dass die <paramref name="source" /> -Parameter ist kein <see langword="null" /> und nicht auf eine leere Zeichenfolge ("").  Implementierungen der Methode können optional die folgenden Ausnahmen auslösen:- <see cref="T:System.ArgumentNullException" /> Wenn <paramref name="source" /> ist <see langword="null" />.  - <see cref="T:System.ArgumentException" /> Wenn <paramref name="eventType" /> gehört nicht zu den <see cref="T:System.Diagnostics.TraceEventType" /> Werte.  -Ausnahmen, die nicht mit der Implementierung der Methode. Z. B. eine <see cref="T:System.Threading.ThreadAbortException" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8ff8e-121">
              <para>Implementations of this method should return <see langword="true" /> if the event specified by the passed parameters should be traced. Otherwise the method should return <see langword="false" />. For example, a filter that allows only error events to pass through to the listener should inspect the <paramref name="eventType" /> parameter and return <see langword="true" /> if the trace event type level is set to <see cref="F:System.Diagnostics.TraceEventType.Error" /> or greater; otherwise, it should return <see langword="false" />.  Implementations of the method should be prepared to handle <see langword="null" /> in the following parameters: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, and <paramref name="cache" />. If the parameter value is <see langword="null" />, the parameter is not part of the event. For example, if the <paramref name="args" /> parameter is <see langword="null" />, it means that the event does not have any arguments. If the <paramref name="data" /> parameter is <see langword="null" />, then there are either one or no data objects. If there is one data object, it will be found in the <paramref name="data1" /> parameter. The reason for the distinction between a single data object and an array of data objects is for performance. There is no reason to create an object array if only one object is traced, as is normally the case. If the <paramref name="data" /> parameter is not <see langword="null" />, the <paramref name="data1" /> parameter must also not be <see langword="null" />.  It is guaranteed that the <paramref name="source" /> parameter is not <see langword="null" /> and not an empty string ("").  Implementations of the method can optionally throw the following exceptions:  -   <see cref="T:System.ArgumentNullException" /> if <paramref name="source" /> is <see langword="null" />.  -   <see cref="T:System.ArgumentException" /> if <paramref name="eventType" /> is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> values.  -   Exceptions unrelated to the implementation of the method. For example, a <see cref="T:System.Threading.ThreadAbortException" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>