<Type Name="TextWriterTraceListener" FullName="System.Diagnostics.TextWriterTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bfc9a606c15ed33778d3238afffbae6a888814c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextWriterTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextWriterTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TextWriterTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriterTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4457f-101">Leitet die Ablaufverfolgungs- oder Debugausgabe an einen <see cref="T:System.IO.TextWriter" /> oder <see cref="T:System.IO.Stream" />, z. B. <see cref="T:System.IO.FileStream" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4457f-101">Directs tracing or debugging output to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as <see cref="T:System.IO.FileStream" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-102">Die <xref:System.Diagnostics.TextWriterTraceListener> -Klasse stellt die <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> Eigenschaft zum Abrufen oder Festlegen des Textwriters, empfängt die Ablaufverfolgung oder debuggingausgabe.</span><span class="sxs-lookup"><span data-stu-id="4457f-102">The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4457f-103">Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="4457f-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="4457f-104">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="4457f-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="4457f-105">Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="4457f-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="4457f-106">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4457f-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="4457f-107">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="4457f-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="4457f-108">Diese Klasse stellt auch Methoden zum <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> der <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> , damit es nicht mehr empfängt, Ablaufverfolgungs- oder debuggingausgabe zu <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> Ausgabepuffer für die <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, und <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> eine Nachricht an die <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span><span class="sxs-lookup"><span data-stu-id="4457f-108">This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span></span>  
  
 <span data-ttu-id="4457f-109">Sie müssen die Ablaufverfolgungs- oder Debuggen verwenden Sie einen Ablaufverfolgungslistener aktivieren.</span><span class="sxs-lookup"><span data-stu-id="4457f-109">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="4457f-110">Die folgende Syntax ist compilerspezifisch.</span><span class="sxs-lookup"><span data-stu-id="4457f-110">The following syntax is compiler specific.</span></span> <span data-ttu-id="4457f-111">Wenn Sie den Compiler als c# oder Visual Basic verwenden, finden Sie in der Dokumentation für den Compiler.</span><span class="sxs-lookup"><span data-stu-id="4457f-111">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="4457f-112">Fügen Sie zum Aktivieren des Debuggens in C# geschrieben, die `/d:DEBUG` Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder Sie fügen `#define DEBUG` an den Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="4457f-112">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="4457f-113">Fügen Sie in Visual Basic die `/d:DEBUG=True` -Kennzeichen an die Befehlszeile des Compilers.</span><span class="sxs-lookup"><span data-stu-id="4457f-113">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="4457f-114">Fügen Sie zum Aktivieren der Ablaufverfolgung in c# die `/d:TRACE` Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder fügen `#define TRACE` an den Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="4457f-114">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="4457f-115">Fügen Sie in Visual Basic die `/d:TRACE=True` -Kennzeichen an die Befehlszeile des Compilers.</span><span class="sxs-lookup"><span data-stu-id="4457f-115">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="4457f-116">Um einen Ablaufverfolgungslistener hinzufügen, bearbeiten Sie die Konfigurationsdatei, die den Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="4457f-116">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="4457f-117">In dieser Datei können Sie einen Listener hinzufügen, legen Sie deren Typ und legen Sie die Parameter, einen Listener zu entfernen oder deaktivieren Sie die Listener, die zuvor von der Anwendung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="4457f-117">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="4457f-118">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert werden.</span><span class="sxs-lookup"><span data-stu-id="4457f-118">The configuration file should be formatted like the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener"   
          type="System.Diagnostics.TextWriterTraceListener"   
          initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="4457f-119">Wenn versucht wird, in eine Datei schreiben, die verwendet wird oder nicht verfügbar ist, der Dateinamen automatisch eine GUID vorangestellt ist.</span><span class="sxs-lookup"><span data-stu-id="4457f-119">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-120">Im folgende Beispiel implementiert eine Instanz der <xref:System.Diagnostics.TextWriterTraceListener> -Klasse, verwendet eine <xref:System.IO.StreamWriter> aufgerufen `myOutputWriter` zum Schreiben in eine Datei namens `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="4457f-120">The following example implements an instance of the <xref:System.Diagnostics.TextWriterTraceListener> class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="4457f-121">Das Beispiel erstellt zuerst eine Datei für die Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="4457f-121">First the example creates a file for output.</span></span> <span data-ttu-id="4457f-122">Anschließend es erstellt die <xref:System.IO.StreamWriter> für den ersten TextWriter, weist sie der Ausgabedatei und fügt es der <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="4457f-122">Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="4457f-123">Anschließend gibt der Code eine Textzeile in der Datei.</span><span class="sxs-lookup"><span data-stu-id="4457f-123">Then, the code outputs one line of text to the file.</span></span> <span data-ttu-id="4457f-124">Schließlich wird im Beispiel den Ausgabepuffer geleert.</span><span class="sxs-lookup"><span data-stu-id="4457f-124">Finally, the example flushes the output buffer.</span></span>  
  
 <span data-ttu-id="4457f-125">Nach dem Ausführen dieses Beispiels können Sie öffnen die `TestFile.txt` Datei, um die Ausgabe zu sehen.</span><span class="sxs-lookup"><span data-stu-id="4457f-125">After running this sample, you can open the `TestFile.txt` file to see the output.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4457f-126">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-126">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4457f-127">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit <see cref="T:System.IO.TextWriter" /> Empfänger der Ausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-127">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with <see cref="T:System.IO.TextWriter" /> as the output recipient.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-128">Dieser Konstruktor verwendet den <xref:System.IO.TextWriter> Stream als Empfänger der Ablaufverfolgung oder debuggingausgabe.</span><span class="sxs-lookup"><span data-stu-id="4457f-128">This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output.</span></span> <span data-ttu-id="4457f-129">Die <xref:System.Diagnostics.TraceListener.Name%2A> -Eigenschaft wird initialisiert, um eine leere Zeichenfolge ("", oder <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="4457f-129">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-130">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe der <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="4457f-130">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> constructor.</span></span> <span data-ttu-id="4457f-131">Wird die <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> -Eigenschaft auf der Konsole ausgegeben, und fügt dann die <xref:System.Diagnostics.TextWriterTraceListener> auf die <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-131">It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-132">Er schreibt eine Meldung in zwei Segmente und schließt dann die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="4457f-132">It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="4457f-133">Ein <see cref="T:System.IO.Stream" />, der den Stream darstellt, in den der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-133">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-134">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem Stream als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-134">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the stream as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-135">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="4457f-135">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-136">Das folgende Codebeispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe der <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> Konstruktor und fügt es der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-136">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-137">Das Beispiel schreibt dann zwei Nachrichten an diese <xref:System.Diagnostics.TextWriterTraceListener>, und schreibt eine Meldung an alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-137">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-138">Schließlich wird geleert und schließt die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="4457f-138">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstream.cs#1)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstream.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4457f-139">Der Stream ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-139">The stream is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="4457f-140">Ein <see cref="T:System.IO.TextWriter" />, der die Ausgabe vom <see cref="T:System.Diagnostics.TextWriterTraceListener" /> empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-140">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-141">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Writer als Empfänger der Ablaufverfolgungs- oder Debugausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-141">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class using the specified writer as recipient of the tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-142">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="4457f-142">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-143">Das folgende Codebeispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe der <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="4457f-143">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> constructor.</span></span> <span data-ttu-id="4457f-144">Das Beispiel erstellt eine <xref:System.IO.StreamWriter>, verweist dann auf die <xref:System.IO.StreamWriter> beim Erstellen der <xref:System.Diagnostics.TextWriterTraceListener>, wodurch er dann hinzugefügt der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-144">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-145">Das Beispiel schreibt eine Meldung an alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>, schließt dies dann <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="4457f-145">The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4457f-146">Der Writer ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-146">The writer is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="4457f-147">Der Name der Datei, in die der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-147">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-148">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit der Datei als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-148">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the file as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-149">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="4457f-149">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-150">Das folgende Codebeispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe der <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> Konstruktor, fügt es dann der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-150">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-151">Das Beispiel schreibt zwei Nachrichten an diese <xref:System.Diagnostics.TextWriterTraceListener>, schreibt dann eine Nachricht an alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-151">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-152">Schließlich wird geleert und schließt die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="4457f-152">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstring.cs#3)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstring.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4457f-153">Die Datei ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-153">The file is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="4457f-154">Ein <see cref="T:System.IO.Stream" />, der den Stream darstellt, in den der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-154">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="4457f-155">Der Name der neuen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-155">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-156">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Namen und unter Verwendung des Streams als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-156">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the stream as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-157">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft, um die `name` Parameter oder eine leere Zeichenfolge (""), wenn die `name` Parameter ist `null`.</span><span class="sxs-lookup"><span data-stu-id="4457f-157">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-158">Das folgende Codebeispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe der <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> Konstruktor und fügt es der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-158">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-159">Das Beispiel schreibt dann zwei Nachrichten an diese <xref:System.Diagnostics.TextWriterTraceListener> und schreibt eine Meldung an alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-159">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-160">Schließlich wird geleert und schließt die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="4457f-160">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstreamname.cs#2)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstreamname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4457f-161">Der Stream ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-161">The stream is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="4457f-162">Ein <see cref="T:System.IO.TextWriter" />, der die Ausgabe vom <see cref="T:System.Diagnostics.TextWriterTraceListener" /> empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-162">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="4457f-163">Der Name der neuen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-163">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-164">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Namen und unter Verwendung des angegebenen Writers als Empfänger der Ablaufverfolgungs- oder Debugausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-164">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4457f-165">Das folgende Codebeispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe der <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="4457f-165">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor.</span></span> <span data-ttu-id="4457f-166">Das Beispiel erstellt eine <xref:System.IO.StreamWriter>, verweist dann auf die <xref:System.IO.StreamWriter> beim Erstellen der <xref:System.Diagnostics.TextWriterTraceListener>, wodurch er dann hinzugefügt der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-166">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-167">Das Beispiel schreibt zwei Nachrichten an diese <xref:System.Diagnostics.TextWriterTraceListener>, schreibt dann eine Nachricht an alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-167">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-168">Schließlich wird geleert und schließt die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="4457f-168">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconwritername.cs#5)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconwritername.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4457f-169">Der Writer ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-169">The writer is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="4457f-170">Der Name der Datei, in die der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-170">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="4457f-171">Der Name der neuen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-171">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-172">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Namen und unter Verwendung der Datei als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-172">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the file as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-173">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft, um die `name` Parameter oder eine leere Zeichenfolge (""), wenn die `name` Parameter ist `null`.</span><span class="sxs-lookup"><span data-stu-id="4457f-173">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-174">Das folgende Codebeispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe der <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> Konstruktor, fügt es dann der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-174">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-175">Das Beispiel schreibt zwei Nachrichten an diese <xref:System.Diagnostics.TextWriterTraceListener>, schreibt dann eine Nachricht an alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="4457f-175">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="4457f-176">Schließlich wird geleert und schließt die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="4457f-176">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstringname.cs#4)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstringname.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4457f-177">Der Stream ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-177">The stream is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4457f-178">Schließt den <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />, sodass dieser keine Ablaufverfolgungs- oder Debugausgabe mehr empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-178">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> so that it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-179">Aufrufen einer <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> oder <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> Methode nach dem Aufruf <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatisch erneut öffnet den Stream.</span><span class="sxs-lookup"><span data-stu-id="4457f-179">Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4457f-180">Das folgende Beispiel implementiert eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`, verwendet eine <xref:System.IO.StreamWriter> aufgerufen `myOutputWriter` zum Schreiben in eine Datei namens `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="4457f-180">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="4457f-181">Das Beispiel erstellt die Datei, Streams und ein TextWriter, schreibt eine Textzeile in der Datei, und klicken Sie dann leert und schließt den Stream.</span><span class="sxs-lookup"><span data-stu-id="4457f-181">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4457f-182">
            <see langword="true" />, um verwaltete Ressourcen freizugeben. Wenn der Wert <see langword="false" /> ist, hat <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> keine Auswirkungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-182">
              <see langword="true" /> to release managed resources; if <see langword="false" />, <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-183">Gibt dieses <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Objekt frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-183">Disposes this <see cref="T:System.Diagnostics.TextWriterTraceListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4457f-184">Verwenden der <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> Methode der <xref:System.Diagnostics.TextWriterTraceListener> Klasse, um die verwalteten Ressourcen freigegeben ein <xref:System.Diagnostics.TextWriterTraceListener> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4457f-184">Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4457f-185">Leert den Ausgabepuffer von <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-185">Flushes the output buffer for the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4457f-186">Das folgende Beispiel implementiert eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`, verwendet eine <xref:System.IO.StreamWriter> aufgerufen `myOutputWriter` zum Schreiben in eine Datei namens `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="4457f-186">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="4457f-187">Das Beispiel erstellt die Datei, Streams und ein TextWriter, schreibt eine Textzeile in der Datei, und klicken Sie dann leert und schließt den Stream.</span><span class="sxs-lookup"><span data-stu-id="4457f-187">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="4457f-188">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-188">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-189">Schreibt eine Meldung in den <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-189">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4457f-190">Das folgende Beispiel implementiert eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myWriter` in das Konsolenfenster geschrieben.</span><span class="sxs-lookup"><span data-stu-id="4457f-190">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="4457f-191">Im Beispiel werden zwei Zeilen in das Konsolenfenster geschrieben.</span><span class="sxs-lookup"><span data-stu-id="4457f-191">The example writes two lines to the console screen.</span></span> <span data-ttu-id="4457f-192">Beachten Sie, dass der zweite Schreibvorgang auf derselben Zeile wie der erste Schreibvorgang angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="4457f-192">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="4457f-193">Im Beispiel wird anschließend leert und schließt den Stream.</span><span class="sxs-lookup"><span data-stu-id="4457f-193">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="4457f-194">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-194">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4457f-195">Schreibt eine Meldung, gefolgt von einem Zeichen für den Zeilenabschluss, in den <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-195">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> followed by a line terminator.</span>
          </span>
          <span data-ttu-id="4457f-196">Der Standardzeilenabschluss ist ein Wagenrücklauf, gefolgt von einem Zeilenvorschub (\r\n).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-196">The default line terminator is a carriage return followed by a line feed (\r\n).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4457f-197">Das folgende Beispiel implementiert eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myWriter` in das Konsolenfenster geschrieben.</span><span class="sxs-lookup"><span data-stu-id="4457f-197">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="4457f-198">Im Beispiel werden zwei Zeilen in das Konsolenfenster geschrieben.</span><span class="sxs-lookup"><span data-stu-id="4457f-198">The example writes two lines to the console screen.</span></span> <span data-ttu-id="4457f-199">Beachten Sie, dass der zweite Schreibvorgang auf derselben Zeile wie der erste Schreibvorgang angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="4457f-199">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="4457f-200">Im Beispiel wird anschließend leert und schließt den Stream.</span><span class="sxs-lookup"><span data-stu-id="4457f-200">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4457f-201">Ruft den Textwriter ab, der die Ablaufverfolgungs- oder Debugausgabe empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-201">Gets or sets the text writer that receives the tracing or debugging output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4457f-202">Ein <see cref="T:System.IO.TextWriter" />, der den Writer darstellt, der die Ablaufverfolgungs- oder Debugausgabe empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4457f-202">A <see cref="T:System.IO.TextWriter" /> that represents the writer that receives the tracing or debugging output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4457f-203">Das folgende Beispiel erstellt eine <xref:System.Diagnostics.TextWriterTraceListener> , in das Konsolenfenster ausgibt.</span><span class="sxs-lookup"><span data-stu-id="4457f-203">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen.</span></span> <span data-ttu-id="4457f-204">Dann der Code den neuen Ablaufverfolgungslistener fügt die <xref:System.Diagnostics.Trace.Listeners%2A> in der Trace-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4457f-204">Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>