<Type Name="TextWriterTraceListener" FullName="System.Diagnostics.TextWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4351eb9fe25806926720d1c96ffdde143d08d7a0" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82474582" /></Metadata><TypeSignature Language="C#" Value="public class TextWriterTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextWriterTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TextWriterTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriterTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type TextWriterTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c67c1-101">Leitet die Ablaufverfolgungs- oder Debugausgabe an einen <see cref="T:System.IO.TextWriter" /> oder <see cref="T:System.IO.Stream" />, z. B. <see cref="T:System.IO.FileStream" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-101">Directs tracing or debugging output to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-102">Die <xref:System.Diagnostics.TextWriterTraceListener>-Klasse stellt die <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>-Eigenschaft bereit, um den TextWriter, der die Ablaufverfolgungs-oder Debugausgabe empfängt, zu erhalten</span><span class="sxs-lookup"><span data-stu-id="c67c1-102">The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c67c1-103">Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="c67c1-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="c67c1-104">Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="c67c1-105">Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf.</span><span class="sxs-lookup"><span data-stu-id="c67c1-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="c67c1-106">Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c67c1-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="c67c1-107">Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.</span><span class="sxs-lookup"><span data-stu-id="c67c1-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="c67c1-108">Diese Klasse stellt auch Methoden zum <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> der <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> bereit, sodass Sie keine Ablaufverfolgungs-oder Debugausgaben mehr empfängt, um den Ausgabepuffer für den <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>zu <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> und eine Meldung an die <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> zu <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span><span class="sxs-lookup"><span data-stu-id="c67c1-108">This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span></span>  
  
 <span data-ttu-id="c67c1-109">Sie müssen die Ablauf Verfolgung oder das Debuggen für die Verwendung eines Ablaufverfolgungs</span><span class="sxs-lookup"><span data-stu-id="c67c1-109">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="c67c1-110">Die folgende Syntax ist compilerspezifisch.</span><span class="sxs-lookup"><span data-stu-id="c67c1-110">The following syntax is compiler specific.</span></span> <span data-ttu-id="c67c1-111">Wenn Sie andere Compiler als C# oder Visual Basic verwenden, finden Sie in der Dokumentation Ihres Compiler weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-111">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="c67c1-112">Um das Debuggen in C#zu aktivieren, fügen Sie das `/d:DEBUG`-Flag zur Compilerbefehlszeile hinzu, wenn Sie den Code kompilieren, oder Sie können `#define DEBUG` am Anfang der Datei hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-112">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="c67c1-113">Fügen Sie in Visual Basic der Compilerbefehlszeile das `/d:DEBUG=True`-Flag hinzu.</span><span class="sxs-lookup"><span data-stu-id="c67c1-113">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="c67c1-114">Fügen Sie zum Aktivieren C#der Ablauf Verfolgung in der Compilerbefehlszeile das `/d:TRACE`-Flag hinzu, wenn Sie den Code kompilieren, oder fügen Sie `#define TRACE` am Anfang der Datei hinzu.</span><span class="sxs-lookup"><span data-stu-id="c67c1-114">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="c67c1-115">Fügen Sie in Visual Basic der Compilerbefehlszeile das `/d:TRACE=True`-Flag hinzu.</span><span class="sxs-lookup"><span data-stu-id="c67c1-115">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="c67c1-116">Wenn Sie einen Ablaufverfolgungslistener hinzufügen möchten, bearbeiten Sie die Konfigurationsdatei, die dem Namen der Anwendung entspricht.</span><span class="sxs-lookup"><span data-stu-id="c67c1-116">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c67c1-117">Innerhalb dieser Datei können Sie einen Listener hinzufügen, seinen Typ festlegen und dessen Parameter festlegen, einen Listener entfernen oder alle Listener löschen, die zuvor von der Anwendung festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="c67c1-117">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="c67c1-118">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein.</span><span class="sxs-lookup"><span data-stu-id="c67c1-118">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener"   
          type="System.Diagnostics.TextWriterTraceListener"   
          initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="c67c1-119">Wenn versucht wird, in eine Datei zu schreiben, die verwendet wird oder nicht verfügbar ist, wird dem Dateinamen automatisch eine GUID vorangestellt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-119">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-120">Im folgenden Beispiel wird eine Instanz der <xref:System.Diagnostics.TextWriterTraceListener>-Klasse implementiert, die eine <xref:System.IO.StreamWriter> namens `myOutputWriter` zum Schreiben in eine Datei mit dem Namen `TestFile.txt`verwendet.</span><span class="sxs-lookup"><span data-stu-id="c67c1-120">The following example implements an instance of the <xref:System.Diagnostics.TextWriterTraceListener> class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="c67c1-121">Zunächst wird im Beispiel eine Datei für die Ausgabe erstellt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-121">First the example creates a file for output.</span></span> <span data-ttu-id="c67c1-122">Anschließend wird der <xref:System.IO.StreamWriter> für den ersten TextWriter erstellt, der Ausgabedatei zugewiesen und der <xref:System.Diagnostics.Trace.Listeners%2A>hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-122">Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c67c1-123">Anschließend gibt der Code eine Textzeile in die Datei aus.</span><span class="sxs-lookup"><span data-stu-id="c67c1-123">Then, the code outputs one line of text to the file.</span></span> <span data-ttu-id="c67c1-124">Schließlich leert das Beispiel den Ausgabepuffer.</span><span class="sxs-lookup"><span data-stu-id="c67c1-124">Finally, the example flushes the output buffer.</span></span>  
  
 <span data-ttu-id="c67c1-125">Nachdem Sie dieses Beispiel ausgeführt haben, können Sie die `TestFile.txt` Datei öffnen, um die Ausgabe anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-125">After running this sample, you can open the `TestFile.txt` file to see the output.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c67c1-126">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-126">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c67c1-127">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit <see cref="T:System.IO.TextWriter" /> Empfänger der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-127">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with <see cref="T:System.IO.TextWriter" /> as the output recipient.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-128">Dieser Konstruktor verwendet den <xref:System.IO.TextWriter> Stream als Empfänger der Ablaufverfolgungs-oder Debugausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-128">This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output.</span></span> <span data-ttu-id="c67c1-129">Die <xref:System.Diagnostics.TraceListener.Name%2A>-Eigenschaft wird mit einer leeren Zeichenfolge ("" oder <xref:System.String.Empty?displayProperty=nameWithType>) initialisiert.</span><span class="sxs-lookup"><span data-stu-id="c67c1-129">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-130">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem <xref:System.Diagnostics.TextWriterTraceListener.%23ctor>-Konstruktor erstellt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-130">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> constructor.</span></span> <span data-ttu-id="c67c1-131">Die <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>-Eigenschaft wird auf die Konsolenausgabe festgelegt, und dann wird die <xref:System.Diagnostics.TextWriterTraceListener> dem <xref:System.Diagnostics.TraceListenerCollection>hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-131">It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-132">Er schreibt eine Nachricht in zwei Segmenten und schließt dann die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c67c1-132">It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="c67c1-133">Ein <see cref="T:System.IO.Stream" />, der den Stream darstellt, in den der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-133">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="c67c1-134">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem Stream als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-134">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-135">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A>-Eigenschaft auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="c67c1-135">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-136">Im folgenden Codebeispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe des <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29>-Konstruktors erstellt und dem <xref:System.Diagnostics.TraceListenerCollection>hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-136">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-137">Im Beispiel werden dann zwei Nachrichten in diese <xref:System.Diagnostics.TextWriterTraceListener>geschrieben, und es wird eine Meldung in alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-137">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-138">Schließlich leert und schließt er die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c67c1-138">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstream.cs#1)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstream.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c67c1-139">Der Stream ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-139">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="c67c1-140">Ein <see cref="T:System.IO.TextWriter" />, der die Ausgabe vom <see cref="T:System.Diagnostics.TextWriterTraceListener" /> empfängt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-140">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <summary><span data-ttu-id="c67c1-141">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Writer als Empfänger der Ablaufverfolgungs- oder Debugausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-141">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-142">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A>-Eigenschaft auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="c67c1-142">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-143">Im folgenden Codebeispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29>-Konstruktor erstellt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-143">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> constructor.</span></span> <span data-ttu-id="c67c1-144">Im Beispiel wird eine <xref:System.IO.StreamWriter>erstellt und dann auf die <xref:System.IO.StreamWriter> verwiesen, wenn die <xref:System.Diagnostics.TextWriterTraceListener>erstellt wird, die dann dem <xref:System.Diagnostics.TraceListenerCollection>hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c67c1-144">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-145">Im Beispiel wird eine Meldung in alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>geschrieben, und diese <xref:System.Diagnostics.TextWriterTraceListener>wird geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-145">The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c67c1-146">Der Writer ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-146">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c67c1-147">Der Name der Datei, in die der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-147">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="c67c1-148">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit der Datei als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-148">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-149">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A>-Eigenschaft auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="c67c1-149">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-150">Im folgenden Codebeispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe des <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29>-Konstruktors erstellt und dann dem <xref:System.Diagnostics.TraceListenerCollection>hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-150">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-151">Im Beispiel werden zwei Nachrichten in dieses <xref:System.Diagnostics.TextWriterTraceListener>geschrieben, und anschließend wird eine Nachricht in alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-151">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-152">Schließlich leert und schließt er die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c67c1-152">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstring.cs#3)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstring.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c67c1-153">Die Datei ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-153">The file is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="c67c1-154">Ein <see cref="T:System.IO.Stream" />, der den Stream darstellt, in den der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-154">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="c67c1-155">Der Name der neuen Instanz.</span><span class="sxs-lookup"><span data-stu-id="c67c1-155">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="c67c1-156">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Namen und unter Verwendung des Streams als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-156">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-157">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A>-Eigenschaft für den `name`-Parameter oder eine leere Zeichenfolge (""), wenn der `name`-Parameter `null`ist.</span><span class="sxs-lookup"><span data-stu-id="c67c1-157">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-158">Im folgenden Codebeispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe des <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29>-Konstruktors erstellt und dem <xref:System.Diagnostics.TraceListenerCollection>hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-158">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-159">Im Beispiel werden dann zwei Nachrichten in diese <xref:System.Diagnostics.TextWriterTraceListener> geschrieben und eine Meldung in alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-159">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-160">Schließlich leert und schließt er die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c67c1-160">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstreamname.cs#2)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstreamname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c67c1-161">Der Stream ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-161">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="c67c1-162">Ein <see cref="T:System.IO.TextWriter" />, der die Ausgabe vom <see cref="T:System.Diagnostics.TextWriterTraceListener" /> empfängt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-162">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <param name="name"><span data-ttu-id="c67c1-163">Der Name der neuen Instanz.</span><span class="sxs-lookup"><span data-stu-id="c67c1-163">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="c67c1-164">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Namen und unter Verwendung des angegebenen Writers als Empfänger der Ablaufverfolgungs- oder Debugausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-164">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c67c1-165">Im folgenden Codebeispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29>-Konstruktor erstellt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-165">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor.</span></span> <span data-ttu-id="c67c1-166">Im Beispiel wird eine <xref:System.IO.StreamWriter>erstellt und dann auf die <xref:System.IO.StreamWriter> verwiesen, wenn die <xref:System.Diagnostics.TextWriterTraceListener>erstellt wird, die dann dem <xref:System.Diagnostics.TraceListenerCollection>hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="c67c1-166">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-167">Im Beispiel werden zwei Nachrichten in dieses <xref:System.Diagnostics.TextWriterTraceListener>geschrieben, und anschließend wird eine Nachricht in alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-167">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-168">Schließlich leert und schließt er die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c67c1-168">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconwritername.cs#5)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconwritername.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c67c1-169">Der Writer ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-169">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : string * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (fileName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="c67c1-170">Der Name der Datei, in die der <see cref="T:System.Diagnostics.TextWriterTraceListener" /> schreibt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-170">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="c67c1-171">Der Name der neuen Instanz.</span><span class="sxs-lookup"><span data-stu-id="c67c1-171">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="c67c1-172">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Klasse mit dem angegebenen Namen und unter Verwendung der Datei als Empfänger der Debug- oder Ablaufverfolgungsausgabe.</span><span class="sxs-lookup"><span data-stu-id="c67c1-172">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-173">Dieser Konstruktor initialisiert die <xref:System.Diagnostics.TraceListener.Name%2A>-Eigenschaft für den `name`-Parameter oder eine leere Zeichenfolge (""), wenn der `name`-Parameter `null`ist.</span><span class="sxs-lookup"><span data-stu-id="c67c1-173">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-174">Im folgenden Codebeispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mithilfe des <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29>-Konstruktors erstellt und dann dem <xref:System.Diagnostics.TraceListenerCollection>hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-174">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-175">Im Beispiel werden zwei Nachrichten in dieses <xref:System.Diagnostics.TextWriterTraceListener>geschrieben, und anschließend wird eine Nachricht in alle <xref:System.Diagnostics.TraceListener> Objekte in der <xref:System.Diagnostics.TraceListenerCollection>geschrieben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-175">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="c67c1-176">Schließlich leert und schließt er die <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c67c1-176">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstringname.cs#4)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstringname.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c67c1-177">Der Stream ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-177">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="textWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c67c1-178">Schließt den <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />, sodass dieser keine Ablaufverfolgungs- oder Debugausgabe mehr empfängt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-178">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-179">Durch Aufrufen einer <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> oder <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> Methode nach dem Aufrufen von <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> wird der Stream automatisch erneut geöffnet.</span><span class="sxs-lookup"><span data-stu-id="c67c1-179">Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c67c1-180">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`implementiert, in der ein <xref:System.IO.StreamWriter> mit dem Namen `myOutputWriter` zum Schreiben in eine Datei mit dem Namen `TestFile.txt`verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c67c1-180">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="c67c1-181">Im Beispiel werden die Datei, der Stream und der TextWriter erstellt, eine Textzeile in die Datei geschrieben und dann der Stream geleert und geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-181">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="textWriterTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="c67c1-182"><see langword="true" />, um verwaltete Ressourcen freizugeben. Wenn der Wert <see langword="false" /> ist, hat <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-182"><see langword="true" /> to release managed resources; if <see langword="false" />, <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> has no effect.</span></span></param>
        <summary><span data-ttu-id="c67c1-183">Gibt dieses <see cref="T:System.Diagnostics.TextWriterTraceListener" />-Objekt frei.</span><span class="sxs-lookup"><span data-stu-id="c67c1-183">Disposes this <see cref="T:System.Diagnostics.TextWriterTraceListener" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67c1-184">Verwenden Sie die <xref:System.Diagnostics.TextWriterTraceListener.Close%2A>-Methode der <xref:System.Diagnostics.TextWriterTraceListener>-Klasse, um die verwalteten Ressourcen eines <xref:System.Diagnostics.TextWriterTraceListener>-Objekts freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-184">Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="textWriterTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c67c1-185">Leert den Ausgabepuffer von <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span><span class="sxs-lookup"><span data-stu-id="c67c1-185">Flushes the output buffer for the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c67c1-186">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myTextListener`implementiert, in der ein <xref:System.IO.StreamWriter> mit dem Namen `myOutputWriter` zum Schreiben in eine Datei mit dem Namen `TestFile.txt`verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c67c1-186">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="c67c1-187">Im Beispiel werden die Datei, der Stream und der TextWriter erstellt, eine Textzeile in die Datei geschrieben und dann der Stream geleert und geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c67c1-187">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="textWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="c67c1-188">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="c67c1-188">A message to write.</span></span></param>
        <summary><span data-ttu-id="c67c1-189">Schreibt eine Meldung in den <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="c67c1-189">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c67c1-190">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myWriter` implementiert, um auf den Konsolenbildschirm zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-190">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="c67c1-191">Im Beispiel werden zwei Zeilen in den Konsolenbildschirm geschrieben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-191">The example writes two lines to the console screen.</span></span> <span data-ttu-id="c67c1-192">Beachten Sie, dass der zweite Schreibvorgang in derselben Zeile wie der erste Schreibvorgang angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="c67c1-192">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="c67c1-193">Das Beispiel leert und schließt den Stream.</span><span class="sxs-lookup"><span data-stu-id="c67c1-193">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="textWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="c67c1-194">Eine zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="c67c1-194">A message to write.</span></span></param>
        <summary><span data-ttu-id="c67c1-195">Schreibt eine Meldung, gefolgt von einem Zeichen für den Zeilenabschluss, in den <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="c67c1-195">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> followed by a line terminator.</span></span> <span data-ttu-id="c67c1-196">Der Standardzeilenabschluss ist ein Wagenrücklauf, gefolgt von einem Zeilenvorschub (\r\n).</span><span class="sxs-lookup"><span data-stu-id="c67c1-196">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c67c1-197">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> mit dem Namen `myWriter` implementiert, um auf den Konsolenbildschirm zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-197">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="c67c1-198">Im Beispiel werden zwei Zeilen in den Konsolenbildschirm geschrieben.</span><span class="sxs-lookup"><span data-stu-id="c67c1-198">The example writes two lines to the console screen.</span></span> <span data-ttu-id="c67c1-199">Beachten Sie, dass der zweite Schreibvorgang in derselben Zeile wie der erste Schreibvorgang angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="c67c1-199">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="c67c1-200">Das Beispiel leert und schließt den Stream.</span><span class="sxs-lookup"><span data-stu-id="c67c1-200">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.IO.TextWriter with get, set" Usage="System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c67c1-201">Ruft den Textwriter ab, der die Ablaufverfolgungs- oder Debugausgabe empfängt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-201">Gets or sets the text writer that receives the tracing or debugging output.</span></span></summary>
        <value><span data-ttu-id="c67c1-202">Ein <see cref="T:System.IO.TextWriter" />, der den Writer darstellt, der die Ablaufverfolgungs- oder Debugausgabe empfängt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-202">A <see cref="T:System.IO.TextWriter" /> that represents the writer that receives the tracing or debugging output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c67c1-203">Im folgenden Beispiel wird eine <xref:System.Diagnostics.TextWriterTraceListener> erstellt, die auf den Konsolenbildschirm schreibt.</span><span class="sxs-lookup"><span data-stu-id="c67c1-203">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen.</span></span> <span data-ttu-id="c67c1-204">Anschließend fügt der Code den neuen Ablaufverfolgungslistener der <xref:System.Diagnostics.Trace.Listeners%2A> in der Trace-Klasse hinzu.</span><span class="sxs-lookup"><span data-stu-id="c67c1-204">Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
