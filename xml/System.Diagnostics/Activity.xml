<Type Name="Activity" FullName="System.Diagnostics.Activity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d153ac34ecfc1186bdba7d6f7187dc33b5e11c91" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83954238" /></Metadata><TypeSignature Language="C#" Value="public class Activity : IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Activity extends System.Object implements class System.IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Activity" />
  <TypeSignature Language="VB.NET" Value="Public Class Activity&#xA;Implements IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activity : IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type Activity = class&#xA;    interface IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C#" Value="public class Activity" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Activity extends System.Object" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Activity" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activity" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type Activity = class" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.1</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Stellt einen für die Protokollierung zu verwendenden Vorgang mit Kontext dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

Ein `Activity` weist einen Vorgangs Namen, eine ID, eine Startzeit und eine Dauer, Tags und ein Gepäck auf.

Auf die aktuelle Aktivität kann mit der statischen <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType>-Eigenschaft zugegriffen werden.

Aktivitäten sollten durch Aufrufen des-Konstruktors erstellt, bei Bedarf konfiguriert und dann mit der <xref:System.Diagnostics.Activity.Start%2A>-Methode gestartet werden, die Beziehungen zwischen übergeordneten und untergeordneten Elementen für die Aktivitäten beibehält und <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType>festlegt.

Wenn eine Aktivität abgeschlossen ist, sollte Sie mit der <xref:System.Diagnostics.Activity.Stop?displayProperty=nameWithType>-Methode beendet werden.

Keine `Activity` Methoden lassen Ausnahmen als Reaktion auf fehlerhafte Eingaben zu. Sie werden ausgelöst und abgefangen (sodass Debugger und Monitore den Fehler anzeigen können), aber die Ausnahme wird unterdrückt, und der Vorgang tut etwas Vernünftiges (in der Regel wird nichts unternommen).

         ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity (string operationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string operationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity(System::String ^ operationName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Activity : string -&gt; System.Diagnostics.Activity" Usage="new System.Diagnostics.Activity operationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operationName">Der Name des Vorgangs.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Diagnostics.Activity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Beachten Sie, dass <xref:System.Diagnostics.Activity> über ein "Builder"-Muster verfügt: Sie nennen den-Konstruktor, eine Reihe von `Set*` und `Add*`-APIs und wenden dann <xref:System.Diagnostics.Activity.Start> an, um die Aktivität zu erstellen. Sie **müssen** <xref:System.Diagnostics.Activity.Start> vor der Verwendung der neuen Instanz von abrufen.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivityTraceFlags">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivityTraceFlags ActivityTraceFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ActivityTraceFlags ActivityTraceFlags" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.ActivityTraceFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivityTraceFlags As ActivityTraceFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivityTraceFlags ActivityTraceFlags { System::Diagnostics::ActivityTraceFlags get(); void set(System::Diagnostics::ActivityTraceFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ActivityTraceFlags : System.Diagnostics.ActivityTraceFlags with get, set" Usage="System.Diagnostics.Activity.ActivityTraceFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityTraceFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die (durch die W3C ID-Spezifikation) definierten Flags ab, die der Aktivität zugeordnet sind.</summary>
        <value>die Flags, die der Aktivität zugeordnet sind.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBaggage">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity AddBaggage (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity AddBaggage(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBaggage (key As String, value As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ AddBaggage(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddBaggage : string * string -&gt; System.Diagnostics.Activity" Usage="activity.AddBaggage (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Gepäckschlüssel.</param>
        <param name="value">Der Gepäckinhalt.</param>
        <summary>Aktualisiert die <see cref="T:System.Diagnostics.Activity" />, um ein neues Gepäckstück mit den angegebenen Schlüssel und Wert zu erhalten.</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Dieses Schlüssel-Wert-Paar ist in der Auflistung enthalten, die von der <xref:System.Diagnostics.Activity.Baggage>-Eigenschaft zurückgegeben wird, und kann auch durch die <xref:System.Diagnostics.Activity.GetBaggageItem%2A>-Methode abgerufen werden.

`Baggage` ist für Informationen vorgesehen, die für die Lauf Zeitsteuerung benötigt werden. Um Informationen zu erhalten, die im Protokoll mit dem <xref:System.Diagnostics.Activity>angezeigt werden können, verwenden Sie die <xref:System.Diagnostics.Activity.Tags>-Eigenschaft.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity AddEvent (System.Diagnostics.ActivityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity AddEvent(valuetype System.Diagnostics.ActivityEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.AddEvent(System.Diagnostics.ActivityEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEvent (e As ActivityEvent) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ AddEvent(System::Diagnostics::ActivityEvent e);" />
      <MemberSignature Language="F#" Value="member this.AddEvent : System.Diagnostics.ActivityEvent -&gt; System.Diagnostics.Activity" Usage="activity.AddEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Diagnostics.ActivityEvent" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity AddTag (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity AddTag(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.AddTag(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTag (key As String, value As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ AddTag(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddTag : string * string -&gt; System.Diagnostics.Activity" Usage="activity.AddTag (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Tagschlüssel.</param>
        <param name="value">Der Tagwert.</param>
        <summary>Aktualisiert die <see cref="T:System.Diagnostics.Activity" />, um ein neues Tag mit dem angegebenen <paramref name="key" /> und <paramref name="value" />.</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Dieses Schlüssel-Wert-Paar ist in der Auflistung enthalten, die von der <xref:System.Diagnostics.Activity.Tags>-Eigenschaft zurückgegeben wird.

<xref:System.Diagnostics.Activity.Tags> ist für Informationen gedacht, die für die Protokollierung mit dem <xref:System.Diagnostics.Activity>nützlich sind. Informationen, die für die Lauf Zeitsteuerung erforderlich sind, finden Sie in der <xref:System.Diagnostics.Activity.Baggage>-Eigenschaft.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baggage">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; Baggage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; Baggage" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Baggage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Baggage As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ Baggage { System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Baggage : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="System.Diagnostics.Activity.Baggage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Sammlung von Schlüssel/Wert-Paaren, die Informationen darstellt, die an untergeordnete Elemente dieser <see cref="T:System.Diagnostics.Activity" /> übergeben werden.</summary>
        <value>Eine Enumeration von Schlüssel-Wert-Paaren für Zeichen folgen Zeichenfolgen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`Baggage` wird serialisiert, wenn Anforderungen den Prozess (zusammen mit der ID) verlassen. In der Regel wird `Baggage` für eine differenzierte Steuerung der Protokollierung der Aktivität und aller untergeordneten Elemente verwendet.  Im Allgemeinen sollten Sie, wenn Sie die Daten nicht zur Laufzeit verwenden, stattdessen <xref:System.Diagnostics.Activity.Tags> verwenden.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivityContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ActivityContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ActivityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivityContext Context { System::Diagnostics::ActivityContext get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Diagnostics.ActivityContext" Usage="System.Diagnostics.Activity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Activity Current { get; set; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.Activity Current" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As Activity" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::Activity ^ Current { System::Diagnostics::Activity ^ get(); void set(System::Diagnostics::Activity ^ value); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.Current : System.Diagnostics.Activity with get, set" Usage="System.Diagnostics.Activity.Current" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Activity Current { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As Activity" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::Activity ^ Current { System::Diagnostics::Activity ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberSignature Language="F#" Value="member this.Current : System.Diagnostics.Activity" Usage="System.Diagnostics.Activity.Current" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Vorgang (<see cref="T:System.Diagnostics.Activity" />) für den aktuellen Thread ab oder legt ihn fest.  Dieser fließt über asynchrone Aufrufe.</summary>
        <value>Der aktuelle Vorgang für den aktuellen Thread.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIdFormat">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivityIdFormat DefaultIdFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Diagnostics.ActivityIdFormat DefaultIdFormat" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.DefaultIdFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultIdFormat As ActivityIdFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::ActivityIdFormat DefaultIdFormat { System::Diagnostics::ActivityIdFormat get(); void set(System::Diagnostics::ActivityIdFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultIdFormat : System.Diagnostics.ActivityIdFormat with get, set" Usage="System.Diagnostics.Activity.DefaultIdFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityIdFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das standardmäßige ID-Format für die <see cref="T:System.Diagnostics.Activity" /> ab oder legt es fest.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

Die `Activity` Instanz versucht, das gleiche Format für IDs wie das übergeordnete Objekt zu verwenden. Wenn die Aktivität über kein übergeordnetes Element verfügt, bestimmt diese Eigenschaft das zu verwendende Standardformat.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Diagnostics.Activity.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="activity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Duration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Duration : TimeSpan" Usage="System.Diagnostics.Activity.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Dauer des Vorgangs ab.</summary>
        <value>Das Delta zwischen <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> und Endzeit, wenn die <see cref="T:System.Diagnostics.Activity" /> beendet wurde (<see cref="M:System.Diagnostics.Activity.Stop" /> oder <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> aufgerufen wurde), oder <see cref="F:System.TimeSpan.Zero" />, wenn die <see cref="T:System.Diagnostics.Activity" /> nicht beendet wurde und <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> nicht aufgerufen wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityEvent&gt; Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Diagnostics.ActivityEvent&gt; Events" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Events" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Events As IEnumerable(Of ActivityEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Diagnostics::ActivityEvent&gt; ^ Events { System::Collections::Generic::IEnumerable&lt;System::Diagnostics::ActivityEvent&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : seq&lt;System.Diagnostics.ActivityEvent&gt;" Usage="System.Diagnostics.Activity.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityEvent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceDefaultIdFormat">
      <MemberSignature Language="C#" Value="public static bool ForceDefaultIdFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ForceDefaultIdFormat" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.ForceDefaultIdFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForceDefaultIdFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ForceDefaultIdFormat { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceDefaultIdFormat : bool with get, set" Usage="System.Diagnostics.Activity.ForceDefaultIdFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob das <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> immer verwendet wird, um das standardmäßige ID-Format zu definieren, oder legt ihn fest.</summary>
        <value><see langword="true" /> immer das <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />verwenden; Andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

Wenn das <xref:System.Diagnostics.Activity.ParentId> definiert ist, bestimmt es normalerweise das Format, das von der aktuellen <xref:System.Diagnostics.Activity>verwendet wird. Wenn `ForceDefaultFormat` jedoch auf `true`festgelegt ist, wird das ID-Format immer von der <xref:System.Diagnostics.Activity.DefaultIdFormat>-Eigenschaft definiert, auch wenn das <xref:System.Diagnostics.Activity.ParentId> definiert und das übergeordnete Element ein anderes Format aufweist.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaggageItem">
      <MemberSignature Language="C#" Value="public string GetBaggageItem (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetBaggageItem(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.GetBaggageItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaggageItem (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetBaggageItem(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetBaggageItem : string -&gt; string" Usage="activity.GetBaggageItem key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Gepäckschlüssel.</param>
        <summary>Gibt den Wert eines Schlüssel-Wert-Paars zurück, das der Aktivität mithilfe von <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" /> hinzugefügt wurde.</summary>
        <returns>Der Wert des Schlüssel-Wert-Paarelements, wenn es vorhanden ist, oder <see langword="null" />, wenn es nicht vorhanden ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomProperty">
      <MemberSignature Language="C#" Value="public object GetCustomProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCustomProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.GetCustomProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomProperty (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomProperty(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetCustomProperty : string -&gt; obj" Usage="activity.GetCustomProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Diagnostics.Activity.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Bezeichner ab, der für eine bestimmte Anforderung spezifisch ist.</summary>
        <value>Die Aktivitäts-ID.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Eine ID weist eine hierarchische Struktur auf: `root-id.id1_id2.id3_`. Die ID wird generiert, wenn <xref:System.Diagnostics.Activity.Start> aufgerufen wird, indem ein Suffix an die `Activity.Parent.Id` oder die <xref:System.Diagnostics.Activity.ParentId>angehängt wird. Eine <xref:System.Diagnostics.Activity> hat keine ID, bis Sie gestartet wird. Weitere Informationen finden Sie unter [ID-Format](https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md#id-format).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdFormat">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivityIdFormat IdFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ActivityIdFormat IdFormat" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.IdFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdFormat As ActivityIdFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivityIdFormat IdFormat { System::Diagnostics::ActivityIdFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.IdFormat : System.Diagnostics.ActivityIdFormat" Usage="System.Diagnostics.Activity.IdFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityIdFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Format für die <see cref="P:System.Diagnostics.Activity.Id" /> ab.</summary>
        <value>Das Format für die <see cref="P:System.Diagnostics.Activity.Id" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAllDataRequested">
      <MemberSignature Language="C#" Value="public bool IsAllDataRequested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAllDataRequested" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.IsAllDataRequested" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAllDataRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAllDataRequested { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAllDataRequested : bool with get, set" Usage="System.Diagnostics.Activity.IsAllDataRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivityKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ActivityKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As ActivityKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivityKind Kind { System::Diagnostics::ActivityKind get(); };" />
      <MemberSignature Language="F#" Value="member this.Kind : System.Diagnostics.ActivityKind" Usage="System.Diagnostics.Activity.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Diagnostics.ActivityLink&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As IEnumerable(Of ActivityLink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Diagnostics::ActivityLink&gt; ^ Links { System::Collections::Generic::IEnumerable&lt;System::Diagnostics::ActivityLink&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : seq&lt;System.Diagnostics.ActivityLink&gt;" Usage="System.Diagnostics.Activity.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.ActivityLink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationName">
      <MemberSignature Language="C#" Value="public string OperationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperationName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.OperationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperationName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OperationName : string" Usage="System.Diagnostics.Activity.OperationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Vorgangs ab.</summary>
        <value>Der Name des Vorgangs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Ein Vorgangs Name ist der Name des *coarst* , der für das Gruppieren/Filtern nützlich ist. Der Name ist in der Regel eine Kompilierzeit Konstante. Namen von Rest-APIs sind vernünftig, aber Argumente (z. b. bestimmte Konten) dürfen nicht den Namen, sondern in den Tags aufweisen.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Activity Parent" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Activity ^ Parent { System::Diagnostics::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Diagnostics.Activity" Usage="System.Diagnostics.Activity.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die übergeordnete <see cref="T:System.Diagnostics.Activity" /> ab, die diese Aktivität erstellt hat.</summary>
        <value>Das übergeordnete Element dieser <see cref="T:System.Diagnostics.Activity" />, wenn Sie aus demselben Prozess besteht, oder <see langword="null" />, wenn diese Instanz über kein übergeordnetes Element verfügt (Dies ist eine Stamm Aktivität) oder wenn das übergeordnete Element außerhalb des Prozesses liegt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentId">
      <MemberSignature Language="C#" Value="public string ParentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.ParentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentId : string" Usage="System.Diagnostics.Activity.ParentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ID des übergeordneten Elements dieser Aktivität ab.</summary>
        <value>Die übergeordnete ID, sofern vorhanden, oder <see langword="null" />, wenn dies nicht der Fall ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Wenn das übergeordnete Element für dieses <xref:System.Diagnostics.Activity> von außerhalb des Prozesses stammt, verfügt das <xref:System.Diagnostics.Activity> nicht über ein übergeordnetes Element, *kann* jedoch über eine übergeordnete ID verfügen, die vom übergeordneten Element deserialisiert wurde.

Dieser Eigenschafts Wert kann `null` sein, wenn es sich um eine Stamm <xref:System.Diagnostics.Activity> handelt (d. h. es ist keine <xref:System.Diagnostics.Activity.Parent>). Weitere Informationen finden Sie unter [ID-Format](https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md#id-format).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentSpanId">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivitySpanId ParentSpanId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ActivitySpanId ParentSpanId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.ParentSpanId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentSpanId As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivitySpanId ParentSpanId { System::Diagnostics::ActivitySpanId get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentSpanId : System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.Activity.ParentSpanId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Diagnostics.Activity.SpanId" /> des übergeordneten Elements ab.</summary>
        <value>Der <see cref="P:System.Diagnostics.Activity.SpanId" />des übergeordneten Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

Wenn die <xref:System.Diagnostics.Activity.ParentId?displayProperty=nameWithType> im W3C-Format vorliegt, gibt diese Eigenschaft den <xref:System.Diagnostics.Activity.SpanId> Teil der parameentid zurück.  Andernfalls wird ein NULL-<xref:System.Diagnostics.Activity.SpanId>zurückgegeben.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recorded">
      <MemberSignature Language="C#" Value="public bool Recorded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recorded" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Recorded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Recorded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recorded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Recorded : bool" Usage="System.Diagnostics.Activity.Recorded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das W3CIdFlags.Recorded-Flag festgelegt ist.</summary>
        <value><see langword="true" />, wenn das Flag W3CIdFlags. aufgezeichnet festgelegt ist. Andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootId">
      <MemberSignature Language="C#" Value="public string RootId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.RootId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootId : string" Usage="System.Diagnostics.Activity.RootId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stamm-ID dieser <see cref="T:System.Diagnostics.Activity" /> ab.</summary>
        <value>Die Stamm-ID oder <see langword="null" />, wenn die aktuelle Instanz entweder über eine <see cref="P:System.Diagnostics.Activity.ParentId" /> oder eine <see cref="P:System.Diagnostics.Activity.Id" />verfügt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Stamm-ID ist eine Teil Zeichenfolge aus der <xref:System.Diagnostics.Activity.Id> oder der <xref:System.Diagnostics.Activity.ParentId>) zwischen "|". (oder der Anfang) und der erste `.`. Durch Filtern nach Stamm-ID können Sie alle Aktivitäten ermitteln, die an der Vorgangs Verarbeitung beteiligt sind. Weitere Informationen finden Sie unter [ID-Format](https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md#id-format).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCustomProperty">
      <MemberSignature Language="C#" Value="public void SetCustomProperty (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomProperty(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.SetCustomProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomProperty (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomProperty(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="member this.SetCustomProperty : string * obj -&gt; unit" Usage="activity.SetCustomProperty (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="propertyValue" Type="System.Object" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="propertyValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndTime">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity SetEndTime (DateTime endTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity SetEndTime(valuetype System.DateTime endTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEndTime (endTimeUtc As DateTime) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ SetEndTime(DateTime endTimeUtc);" />
      <MemberSignature Language="F#" Value="member this.SetEndTime : DateTime -&gt; System.Diagnostics.Activity" Usage="activity.SetEndTime endTimeUtc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="endTimeUtc">Die UTC-Beendigungszeit.</param>
        <summary>Aktualisiert die <see cref="T:System.Diagnostics.Activity" />, um ihre <see cref="P:System.Diagnostics.Activity.Duration" /> als die Differenz zwischen <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> und der angegebenen Beendigungszeit festzulegen.</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIdFormat">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity SetIdFormat (System.Diagnostics.ActivityIdFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity SetIdFormat(valuetype System.Diagnostics.ActivityIdFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetIdFormat (format As ActivityIdFormat) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ SetIdFormat(System::Diagnostics::ActivityIdFormat format);" />
      <MemberSignature Language="F#" Value="member this.SetIdFormat : System.Diagnostics.ActivityIdFormat -&gt; System.Diagnostics.Activity" Usage="activity.SetIdFormat format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Diagnostics.ActivityIdFormat" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="format">Einer der Enumerationswerte, der das Format der <see cref="P:System.Diagnostics.Activity.Id" />-Eigenschaft angibt.</param>
        <summary>Legt das ID-Format auf diese <see cref="T:System.Diagnostics.Activity" />-Eigenschaft fest, bevor es gestartet wird</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Das angegebene Format hat Vorrang vor `Parent.IdFormat`, dem <xref:System.Diagnostics.Activity.ParentId> Format, <xref:System.Diagnostics.Activity.DefaultIdFormat>und <xref:System.Diagnostics.Activity.ForceDefaultIdFormat>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentId">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity SetParentId (string parentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity SetParentId(string parentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.SetParentId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetParentId (parentId As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ SetParentId(System::String ^ parentId);" />
      <MemberSignature Language="F#" Value="member this.SetParentId : string -&gt; System.Diagnostics.Activity" Usage="activity.SetParentId parentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parentId">Die ID des übergeordneten Vorgangs.</param>
        <summary>Aktualisiert diese <see cref="T:System.Diagnostics.Activity" />, um anzugeben, dass die <see cref="T:System.Diagnostics.Activity" /> mit der ID <paramref name="parentId" /> diese <see cref="T:System.Diagnostics.Activity" /> verursacht hat.</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Eigenschaft sollte nur in Grenz Szenarios verwendet werden, in denen eine <xref:System.Diagnostics.Activity> aus einem anderen Prozess diese <xref:System.Diagnostics.Activity>logisch gestartet hat. Der `parentId` Ruft die <xref:System.Diagnostics.Activity.Tags> (sowie die <xref:System.Diagnostics.Activity.ParentId>-Eigenschaft) auf und kann zum Rekonstruieren der kausalen Struktur verwendet werden.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentId">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity SetParentId (System.Diagnostics.ActivityTraceId traceId, System.Diagnostics.ActivitySpanId spanId, System.Diagnostics.ActivityTraceFlags activityTraceFlags = System.Diagnostics.ActivityTraceFlags.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity SetParentId(valuetype System.Diagnostics.ActivityTraceId traceId, valuetype System.Diagnostics.ActivitySpanId spanId, valuetype System.Diagnostics.ActivityTraceFlags activityTraceFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetParentId (traceId As ActivityTraceId, spanId As ActivitySpanId, Optional activityTraceFlags As ActivityTraceFlags = System.Diagnostics.ActivityTraceFlags.None) As Activity" />
      <MemberSignature Language="F#" Value="member this.SetParentId : System.Diagnostics.ActivityTraceId * System.Diagnostics.ActivitySpanId * System.Diagnostics.ActivityTraceFlags -&gt; System.Diagnostics.Activity" Usage="activity.SetParentId (traceId, spanId, activityTraceFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceId" Type="System.Diagnostics.ActivityTraceId" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="spanId" Type="System.Diagnostics.ActivitySpanId" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="activityTraceFlags" Type="System.Diagnostics.ActivityTraceFlags" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="traceId">Die TraceId der übergeordneten Aktivität</param>
        <param name="spanId">Die SpanId der übergeordneten Aktivität</param>
        <param name="activityTraceFlags">Einer der Enumerationswerte, der durch den W3C-Standard definierte Flags angibt, die mit einer Aktivität verknüpft sind</param>
        <summary>Gibt die übergeordnete ID mithilfe der W3C-Konvention einer TraceId und einer SpanId an</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Methode hat den Vorteil, dass keine Zeichen folgen Bearbeitung erforderlich ist, um die ID festzulegen.

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStartTime">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity SetStartTime (DateTime startTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity SetStartTime(valuetype System.DateTime startTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetStartTime (startTimeUtc As DateTime) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ SetStartTime(DateTime startTimeUtc);" />
      <MemberSignature Language="F#" Value="member this.SetStartTime : DateTime -&gt; System.Diagnostics.Activity" Usage="activity.SetStartTime startTimeUtc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startTimeUtc">Die <see cref="T:System.Diagnostics.Activity" />-Anfangszeit in UTC.</param>
        <summary>Ruft die Anfangszeit dieser <see cref="T:System.Diagnostics.Activity" /> ab.</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivitySource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.ActivitySource Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As ActivitySource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivitySource ^ Source { System::Diagnostics::ActivitySource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Diagnostics.ActivitySource" Usage="System.Diagnostics.Activity.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpanId">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivitySpanId SpanId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ActivitySpanId SpanId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.SpanId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpanId As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivitySpanId SpanId { System::Diagnostics::ActivitySpanId get(); };" />
      <MemberSignature Language="F#" Value="member this.SpanId : System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.Activity.SpanId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den SPAN-Teil der <see cref="P:System.Diagnostics.Activity.Id" /> ab.</summary>
        <value>Die ID für den spannen Teil <see cref="P:System.Diagnostics.Activity.Id" />, wenn die <see cref="T:System.Diagnostics.Activity" /> das W3C-Format aufweist. Andernfalls ist der Wert 0 (null) <see langword="SpanId" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.Start" />
      <MemberSignature Language="VB.NET" Value="Public Function Start () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; System.Diagnostics.Activity" Usage="activity.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet die Aktivität.</summary>
        <returns><see langword="this" /> für komfortables Verketten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Wenn Sie die `Start`-Methode aufrufen, erfolgt Folgendes:
-   Legt <xref:System.Diagnostics.Activity.Parent> <xref:System.Diagnostics.Activity.Current>fest.
-   Legt <xref:System.Diagnostics.Activity.Current> auf diesen <xref:System.Diagnostics.Activity>fest.
-   Wenn <xref:System.Diagnostics.Activity.StartTimeUtc> nicht zuvor festgelegt wurde, wird es auf <xref:System.DateTime.UtcNow?displayProperty=nameWithType>festgelegt.
-   Generiert eine eindeutige <xref:System.Diagnostics.Activity.Id> für diese Aktivität.</item>

Verwenden Sie <xref:System.Diagnostics.DiagnosticSource.StartActivity%2A?displayProperty=nameWithType>, um den <see cref="T:System.Diagnostics.Activity" /> zu starten und das Start Ereignis zu schreiben.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime StartTimeUtc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime StartTimeUtc" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.StartTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime StartTimeUtc { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeUtc : DateTime" Usage="System.Diagnostics.Activity.StartTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeit ab, zu der der Vorgang gestartet wurde.</summary>
        <value>Die UTC-Zeit, zu der der Vorgang gestartet wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die `StartTimeUtc`-Eigenschaft wird in der Regel initialisiert, wenn <xref:System.Diagnostics.Activity.Start> aufgerufen wird. Sie kann jedoch jederzeit durch Aufrufen von <xref:System.Diagnostics.Activity.SetStartTime%2A>festgelegt werden.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Activity.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="activity.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die Aktivität.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Informationen werden nicht an die untergeordneten Elemente dieser <xref:System.Diagnostics.Activity>weitergegeben.
Aufrufen der `Stop`-Methode:

- Legt <xref:System.Diagnostics.Activity.Current> auf <xref:System.Diagnostics.Activity.Parent>fest.
- Wenn die Endzeit nicht zuvor festgelegt wurde, legt <xref:System.Diagnostics.Activity.Duration> als Unterschied zwischen <xref:System.DateTime.UtcNow?displayProperty=nameWithType> und <xref:System.Diagnostics.Activity.StartTimeUtc>fest.

Wenden Sie <xref:System.Diagnostics.DiagnosticSource.StopActivity%2A?displayProperty=nameWithType> an, um die <xref:System.Diagnostics.Activity> anzuhalten und das Ereignis zum Abbrechen zu schreiben.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; Tags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.Tags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tags As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ Tags { System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tags : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="System.Diagnostics.Activity.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Sammlung von Schlüssel/Wert-Paaren ab, die Informationen darstellt, die zusammen mit der <see cref="T:System.Diagnostics.Activity" /> im Protokollierungssystem aufgezeichnet werden.</summary>
        <value>Eine Enumeration von Schlüssel-Wert-Paaren für Zeichen folgen Zeichen folgen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceId">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ActivityTraceId TraceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ActivityTraceId TraceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.TraceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceId As ActivityTraceId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ActivityTraceId TraceId { System::Diagnostics::ActivityTraceId get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceId : System.Diagnostics.ActivityTraceId" Usage="System.Diagnostics.Activity.TraceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivityTraceId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den TraceId-Teil der <see cref="P:System.Diagnostics.Activity.Id" /> ab.</summary>
        <value>Die ID für den traceid-Teil der <see cref="P:System.Diagnostics.Activity.Id" />, wenn die ID das W3C-Format aufweist. andernfalls eine NULL-traceid.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceStateString">
      <MemberSignature Language="C#" Value="public string TraceStateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TraceStateString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Activity.TraceStateString" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceStateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TraceStateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TraceStateString : string with get, set" Usage="System.Diagnostics.Activity.TraceStateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den W3C-<see langword="tracestate" />-Header ab.</summary>
        <value>Der W3C-<see langword="tracestate" /> Header.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

Der `tracestate`-Header soll zusätzliche Informationen zur Ablauf Verfolgungs Identität enthalten, die in der übergeordneten Ablauf Verfolgung enthalten ist. `tracestate` besteht aus einer Liste von Schlüssel-Wert-Paaren, die Informationen über die Anforderungs Position in mehreren verteilten Ablauf Verfolgungs Diagrammen übermitteln. Diese Informationen werden in der Regel von verteilten Ablauf Verfolgungs Systemen verwendet und sollten nicht für allgemeines Gepäck verwendet werden, da dies die Korrelation einer verteilten Ablauf Verfolgung unterbrechen kann.

Logisch `TraceStateString` ist nur eine Art von Gepäck (bei Flows wie Gepäck), aber da es erwartet wird, dass es sich um ein Sonderzeichen handelt (es verfügt über einen eigenen HTTP-Header), ist es bequemer/effizienter, wenn es nicht mit anderem Gepäck gepuffert wird.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
