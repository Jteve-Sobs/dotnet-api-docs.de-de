<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3fb887e69cbce0df3845c3eef1e79b919a3ee40b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37664959" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5f4c5-101">Leitet Ablaufverfolgungs- und Debugausgaben entweder an die Standardausgabe oder an den Standardfehlerstream.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-101">Directs tracing or debugging output to either the standard output or the standard error stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f4c5-102">Verwenden der <xref:System.Diagnostics.ConsoleTraceListener> Klasse, um Ablaufverfolgungs- und Debugmeldungen an die Konsole schreiben.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-102">Use the <xref:System.Diagnostics.ConsoleTraceListener> class to write trace and debugging messages to the console.</span></span> <span data-ttu-id="5f4c5-103">Initialisieren Sie ein <xref:System.Diagnostics.ConsoleTraceListener> Objekt, das Schreiben von Ablaufverfolgungsnachrichten zu den <xref:System.Console.Out%2A?displayProperty=nameWithType> Stream oder das <xref:System.Console.Error%2A?displayProperty=nameWithType> Stream.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-103">You can initialize a <xref:System.Diagnostics.ConsoleTraceListener> object to write trace messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or to the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5f4c5-104"><xref:System.IDisposable> Eine Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="5f4c5-105">Wenn Sie mit dem Typ haben, sollten Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="5f4c5-106">Damit des Typs direkt freigegeben werden, rufen Sie die <xref:System.IDisposable.Dispose%2A> -Methode in einer`try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="5f4c5-107">Um sie indirekt löschen, verwenden Sie ein Sprachkonstrukt wie `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="5f4c5-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="5f4c5-108">Weitere Informationen finden Sie im Abschnitt "mithilfe von ein-Objekt, das implementiert" IDisposable "" in der <xref:System.IDisposable> schnittstellenthema.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="5f4c5-109">Bei der Ablaufverfolgungs- und Debugausgabe aktiviert ist, die <xref:System.Diagnostics.ConsoleTraceListener> Nachrichten geschrieben werden, mit dem angegebenen <xref:System.Console?displayProperty=nameWithType> Datenstrom, der ähnlich wie die Meldungen werden ausgegeben, mit der <xref:System.Console.Write%2A?displayProperty=nameWithType> oder <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-109">When trace and debugging output is enabled, the <xref:System.Diagnostics.ConsoleTraceListener> messages are written to the specified <xref:System.Console?displayProperty=nameWithType> stream, which is similar to the way messages are written with the <xref:System.Console.Write%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="5f4c5-110">In einer Konsolenanwendung die <xref:System.Console?displayProperty=nameWithType> Ausgabe- und Fehlerstreams Nachrichten in der vorhandenen Konsolenfenster geschrieben, oder Sie können zum Schreiben in Streams umleiten eine <xref:System.IO.TextWriter?displayProperty=nameWithType> Instanz.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-110">In a console application, the <xref:System.Console?displayProperty=nameWithType> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f4c5-111">Wenn die Konsole nicht, wie eine Windows-basierte Anwendung vorhanden ist, werden Nachrichten an die Konsole geschrieben nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-111">If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</span></span>  
  
 <span data-ttu-id="5f4c5-112">Hinzufügen einer <xref:System.Diagnostics.ConsoleTraceListener> Objekt an die entsprechende <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung, wenn Nachrichten, die geschrieben werden sollen <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, oder <xref:System.Diagnostics.Debug> , an die Konsole geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-112">Add a <xref:System.Diagnostics.ConsoleTraceListener> object to the appropriate <xref:System.Diagnostics.Trace.Listeners%2A> collection if you want messages written through <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, or <xref:System.Diagnostics.Debug> to be written to the console.</span></span> <span data-ttu-id="5f4c5-113">Darüber hinaus können Sie Nachrichten schreiben, direkt an die Konsole mit der <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> oder <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-113">In addition, you can write messages directly to the console using the <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f4c5-114">Die <xref:System.Diagnostics.Debug> und <xref:System.Diagnostics.Trace> Klassen verwenden dieselbe <xref:System.Diagnostics.TraceListenerCollection> -Auflistung, den jeweiligen `Listeners` Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-114">The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same <xref:System.Diagnostics.TraceListenerCollection> collection, accessed through their respective `Listeners` properties.</span></span> <span data-ttu-id="5f4c5-115">Wenn Sie beim Hinzufügen einer <xref:System.Diagnostics.ConsoleTraceListener> Objekt der Auflistung unter Verwendung einer dieser Klassen, die andere Klasse automatisch den gleichen Listener verwendet.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-115">If you add a <xref:System.Diagnostics.ConsoleTraceListener> object to the collection using one of these classes, the other class automatically uses the same listener.</span></span>  
  
 <span data-ttu-id="5f4c5-116">Die meisten Compiler aktivieren Sie die Ablaufverfolgung und debug-Ausgabe durch bedingte Kompilierung-Flags.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-116">Most compilers enable trace and debug output through conditional compilation flags.</span></span> <span data-ttu-id="5f4c5-117">Wenn Sie keine Ablaufverfolgungs- oder Debugmeldungen, die über geschrieben aktivieren die <xref:System.Diagnostics.Debug?displayProperty=nameWithType> und <xref:System.Diagnostics.Trace?displayProperty=nameWithType> Klassen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-117">If you do not enable tracing or debugging, the messages written through the <xref:System.Diagnostics.Debug?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes are effectively ignored.</span></span> <span data-ttu-id="5f4c5-118">Die Syntax zum Aktivieren der Ablaufverfolgung und debug-Ausgabe ist compilerspezifisch. Wenn Sie den Compiler als C#- oder Visual Basic verwenden, finden Sie in der Dokumentation zum Compiler.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-118">The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="5f4c5-119">Fügen Sie zum Debuggen in c# aktivieren die **: Debug**Flag, um die Befehlszeile des Compilers beim Kompilieren des Codes, oder Sie fügen **# DEBUG define** am Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-119">To enable debugging in C#, add the **/d:DEBUG**flag to the compiler command line when you compile your code, or you can add **#define DEBUG** to the top of your file.</span></span> <span data-ttu-id="5f4c5-120">Fügen Sie in Visual Basic die **: Debug = "true"** Flag zur Befehlszeile Compilers.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-120">In Visual Basic, add the **/d:DEBUG=True** flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="5f4c5-121">Fügen Sie zum Aktivieren der Ablaufverfolgung in c# die **r** Flag, um die Befehlszeile des Compilers beim Kompilieren des Codes hinzufügen oder **# ABLAUFVERFOLGUNG define** am Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-121">To enable tracing in C#, add the **/d:TRACE** flag to the compiler command line when you compile your code, or add **#define TRACE** to the top of your file.</span></span> <span data-ttu-id="5f4c5-122">Fügen Sie in Visual Basic die **r = True** Flag zur Befehlszeile Compilers.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-122">In Visual Basic, add the **/d:TRACE=True** flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="5f4c5-123">Können Sie hinzufügen eine <xref:System.Diagnostics.ConsoleTraceListener> -Objekt an der <xref:System.Diagnostics.Trace.Listeners%2A> Sammlung in Ihrem Code, oder Sie können hinzufügen eine <xref:System.Diagnostics.ConsoleTraceListener> -Objekt an der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung über die Konfigurationsdatei der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-123">You can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection in your code, or you can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection through the application configuration file.</span></span> <span data-ttu-id="5f4c5-124">Hinzufügen der <xref:System.Diagnostics.ConsoleTraceListener> Objekts in Ihrem Code zum Schreiben von Nachrichten für einen bestimmten Codepfad Abschnitt oder die Ausführung.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-124">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your code to write messages for a specific code section or execution path.</span></span> <span data-ttu-id="5f4c5-125">Hinzufügen der <xref:System.Diagnostics.ConsoleTraceListener> Objekt in der Konfigurationsdatei der Anwendung leiten alle Ablaufverfolgungs- und Debugeinstellungen Meldungen an die Konsole, während die Anwendung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-125">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</span></span>  
  
 <span data-ttu-id="5f4c5-126">Zum Schreiben der Ablaufverfolgung und Debuggen von Nachrichten an die Konsole für einen bestimmten Codeabschnitt, initialisieren Sie ein <xref:System.Diagnostics.ConsoleTraceListener> Objekt aus, und fügen sie der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-126">To write trace and debug messages to the console for a specific section of code, initialize a <xref:System.Diagnostics.ConsoleTraceListener> object and add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="5f4c5-127">Instrumentieren Sie den Codeabschnitt, der Nachrichten, die mithilfe von enthält die <xref:System.Diagnostics.Trace> oder <xref:System.Diagnostics.Debug> Klassen.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-127">Instrument the section of code that contains messages using the <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> classes.</span></span> <span data-ttu-id="5f4c5-128">Entfernen Sie am Ende des Codeabschnitts, der <xref:System.Diagnostics.ConsoleTraceListener> -Objekt aus der <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung, und rufen die <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> Methode für die <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-128">At the end of the code section, remove the <xref:System.Diagnostics.ConsoleTraceListener> object from the <xref:System.Diagnostics.Trace.Listeners%2A> collection, and call the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method on the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="5f4c5-129">Um leiten alle Ablaufverfolgung und Debuggen Meldungen an die Konsole aus, während die Anwendung ausgeführt wird, Hinzufügen einer <xref:System.Diagnostics.ConsoleTraceListener> Objekt, das die Anwendungskonfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-129">To direct all trace and debug messages to the console while the application executes, add a <xref:System.Diagnostics.ConsoleTraceListener> object to the application configuration file.</span></span> <span data-ttu-id="5f4c5-130">Bearbeiten Sie die Konfigurationsdatei, die den Namen der Anwendung entspricht, oder die Datei "App.config" in einem [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Projekt.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-130">Edit the configuration file that corresponds to the name of your application, or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="5f4c5-131">In dieser Datei fügen Sie ein Element für eine <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-131">In this file, insert an element for a <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="5f4c5-132">Im folgenden Beispiel wird eine <xref:System.Diagnostics.ConsoleTraceListener> Objekt mit dem Namen `configConsoleListener` auf die <xref:System.Diagnostics.Trace.Listeners%2A> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-132">The following example adds a <xref:System.Diagnostics.ConsoleTraceListener> object named `configConsoleListener` to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 <span data-ttu-id="5f4c5-133">Weitere Informationen zum Hinzufügen der Ablaufverfolgungslistener in der Anwendungskonfigurationsdatei finden Sie unter [ &lt;Listener&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span><span class="sxs-lookup"><span data-stu-id="5f4c5-133">For details about adding trace listeners in the application configuration file, see [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f4c5-134">Das folgende Codebeispiel implementiert eine Konsolenanwendung, die besteht aus einer Klasse mit zwei öffentliche Methoden.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-134">The following code example implements a console application consisting of a class with two public methods.</span></span>  
  
 <span data-ttu-id="5f4c5-135">Die `Main` Methode überprüft die Befehlszeilenargumente und bestimmt, ob die Ausgabe der Ablaufverfolgung an den Standardfehlerstream oder den standardmäßigen Ausgabedatenstrom weitergeleitet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-135">The `Main` method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</span></span> <span data-ttu-id="5f4c5-136">`Main` erstellt und initialisiert ein <xref:System.Diagnostics.ConsoleTraceListener> -Objekt für die angegebene <xref:System.Console> -Ausgabestream und fügt der Auflistung der Ablaufverfolgungslistener dieses-Objekts hinzu.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-136">`Main` creates and initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream, and adds this object to the trace listener collection.</span></span> <span data-ttu-id="5f4c5-137">Es ruft dann die `WriteEnvironmentInfoToTrace` -Methode, die Details zur ausgeführten Umgebung und die Trace-Listener-Konfiguration in die Ablaufverfolgungsausgabe geschrieben.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-137">It then calls the `WriteEnvironmentInfoToTrace` method, which writes details about the executing environment and the trace listener configuration to the trace output.</span></span>  
  
 <span data-ttu-id="5f4c5-138">Wenn die beispielanwendung ausgeführt wird, wurden die Konfigurationsdetails der Umgebung und Ablaufverfolgung in den Ausgabestream angegebene Konsole, über die <xref:System.Diagnostics.ConsoleTraceListener> Objekt.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-138">When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <xref:System.Diagnostics.ConsoleTraceListener> object.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f4c5-139">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConsoleTraceListener" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-139">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f4c5-140">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConsoleTraceListener" />-Klasse, wobei die Ablaufverfolgungsausgabe in den Standardausgabestream geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-140">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with trace output written to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f4c5-141">Dieser Konstruktor initialisiert ein <xref:System.Diagnostics.ConsoleTraceListener> Objekt zum Schreiben von Nachrichten an die <xref:System.Console.Out%2A?displayProperty=nameWithType> Stream.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-141">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="5f4c5-142">Die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft initialisiert wird, auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="5f4c5-142">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f4c5-143">Im folgenden Codebeispiel Beispiel initialisiert einen <xref:System.Diagnostics.ConsoleTraceListener> -Objekt für die angegebene <xref:System.Console> -Ausgabestream und fügt es der Auflistung der Ablaufverfolgungslistener hinzu.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-143">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="5f4c5-144">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.ConsoleTraceListener> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-144">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream"><span data-ttu-id="5f4c5-145"><see langword="true" />, um die Ablaufverfolgungs- und Debugausgabe in den Standardfehlerstream zu schreiben. <see langword="false" />, um die Ablaufverfolgungs- und Debugausgabe in den Standardausgabestream zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-145"><see langword="true" /> to write tracing and debugging output to the standard error stream; <see langword="false" /> to write tracing and debugging output to the standard output stream.</span></span></param>
        <summary><span data-ttu-id="5f4c5-146">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConsoleTraceListener" />-Klasse mit einer Option, die Ablaufverfolgungsausgabe in den Standardausgabestream oder in den Standardfehlerstream zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-146">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with an option to write trace output to the standard output stream or the standard error stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f4c5-147">Dieser Konstruktor initialisiert ein <xref:System.Diagnostics.ConsoleTraceListener> Objekt zum Schreiben von Nachrichten an die <xref:System.Console.Out%2A?displayProperty=nameWithType> oder <xref:System.Console.Error%2A?displayProperty=nameWithType> Stream.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-147">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to either the <xref:System.Console.Out%2A?displayProperty=nameWithType> or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="5f4c5-148">Die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft initialisiert wird, auf eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="5f4c5-148">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f4c5-149">Im folgenden Codebeispiel Beispiel initialisiert einen <xref:System.Diagnostics.ConsoleTraceListener> -Objekt für die angegebene <xref:System.Console> -Ausgabestream und fügt es der Auflistung der Ablaufverfolgungslistener hinzu.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-149">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="5f4c5-150">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Diagnostics.ConsoleTraceListener> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-150">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f4c5-151">Schließt die Ausgabe in den für diesen Ablaufverfolgungslistener angegebenen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-151">Closes the output to the stream specified for this trace listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f4c5-152">Der angegebene Stream für diese <xref:System.Diagnostics.ConsoleTraceListener> Instanz (entweder die <xref:System.Console.Out%2A?displayProperty=nameWithType> Stream oder das <xref:System.Console.Error%2A?displayProperty=nameWithType> Stream) ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="5f4c5-152">The stream specified for this <xref:System.Diagnostics.ConsoleTraceListener> instance (either the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>