<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3cb6ca76cf168420256ee203732c7ac72a08733" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83975361" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="73b51-101">Leitet Ablaufverfolgungs- und Debugausgaben entweder an die Standardausgabe oder an den Standardfehlerstream.</span><span class="sxs-lookup"><span data-stu-id="73b51-101">Directs tracing or debugging output to either the standard output or the standard error stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73b51-102">Verwenden <xref:System.Diagnostics.ConsoleTraceListener> Sie die-Klasse zum Schreiben von Ablauf Verfolgungs-und Debugmeldungen in die Konsole.</span><span class="sxs-lookup"><span data-stu-id="73b51-102">Use the <xref:System.Diagnostics.ConsoleTraceListener> class to write trace and debugging messages to the console.</span></span> <span data-ttu-id="73b51-103">Sie können ein-Objekt initialisieren <xref:System.Diagnostics.ConsoleTraceListener> , um Ablauf Verfolgungs Meldungen in den <xref:System.Console.Out%2A?displayProperty=nameWithType> Stream oder in den Stream zu schreiben <xref:System.Console.Error%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="73b51-103">You can initialize a <xref:System.Diagnostics.ConsoleTraceListener> object to write trace messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or to the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="73b51-104"><xref:System.IDisposable>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="73b51-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="73b51-105">Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen.</span><span class="sxs-lookup"><span data-stu-id="73b51-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="73b51-106">Um den Typ direkt zu löschen, müssen Sie seine- <xref:System.IDisposable.Dispose%2A> Methode in einem-Block aufzurufen `try` / `catch` .</span><span class="sxs-lookup"><span data-stu-id="73b51-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="73b51-107">Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="73b51-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="73b51-108">Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.</span><span class="sxs-lookup"><span data-stu-id="73b51-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="73b51-109">Wenn die Ablaufverfolgungs-und Debugausgabe aktiviert ist, <xref:System.Diagnostics.ConsoleTraceListener> werden die Nachrichten in den angegebenen <xref:System.Console?displayProperty=nameWithType> Stream geschrieben. Dies ähnelt der Art und Weise, wie Nachrichten mit den <xref:System.Console.Write%2A?displayProperty=nameWithType> Methoden oder geschrieben werden <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="73b51-109">When trace and debugging output is enabled, the <xref:System.Diagnostics.ConsoleTraceListener> messages are written to the specified <xref:System.Console?displayProperty=nameWithType> stream, which is similar to the way messages are written with the <xref:System.Console.Write%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="73b51-110">In einer Konsolenanwendung schreiben die <xref:System.Console?displayProperty=nameWithType> Ausgabe-und Fehler Datenströme Meldungen in das vorhandene Konsolenfenster, oder Sie können die Streams umleiten, um Sie in eine-Instanz zu schreiben <xref:System.IO.TextWriter?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="73b51-110">In a console application, the <xref:System.Console?displayProperty=nameWithType> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73b51-111">Wenn die Konsole nicht vorhanden ist (wie in einer Windows-basierten Anwendung), werden Nachrichten, die in die Konsole geschrieben werden, nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="73b51-111">If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</span></span>  
  
 <span data-ttu-id="73b51-112">Fügen Sie der entsprechenden Auflistung ein-Objekt hinzu, <xref:System.Diagnostics.ConsoleTraceListener> <xref:System.Diagnostics.Trace.Listeners%2A> Wenn Sie möchten, dass Nachrichten, die über <xref:System.Diagnostics.Trace> , oder geschrieben werden, <xref:System.Diagnostics.TraceSource> <xref:System.Diagnostics.Debug> in die Konsole geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="73b51-112">Add a <xref:System.Diagnostics.ConsoleTraceListener> object to the appropriate <xref:System.Diagnostics.Trace.Listeners%2A> collection if you want messages written through <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, or <xref:System.Diagnostics.Debug> to be written to the console.</span></span> <span data-ttu-id="73b51-113">Darüber hinaus können Sie mit der-Methode oder der-Methode Meldungen direkt in die Konsole schreiben <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="73b51-113">In addition, you can write messages directly to the console using the <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73b51-114">Die <xref:System.Diagnostics.Debug> Klassen und verwenden <xref:System.Diagnostics.Trace> dieselbe Auflistung, auf die <xref:System.Diagnostics.TraceListenerCollection> über die entsprechenden `Listeners` Eigenschaften zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="73b51-114">The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same <xref:System.Diagnostics.TraceListenerCollection> collection, accessed through their respective `Listeners` properties.</span></span> <span data-ttu-id="73b51-115">Wenn Sie der Auflistung ein-Objekt hinzufügen <xref:System.Diagnostics.ConsoleTraceListener> , indem Sie eine dieser Klassen verwenden, verwendet die andere Klasse automatisch denselben Listener.</span><span class="sxs-lookup"><span data-stu-id="73b51-115">If you add a <xref:System.Diagnostics.ConsoleTraceListener> object to the collection using one of these classes, the other class automatically uses the same listener.</span></span>  
  
 <span data-ttu-id="73b51-116">Die meisten Compiler ermöglichen die Ablaufverfolgungs-und Debugausgabe durch bedingte Kompilierungs Flags.</span><span class="sxs-lookup"><span data-stu-id="73b51-116">Most compilers enable trace and debug output through conditional compilation flags.</span></span> <span data-ttu-id="73b51-117">Wenn Sie die Ablauf Verfolgung oder das Debuggen nicht aktivieren, werden die Nachrichten, die über die <xref:System.Diagnostics.Debug?displayProperty=nameWithType> Klassen und geschrieben <xref:System.Diagnostics.Trace?displayProperty=nameWithType> werden, tatsächlich ignoriert</span><span class="sxs-lookup"><span data-stu-id="73b51-117">If you do not enable tracing or debugging, the messages written through the <xref:System.Diagnostics.Debug?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes are effectively ignored.</span></span> <span data-ttu-id="73b51-118">Die Syntax zum Aktivieren der Ablauf Verfolgung und Debugausgabe ist compilerspezifisch. Wenn Sie andere Compiler als c# oder Visual Basic verwenden, finden Sie in der Dokumentation Ihres Compiler weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="73b51-118">The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="73b51-119">Fügen Sie zum Aktivieren des Debuggens in c# das Flag **/d: Debug**zur Compilerbefehlszeile hinzu, wenn Sie den Code kompilieren, oder fügen Sie **#define DEBUG** am Anfang der Datei hinzu.</span><span class="sxs-lookup"><span data-stu-id="73b51-119">To enable debugging in C#, add the **/d:DEBUG**flag to the compiler command line when you compile your code, or you can add **#define DEBUG** to the top of your file.</span></span> <span data-ttu-id="73b51-120">Fügen Sie in Visual Basic das Flag **/d: Debug = true** der Compilerbefehlszeile hinzu.</span><span class="sxs-lookup"><span data-stu-id="73b51-120">In Visual Basic, add the **/d:DEBUG=True** flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="73b51-121">Fügen Sie zum Aktivieren der Ablauf Verfolgung in c# das Flag **/d: Trace** der Compilerbefehlszeile hinzu, wenn Sie den Code kompilieren, oder fügen Sie **#define** Ablauf Verfolgung am Anfang der Datei hinzu.</span><span class="sxs-lookup"><span data-stu-id="73b51-121">To enable tracing in C#, add the **/d:TRACE** flag to the compiler command line when you compile your code, or add **#define TRACE** to the top of your file.</span></span> <span data-ttu-id="73b51-122">Fügen Sie in Visual Basic das Flag **/d: Trace = true** der Compilerbefehlszeile hinzu.</span><span class="sxs-lookup"><span data-stu-id="73b51-122">In Visual Basic, add the **/d:TRACE=True** flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="73b51-123">Sie können der Auflistung ein- <xref:System.Diagnostics.ConsoleTraceListener> Objekt <xref:System.Diagnostics.Trace.Listeners%2A> in Ihrem Code hinzufügen, oder Sie können der-Auflistung ein- <xref:System.Diagnostics.ConsoleTraceListener> Objekt <xref:System.Diagnostics.Trace.Listeners%2A> über die Anwendungs Konfigurationsdatei hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="73b51-123">You can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection in your code, or you can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection through the application configuration file.</span></span> <span data-ttu-id="73b51-124">Fügen Sie das- <xref:System.Diagnostics.ConsoleTraceListener> Objekt im Code hinzu, um Nachrichten für einen bestimmten Code Abschnitt oder Ausführungs Pfad zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="73b51-124">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your code to write messages for a specific code section or execution path.</span></span> <span data-ttu-id="73b51-125">Fügen Sie das- <xref:System.Diagnostics.ConsoleTraceListener> Objekt in der Anwendungs Konfigurationsdatei hinzu, um alle Ablauf Verfolgungs-und Debugmeldungen an die Konsole weiterzuleiten, während die Anwendung</span><span class="sxs-lookup"><span data-stu-id="73b51-125">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</span></span>  
  
 <span data-ttu-id="73b51-126">Um Ablauf Verfolgungs-und Debugmeldungen in der Konsole für einen bestimmten Code Abschnitt zu schreiben, initialisieren <xref:System.Diagnostics.ConsoleTraceListener> Sie ein-Objekt, und fügen Sie es der-Auflistung hinzu <xref:System.Diagnostics.Trace.Listeners%2A> .</span><span class="sxs-lookup"><span data-stu-id="73b51-126">To write trace and debug messages to the console for a specific section of code, initialize a <xref:System.Diagnostics.ConsoleTraceListener> object and add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="73b51-127">Instrumentieren Sie den Code Abschnitt, der Nachrichten enthält, mithilfe der <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.Debug> Klassen oder.</span><span class="sxs-lookup"><span data-stu-id="73b51-127">Instrument the section of code that contains messages using the <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> classes.</span></span> <span data-ttu-id="73b51-128">Entfernen Sie am Ende des Code Abschnitts das <xref:System.Diagnostics.ConsoleTraceListener> -Objekt aus der <xref:System.Diagnostics.Trace.Listeners%2A> -Auflistung, und wenden Sie die- <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> Methode für das-Objekt an <xref:System.Diagnostics.ConsoleTraceListener> .</span><span class="sxs-lookup"><span data-stu-id="73b51-128">At the end of the code section, remove the <xref:System.Diagnostics.ConsoleTraceListener> object from the <xref:System.Diagnostics.Trace.Listeners%2A> collection, and call the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method on the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="73b51-129">Um alle Ablauf Verfolgungs-und Debugmeldungen an die Konsole zu leiten, während die Anwendung ausgeführt wird, fügen Sie <xref:System.Diagnostics.ConsoleTraceListener> der Anwendungs Konfigurationsdatei ein-Objekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="73b51-129">To direct all trace and debug messages to the console while the application executes, add a <xref:System.Diagnostics.ConsoleTraceListener> object to the application configuration file.</span></span> <span data-ttu-id="73b51-130">Bearbeiten Sie die Konfigurationsdatei, die dem Namen der Anwendung entspricht, oder die app.config Datei in einem [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Projekt.</span><span class="sxs-lookup"><span data-stu-id="73b51-130">Edit the configuration file that corresponds to the name of your application, or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="73b51-131">Fügen Sie in dieser Datei ein Element für ein ein <xref:System.Diagnostics.ConsoleTraceListener> .</span><span class="sxs-lookup"><span data-stu-id="73b51-131">In this file, insert an element for a <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="73b51-132">Im folgenden Beispiel wird der-Auflistung ein- <xref:System.Diagnostics.ConsoleTraceListener> Objekt mit dem Namen hinzugefügt `configConsoleListener` <xref:System.Diagnostics.Trace.Listeners%2A> .</span><span class="sxs-lookup"><span data-stu-id="73b51-132">The following example adds a <xref:System.Diagnostics.ConsoleTraceListener> object named `configConsoleListener` to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 <span data-ttu-id="73b51-133">Details zum Hinzufügen von Ablaufverfolgungslistenern in der Anwendungs Konfigurationsdatei [ &lt; &gt; finden Sie](/dotnet/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace)unter Listener</span><span class="sxs-lookup"><span data-stu-id="73b51-133">For details about adding trace listeners in the application configuration file, see [&lt;listeners&gt;](/dotnet/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73b51-134">Im folgenden Codebeispiel wird eine Konsolenanwendung implementiert, die aus einer-Klasse mit zwei öffentlichen Methoden besteht.</span><span class="sxs-lookup"><span data-stu-id="73b51-134">The following code example implements a console application consisting of a class with two public methods.</span></span>  
  
 <span data-ttu-id="73b51-135">Die `Main` -Methode untersucht die Befehlszeilenargumente und bestimmt, ob die Ablauf Verfolgungs Ausgabe an den Standardfehlerstream oder den Standardausgabestream umgeleitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="73b51-135">The `Main` method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</span></span> <span data-ttu-id="73b51-136">`Main`erstellt und initialisiert ein- <xref:System.Diagnostics.ConsoleTraceListener> Objekt für den angegebenen <xref:System.Console> Ausgabestream und fügt dieses Objekt der Auflistung der Ablaufverfolgungslistener hinzu.</span><span class="sxs-lookup"><span data-stu-id="73b51-136">`Main` creates and initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream, and adds this object to the trace listener collection.</span></span> <span data-ttu-id="73b51-137">Anschließend wird die- `WriteEnvironmentInfoToTrace` Methode aufgerufen, die Details über die ausgeführte Umgebung und die ablaufverfolgungslistenerkonfiguration in die Ausgabe der Ablauf Verfolgung schreibt.</span><span class="sxs-lookup"><span data-stu-id="73b51-137">It then calls the `WriteEnvironmentInfoToTrace` method, which writes details about the executing environment and the trace listener configuration to the trace output.</span></span>  
  
 <span data-ttu-id="73b51-138">Wenn die Beispielanwendung ausgeführt wird, werden die Umgebungs-und Konfigurationsdetails der Ablauf Verfolgung durch das-Objekt in den angegebenen Konsolenausgabe Datenstrom geschrieben <xref:System.Diagnostics.ConsoleTraceListener> .</span><span class="sxs-lookup"><span data-stu-id="73b51-138">When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <xref:System.Diagnostics.ConsoleTraceListener> object.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="73b51-139">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConsoleTraceListener" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="73b51-139">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73b51-140">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConsoleTraceListener" />-Klasse, wobei die Ablaufverfolgungsausgabe in den Standardausgabestream geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="73b51-140">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with trace output written to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73b51-141">Dieser Konstruktor initialisiert ein- <xref:System.Diagnostics.ConsoleTraceListener> Objekt, um Nachrichten in den Stream zu schreiben <xref:System.Console.Out%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="73b51-141">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="73b51-142">Die zugehörige- <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft wird mit einer leeren Zeichenfolge ("") initialisiert.</span><span class="sxs-lookup"><span data-stu-id="73b51-142">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73b51-143">Im folgenden Codebeispiel wird ein <xref:System.Diagnostics.ConsoleTraceListener> -Objekt für den angegebenen <xref:System.Console> Ausgabestream initialisiert und der Auflistung der Ablauf Verfolgungs Listener hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="73b51-143">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="73b51-144">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Diagnostics.ConsoleTraceListener> .</span><span class="sxs-lookup"><span data-stu-id="73b51-144">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream"><span data-ttu-id="73b51-145"><see langword="true" />, um die Ablaufverfolgungs- und Debugausgabe in den Standardfehlerstream zu schreiben. <see langword="false" />, um die Ablaufverfolgungs- und Debugausgabe in den Standardausgabestream zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="73b51-145"><see langword="true" /> to write tracing and debugging output to the standard error stream; <see langword="false" /> to write tracing and debugging output to the standard output stream.</span></span></param>
        <summary><span data-ttu-id="73b51-146">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.ConsoleTraceListener" />-Klasse mit einer Option, die Ablaufverfolgungsausgabe in den Standardausgabestream oder in den Standardfehlerstream zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="73b51-146">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with an option to write trace output to the standard output stream or the standard error stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73b51-147">Dieser Konstruktor initialisiert ein- <xref:System.Diagnostics.ConsoleTraceListener> Objekt, um Nachrichten entweder in den <xref:System.Console.Out%2A?displayProperty=nameWithType> oder den Stream zu schreiben <xref:System.Console.Error%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="73b51-147">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to either the <xref:System.Console.Out%2A?displayProperty=nameWithType> or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="73b51-148">Die zugehörige- <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft wird mit einer leeren Zeichenfolge ("") initialisiert.</span><span class="sxs-lookup"><span data-stu-id="73b51-148">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73b51-149">Im folgenden Codebeispiel wird ein <xref:System.Diagnostics.ConsoleTraceListener> -Objekt für den angegebenen <xref:System.Console> Ausgabestream initialisiert und der Auflistung der Ablauf Verfolgungs Listener hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="73b51-149">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="73b51-150">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Diagnostics.ConsoleTraceListener> .</span><span class="sxs-lookup"><span data-stu-id="73b51-150">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73b51-151">Schließt die Ausgabe in den für diesen Ablaufverfolgungslistener angegebenen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="73b51-151">Closes the output to the stream specified for this trace listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73b51-152">Der für diese Instanz angegebene Stream <xref:System.Diagnostics.ConsoleTraceListener> (entweder der <xref:System.Console.Out%2A?displayProperty=nameWithType> Stream oder der <xref:System.Console.Error%2A?displayProperty=nameWithType> Stream) ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="73b51-152">The stream specified for this <xref:System.Diagnostics.ConsoleTraceListener> instance (either the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
