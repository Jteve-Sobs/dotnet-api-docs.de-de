<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConsoleTraceListener.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c460e5408087ef9310e95d0e12d7120856a3e454.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c460e5408087ef9310e95d0e12d7120856a3e454</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Directs tracing or debugging output to either the standard output or the standard error stream.</source>
          <target state="translated">Leitet Ablaufverfolgungs- und Debugausgaben entweder an die Standardausgabe oder an den Standardfehlerstream.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class to write trace and debugging messages to the console.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Klasse Trace und Debugmeldungen an die Konsole geschrieben.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>You can initialize a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write trace messages to the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream or to the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">Können Sie initialisieren ein <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Ablaufverfolgungsmeldungen zu schreibende Objekt die <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> Stream oder die <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> Stream.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source><ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> -Schnittstelle.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a<ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Aufrufen, um den Typ direkt zu verwerfen, dessen <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> Methode in einer<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> Block.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. <ph id="ph1">`using`</ph> (in c#) oder <ph id="ph2">`Using`</ph> (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Thema zur Schnittstelle.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When trace and debugging output is enabled, the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> messages are written to the specified <ph id="ph2">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> stream, which is similar to the way messages are written with the <ph id="ph3">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Wenn verfolgen und die Debugausgabe aktiviert ist, die <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Nachrichten geschrieben werden, auf den angegebenen <ph id="ph2">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> Stream, der die Art und Weise Nachrichten geschrieben werden ähnelt, mit der <ph id="ph3">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> oder <ph id="ph4">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In a console application, the <ph id="ph1">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <ph id="ph2">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated">In einer Konsolenanwendung die <ph id="ph1">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> Ausgabe und Fehlerstreams Schreiben von Nachrichten an das vorhandene Konsolenfenster oder zum Schreiben in Streams können umgeleitet werden, eine <ph id="ph2">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</source>
          <target state="translated">Wenn die Konsole nicht, wie in einer Windows-basierten Anwendung vorhanden ist, werden Nachrichten, die in die Konsole geschrieben nicht angezeigt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the appropriate <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection if you want messages written through <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.Debug&gt;</ph> to be written to the console.</source>
          <target state="translated">Hinzufügen einer <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt an die entsprechende <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> Auflistung, wenn Nachrichten über geschrieben werden soll <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>, oder <ph id="ph5">&lt;xref:System.Diagnostics.Debug&gt;</ph> in die Konsole geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In addition, you can write messages directly to the console using the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Darüber hinaus können Sie Nachrichten schreiben, direkt an die Konsole mit der <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType&gt;</ph> oder <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes share the same <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection, accessed through their respective <ph id="ph4">`Listeners`</ph> properties.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> und <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph> Klassen verwenden dieselbe <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> bindungsauflistung, erfolgt über ihren jeweiligen <ph id="ph4">`Listeners`</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If you add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the collection using one of these classes, the other class automatically uses the same listener.</source>
          <target state="translated">Wenn Sie beim Hinzufügen einer <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt der Auflistung unter Verwendung einer dieser Klassen, die andere Klasse automatisch den gleichen Listener verwendet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Most compilers enable trace and debug output through conditional compilation flags.</source>
          <target state="translated">Die meisten Compiler aktivieren Sie die Ablaufverfolgung und debug-Ausgabe über die bedingte Kompilierung Flags.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If you do not enable tracing or debugging, the messages written through the <ph id="ph1">&lt;xref:System.Diagnostics.Debug?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> classes are effectively ignored.</source>
          <target state="translated">Wenn Sie nicht aktivieren Ablaufverfolgungs- oder Debugmeldungen, die geschrieben werden, über die <ph id="ph1">&lt;xref:System.Diagnostics.Debug?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> Klassen effektiv ignoriert.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">Die Syntax zum Aktivieren der Ablaufverfolgung und debug-Ausgabe ist compilerspezifisch. Wenn Sie den Compiler als c# oder Visual Basic verwenden, finden Sie in der Dokumentation für den Compiler.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To enable debugging in C#, add the <bpt id="p1">**</bpt>/d:DEBUG<ept id="p1">**</ept>flag to the compiler command line when you compile your code, or you can add <bpt id="p2">**</bpt>#define DEBUG<ept id="p2">**</ept> to the top of your file.</source>
          <target state="translated">Fügen Sie zum Aktivieren des Debuggens in C# geschrieben, die <bpt id="p1">**</bpt>/d: Debug<ept id="p1">**</ept>Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder Sie fügen <bpt id="p2">**</bpt>#define DEBUG<ept id="p2">**</ept> an den Anfang der Datei.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In Visual Basic, add the <bpt id="p1">**</bpt>/d:DEBUG=True<ept id="p1">**</ept> flag to the compiler command line.</source>
          <target state="translated">Fügen Sie in Visual Basic die <bpt id="p1">**</bpt>/d: Debug = "true"<ept id="p1">**</ept> -Kennzeichen an die Befehlszeile des Compilers.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To enable tracing in C#, add the <bpt id="p1">**</bpt>/d:TRACE<ept id="p1">**</ept> flag to the compiler command line when you compile your code, or add <bpt id="p2">**</bpt>#define TRACE<ept id="p2">**</ept> to the top of your file.</source>
          <target state="translated">Fügen Sie zum Aktivieren der Ablaufverfolgung in c# die <bpt id="p1">**</bpt>r<ept id="p1">**</ept> Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder fügen <bpt id="p2">**</bpt>#define TRACE<ept id="p2">**</ept> an den Anfang der Datei.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In Visual Basic, add the <bpt id="p1">**</bpt>/d:TRACE=True<ept id="p1">**</ept> flag to the compiler command line.</source>
          <target state="translated">Fügen Sie in Visual Basic die <bpt id="p1">**</bpt>r = "true"<ept id="p1">**</ept> -Kennzeichen an die Befehlszeile des Compilers.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>You can add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection in your code, or you can add a <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection through the application configuration file.</source>
          <target state="translated">Können Sie hinzufügen eine <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> -Objekt an die <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> Auflistung in Ihrem Code verwenden, oder Sie können hinzufügen eine <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> -Objekt an der <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> Auflistung über die Anwendungskonfigurationsdatei aufnehmen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object in your code to write messages for a specific code section or execution path.</source>
          <target state="translated">Hinzufügen der <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekts in Ihrem Code zum Schreiben von Nachrichten für einen bestimmten Codepfad Abschnitt oder ausführen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</source>
          <target state="translated">Hinzufügen der <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt in der Anwendungskonfigurationsdatei, leiten alle Ablaufverfolgungs- und Debugeinstellungen Meldungen an die Konsole, während die Anwendung ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To write trace and debug messages to the console for a specific section of code, initialize a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object and add it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Zum Schreiben der Ablaufverfolgung und Debugnachrichten an die Konsole für einen bestimmten Abschnitt des Codes, Initialisieren einer <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> -Objekt und fügen Sie diese der <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> Auflistung.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Instrument the section of code that contains messages using the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> classes.</source>
          <target state="translated">Instrumentieren des Codeabschnitts, der Nachrichten mit enthält die <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> oder <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>At the end of the code section, remove the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, and call the <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> method on the <ph id="ph4">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">Entfernen Sie am Ende der Codeabschnitt, der <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> -Objekt aus der <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> Auflistung, und rufen die <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> Methode für die <ph id="ph4">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To direct all trace and debug messages to the console while the application executes, add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the application configuration file.</source>
          <target state="translated">Um alle Trace weiterleiten und Debugnachrichten an die Konsole, während die Anwendung ausgeführt wird, fügen einen <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt, das die Anwendungskonfigurationsdatei aufnehmen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Edit the configuration file that corresponds to the name of your application, or the app.config file in a <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> project.</source>
          <target state="translated">Bearbeiten Sie die Konfigurationsdatei, die den Namen der Anwendung entspricht, oder die Datei "App.config" in einem <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> Projekt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In this file, insert an element for a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">In dieser Datei fügen Sie ein Element für eine <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object named <ph id="ph2">`configConsoleListener`</ph> to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Im folgenden Beispiel wird eine <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt mit dem Namen <ph id="ph2">`configConsoleListener`</ph> auf die <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> Auflistung.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>For details about adding trace listeners in the application configuration file, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>listeners<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>.</source>
          <target state="translated">Informationen zum Hinzufügen der Ablaufverfolgungslistener in der Anwendungskonfigurationsdatei finden Sie unter <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>Listener<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The following code example implements a console application consisting of a class with two public methods.</source>
          <target state="translated">Das folgende Codebeispiel implementiert eine Konsolenanwendung, bestehend aus einer Klasse mit zwei öffentliche Methoden.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The <ph id="ph1">`Main`</ph> method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</source>
          <target state="translated">Die <ph id="ph1">`Main`</ph> -Methode untersucht die Befehlszeilenargumente und bestimmt, ob die Ablaufverfolgungsausgabe an den Standardfehlerstream oder den Standardausgabestream weitergeleitet werden sollen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source><ph id="ph1">`Main`</ph> creates and initializes a <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph3">&lt;xref:System.Console&gt;</ph> output stream, and adds this object to the trace listener collection.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> erstellt und initialisiert ein <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> für das angegebene Objekt <ph id="ph3">&lt;xref:System.Console&gt;</ph> Ausgabestream und fügt der Auflistung der Ablaufverfolgungslistener dieses Objekt hinzu.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>It then calls the <ph id="ph1">`WriteEnvironmentInfoToTrace`</ph> method, which writes details about the executing environment and the trace listener configuration to the trace output.</source>
          <target state="translated">Er ruft dann die <ph id="ph1">`WriteEnvironmentInfoToTrace`</ph> -Methode, die Details zur ausgeführten Umgebung und die Trace-Listener-Konfiguration auf die Ablaufverfolgungsausgabe geschrieben.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object.</source>
          <target state="translated">Beim Ausführen der beispielanwendung werden in den Ausgabestream angegebene Konsole über die Umgebung und die Trace-Konfigurationsdetails geschrieben der <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class with trace output written to the standard output stream.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph>-Klasse, wobei die Ablaufverfolgungsausgabe in den Standardausgabestream geschrieben wird.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write messages to the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">Dieser Konstruktor initialisiert ein <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt zum Schreiben von Nachrichten an die <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> Stream.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>Its <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string ("").</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> -Eigenschaft wird initialisiert, um eine leere Zeichenfolge ("").</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>The following code example initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph2">&lt;xref:System.Console&gt;</ph> output stream and adds it to the trace listener collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird initialisiert einen <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> für das angegebene Objekt <ph id="ph2">&lt;xref:System.Console&gt;</ph> Ausgabestream und fügt es der Auflistung der Ablaufverfolgungslistener hinzu.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to write tracing and debugging output to the standard error stream; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to write tracing and debugging output to the standard output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um die Ablaufverfolgungs- und Debugausgabe in den Standardfehlerstream zu schreiben. <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um die Ablaufverfolgungs- und Debugausgabe in den Standardausgabestream zu schreiben.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class with an option to write trace output to the standard output stream or the standard error stream.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph>-Klasse mit einer Option, die Ablaufverfolgungsausgabe in den Standardausgabestream oder in den Standardfehlerstream zu schreiben.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write messages to either the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> or the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">Dieser Konstruktor initialisiert ein <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Objekt zum Schreiben von Nachrichten an die <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> oder <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> Stream.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>Its <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string ("").</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> -Eigenschaft wird initialisiert, um eine leere Zeichenfolge ("").</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>The following code example initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph2">&lt;xref:System.Console&gt;</ph> output stream and adds it to the trace listener collection.</source>
          <target state="translated">Im folgenden Codebeispiel wird initialisiert einen <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> für das angegebene Objekt <ph id="ph2">&lt;xref:System.Console&gt;</ph> Ausgabestream und fügt es der Auflistung der Ablaufverfolgungslistener hinzu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.Close">
          <source>Closes the output to the stream specified for this trace listener.</source>
          <target state="translated">Schließt die Ausgabe in den für diesen Ablaufverfolgungslistener angegebenen Datenstrom.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.Close">
          <source>The stream specified for this <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> instance (either the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream or the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream) is closed.</source>
          <target state="translated">Für diese angegebenen Stream <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> Instanz (entweder die <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> Stream oder die <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> Stream) ist geschlossen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>