<Type Name="ActivitySpanId" FullName="System.Diagnostics.ActivitySpanId">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a61e4b38180468530f48702c231306aef2685ce" /><Meta Name="ms.sourcegitcommit" Value="cfc0e4215fd0d259582ada2141878befd7c3c8c6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/12/2019" /><Meta Name="ms.locfileid" Value="67855010" /></Metadata><TypeSignature Language="C#" Value="public struct ActivitySpanId : IEquatable&lt;System.Diagnostics.ActivitySpanId&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ActivitySpanId extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Diagnostics.ActivitySpanId&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ActivitySpanId" />
  <TypeSignature Language="VB.NET" Value="Public Structure ActivitySpanId&#xA;Implements IEquatable(Of ActivitySpanId)" />
  <TypeSignature Language="C++ CLI" Value="public value class ActivitySpanId : IEquatable&lt;System::Diagnostics::ActivitySpanId&gt;" />
  <TypeSignature Language="F#" Value="type ActivitySpanId = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Diagnostics.ActivitySpanId&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="35885-101">Stellt eine <see cref="P:System.Diagnostics.Activity.SpanId" /> dar, die auf einem W3C-Standard basierend formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="35885-101">Represents a <see cref="P:System.Diagnostics.Activity.SpanId" /> formatted based on a W3C standard.</span></span></summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="35885-102">Die `ActivitySpanId` Struktur gibt das Format, die der W3C-Standard für die ID eines einzelnen Textabschnitts in einer Ablaufverfolgung erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="35885-102">The `ActivitySpanId` structure reflects the format that the W3C standard requires for the ID of a single span in a trace.</span></span> <span data-ttu-id="35885-103">Es besteht aus 8 Bytes, die in der Regel als hexadezimale 16-Zeichen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="35885-103">It consists of 8 bytes, typically displayed as 16 hexadecimal characters.</span></span> <span data-ttu-id="35885-104">Ein `ActivitySpanId` wird zurückgegeben, durch die <xref:System.Diagnostics.Activity.SpanId?displayProperty=nameWithtype> für eine <xref:System.Diagnostics.Activity> , deren <xref:System.Diagnostics.Activity.IdFormat?displayProperty=nameWithType> ist <xref:System.Diagnostics.ActivityIdFormat.W3C?displayProperty=nameWithtype>.</span><span class="sxs-lookup"><span data-stu-id="35885-104">An `ActivitySpanId` is returned by the <xref:System.Diagnostics.Activity.SpanId?displayProperty=nameWithtype> for an <xref:System.Diagnostics.Activity> whose <xref:System.Diagnostics.Activity.IdFormat?displayProperty=nameWithType> is <xref:System.Diagnostics.ActivityIdFormat.W3C?displayProperty=nameWithtype>.</span></span>

<span data-ttu-id="35885-105">Da ein `ActivitySpanId` ist eine Struktur, die 8 Bytes, enthält es als Verweis übergeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="35885-105">Because an `ActivitySpanId` is a structure that contains 8 bytes, it can be passed by reference.</span></span> <span data-ttu-id="35885-106">`ActivitySpanId` enthält Methoden zum Konvertieren von Hexadezimalzeichenfolgen-Darstellung, die versucht, zu vermeiden, Ändern von Formaten, bis er muss, und speichert die Zeichenfolgendarstellung aus, nachdem es erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="35885-106">`ActivitySpanId` contains methods for converting to and from hexadecimal string representation, tries to avoid changing formats until it has to, and caches its string representation after it is created.</span></span> <span data-ttu-id="35885-107">Es ist vor allem hilfreich, als Exchange-Typ.</span><span class="sxs-lookup"><span data-stu-id="35885-107">It is mostly useful as an exchange type.</span></span>

         ]]></format>
         </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;byte&gt; -&gt; unit" Usage="activitySpanId.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="35885-108">Die Spanne, in die die 8 Bytes der SpanID kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="35885-108">The span to which the 8 bytes of the SpanID are to be copied.</span></span></param>
        <summary><span data-ttu-id="35885-109">Kopiert die 8 Bytes der aktuellen <see cref="T:System.Diagnostics.ActivitySpanId" /> in eine angegebene Spanne.</span><span class="sxs-lookup"><span data-stu-id="35885-109">Copies the 8 bytes of the current <see cref="T:System.Diagnostics.ActivitySpanId" /> to a specified span.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromBytes">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateFromBytes (ReadOnlySpan&lt;byte&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateFromBytes(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromBytes (idData As ReadOnlySpan(Of Byte)) As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateFromBytes(ReadOnlySpan&lt;System::Byte&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromBytes : ReadOnlySpan&lt;byte&gt; -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateFromBytes idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="idData"><span data-ttu-id="35885-110">Eine schreibgeschützte Spanne von acht Bytes.</span><span class="sxs-lookup"><span data-stu-id="35885-110">A read-only span of eight bytes.</span></span></param>
        <summary><span data-ttu-id="35885-111">Erstellt einen neuen <see cref="T:System.Diagnostics.ActivitySpanId" />-Wert aus einer schreibgeschützten Spanne von acht Bytes.</span><span class="sxs-lookup"><span data-stu-id="35885-111">Creates a new <see cref="T:System.Diagnostics.ActivitySpanId" /> value from a read-only span of eight bytes.</span></span></summary>
        <returns><span data-ttu-id="35885-112">Die neue Spannen-ID.</span><span class="sxs-lookup"><span data-stu-id="35885-112">The new span ID.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="35885-113"><paramref name="idData" /> enthält nicht acht Bytes.</span><span class="sxs-lookup"><span data-stu-id="35885-113"><paramref name="idData" /> does not contain eight bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromString">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateFromString (ReadOnlySpan&lt;char&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateFromString(valuetype System.ReadOnlySpan`1&lt;char&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromString (idData As ReadOnlySpan(Of Char)) As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateFromString(ReadOnlySpan&lt;char&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromString : ReadOnlySpan&lt;char&gt; -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateFromString idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="idData"><span data-ttu-id="35885-114">Eine Spanne, die 16 Hexadezimalzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="35885-114">A span that contains 16 hexadecimal characters.</span></span></param>
        <summary><span data-ttu-id="35885-115">Erstellt einen neuen <see cref="T:System.Diagnostics.ActivitySpanId" />-Wert aus einer schreibgeschützten Spanne von 16 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="35885-115">Creates a new <see cref="T:System.Diagnostics.ActivitySpanId" /> value from a read-only span of 16 hexadecimal characters.</span></span></summary>
        <returns><span data-ttu-id="35885-116">Die neue Spannen-ID.</span><span class="sxs-lookup"><span data-stu-id="35885-116">The new span ID.</span></span></returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="35885-117">`idData` kann entweder von Zahlen und Kleinbuchstaben hexadezimale Zeichen oder Nullen bestehen.</span><span class="sxs-lookup"><span data-stu-id="35885-117">`idData` can consist either of numbers and lower-case hexadecimal characters or of all zeros.</span></span>

         ]]></format>
         </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="35885-118"><paramref name="idData" /> enthält nicht 16 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="35885-118"><paramref name="idData" /> does not contain 16 hexadecimal characters.</span></span>

<span data-ttu-id="35885-119">- oder -</span><span class="sxs-lookup"><span data-stu-id="35885-119">-or-</span></span> 
<span data-ttu-id="35885-120">Die Zeichen in <paramref name="idData" /> sind nicht alle Kleinbuchstaben-Hexadezimalzeichen oder alle Nullen (0).</span><span class="sxs-lookup"><span data-stu-id="35885-120">The characters in <paramref name="idData" /> are not all lower-case hexadecimal characters or all zeros.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromUtf8String">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateFromUtf8String (ReadOnlySpan&lt;byte&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateFromUtf8String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromUtf8String (idData As ReadOnlySpan(Of Byte)) As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateFromUtf8String(ReadOnlySpan&lt;System::Byte&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromUtf8String : ReadOnlySpan&lt;byte&gt; -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateFromUtf8String idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="idData"><span data-ttu-id="35885-121">Eine schreibgeschützte Spanne von UTF8-codierten Bytes.</span><span class="sxs-lookup"><span data-stu-id="35885-121">A read-only span of UTF8-encoded bytes.</span></span></param>
        <summary><span data-ttu-id="35885-122">Erstellt einen neuen <see cref="T:System.Diagnostics.ActivitySpanId" />-Wert aus einer schreibgeschützten Spanne von UTF8-codierten Bytes.</span><span class="sxs-lookup"><span data-stu-id="35885-122">Creates a new <see cref="T:System.Diagnostics.ActivitySpanId" /> value from a read-only span of UTF8-encoded bytes.</span></span></summary>
        <returns><span data-ttu-id="35885-123">Die neue Spannen-ID.</span><span class="sxs-lookup"><span data-stu-id="35885-123">The new span ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRandom">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateRandom ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateRandom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateRandom" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRandom () As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateRandom();" />
      <MemberSignature Language="F#" Value="static member CreateRandom : unit -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateRandom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35885-124">Erstellt eine neue <see cref="T:System.Diagnostics.ActivitySpanId" /> basierend auf einer Zufallszahl (die höchstwahrscheinlich eindeutig ist).</span><span class="sxs-lookup"><span data-stu-id="35885-124">Creates a new <see cref="T:System.Diagnostics.ActivitySpanId" /> based on a random number (that is very likely to be unique).</span></span></summary>
        <returns><span data-ttu-id="35885-125">Die neue Spannen-ID.</span><span class="sxs-lookup"><span data-stu-id="35885-125">The new span ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.ActivitySpanId spanId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Diagnostics.ActivitySpanId spanId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (spanId As ActivitySpanId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Diagnostics::ActivitySpanId spanId);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Diagnostics.ActivitySpanId -&gt; bool" Usage="activitySpanId.Equals spanId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spanId" Type="System.Diagnostics.ActivitySpanId" />
      </Parameters>
      <Docs>
        <param name="spanId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="activitySpanId.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="activitySpanId.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ref System.Diagnostics.ActivitySpanId spanId1, ref System.Diagnostics.ActivitySpanId spandId2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality([in]valuetype System.Diagnostics.ActivitySpanId&amp; spanId1, [in]valuetype System.Diagnostics.ActivitySpanId&amp; spandId2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId@,System.Diagnostics.ActivitySpanId@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (ByRef spanId1 As ActivitySpanId, ByRef spandId2 As ActivitySpanId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Diagnostics::ActivitySpanId % spanId1, System::Diagnostics::ActivitySpanId % spandId2);" />
      <MemberSignature Language="F#" Value="static member ( = ) :  *  -&gt; bool" Usage="spanId1 = spandId2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spanId1" Type="System.Diagnostics.ActivitySpanId" RefType="ref" />
        <Parameter Name="spandId2" Type="System.Diagnostics.ActivitySpanId" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="spanId1">To be added.</param>
        <param name="spandId2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ref System.Diagnostics.ActivitySpanId spanId1, ref System.Diagnostics.ActivitySpanId spandId2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality([in]valuetype System.Diagnostics.ActivitySpanId&amp; spanId1, [in]valuetype System.Diagnostics.ActivitySpanId&amp; spandId2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId@,System.Diagnostics.ActivitySpanId@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (ByRef spanId1 As ActivitySpanId, ByRef spandId2 As ActivitySpanId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Diagnostics::ActivitySpanId % spanId1, System::Diagnostics::ActivitySpanId % spandId2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality :  *  -&gt; bool" Usage="System.Diagnostics.ActivitySpanId.op_Inequality (spanId1, spandId2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spanId1" Type="System.Diagnostics.ActivitySpanId" RefType="ref" />
        <Parameter Name="spandId2" Type="System.Diagnostics.ActivitySpanId" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="spanId1">To be added.</param>
        <param name="spandId2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHexString">
      <MemberSignature Language="C#" Value="public string ToHexString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToHexString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.ToHexString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHexString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToHexString();" />
      <MemberSignature Language="F#" Value="member this.ToHexString : unit -&gt; string" Usage="activitySpanId.ToHexString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35885-126">Gibt eine Hexadezimalzeichenfolge von 16 Zeichen zurück, die diese Spannen-ID darstellt.</span><span class="sxs-lookup"><span data-stu-id="35885-126">Returns a 16-character hexadecimal string that represents this span ID.</span></span></summary>
        <returns><span data-ttu-id="35885-127">Die Zeichenfolgendarstellung dieser Spannen-ID in 16 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="35885-127">The 16-character hecxadecimal string representation of this span ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="activitySpanId.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35885-128">Gibt eine Hexadezimalzeichenfolge von 16 Zeichen zurück, die diese Spannen-ID darstellt.</span><span class="sxs-lookup"><span data-stu-id="35885-128">Returns a 16-character hexadecimal string that represents this span ID.</span></span></summary>
        <returns><span data-ttu-id="35885-129">Die Zeichenfolgendarstellung dieser Spannen-ID in 16 Hexadezimalzeichen.</span><span class="sxs-lookup"><span data-stu-id="35885-129">The 16-character hexadecimal string representation of this span ID.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
