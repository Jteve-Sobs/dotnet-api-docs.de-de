<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataReceivedEventHandler.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b72e96be77b3f18942ac9258ea5a047960ff7583.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b72e96be77b3f18942ac9258ea5a047960ff7583</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The source of the event.</source>
          <target state="translated">Die Quelle des Ereignisses.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.DataReceivedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Diagnostics.DataReceivedEventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.OutputDataReceived" /&gt;</ph> event or <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.ErrorDataReceived" /&gt;</ph> event of a <ph id="ph3">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>.</source>
          <target state="translated">Stellt die Methode dar, die das <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.OutputDataReceived" /&gt;</ph>-Ereignis oder das <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.ErrorDataReceived" /&gt;</ph>-Ereignis eines <ph id="ph3">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> behandelt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>When you create a <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
          <target state="translated">Beim Erstellen eines <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph>-Delegaten bestimmen Sie die Methode für die Ereignisbehandlung.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">Der Ereignishandler wird bei jedem Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt wird.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>For more information about event-handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Delegaten für Ereignishandler finden Sie unter <bpt id="p1">[</bpt>behandeln und Auslösen von Ereignissen<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>To asynchronously collect the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream output of a process, add your event handler to the <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> or <ph id="ph4">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event.</source>
          <target state="translated">Asynchron im umgeleiteten sammeln <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> Ausgabestream eines Prozesses, den Ereignishandler zum Hinzufügen der <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> oder <ph id="ph4">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>These events are raised each time the process writes a line to the corresponding redirected stream.</source>
          <target state="translated">Diese Ereignisse werden jedes Mal ausgelöst, wenn der Prozess eine Zeile in den entsprechenden umgeleiteten Stream schreibt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>When the redirected stream is closed, a null line is sent to the event handler.</source>
          <target state="translated">Wenn der umgeleitete Stream geschlossen ist, wird eine null-Zeile an den Ereignishandler gesendet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>Ensure that your event handler checks for this condition before accessing the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property.</source>
          <target state="translated">Stellen Sie sicher, dass der Ereignishandler für diese Bedingung vor dem Zugriff auf prüft die <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>For example, you can use the <ph id="ph1">`static`</ph> method <ph id="ph2">&lt;xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType&gt;</ph> to validate the <ph id="ph3">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property in your event handler.</source>
          <target state="translated">Beispielsweise können Sie die <ph id="ph1">`static`</ph> Methode <ph id="ph2">&lt;xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType&gt;</ph> zum Überprüfen der <ph id="ph3">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> Eigenschaft im Ereignishandler.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The following code example illustrates how to perform asynchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of the <bpt id="p1">**</bpt>sort<ept id="p1">**</ept> command.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie asynchrone Lesevorgänge im umgeleiteten auszuführenden <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> Stream, der die <bpt id="p1">**</bpt>sortieren<ept id="p1">**</ept> Befehl.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The <bpt id="p1">**</bpt>sort<ept id="p1">**</ept> command is a console application that reads and sorts text input.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>sortieren<ept id="p1">**</ept> Befehl ist eine Konsolenanwendung, liest und Texteingabe sortiert.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph> delegate for the <ph id="ph2">`SortOutputHandler`</ph> event handler and associates the delegate with the <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph> delegate für die <ph id="ph2">`SortOutputHandler`</ph> Ereignishandler und ordnet den Delegaten mit der <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and writes the text to the screen.</source>
          <target state="translated">Der Ereignishandler empfängt Textzeilen vom umgeleiteten <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> Stream, den Text formatiert und schreibt den Text auf dem Bildschirm.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>