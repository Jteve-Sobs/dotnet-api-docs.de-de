<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b72e96be77b3f18942ac9258ea5a047960ff7583" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="1b7d4-101">Die Quelle des Ereignisses.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b7d4-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="1b7d4-102">Ein <see cref="T:System.Diagnostics.DataReceivedEventArgs" />, das die Ereignisdaten enthält.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b7d4-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="1b7d4-103">Stellt die Methode dar, die das <see cref="E:System.Diagnostics.Process.OutputDataReceived" />-Ereignis oder das <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />-Ereignis eines <see cref="T:System.Diagnostics.Process" /> behandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b7d4-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b7d4-104">Beim Erstellen eines <xref:System.Diagnostics.DataReceivedEventHandler>-Delegaten bestimmen Sie die Methode für die Ereignisbehandlung.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="1b7d4-105">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1b7d4-106">Der Ereignishandler wird bei jedem Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="1b7d4-107">Weitere Informationen über Delegaten für Ereignishandler finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1b7d4-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1b7d4-108">Asynchron im umgeleiteten sammeln <xref:System.Diagnostics.Process.StandardOutput%2A> oder <xref:System.Diagnostics.Process.StandardError%2A> Ausgabestream eines Prozesses, den Ereignishandler zum Hinzufügen der <xref:System.Diagnostics.Process.OutputDataReceived> oder <xref:System.Diagnostics.Process.ErrorDataReceived> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="1b7d4-109">Diese Ereignisse werden jedes Mal ausgelöst, wenn der Prozess eine Zeile in den entsprechenden umgeleiteten Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="1b7d4-110">Wenn der umgeleitete Stream geschlossen ist, wird eine null-Zeile an den Ereignishandler gesendet.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="1b7d4-111">Stellen Sie sicher, dass der Ereignishandler für diese Bedingung vor dem Zugriff auf prüft die <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="1b7d4-112">Beispielsweise können Sie die `static` Methode <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> zum Überprüfen der <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft im Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b7d4-113">Im folgenden Codebeispiel wird veranschaulicht, wie asynchrone Lesevorgänge im umgeleiteten auszuführenden <xref:System.Diagnostics.Process.StandardOutput%2A> Stream, der die **sortieren** Befehl.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="1b7d4-114">Die **sortieren** Befehl ist eine Konsolenanwendung, liest und Texteingabe sortiert.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="1b7d4-115">Das Beispiel erstellt eine <xref:System.Diagnostics.DataReceivedEventHandler> delegate für die `SortOutputHandler` Ereignishandler und ordnet den Delegaten mit der <xref:System.Diagnostics.Process.OutputDataReceived> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="1b7d4-116">Der Ereignishandler empfängt Textzeilen vom umgeleiteten <xref:System.Diagnostics.Process.StandardOutput%2A> Stream, den Text formatiert und schreibt den Text auf dem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="1b7d4-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>