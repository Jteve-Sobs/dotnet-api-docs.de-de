<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b70df5f73321b354cf71bd6ebed6f377d90d1af2" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86850688" /></Metadata><TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.Process" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8de83-101">Stellt Daten für das <see cref="E:System.Diagnostics.Process.OutputDataReceived" />-Ereignis und das <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="8de83-101">Provides data for the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> and <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8de83-102">Um die umgeleitete <xref:System.Diagnostics.Process.StandardOutput%2A> oder Streamausgabe eines Prozesses asynchron zu erfassen <xref:System.Diagnostics.Process.StandardError%2A> , müssen Sie eine Methode erstellen, die die umgeleiteten Datenstrom Ausgabe Ereignisse behandelt.</span><span class="sxs-lookup"><span data-stu-id="8de83-102">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events.</span></span> <span data-ttu-id="8de83-103">Die Ereignishandlermethode wird aufgerufen, wenn der Prozess in den umgeleiteten Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="8de83-103">The event-handler method is called when the process writes to the redirected stream.</span></span> <span data-ttu-id="8de83-104">Der Ereignis Delegat ruft den Ereignishandler mit einer Instanz von auf <xref:System.Diagnostics.DataReceivedEventArgs> .</span><span class="sxs-lookup"><span data-stu-id="8de83-104">The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>.</span></span> <span data-ttu-id="8de83-105">Die- <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft enthält die Textzeile, die der Prozess in den umgeleiteten Stream geschrieben hat.</span><span class="sxs-lookup"><span data-stu-id="8de83-105">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8de83-106">Im folgenden Codebeispiel wird veranschaulicht, wie asynchrone Lesevorgänge für den umgeleiteten <xref:System.Diagnostics.Process.StandardOutput%2A> Stream des Befehls durchgeführt werden `sort` .</span><span class="sxs-lookup"><span data-stu-id="8de83-106">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command.</span></span> <span data-ttu-id="8de83-107">Der `sort` Befehl ist eine Konsolenanwendung, die Texteingaben liest und sortiert.</span><span class="sxs-lookup"><span data-stu-id="8de83-107">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="8de83-108">Im Beispiel wird ein Ereignis Delegat für den `SortOutputHandler` Ereignishandler erstellt und dem- <xref:System.Diagnostics.Process.OutputDataReceived> Ereignis zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="8de83-108">The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="8de83-109">Der Ereignishandler empfängt Textzeilen aus dem umgeleiteten <xref:System.Diagnostics.Process.StandardOutput%2A> Stream, formatiert den Text und schreibt den Text auf den Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="8de83-109">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8de83-110">Ruft die Zeile von Zeichen ab, die in einen umgeleiteten <see cref="T:System.Diagnostics.Process" />-Ausgabestream geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="8de83-110">Gets the line of characters that was written to a redirected <see cref="T:System.Diagnostics.Process" /> output stream.</span></span></summary>
        <value><span data-ttu-id="8de83-111">Die Zeile, die von einem zugeordneten <see cref="T:System.Diagnostics.Process" /> in seinen umgeleiteten <see cref="P:System.Diagnostics.Process.StandardOutput" />-Stream oder <see cref="P:System.Diagnostics.Process.StandardError" />-Stream geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="8de83-111">The line that was written by an associated <see cref="T:System.Diagnostics.Process" /> to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> or <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8de83-112">Wenn Sie den- <xref:System.Diagnostics.Process.StandardOutput%2A> oder- <xref:System.Diagnostics.Process.StandardError%2A> Stream einer <xref:System.Diagnostics.Process> an den Ereignishandler umleiten, wird jedes Mal ein Ereignis ausgelöst, wenn der Prozess eine Zeile in den umgeleiteten Datenstrom schreibt.</span><span class="sxs-lookup"><span data-stu-id="8de83-112">When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream.</span></span> <span data-ttu-id="8de83-113">Die- <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft ist die Zeile, die der <xref:System.Diagnostics.Process> in den umgeleiteten Ausgabestream geschrieben hat.</span><span class="sxs-lookup"><span data-stu-id="8de83-113">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream.</span></span> <span data-ttu-id="8de83-114">Der Ereignishandler kann die- <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft verwenden, um die Prozess Ausgabe zu filtern oder die Ausgabe an einen alternativen Speicherort zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="8de83-114">Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location.</span></span> <span data-ttu-id="8de83-115">Beispielsweise können Sie einen Ereignishandler erstellen, in dem alle Fehlerausgabe Zeilen in einer bestimmten Fehlerprotokoll Datei gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="8de83-115">For example, you might create an event handler that stores all error output lines into a designated error log file.</span></span>  
  
 <span data-ttu-id="8de83-116">Eine Zeile ist als Sequenz von Zeichen, gefolgt von einem Zeilenvorschub ("\n") oder einem Wagen Rücklauf, auf den unmittelbar ein Zeilenvorschub gefolgt ist ("\r\n") definiert.</span><span class="sxs-lookup"><span data-stu-id="8de83-116">A line is defined as a sequence of characters followed by a line feed ("\n") or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="8de83-117">Die Zeilenzeichen werden mithilfe der standardmäßigen ANSI-Codepage des Systems codiert.</span><span class="sxs-lookup"><span data-stu-id="8de83-117">The line characters are encoded using the default system ANSI code page.</span></span> <span data-ttu-id="8de83-118">Die- <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft enthält nicht den abschließenden Wagen Rücklauf oder Zeilenvorschub.</span><span class="sxs-lookup"><span data-stu-id="8de83-118">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.</span></span>  
  
 <span data-ttu-id="8de83-119">Wenn der umgeleitete Stream geschlossen ist, wird eine NULL-Zeile an den Ereignishandler gesendet.</span><span class="sxs-lookup"><span data-stu-id="8de83-119">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="8de83-120">Stellen Sie sicher, dass der Ereignishandler die <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft entsprechend überprüft, bevor Sie darauf zugreifen.</span><span class="sxs-lookup"><span data-stu-id="8de83-120">Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it.</span></span> <span data-ttu-id="8de83-121">Beispielsweise können Sie die statische-Methode verwenden, <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> um die- <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Eigenschaft im Ereignishandler zu validieren.</span><span class="sxs-lookup"><span data-stu-id="8de83-121">For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8de83-122">Das folgende Codebeispiel veranschaulicht einen einfachen Ereignishandler, der dem-Ereignis zugeordnet ist <xref:System.Diagnostics.Process.OutputDataReceived> .</span><span class="sxs-lookup"><span data-stu-id="8de83-122">The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="8de83-123">Der Ereignishandler empfängt Textzeilen aus dem umgeleiteten <xref:System.Diagnostics.Process.StandardOutput%2A> Stream, formatiert den Text und schreibt den Text auf den Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="8de83-123">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
