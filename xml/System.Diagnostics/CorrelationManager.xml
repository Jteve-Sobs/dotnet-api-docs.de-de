<Type Name="CorrelationManager" FullName="System.Diagnostics.CorrelationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="519c1795b5b72fe2da089649c087939c2297bee5" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75138158" /></Metadata><TypeSignature Language="C#" Value="public class CorrelationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CorrelationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.CorrelationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CorrelationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class CorrelationManager" />
  <TypeSignature Language="F#" Value="type CorrelationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Korreliert Ablaufverfolgungen, die Teil einer logischen Transaktion sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ablauf Verfolgungen, die von einem einzelnen logischen Vorgang generiert werden, können mit einer durch einen Vorgang eindeutigen Identität gekennzeichnet werden, um Sie von Ablauf Verfolgungen von einer anderen logischen Operation zu unterscheiden. Beispielsweise kann es hilfreich sein, korrelierte Ablauf Verfolgungen nach ASP.NET-Anforderung zu gruppieren. Die <xref:System.Diagnostics.CorrelationManager>-Klasse stellt Methoden bereit, die verwendet werden, um eine logische Vorgangs Identität in einem Thread gebundenen Kontext zu speichern und jedes vom Thread generierte Ablauf Verfolgungs Ereignis automatisch mit der gespeicherten Identität zu versehen.  
  
 Logische Vorgänge können ebenfalls eingebettet werden. Die <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>-Eigenschaft macht den Stapel von eingefügten logischen Vorgangs Identitäten verfügbar. Jeder Aufrufe der <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>-Methode überträgt eine neue logische Vorgangs Identität auf den Stapel. Jeder Aufrufe der <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>-Methode ruft eine logische Vorgangs Identität aus dem Stapel ab.  
  
> [!NOTE]
>  Logische Vorgangs Identitäten sind Objekte, die die Verwendung eines Typs für eine logische Vorgangs Identität ermöglichen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Diagnostics.CorrelationManager>-Klasse veranschaulicht, indem die logische Operation identifiziert wird, die einem verfolgten Ereignis zugeordnet ist. Zwei logische Vorgänge werden gestartet, eine im Haupt Thread und die andere in einem Arbeits Thread. Bei beiden logischen Vorgängen wird ein Fehler Ereignis protokolliert.  
  
 [!code-cpp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cpp/correlationmanager.cpp#1)]
 [!code-csharp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.CorrelationManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public Guid ActivityId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CorrelationManager.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ActivityId { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.ActivityId : Guid with get, set" Usage="System.Diagnostics.CorrelationManager.ActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Identität für eine globale Aktivität ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Guid" />-Struktur, die die globale Aktivität bezeichnet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>-Eigenschaft ruft die globale Aktivitäts Identität in der <xref:System.Runtime.Remoting.Messaging.CallContext> für den Thread ab und legt Sie fest. Der <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> wird für Ablauf Verfolgungs Übertragungen in Ablaufverfolgungslistenern verwendet, die die <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>-Methode überschreiben, z. b. die <xref:System.Diagnostics.XmlWriterTraceListener>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den logische Vorgangsstapel vom Aufrufkontext ab.</summary>
        <value>Ein <see cref="T:System.Collections.Stack" />-Objekt, das den logischen Vorgangsstapel für den Aufrufkontext darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeder Aufrufe der <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>-Methode überträgt eine neue logische Vorgangs Identität auf den Stapel der <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> Eigenschaft. Jeder Aufrufe der <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>-Methode ruft eine logische Vorgangs Identität aus dem Stapel ab.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartLogicalOperation">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Startet einen logischen Vorgang für einen Thread.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartLogicalOperation">
      <MemberSignature Language="C#" Value="public void StartLogicalOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartLogicalOperation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartLogicalOperation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartLogicalOperation();" />
      <MemberSignature Language="F#" Value="member this.StartLogicalOperation : unit -&gt; unit" Usage="correlationManager.StartLogicalOperation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet einen logischen Vorgang für einen Thread.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die logische Operation wird mithilfe einer automatisch generierten GUID für einen logischen Vorgangs Bezeichner gestartet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartLogicalOperation">
      <MemberSignature Language="C#" Value="public void StartLogicalOperation (object operationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartLogicalOperation(object operationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartLogicalOperation (operationId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartLogicalOperation(System::Object ^ operationId);" />
      <MemberSignature Language="F#" Value="member this.StartLogicalOperation : obj -&gt; unit" Usage="correlationManager.StartLogicalOperation operationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="operationId">Ein Objekt, das den Vorgang bezeichnet.</param>
        <summary>Startet einen logischen Vorgang mit der angegebenen Identität für einen Thread.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `operationId`-Parameter kann ein beliebiges Objekt sein, z. b. ein <xref:System.String>, mit dem der Vorgang für Ablauf Verfolgungs Zwecke identifiziert werden kann. Das durch `operationId` dargestellte Objekt wird der <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>-Eigenschaft hinzugefügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%28System.Object%29>-Methode veranschaulicht, indem eine logische Operation initialisiert wird, die dem Haupt Thread zugeordnet werden soll. Das gesamte Codebeispiel finden Sie in der <xref:System.Diagnostics.CorrelationManager>-Klasse.  
  
 [!code-csharp[System.Diagnostics.CorrelationManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#2)]
 [!code-vb[System.Diagnostics.CorrelationManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="operationId" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopLogicalOperation">
      <MemberSignature Language="C#" Value="public void StopLogicalOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLogicalOperation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StopLogicalOperation" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLogicalOperation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLogicalOperation();" />
      <MemberSignature Language="F#" Value="member this.StopLogicalOperation : unit -&gt; unit" Usage="correlationManager.StopLogicalOperation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hält den aktuellen logischen Vorgang an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die logische Operation wird angehalten, und die logische Vorgangs Identität wird aus der <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>-Eigenschaft entfernt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />-Eigenschaft ist ein leerer Stapel.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
