<Type Name="TraceSwitch" FullName="System.Diagnostics.TraceSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87dfcd2421a02c8eccfd25177149945040afdb3a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69252661" /></Metadata><TypeSignature Language="C#" Value="public class TraceSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type TraceSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Schalter bereit, mit dem mehrere Ebenen ausgewählt und so Ablaufverfolgungs- und Debugausgabe gesteuert werden können, ohne dass der Code hierfür neu kompiliert werden muss.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ablauf Verfolgungs Schalter verwenden, um Nachrichten basierend auf ihrer Wichtigkeit herauszufiltern. Die <xref:System.Diagnostics.TraceSwitch> -Klasse stellt <xref:System.Diagnostics.TraceSwitch.TraceError%2A>die <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>Eigenschaften <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>,, <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> und bereit, um die Ebene des Schalters zu testen. Die <xref:System.Diagnostics.TraceSwitch.Level%2A> -<xref:System.Diagnostics.TraceLevel>Eigenschaft ruft die des Schalters ab oder legt Sie fest.  
  
 Sie können die Ebene eines <xref:System.Diagnostics.TraceSwitch> über die Anwendungs Konfigurationsdatei festlegen und dann die konfigurierte <xref:System.Diagnostics.TraceSwitch> Ebene in der Anwendung verwenden. Alternativ können Sie einen <xref:System.Diagnostics.TraceSwitch> in Ihrem Code erstellen und die Ebene direkt festlegen, um einen bestimmten Code Abschnitt zu instrumentieren.  
  
 Um einen <xref:System.Diagnostics.TraceSwitch>zu konfigurieren, bearbeiten Sie die Konfigurationsdatei für die Anwendung. In dieser Datei können Sie einen Schalter hinzufügen oder entfernen, den Wert eines Schalters festlegen oder alle Switches löschen, die zuvor von der Anwendung festgelegt wurden. Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Dieser Konfigurations Abschnitt definiert eine <xref:System.Diagnostics.TraceSwitch> , bei <xref:System.Diagnostics.Switch.DisplayName%2A> der auf `mySwitch` <xref:System.Diagnostics.TraceSwitch.Level%2A> festgelegt ist und auf 1 festgelegt ist, was dem-Enumerationswert <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>entspricht.  
  
> [!NOTE]
>  In .NET Framework 2.0 können Sie Text verwenden, um den Wert eines Schalters anzugeben. Beispielsweise `true` für einen <xref:System.Diagnostics.BooleanSwitch> oder den Text, der einen Enumerationswert darstellt, `Error` z. <xref:System.Diagnostics.TraceSwitch>b. für einen. Die Zeile `<add name="mySwitch" value="Error" />` ist gleichbedeutend mit `<add name="mySwitch" value="1" />`.  
  
 In Ihrer Anwendung können Sie die konfigurierte switchebene verwenden, indem Sie <xref:System.Diagnostics.TraceSwitch> eine mit demselben Namen erstellen, wie im folgenden Beispiel gezeigt:  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 Standardmäßig wird die Switch <xref:System.Diagnostics.TraceSwitch.Level%2A> -Eigenschaft mit dem in der Konfigurationsdatei angegebenen Wert festgelegt. Wenn der <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> Konstruktor keine anfänglichen Switcheinstellungen in der Konfigurationsdatei finden kann, <xref:System.Diagnostics.TraceSwitch.Level%2A> wird für den neuen Switch Standard <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>mäßig verwendet.  
  
 Sie müssen die Ablauf Verfolgung oder das Debuggen zur Verwendung eines Schalters aktivieren Die folgende Syntax ist compilerspezifisch. Wenn Sie andere Compiler als C# oder Visual Basic verwenden, finden Sie in der Dokumentation Ihres Compiler weitere Informationen.  
  
-   Um das Debuggen in C#zu `/d:DEBUG` aktivieren, fügen Sie das-Flag zur Compilerbefehlszeile hinzu `#define DEBUG` , wenn Sie den Code kompilieren, oder fügen Sie am Anfang der Datei hinzu. Fügen Sie in Visual Basic der `/d:DEBUG=True` Compilerbefehlszeile das-Flag hinzu.  
  
-   Um die Ablauf Verfolgung C#in zu aktivieren `/d:TRACE` , fügen Sie das Flag der Compilerbefehlszeile hinzu, wenn `#define TRACE` Sie den Code kompilieren, oder fügen Sie am Anfang der Datei hinzu. Fügen Sie in Visual Basic der `/d:TRACE=True` Compilerbefehlszeile das-Flag hinzu.  
  
> [!NOTE]
>  Diese Debug-und Trace-Compilerschalter sind nicht erforderlich <xref:System.Diagnostics.TraceSwitch> , wenn die-Klasse isoliert verwendet wird. Sie sind nur in Verbindung mit <xref:System.Diagnostics.Trace> der-Methode oder <xref:System.Diagnostics.Debug> der-Methode erforderlich, die bedingt kompiliert werden.  
  
 Weitere Informationen zum Instrumentieren Ihrer Anwendung finden <xref:System.Diagnostics.Debug> Sie unter und. <xref:System.Diagnostics.Trace> Weitere Informationen zum Konfigurieren und Verwenden von Ablauf Verfolgungs Schaltern finden Sie unter Ablauf [Verfolgungs Schalter](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Um die Leistung zu verbessern, <xref:System.Diagnostics.TraceSwitch> können `static` Sie Member in der Klasse erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer <xref:System.Diagnostics.TraceSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob Fehlermeldungen gedruckt werden sollen. Der Schalter wird auf Klassenebene erstellt. `MyMethod`schreibt die erste Fehlermeldung, wenn <xref:System.Diagnostics.TraceSwitch.Level%2A> die-Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> oder höher festgelegt ist. Schreibt jedoch `MyMethod` nicht die zweite Fehlermeldung, <xref:System.Diagnostics.TraceSwitch.Level%2A> wenn kleiner als <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>ist.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceLevel" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSwitch" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Der auf einer Benutzeroberfläche anzuzeigende Name.</param>
        <param name="description">Die Beschreibung des Schalters.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSwitch" />-Klasse unter Verwendung des angegebenen Anzeigenamens und der angegebenen Beschreibung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die Ebene des festzulegen <xref:System.Diagnostics.TraceSwitch>, bearbeiten Sie die Konfigurationsdatei, die dem Namen der Anwendung entspricht. In dieser Datei können Sie einen Switch hinzufügen und dessen Wert festlegen, einen Switch entfernen oder alle Switches löschen, die zuvor von der Anwendung festgelegt wurden. Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  In .NET Framework 2.0 können Sie Text verwenden, um den Wert eines Schalters anzugeben. Beispielsweise `true` für einen <xref:System.Diagnostics.BooleanSwitch> oder den Text, der einen Enumerationswert darstellt, `Error` z. <xref:System.Diagnostics.TraceSwitch>b. für einen. Die Zeile `<add name="mySwitch" value="Error" />` ist gleichbedeutend mit `<add name="mySwitch" value="1" />`.  
  
 In Ihrer Anwendung können Sie die konfigurierte switchebene verwenden, indem Sie <xref:System.Diagnostics.TraceSwitch> eine mit demselben Namen erstellen, wie im folgenden Beispiel gezeigt:  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 Wenn der <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> Konstruktor keine anfänglichen Switcheinstellungen in der Konfigurationsdatei finden kann, <xref:System.Diagnostics.TraceSwitch.Level%2A> wird die-Eigenschaft des neuen Schalters <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>auf festgelegt.  
  
 Die <xref:System.Diagnostics.TraceSwitch> -Klasse stellt <xref:System.Diagnostics.TraceSwitch.TraceError%2A>die <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>Eigenschaften <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>,, <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> und bereit, um <xref:System.Diagnostics.TraceSwitch.Level%2A> den des Schalters zu testen. Die <xref:System.Diagnostics.TraceSwitch.Level%2A> -<xref:System.Diagnostics.TraceLevel>Eigenschaft ruft die des Schalters ab oder legt Sie fest.  
  
> [!NOTE]
>  Um die Leistung zu verbessern, <xref:System.Diagnostics.TraceSwitch> können `static` Sie Member in der Klasse erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer <xref:System.Diagnostics.TraceSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob Fehlermeldungen gedruckt werden sollen. Der Schalter wird auf Klassenebene erstellt. `MyMethod`schreibt die erste Fehlermeldung, wenn <xref:System.Diagnostics.TraceSwitch.Level%2A> die-Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> oder höher festgelegt ist. Schreibt jedoch `MyMethod` nicht die zweite Fehlermeldung, <xref:System.Diagnostics.TraceSwitch.Level%2A> wenn kleiner als <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>ist.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName">Der auf einer Benutzeroberfläche anzuzeigende Name.</param>
        <param name="description">Die Beschreibung des Schalters.</param>
        <param name="defaultSwitchValue">Der Standardwert des Schalters.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.TraceSwitch" />-Klasse unter Verwendung des angegebenen Anzeigenamens, der angegebenen Beschreibung und des Standardwerts für den Schalter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `displayName` -Parameter wird verwendet, um den Wert <xref:System.Diagnostics.Switch.DisplayName%2A> der-Eigenschaft fest `description` zulegen, der-Parameter <xref:System.Diagnostics.Switch.Description%2A> wird verwendet, um den Wert der- `defaultSwitchValue` Eigenschaft festzulegen, und der-Parameter wird als-Feld gespeichert und zum Initialisieren <xref:System.Diagnostics.Switch.Value%2A>vonverwendet.Eigenschaft beim ersten Verweis. Weitere Informationen <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29> und ein Codebeispiel finden Sie im-Konstruktor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLevel Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As TraceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLevel Level { System::Diagnostics::TraceLevel get(); void set(System::Diagnostics::TraceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Diagnostics.TraceLevel with get, set" Usage="System.Diagnostics.TraceSwitch.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ablaufverfolgungsebene ab, die die Meldungen bestimmt, die der Schalter zulässt, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Diagnostics.TraceLevel" /> -Werte, der die Ebene der Nachrichten angibt, die vom Switch zugelassen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die Ebene des festzulegen <xref:System.Diagnostics.TraceSwitch>, bearbeiten Sie die Konfigurationsdatei, die dem Namen der Anwendung entspricht. In dieser Datei können Sie einen Switch hinzufügen und dessen Wert festlegen, einen Switch entfernen oder alle Switches löschen, die zuvor von der Anwendung festgelegt wurden. Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert sein:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="0" />  
      <add name="myNewSwitch" value="3" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  In .NET Framework 2.0 können Sie Text verwenden, um den Wert eines Schalters anzugeben. Beispielsweise `true` für einen <xref:System.Diagnostics.BooleanSwitch> oder den Text, der einen Enumerationswert darstellt, `Error` z. <xref:System.Diagnostics.TraceSwitch>b. für einen. Die Zeile `<add name="mySwitch" value="Error" />` ist gleichbedeutend mit `<add name="mySwitch" value="1" />`.  
  
 Wenn der <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> Konstruktor keine anfänglichen Switcheinstellungen in der Konfigurationsdatei finden kann, <xref:System.Diagnostics.TraceSwitch.Level%2A> wird die-Eigenschaft des neuen Schalters <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>auf festgelegt.  
  
 Wenn Sie diese Eigenschaft festlegen <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>werden die Eigenschaften <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> ,, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>und so aktualisiert, dass Sie den neuen Wert widerspiegeln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer <xref:System.Diagnostics.TraceSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob Fehlermeldungen gedruckt werden sollen. Der Schalter wird auf Klassenebene erstellt. `MyMethod`schreibt die erste Fehlermeldung, wenn <xref:System.Diagnostics.TraceSwitch.Level%2A> die-Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> oder höher festgelegt ist. Schreibt jedoch `MyMethod` nicht die zweite Fehlermeldung, <xref:System.Diagnostics.TraceSwitch.Level%2A> wenn kleiner als <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>ist.  
  
 [!code-cpp[Classic TraceSwitch.Level Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.Level Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.Level Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.TraceSwitch.Level" /> wird auf einen Wert festgelegt, der mit keinem der <see cref="T:System.Diagnostics.TraceLevel" />-Werte übereinstimmt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit nicht verwaltetem Code. Zugehörige Enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected override void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSwitchSettingChanged();" />
      <MemberSignature Language="F#" Value="override this.OnSwitchSettingChanged : unit -&gt; unit" Usage="traceSwitch.OnSwitchSettingChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert und korrigiert die Ebene für diesen Schalter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged%2A> -Methode wird von .NET Framework verwendet, um den Wert eines Schalters zu validieren und zu korrigieren, der über eine Konfigurationsdatei initialisiert wird. Eine Meldung wird in alle Ablaufverfolgungslistener geschrieben, wenn der in der Konfigurationsdatei angegebene switchwert nicht durch die <xref:System.Diagnostics.TraceLevel> -Enumeration definiert ist und der Schalter auf einen definierten Wert festgelegt ist.  
  
 Wenn Sie in Ihrem Code versuchen, die <xref:System.Diagnostics.TraceSwitch.Level%2A> -Eigenschaft auf einen Wert festzulegen, der nicht durch die <xref:System.Diagnostics.TraceLevel> -Enumeration <xref:System.ArgumentException> definiert ist, wird eine-Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="traceSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die <see cref="P:System.Diagnostics.Switch.SwitchSetting" />-Eigenschaft auf eine ganzzahlige Entsprechung der <see cref="P:System.Diagnostics.Switch.Value" />-Eigenschaft fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird intern aufgerufen, wenn <xref:System.Diagnostics.Switch.Value%2A> die-Eigenschaft des Schalters geändert wird. Die-Methode stellt sicher, dass die Eigenschaften im Zusammenhang mit dem Wert des Schalters den neuen Wert widerspiegeln.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Um diese Eigenschaft zu überschreiben, konvertieren Sie den Zeichen <see cref="P:System.Diagnostics.Switch.Value" /> folgen Wert der-Eigenschaft in binary, <see cref="P:System.Diagnostics.TraceSwitch.Level" /> und legen Sie dann die-Eigenschaft fest.</para></block>
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public bool TraceError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceError : bool" Usage="System.Diagnostics.TraceSwitch.TraceError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Schalter Meldungen zur Fehlerbehandlung zulässt.</summary>
        <value><see langword="true" />, wenn die <see cref="P:System.Diagnostics.TraceSwitch.Level" />-Eigenschaft auf <see cref="F:System.Diagnostics.TraceLevel.Error" />, <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> oder <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> festgelegt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Diagnostics.TraceSwitch.TraceError%2A>die Eigenschaften, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>und <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> in Verbindung mit der-Klasse und <xref:System.Diagnostics.Trace> der <xref:System.Diagnostics.Debug> -Klasse verwenden, um alle Nachrichten mit einer angegebenen Wichtigkeit oder höher auszugeben. Wenn die <xref:System.Diagnostics.TraceSwitch.Level%2A> Eigenschaft auf die höchste Wichtigkeit <xref:System.Diagnostics.TraceLevel.Error> , <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>,, festgelegt ist, werden nur Fehler Behandlungs Meldungen ausgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer <xref:System.Diagnostics.TraceSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob Fehlermeldungen ausgegeben werden sollen. Der Schalter wird auf Klassenebene erstellt. `MyMethod`schreibt die erste Fehlermeldung, wenn <xref:System.Diagnostics.TraceSwitch.Level%2A> die-Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> oder höher festgelegt ist. Schreibt jedoch `MyMethod` nicht die zweite Fehlermeldung, <xref:System.Diagnostics.TraceSwitch.Level%2A> wenn kleiner als <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>ist.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceInfo">
      <MemberSignature Language="C#" Value="public bool TraceInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceInfo : bool" Usage="System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Schalter Informationsmeldungen zulässt.</summary>
        <value><see langword="true" />, wenn die <see cref="P:System.Diagnostics.TraceSwitch.Level" />-Eigenschaft auf <see cref="F:System.Diagnostics.TraceLevel.Info" /> oder <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> festgelegt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Diagnostics.TraceSwitch.TraceError%2A>die Eigenschaften, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>und <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> in Verbindung mit der-Klasse und <xref:System.Diagnostics.Trace> der <xref:System.Diagnostics.Debug> -Klasse verwenden, um alle Nachrichten mit einer angegebenen Wichtigkeit oder höher auszugeben. Wenn die <xref:System.Diagnostics.TraceSwitch.Level%2A> -Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>festgelegt ist, werden Informationsmeldungen, Warnungen und Fehler Behandlungs Meldungen ausgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer <xref:System.Diagnostics.TraceSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob Fehlermeldungen ausgegeben werden sollen. Der Schalter wird auf Klassenebene erstellt. `MyMethod`schreibt die erste Fehlermeldung, wenn <xref:System.Diagnostics.TraceSwitch.Level%2A> die-Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Info?displayProperty=nameWithType> oder höher festgelegt ist. Schreibt jedoch `MyMethod` nicht die zweite Fehlermeldung, <xref:System.Diagnostics.TraceSwitch.Level%2A> wenn kleiner als <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>ist.  
  
 [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceVerbose">
      <MemberSignature Language="C#" Value="public bool TraceVerbose { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceVerbose" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceVerbose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceVerbose { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceVerbose : bool" Usage="System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Schalter alle Meldungen zulässt.</summary>
        <value><see langword="true" />, wenn die <see cref="P:System.Diagnostics.TraceSwitch.Level" />-Eigenschaft auf <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> festgelegt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Diagnostics.TraceSwitch.TraceError%2A>die Eigenschaften, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>und <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> in Verbindung mit der-Klasse und <xref:System.Diagnostics.Trace> der <xref:System.Diagnostics.Debug> -Klasse verwenden, um alle Nachrichten mit einer angegebenen Wichtigkeit oder höher auszugeben. Wenn die <xref:System.Diagnostics.TraceSwitch.Level%2A> -Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>festgelegt ist, werden alle Debugging-und Ablauf Verfolgungs Meldungen übertragen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer <xref:System.Diagnostics.TraceSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob Fehlermeldungen ausgegeben werden sollen. Der Schalter wird auf Klassenebene erstellt. `MyMethod`schreibt beide Fehlermeldungen, wenn <xref:System.Diagnostics.TraceSwitch.Level%2A> die-Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>festgelegt ist.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public bool TraceWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceWarning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceWarning : bool" Usage="System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Schalter Warnmeldungen zulässt.</summary>
        <value><see langword="true" />, wenn die <see cref="P:System.Diagnostics.TraceSwitch.Level" />-Eigenschaft auf <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> oder <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> festgelegt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Diagnostics.TraceSwitch.TraceError%2A>die Eigenschaften, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>und <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> in Verbindung mit der-Klasse und <xref:System.Diagnostics.Trace> der <xref:System.Diagnostics.Debug> -Klasse verwenden, um alle Nachrichten mit einer angegebenen Wichtigkeit oder höher auszugeben. Wenn die <xref:System.Diagnostics.TraceSwitch.Level%2A> -Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>festgelegt ist, werden Warnungen und Fehler Behandlungs Meldungen ausgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer <xref:System.Diagnostics.TraceSwitch> erstellt und der-Schalter verwendet, um zu bestimmen, ob Fehlermeldungen ausgegeben werden sollen. Der Schalter wird auf Klassenebene erstellt. `MyMethod`schreibt die erste Fehlermeldung, wenn <xref:System.Diagnostics.TraceSwitch.Level%2A> die-Eigenschaft auf <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType> oder höher festgelegt ist. Schreibt jedoch `MyMethod` nicht die zweite Fehlermeldung, <xref:System.Diagnostics.TraceSwitch.Level%2A> wenn kleiner als <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>ist.  
  
 [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
