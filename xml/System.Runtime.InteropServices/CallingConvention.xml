<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CallingConvention.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c83c36867a7f90557281b4d81ca21dc52beb8993.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c83c36867a7f90557281b4d81ca21dc52beb8993</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.CallingConvention">
          <source>Specifies the calling convention required to call methods implemented in unmanaged code.</source>
          <target state="translated">Gibt die Aufrufkonvention an, die zum Aufrufen von Methoden erforderlich ist, die in nicht verwaltetem Code implementiert sind.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CallingConvention">
          <source>Always use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CallingConvention&gt;</ph> enumeration rather than the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.CALLCONV&gt;</ph> enumeration to specify a calling convention in managed code.</source>
          <target state="translated">Verwenden Sie immer die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CallingConvention&gt;</ph> Enumeration statt über das <ph id="ph2">&lt;xref:System.Runtime.InteropServices.CALLCONV&gt;</ph> aufzählen an eine Aufrufkonvention in verwaltetem Code.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CallingConvention">
          <source>The latter exists only for the sake of COM definitions.</source>
          <target state="translated">Der zweite Wert wird nur aus Gründen der COM-Definitionen vorhanden ist.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CallingConvention">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CallingConvention&gt;</ph> enumeration is used by <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> and several classes in <ph id="ph3">&lt;xref:System.Reflection.Emit&gt;</ph> to dynamically emit platform invoke signatures.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CallingConvention&gt;</ph> Enumeration wird verwendet, indem <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> und mehrere Klassen in <ph id="ph3">&lt;xref:System.Reflection.Emit&gt;</ph> zum Ausgeben von dynamischen Plattformaufruf Signaturen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CallingConvention">
          <source>The following example demonstrates how to apply the <ph id="ph1">`Cdecl`</ph> calling convention, which you must use because the stack is cleaned up by the caller.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Anwenden der <ph id="ph1">`Cdecl`</ph> Aufrufkonvention ab, die Sie verwenden müssen, da der Stapel vom Aufrufer bereinigt wird.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.Cdecl">
          <source>The caller cleans the stack.</source>
          <target state="translated">Der Aufrufer entleert den Stapel.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.Cdecl">
          <source>This enables calling functions with <ph id="ph1">&lt;see langword="varargs" /&gt;</ph>, which makes it appropriate to use for methods that accept a variable number of parameters, such as <ph id="ph2">&lt;see langword="Printf" /&gt;</ph>.</source>
          <target state="translated">Dies aktiviert Aufruffunktionen mit <ph id="ph1">&lt;see langword="varargs" /&gt;</ph>, wodurch die Verwendung für Methoden ermöglicht wird, die eine variable Anzahl von Parametern akzeptieren, beispielsweise <ph id="ph2">&lt;see langword="Printf" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.FastCall">
          <source>This calling convention is not supported.</source>
          <target state="translated">Diese Aufruffunktion wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.StdCall">
          <source>The callee cleans the stack.</source>
          <target state="translated">Der Aufgerufene entleert den Stapel.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.StdCall">
          <source>This is the default convention for calling unmanaged functions with platform invoke.</source>
          <target state="translated">Dies ist die Standardkonvention für das Aufrufen nicht verwalteter Funktionen mit Plattformaufruf.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
          <source>The first parameter is the <ph id="ph1">&lt;see langword="this" /&gt;</ph> pointer and is stored in register ECX.</source>
          <target state="translated">Der erste Parameter ist der <ph id="ph1">&lt;see langword="this" /&gt;</ph>-Zeiger, der im Register ECX gespeichert wird.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
          <source>Other parameters are pushed on the stack.</source>
          <target state="translated">Weitere Parameter werden in den Stapel verschoben.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.ThisCall">
          <source>This calling convention is used to call methods on classes exported from an unmanaged DLL.</source>
          <target state="translated">Diese Aufrufkonvention wird zum Aufrufen von Methoden für Klassen verwendet, die aus einer nicht verwalteten DLL exportiert wurden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.Winapi">
          <source>This member is not actually a calling convention, but instead uses the default platform calling convention.</source>
          <target state="translated">Dieser Member stellt keine tatsächliche Aufrufkonvention dar, sondern verwendet die Standardkonvention für Plattformaufrufe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CallingConvention.Winapi">
          <source>For example, on Windows the default is <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CallingConvention.StdCall" /&gt;</ph> and on Windows CE.NET it is <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl" /&gt;</ph>.</source>
          <target state="translated">Unter Windows ist der Standard beispielsweise <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CallingConvention.StdCall" /&gt;</ph>, und unter Windows CE.NET ist der Standard <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.CallingConvention.Cdecl" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>