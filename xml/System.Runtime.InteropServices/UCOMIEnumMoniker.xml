<Type Name="UCOMIEnumMoniker" FullName="System.Runtime.InteropServices.UCOMIEnumMoniker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bea9738d8a3346e370b2ae49ccdf15ce628a6bd2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30485034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIEnumMoniker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIEnumMoniker" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIEnumMoniker" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIEnumMoniker" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIEnumMoniker" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00000102-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Verwenden Sie stattdessen <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den `IEnumMoniker` Schnittstelle, finden Sie in der MSDN Library.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clone([out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Clone(System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ppenum As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenum" Type="System.Runtime.InteropServices.UCOMIEnumMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenum">Bei erfolgreicher Rückgabe ein Verweis auf den neu erstellten Enumerator.</param>
        <summary>Erstellt einen weiteren Enumerator, der den gleichen Enumerationszustand wie der aktuelle Enumerator enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu `IEnumMoniker::Clone`, finden Sie in der MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public int Next (int celt, System.Runtime.InteropServices.UCOMIMoniker[] rgelt, out int pceltFetched);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 celt, [out] class System.Runtime.InteropServices.UCOMIMoniker[] rgelt, [out] int32&amp; pceltFetched) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.UCOMIMoniker[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Next (celt As Integer, rgelt As UCOMIMoniker(), ByRef pceltFetched As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Next(int celt, cli::array &lt;System::Runtime::InteropServices::UCOMIMoniker ^&gt; ^ rgelt, [Runtime::InteropServices::Out] int % pceltFetched);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="celt" Type="System.Int32" />
        <Parameter Name="rgelt" Type="System.Runtime.InteropServices.UCOMIMoniker[]" />
        <Parameter Name="pceltFetched" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="celt">Die Anzahl der Moniker, die in <c>rgelt</c> zurückgegeben werden sollen.</param>
        <param name="rgelt">Bei erfolgreicher Rückgabe ein Verweis auf die aufgelisteten Moniker.</param>
        <param name="pceltFetched">Bei erfolgreicher Rückgabe ein Verweis auf die tatsächliche Anzahl der in <c>rgelt</c> aufgezählten Moniker.</param>
        <summary>Ruft eine angegebene Anzahl von Elementen in der Enumerationsfolge ab.</summary>
        <returns>
          <see langword="S_OK" />, wenn der <paramref name="pceltFetched" />-Parameter gleich dem <paramref name="celt" />-Parameter ist, andernfalls <see langword="S_FALSE" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu `IEnumMoniker::Next`, finden Sie in der MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public int Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die Enumerationsfolge auf den Anfang zurück.</summary>
        <returns>Ein HRESULT mit dem Wert <see langword="S_OK" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu `IEnumMoniker::Reset`, finden Sie in der MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public int Skip (int celt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Skip(int32 celt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Skip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (celt As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Skip(int celt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="celt" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="celt">Die Anzahl der Elemente, die in der Enumeration übersprungen werden sollen.</param>
        <summary>Überspringt eine angegebene Anzahl von Elementen in der Enumerationsfolge.</summary>
        <returns>
          <see langword="S_OK" />, wenn die Anzahl der übersprungenen Elemente gleich dem <paramref name="celt" />-Parameter ist, andernfalls <see langword="S_FALSE" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu `IEnumMoniker::Skip`, finden Sie in der MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>