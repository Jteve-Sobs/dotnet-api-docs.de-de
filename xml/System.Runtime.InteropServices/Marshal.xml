<Type Name="Marshal" FullName="System.Runtime.InteropServices.Marshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b582e89d8a536a45d26354652aab5d4e97b21f0f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480654" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Marshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Marshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshal" />
  <TypeSignature Language="VB.NET" Value="Public Class Marshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class Marshal abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="711e1-101">Bietet eine Auflistung von Methoden zum Belegen von nicht verwaltetem Speicher, zum Kopieren von nicht verwalteten Speicherblöcken und zum Konvertieren von verwalteten in nicht verwaltete Typen sowie sonstige Methoden, die bei der Interaktion mit nicht verwaltetem Code verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="711e1-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-102">Die `static` definierten Methoden den <xref:System.Runtime.InteropServices.Marshal> Klasse sind unverzichtbar für die Arbeit mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-102">The `static` methods defined on the <xref:System.Runtime.InteropServices.Marshal> class are essential to working with unmanaged code.</span></span> <span data-ttu-id="711e1-103">Die meisten Methoden in dieser Klasse definiert werden normalerweise von Entwicklern verwendet, die eine Brücke zwischen verwaltetem und nicht verwalteten Programmiermodellen bereitstellen möchten.</span><span class="sxs-lookup"><span data-stu-id="711e1-103">Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</span></span> <span data-ttu-id="711e1-104">Z. B. die <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> Methode kopiert die ANSI-Zeichen aus einer angegebenen Zeichenfolge (im verwalteten Heap) in einen Puffer, in dem nicht verwalteten Heap.</span><span class="sxs-lookup"><span data-stu-id="711e1-104">For example, the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</span></span> <span data-ttu-id="711e1-105">Außerdem wird die richtige Größe der Zielheap belegt.</span><span class="sxs-lookup"><span data-stu-id="711e1-105">It also allocates the target heap of the right size.</span></span>  
  
 <span data-ttu-id="711e1-106">Die common Language Runtime stellt spezifische Marshalling Funktionalitäten bereit.</span><span class="sxs-lookup"><span data-stu-id="711e1-106">The common language runtime provides specific marshaling capabilities.</span></span> <span data-ttu-id="711e1-107">Weitere Informationen zum Marshalling von Verhalten, finden Sie unter [Interop-Marshalling](~/docs/framework/interop/interop-marshaling.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-107">For details on marshaling behavior, see [Interop Marshaling](~/docs/framework/interop/interop-marshaling.md).</span></span>  
  
 <span data-ttu-id="711e1-108">Die `Read` und `Write` Methoden in der <xref:System.Runtime.InteropServices.Marshal> Klasse sowohl bei ausgerichteten als auch bei nicht ausgerichteten Zugriff unterstützen.</span><span class="sxs-lookup"><span data-stu-id="711e1-108">The `Read` and `Write` methods in the <xref:System.Runtime.InteropServices.Marshal> class support both aligned and unaligned access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-109">Das folgende Beispiel zeigt, wie mit verschiedenen Methoden, die definiert, indem die <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-109">The following example shows how to use various methods defined by the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#1)]
 [!code-csharp[Marshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#1)]
 [!code-vb[Marshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRef">
      <MemberSignature Language="C#" Value="public static int AddRef (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddRef(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRef (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddRef(IntPtr pUnk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="711e1-110">Der zu inkrementierende Verweiszähler für Schnittstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-110">The interface reference count to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-111">Inkrementiert den Verweiszähler für die angegebene Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-111">Increments the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-112">Der neue Wert des Verweiszählers für den <paramref name="pUnk" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-113">Die common Language Runtime verwaltet den Verweiszähler eines COM-Objekts, so dass es nicht erforderlich ist, verwenden Sie diese Methode direkt Sie.</span><span class="sxs-lookup"><span data-stu-id="711e1-113">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="711e1-114">In seltenen Fällen, z. B. Tests von einem benutzerdefinierten Marshaller möglicherweise finden Sie es erforderlich, um die Lebensdauer eines Objekts manuell zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="711e1-114">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="711e1-115">Nach dem Aufruf <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, müssen Sie den Verweiszähler dieser Planergruppe mithilfe einer Methode wie z. B. Dekrementieren <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-115">After calling <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, you must decrement the reference count by using a method such as <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-116">Verlassen Sie sich nicht auf den Rückgabewert der <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, wie es instabil sein kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-116">Do not rely on the return value of <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, as it can sometimes be unstable.</span></span>  
  
 <span data-ttu-id="711e1-117">Sie erreichen <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, oder <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> zum Abrufen einer <xref:System.IntPtr> Wert, der darstellt ein [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Schnittstellenzeiger auf.</span><span class="sxs-lookup"><span data-stu-id="711e1-117">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer.</span></span> <span data-ttu-id="711e1-118">Sie können diese Methoden auch verwenden und die <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> Methode für verwaltete Objekte zum Abrufen der COM-Schnittstellen, die das verwaltete Objekt COM callable Wrapper dargestellt.</span><span class="sxs-lookup"><span data-stu-id="711e1-118">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</span></span> <span data-ttu-id="711e1-119">Wenn Sie nicht mit den Details dieses Typs Wrapper vertraut sind, finden Sie unter [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-119">If you are not familiar with the details of this wrapper type, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-120">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-120">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-121">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-121">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr AllocCoTaskMem (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocCoTaskMem(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocCoTaskMem (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocCoTaskMem(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="711e1-122">Die Größe des zu belegenden Speicherblocks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-122">The size of the block of memory to be allocated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-123">Belegt einen Speicherblock der angegebenen Größe aus der Speicherbelegungsfunktion für COM-Aufgaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-123">Allocates a block of memory of specified size from the COM task memory allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-124">Eine ganze Zahl, die die Adresse des belegten Speicherblocks darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-124">An integer representing the address of the block of memory allocated.</span>
          </span>
          <span data-ttu-id="711e1-125">Dieser Speicher muss mit <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /> freigegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-125">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> ist eine der beiden speicherbelegung API-Methoden in der <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> is one of two memory allocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="711e1-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> die andere ist.) Der erste Speicherinhalt zurückgegeben ist nicht definiert, und der belegte Arbeitsspeicher kann größer sein als die angeforderte Anzahl von Bytes.</span><span class="sxs-lookup"><span data-stu-id="711e1-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</span></span> <span data-ttu-id="711e1-128">Diese Methode macht COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) -Funktion, die so der Speicherbelegungsfunktion für COM-Aufgaben genannte.</span><span class="sxs-lookup"><span data-stu-id="711e1-128">This method exposes the COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-129">Es ist nicht genügend Arbeitsspeicher zum Erfüllen der Anforderung vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-129">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-130">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-130">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-131">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-131">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AllocHGlobal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-132">Belegt Speicher aus dem nicht verwalteten Speicher des Prozesses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-132">Allocates memory from the unmanaged memory of the process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="711e1-133">Die erforderliche Anzahl der Bytes im Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-133">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-134">Reserviert Speicher aus dem nicht verwalteten Arbeitsspeicher des Prozesses mit der angegebenen Anzahl von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-134">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-135">Ein Zeiger auf den neu reservierten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-135">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="711e1-136">Dieser Speicher muss unter Verwendung der <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />-Methode freigegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-136">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> ist einer von zwei Methoden der Speicher-Zuordnung in der <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="711e1-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> die andere ist.) Diese Methode macht die Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) -Funktion von Kernel32.dll verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="711e1-139">Wenn <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> Aufrufe `LocalAlloc`, übergibt ein `LMEM_FIXED` -Flag, das bewirkt, dass den zugeordneten Arbeitsspeicher gesperrt werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-139">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="711e1-140">Darüber hinaus ist der belegte Arbeitsspeicher nicht Nullen angefüllt.</span><span class="sxs-lookup"><span data-stu-id="711e1-140">Also, the allocated memory is not zero-filled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-141">Im folgenden Beispiel wird das Aufrufen der <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="711e1-141">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> method.</span></span> <span data-ttu-id="711e1-142">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-142">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-143">Es ist nicht genügend Arbeitsspeicher zum Erfüllen der Anforderung vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-143">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-144">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-144">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-145">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-145">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(IntPtr cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="711e1-146">Die erforderliche Anzahl der Bytes im Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-146">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-147">Reserviert Speicher aus dem nicht verwalteten Arbeitsspeicher des Prozesses mithilfe des Zeigers auf die angegebene Anzahl von Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-147">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-148">Ein Zeiger auf den neu reservierten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-148">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="711e1-149">Dieser Speicher muss unter Verwendung der <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />-Methode freigegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-149">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> ist einer von zwei Methoden der Speicher-Zuordnung in der <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="711e1-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> die andere ist.) Diese Methode macht die Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) -Funktion von Kernel32.dll verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="711e1-152">Wenn <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> Aufrufe `LocalAlloc`, übergibt ein `LMEM_FIXED` -Flag, das bewirkt, dass den zugeordneten Arbeitsspeicher gesperrt werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-152">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="711e1-153">Darüber hinaus ist der belegte Arbeitsspeicher nicht Nullen angefüllt.</span><span class="sxs-lookup"><span data-stu-id="711e1-153">Also, the allocated memory is not zero-filled.</span></span>  
  
 <span data-ttu-id="711e1-154">Beispielcode hierzu finden Sie unter <xref:System.Runtime.InteropServices.Marshal> und <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-154">For example code, see <xref:System.Runtime.InteropServices.Marshal> and <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-155">Es ist nicht genügend Arbeitsspeicher zum Erfüllen der Anforderung vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-155">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-156">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-156">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-157">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-157">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AreComObjectsAvailableForCleanup">
      <MemberSignature Language="C#" Value="public static bool AreComObjectsAvailableForCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreComObjectsAvailableForCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreComObjectsAvailableForCleanup () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreComObjectsAvailableForCleanup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="711e1-158">Gibt an, ob Runtime Callable Wrappers (RCWs) aus einem beliebigen Kontext zur Bereinigung verfügbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-158">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-159">
            <see langword="true" />, wenn RCWs zur Bereinigung verfügbar sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-159">
              <see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-160">Wenn es viele Verweise zwischen verwalteten und nativen Code mit umfassenden Abhängigkeitsdiagramme gibt kann es sehr lange für alle Objekte zum Bereinigen von dauern.</span><span class="sxs-lookup"><span data-stu-id="711e1-160">If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</span></span> <span data-ttu-id="711e1-161">Jedes Mal, wenn eine Garbage Collection ausgeführt wird wird es einer beliebigen Anzahl von RCWs, freigeben, die wiederum die zugrunde liegenden COM-Objekte freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-161">Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</span></span> <span data-ttu-id="711e1-162">Diese COM-Objekten werden dann ihre verwalteten Verweise freigegeben, und mehrere Objekte verfügbar machen für die Bereinigung das nächste Mal eine GC ausgeführt wird, wodurch den Prozess gestartet wird erneut.</span><span class="sxs-lookup"><span data-stu-id="711e1-162">Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</span></span>  
  
 <span data-ttu-id="711e1-163">Die <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> Methode bietet eine Möglichkeit für die Anwendung aus, um zu bestimmen, wie viele Zyklen von GC. Erfassen und globale Katalogdienste. WaitForPendingFinalizers müssen durchgeführt werden soll, um alles zu bereinigen.</span><span class="sxs-lookup"><span data-stu-id="711e1-163">The <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-164">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-164">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-165">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-165">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BindToMoniker">
      <MemberSignature Language="C#" Value="public static object BindToMoniker (string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object BindToMoniker(string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindToMoniker (monikerName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BindToMoniker(System::String ^ monikerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monikerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="monikerName">
          <span data-ttu-id="711e1-166">Der dem gewünschten Schnittstellenzeiger entsprechende Moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-166">The moniker corresponding to the desired interface pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-167">Ruft einen vom angegebenen Moniker bezeichneten Schnittstellenzeiger ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-167">Gets an interface pointer identified by the specified moniker.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-168">Ein Objekt mit einem Verweis auf den Schnittstellenzeiger, der durch den <paramref name="monikerName" />-Parameter angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-168">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span>
          </span>
          <span data-ttu-id="711e1-169">Ein Moniker stellt einen Namen dar, und in diesem Fall wird der Moniker durch eine Schnittstelle definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-169">A moniker is a name, and in this case, the moniker is defined by an interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> macht COM `BindToMoniker` -Methode, die ein Objekt erzeugt, die Sie für jede COM-Schnittstelle umgewandelt werden können.</span><span class="sxs-lookup"><span data-stu-id="711e1-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> exposes the COM `BindToMoniker` method, which produces an object that you can cast to any COM interface you require.</span></span> <span data-ttu-id="711e1-171">Diese Methode bietet dieselbe Funktionalität wie die `GetObject` Methode in Visual Basic 6.0 und [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="711e1-171">This method provides the same functionality as the `GetObject` method in Visual Basic 6.0 and [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="711e1-172">Von der nicht verwalteten <see langword="BindToMoniker" />-Methode wurde ein nicht erkanntes HRESULT zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-172">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-173">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-173">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-174">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-174">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BufferToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr BufferToBSTR (Array ptr, int slen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int BufferToBSTR(class System.Array ptr, int32 slen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BufferToBSTR(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BufferToBSTR (ptr As Array, slen As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr BufferToBSTR(Array ^ ptr, int slen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Array" />
        <Parameter Name="slen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="slen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWrapperHandleStrength">
      <MemberSignature Language="C#" Value="public static void ChangeWrapperHandleStrength (object otp, bool fIsWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeWrapperHandleStrength(object otp, bool fIsWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeWrapperHandleStrength (otp As Object, fIsWeak As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangeWrapperHandleStrength(System::Object ^ otp, bool fIsWeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otp" Type="System.Object" />
        <Parameter Name="fIsWeak" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="otp">
          <span data-ttu-id="711e1-175">Das Objekt, dessen CCW ein Handle mit Verweiszähler enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-175">The object whose CCW holds a reference counted handle.</span>
          </span>
          <span data-ttu-id="711e1-176">Das Handle ist stark, wenn der Verweiszähler für den COM Callable Wrapper größer als 0 ist, andernfalls ist er schwach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-176">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span>
          </span>
        </param>
        <param name="fIsWeak">
          <span data-ttu-id="711e1-177">
            <see langword="true" />, um die Stärke des Handles für den <c>otp</c>-Parameter unabhängig von dessen Verweiszähler auf schwach zu ändern. <see langword="false" />, um die Stärke des Handles für <c>otp</c> auf das Ausführen einer Verweiszählung zurückzusetzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-177">
              <see langword="true" /> to change the strength of the handle on the <c>otp</c> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <c>otp</c> to be reference counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-178">Ändert die Stärke des CCW-Handles ([COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md)) für ein Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-178">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> wird für Objektpooling verwendet und sollte nie aufgerufen werden vom Benutzercode direkt.</span><span class="sxs-lookup"><span data-stu-id="711e1-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> is used for object pooling functionality and should never be called by user code directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-180">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-181">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CleanupUnusedObjectsInCurrentContext">
      <MemberSignature Language="C#" Value="public static void CleanupUnusedObjectsInCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CleanupUnusedObjectsInCurrentContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CleanupUnusedObjectsInCurrentContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CleanupUnusedObjectsInCurrentContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="711e1-182">Benachrichtigt die Laufzeit, dass alle im aktuellen Kontext reservierten [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) bereinigt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-182">Notifies the runtime to clean up all [Runtime Callable Wrappers](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) allocated in the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-183">Das Interop-System ruft Nachrichten aus, während er versucht, RCWs bereinigen.</span><span class="sxs-lookup"><span data-stu-id="711e1-183">The interop system pumps messages while it attempts to clean up RCWs.</span></span> <span data-ttu-id="711e1-184">Dadurch wird sichergestellt, das die Bereinigung, RCWs Singlethread-Apartment (STA), was geschieht, in allen Anwendungen, einschließlich Anwendungen, die nicht oft genug weiterleiten.</span><span class="sxs-lookup"><span data-stu-id="711e1-184">This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</span></span> <span data-ttu-id="711e1-185">Allerdings sind einige Anwendungen, die entsprechend pump sehr empfindlich gegenüber Pumping fortgesetzt werden, in denen tritt auf.</span><span class="sxs-lookup"><span data-stu-id="711e1-185">However, some applications that do pump appropriately are very sensitive to where pumping occurs.</span></span> <span data-ttu-id="711e1-186">Wenn das Interop-System ruft Nachrichten in diesen Anwendungen an Orten, die unerwartete, sind, die Anwendung Reentranz Probleme, die schwer zu diagnostizieren sind auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-186">When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</span></span> <span data-ttu-id="711e1-187">Daher müssen Anwendungen ihre eigenen Pumping fortgesetzt werden für einen bestimmten STA und Kontrolle der Bereinigung der RCWs steuern können.</span><span class="sxs-lookup"><span data-stu-id="711e1-187">Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</span></span>  
  
 <span data-ttu-id="711e1-188">Allerdings kontrollieren die Entwickler häufig nur eine Teilmenge der Threads in der Anwendung und können nicht so sicherstellen, dass alle Threads angemessen ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-188">However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</span></span>  
  
 <span data-ttu-id="711e1-189">So beheben Sie dieses Problem</span><span class="sxs-lookup"><span data-stu-id="711e1-189">To solve this problem:</span></span>  
  
1.  <span data-ttu-id="711e1-190">Verwenden der <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> Methode, um die automatische Bereinigung von RCWs und die Meldung Pumping fortgesetzt werden, die regelmäßig pro Thread auftritt, deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-190">Use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</span></span> <span data-ttu-id="711e1-191">Dies ermöglicht Entwicklern das automatische Bereinigen und die entsprechenden meldungsverteilung abzuwählen.</span><span class="sxs-lookup"><span data-stu-id="711e1-191">This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</span></span>  
  
2.  <span data-ttu-id="711e1-192">Verwenden der <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> Methode zum Benachrichtigen der Laufzeit alle RCWs bereinigen, die im aktuellen Kontext zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="711e1-192">Use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> method to notify the runtime to clean up all RCWs that are allocated in the current context.</span></span> <span data-ttu-id="711e1-193">Diese Methode Companion kann Entwickler genau zu steuern, wenn die Common Language Runtime Bereinigung im aktuellen Kontext ausführt.</span><span class="sxs-lookup"><span data-stu-id="711e1-193">This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-194">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-195">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-196">Kopiert Daten aus einem verwalteten Array in einen nicht verwalteten Speicherzeiger oder aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-196">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (byte[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(unsigned int8[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Byte(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;System::Byte&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-197">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-197">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-198">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-198">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-199">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-199">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-200">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-200">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-201">Kopiert Daten aus einem eindimensionalen, verwalteten Array von 8-Bit-Ganzzahlen ohne Vorzeichen in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-201">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-202">Sie können diese Methode verwenden, eine Teilmenge von einem eindimensionalen, verwalteten Array in ein nicht verwaltetes Array von C-Format zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-202">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-203">Im folgenden Beispiel werden ein Array auf nicht verwalteten Speicher mithilfe der <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> überladen und kopiert dann das nicht verwaltete Array zurück in den verwalteten Speicher mithilfe der <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="711e1-203">The following example copies an array to unmanaged memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> overload, and then copies the unmanaged array back to managed memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-204">
            <paramref name="startIndex" /> und <paramref name="length" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-204">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-205">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-205">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-206">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-206">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-207">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-207">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (char[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(char[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Char(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;char&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-208">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-208">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-209">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-209">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-210">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-210">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-211">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-211">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-212">Kopiert Daten aus einem eindimensionalen, verwalteten Zeichenarray in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-212">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-213">Sie können diese Methode verwenden, eine Teilmenge von einem eindimensionalen, verwalteten Array in ein nicht verwaltetes Array von C-Format zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-213">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-214">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-214">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-215">
            <paramref name="startIndex" /> und <paramref name="length" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-215">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-216">
            <paramref name="startIndex" />, <paramref name="destination" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-216">
              <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-217">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-217">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-218">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (double[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Double(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;double&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-219">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-219">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-220">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-220">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-221">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-221">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-222">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-222">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-223">Kopiert Daten aus einem eindimensionalen, verwalteten Array von Gleitkommazahlen mit doppelter Genauigkeit in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-223">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-224">Sie können diese Methode verwenden, eine Teilmenge von einem eindimensionalen, verwalteten Array in ein nicht verwaltetes Array von C-Format zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-224">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-225">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-225">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-226">
            <paramref name="startIndex" /> und <paramref name="length" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-226">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-227">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-227">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-228">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-228">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-229">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-229">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (short[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int16[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Short(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;short&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-230">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-230">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-231">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-231">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-232">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-232">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-233">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-233">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-234">Kopiert Daten aus einem eindimensionalen, verwalteten Array von 16-Bit-Ganzzahlen mit Vorzeichen in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-234">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-235">Sie können diese Methode verwenden, eine Teilmenge von einem eindimensionalen, verwalteten Array in ein nicht verwaltetes Array von C-Format zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-235">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-236">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-236">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-237">
            <paramref name="startIndex" /> und <paramref name="length" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-237">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-238">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-238">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-239">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-239">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-240">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (int[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Integer(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;int&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-241">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-241">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-242">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-242">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-243">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-243">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-244">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-244">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-245">Kopiert Daten aus einem eindimensionalen, verwalteten Array von 32-Bit-Ganzzahlen mit Vorzeichen in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-245">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-246">Sie können diese Methode verwenden, eine Teilmenge von einem eindimensionalen, verwalteten Array in ein nicht verwaltetes Array von C-Format zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-246">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-247">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-247">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-248">
            <paramref name="startIndex" /> und <paramref name="length" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-248">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-249">
            <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-249">
              <paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-250">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-250">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-251">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-251">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (long[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Long(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;long&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-252">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-252">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-253">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-253">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-254">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-254">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-255">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-255">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-256">Kopiert Daten aus einem eindimensionalen, verwalteten Array von 64-Bit-Ganzzahlen mit Vorzeichen in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-256">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-257">Sie können diese Methode verwenden, eine Teilmenge von einem eindimensionalen, verwalteten Array in ein nicht verwaltetes Array von C-Format zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-257">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-258">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-258">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-259">
            <paramref name="startIndex" /> und <paramref name="length" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-259">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-260">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-260">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-261">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-261">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-262">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-262">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, byte[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, unsigned int8[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Byte(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;System::Byte&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-263">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-263">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-264">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-264">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-265">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-265">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-266">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-266">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-267">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-267">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-268">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-268">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-269">Folglich nicht verwalteten Daten entspricht der `source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-269">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-270">Sie müssen die verwalteten Arrays mit einer geeigneten Größe initialisieren, vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-270">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-271">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-271">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-272">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-272">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-273">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-273">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-274">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-274">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, char[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, char[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;char&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-275">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-275">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-276">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-276">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-277">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-277">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-278">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-278">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-279">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Zeichenarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-279">Copies data from an unmanaged memory pointer to a managed character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-280">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-280">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-281">Folglich nicht verwalteten Daten entspricht der `source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-281">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-282">Sie müssen die verwalteten Arrays mit einer geeigneten Größe initialisieren, vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-282">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-283">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-283">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-284">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-284">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-285">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-285">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-286">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-286">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, double[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Double(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;double&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-287">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-287">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-288">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-288">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-289">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-289">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-290">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-290">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-291">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von Gleitkommazahlen mit doppelter Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-291">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-292">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-292">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-293">Folglich nicht verwalteten Daten entspricht der `source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-293">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-294">Sie müssen die verwalteten Arrays mit einer geeigneten Größe initialisieren, vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-294">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-295">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-295">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-296">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-296">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-297">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-297">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-298">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-298">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, short[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int16[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Short(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;short&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-299">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-299">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-300">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-300">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-301">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-301">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-302">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-302">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-303">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 16-Bit-Ganzzahlen mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-303">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-304">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-304">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-305">Folglich nicht verwalteten Daten entspricht der `source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-305">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-306">Sie müssen die verwalteten Arrays mit einer geeigneten Größe initialisieren, vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-306">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-307">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-307">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-308">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-308">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-309">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-309">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-310">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-310">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, int[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Integer(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;int&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-311">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-311">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-312">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-312">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-313">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-313">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-314">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-314">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-315">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 32-Bit-Ganzzahlen mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-315">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-316">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-316">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-317">Folglich nicht verwalteten Daten entspricht der `source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-317">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-318">Sie müssen die verwalteten Arrays mit einer geeigneten Größe initialisieren, vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-318">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-319">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-319">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-320">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-320">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-321">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-321">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-322">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-322">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, long[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Long(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;long&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-323">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-323">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-324">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-324">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-325">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-325">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-326">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-326">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-327">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von 64-Bit-Ganzzahlen mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-327">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-328">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-328">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-329">Folglich nicht verwalteten Daten entspricht der`source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-329">Thus, the unmanaged data corresponding to the`source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-330">Sie müssen die verwalteten Arrays mit einer geeigneten Größe initialisieren, vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-330">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-331">Im folgenden Beispiel wird ein Array auf nicht verwalteten Arbeitsspeicher kopiert und kopiert dann wieder in den verwalteten Speicher nicht verwaltete Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-331">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-332">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-332">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-333">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-333">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-334">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-334">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, native int[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As IntPtr(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;IntPtr&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-335">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-335">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-336">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-336">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-337">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-337">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-338">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-338">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-339">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes <see cref="T:System.IntPtr" />-Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-339">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-340">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-340">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-341">Aus diesem Grund, die nicht verwalteten Daten an, die `source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-341">Therefore, the unmanaged data that corresponds to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-342">Müssen Sie mit der entsprechenden Größe vor dem Aufruf von verwalteten Arrays initialisieren die <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-342">You must initialize the managed array with the appropriate size before calling the <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-343">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-343">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-344">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-344">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-345">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-345">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, float[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Single(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;float&gt; ^ destination, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-346">Der Speicherzeiger, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-346">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-347">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-347">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-348">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-348">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-349">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-349">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-350">Kopiert Daten aus einem nicht verwalteten Speicherzeiger in ein verwaltetes Array von Gleitkommazahlen mit einfacher Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-350">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-351">Nicht verwaltete Arrays im C-Format enthalten keine Informationen zu Grenzen, wird verhindert, dass die `startIndex` und `length` Parameter aus, die validiert wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-351">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="711e1-352">Folglich nicht verwalteten Daten entspricht der `source` -Parameter auffüllt, unabhängig von der des Nutzens verwalteten Arrays.</span><span class="sxs-lookup"><span data-stu-id="711e1-352">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="711e1-353">Sie müssen die verwalteten Arrays mit einer geeigneten Größe initialisieren, vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-353">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-354">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-354">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-355">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-355">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-356">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-356">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;IntPtr&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-357">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-357">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-358">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-358">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-359">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-359">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-360">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-360">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-361">Kopiert Daten aus einem eindimensionalen, verwalteten <see cref="T:System.IntPtr" />-Array in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-361">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-362">Sie können diese Methode verwenden, um einen Teil aus einem eindimensionalen, verwalteten kopieren <xref:System.IntPtr> Array in ein nicht verwaltetes Array von C-Format.</span><span class="sxs-lookup"><span data-stu-id="711e1-362">You can use this method to copy a subset of a one-dimensional managed <xref:System.IntPtr> array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-363">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-363">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-364">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-364">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-365">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-365">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (float[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Single(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;float&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="711e1-366">Das eindimensionale Array, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-366">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="711e1-367">Der nullbasierte Index im Quellarray, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-367">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="711e1-368">Der Speicherzeiger, in den kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-368">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="711e1-369">Die Anzahl der zu kopierenden Arrayelemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-369">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-370">Kopiert Daten aus einem eindimensionalen, verwalteten Array von Gleitkommazahlen mit einfacher Genauigkeit in einen nicht verwalteten Speicherzeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-370">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-371">Sie können diese Methode verwenden, eine Teilmenge von einem eindimensionalen, verwalteten Array in ein nicht verwaltetes Array von C-Format zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-371">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-372">
            <paramref name="startIndex" /> und <paramref name="length" /> sind nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-372">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-373">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> oder <paramref name="length" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-373">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-374">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-374">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-375">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-375">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject (IntPtr pOuter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject(native int pOuter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject (pOuter As IntPtr, o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pOuter">
          <span data-ttu-id="711e1-376">Der äußere <see langword="IUnknown" />-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-376">The outer <see langword="IUnknown" /> pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="711e1-377">Ein zu aggregierendes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-377">An object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-378">Verbindet ein verwaltetes Objekt mit dem angegebenen COM-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-378">Aggregates a managed object with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-379">Der innere <see langword="IUnknown" />-Zeiger des verwalteten Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-379">The inner <see langword="IUnknown" /> pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-380">Die <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> Methode aggregiert den inneren verwalteten Zeiger eines verwalteten Objekts mit dem angegebenen äußeren Zeiger und gibt dann eine innere [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Zeiger des verwalteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="711e1-380">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-381">
            <paramref name="o" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-381">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-382">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-382">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-383">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-383">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject&lt;T&gt; (IntPtr pOuter, T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject&lt;T&gt;(native int pOuter, !!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject(Of T) (pOuter As IntPtr, o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, T o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-384">Der Typ des zu aggregierenden verwalteten Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-384">The type of the managed object to aggregate.</span>
          </span>
        </typeparam>
        <param name="pOuter">
          <span data-ttu-id="711e1-385">Der äußere [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-385">The outer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="711e1-386">Das zu aggregierende -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-386">The managed object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-387">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-387">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-388">Aggregiert ein verwaltetes Objekt des angegebenen Typs mit dem angegebenen COM-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-388">Aggregates a managed object of the specified type with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-389">Der innere [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Zeiger des verwalteten Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-389">The inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-390">Die <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> Methode aggregiert den inneren verwalteten Zeiger von einem verwalteten Objekt eines angegebenen Typs mit dem angegebenen äußeren Zeiger und gibt eine innere [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Zeiger des verwalteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="711e1-390">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-391">
            <paramref name="o" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-391">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-392">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-392">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-393">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-393">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType">
      <MemberSignature Language="C#" Value="public static object CreateWrapperOfType (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWrapperOfType(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType (o As Object, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWrapperOfType(System::Object ^ o, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-394">Das zu umschließende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-394">The object to be wrapped.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="711e1-395">Der Typ des zu erstellenden Wrappers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-395">The type of wrapper to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-396">Umschließt das angegebene COM-Objekt mit einem Objekt des angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-396">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-397">Das neu umschlossene Objekt, das eine Instanz des gewünschten Typs darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-397">The newly wrapped object that is an instance of the desired type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-398"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> Konvertiert einen COM-Klassentyp, in der Regel die Basis `__ComObject` Typ in einen anderen Typ von COM-Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-398"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> converts one COM class type, typically the base `__ComObject` type, to another COM class type.</span></span> <span data-ttu-id="711e1-399">-Parameter dargestellte COM-Eingabeobjekt `o`, ist ein [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="711e1-399">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="711e1-400">Sowohl die `t` und `o` Parameter sein, deren Signaturen zugeschrieben werden, Klassen <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-400">Both the `t` and `o` parameters must be classes whose signatures are attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-401">Die [Tlbimp.exe (Type Library Importer-Tool)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) Tool wendet dieses Attribut, wenn es sich um eine Typbibliothek importiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-401">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="711e1-402">Wenn Sie den RCW manuell im Quellcode erstellen, sollten Sie dieses Attribut auf der verwalteten Signatur anwenden, die darstellt, dessen Ursprung COM kenntlich zu machen, die ursprünglichen Co-Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-402">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="711e1-403">Tlbimp.exe importiert eine COM [Coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) als eine verwaltete Klasse und einer Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-403">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="711e1-404">Die Coclass-Schnittstelle hat den gleichen Namen wie die ursprüngliche Co-Klasse, und die verwaltete Klasse verfügt über den ursprünglichen Coclass-Namen mit "Class" angefügt.</span><span class="sxs-lookup"><span data-stu-id="711e1-404">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="711e1-405">Angenommen, eine Co-Klasse namens `MyCoclass` wird eine Co-Schnittstelle mit dem Namen `MyCoclass` und eine verwaltete Klasse aufgerufen `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="711e1-405">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="711e1-406">Da `t` muss eine Klasse, die nicht für eine Schnittstelle, müssen Sie die verwaltete Klasse angeben (`MyCoclassClass`) und nicht die Co-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-406">Since `t` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the coclass interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="711e1-407">Sie verlieren die Identität der Eingabe, die COM-Objekte, da eine neue Instanz der RCW dient als Wrapper für die [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Zeiger, die von der ursprünglichen RCW verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-407">You lose the identity of the input COM object because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-408">
            <paramref name="t" /> muss von <see langword="__ComObject" /> abgeleitet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-408">
              <paramref name="t" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="711e1-409">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-409">-or-</span>
          </span>
          <span data-ttu-id="711e1-410">
            <paramref name="t" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-410">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-411">Der <paramref name="t" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-411">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-412">
            <paramref name="o" /> kann nicht in den Zieltyp konvertiert werden, da es nicht alle erforderlichen Schnittstellen unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-412">
              <paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-413">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-413">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-414">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-414">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType&lt;T,TWrapper&gt;">
      <MemberSignature Language="C#" Value="public static TWrapper CreateWrapperOfType&lt;T,TWrapper&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TWrapper CreateWrapperOfType&lt;T, TWrapper&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType(Of T, TWrapper) (o As T) As TWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TWrapper&gt;&#xA; static TWrapper CreateWrapperOfType(T o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TWrapper</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TWrapper" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-415">Der Typ des zurückzugebenden Umbruchs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-415">The type of object to wrap.</span>
          </span>
        </typeparam>
        <typeparam name="TWrapper">
          <span data-ttu-id="711e1-416">Der Typ des zurückzugebenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-416">The type of object to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="711e1-417">Das zu umschließende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-417">The object to be wrapped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-418">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-418">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-419">Umschließt das angegebene COM-Objekt mit einem Objekt des angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-419">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-420">Das neu umschlossene Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-420">The newly wrapped object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-421"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> Konvertiert ein COM-Objekt des Typs `T` auf die `TWrapper` Typ für COM-Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-421"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> converts a COM object of type `T` to the `TWrapper` COM class type.</span></span> <span data-ttu-id="711e1-422">-Parameter dargestellte COM-Eingabeobjekt `o`, ist ein [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="711e1-422">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="711e1-423">Sowohl die `T` generischen Typparameter und die `o` Parameter muss Klassen, deren Signaturen zugeschrieben, werden die <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> Attribut.</span><span class="sxs-lookup"><span data-stu-id="711e1-423">Both the `T` generic type parameter and the `o` parameter must be classes whose signatures are attributed with the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attribute.</span></span> <span data-ttu-id="711e1-424">Die [Tlbimp.exe (Type Library Importer-Tool)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) Tool wendet dieses Attribut, wenn es sich um eine Typbibliothek importiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-424">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="711e1-425">Wenn Sie den RCW manuell im Quellcode erstellen, sollten Sie dieses Attribut auf der verwalteten Signatur anwenden, die darstellt, dessen Ursprung COM kenntlich zu machen, die ursprünglichen Co-Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-425">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="711e1-426">Tlbimp.exe importiert eine COM [Coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) als eine verwaltete Klasse und einer Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-426">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="711e1-427">Die Coclass-Schnittstelle hat den gleichen Namen wie die ursprüngliche Co-Klasse, und die verwaltete Klasse verfügt über den ursprünglichen Coclass-Namen mit "Class" angefügt.</span><span class="sxs-lookup"><span data-stu-id="711e1-427">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="711e1-428">Angenommen, eine Co-Klasse namens `MyCoclass` wird eine Co-Schnittstelle mit dem Namen `MyCoclass` und eine verwaltete Klasse aufgerufen `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="711e1-428">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="711e1-429">Da`T` muss eine Klasse, die nicht für eine Schnittstelle, müssen Sie die verwaltete Klasse angeben (`MyCoclassClass`) und nicht die `coclass` Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-429">Because`T` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the `coclass` interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="711e1-430">Sie verlieren die Identität des COM-Eingabeobjekts, da eine neue Instanz der RCW dient als Wrapper für die [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Zeiger, die von der ursprünglichen RCW verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-430">You lose the identity of the input COM object, because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-431">
            <typeparamref name="T" /> muss von <see langword="__ComObject" /> abgeleitet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-431">
              <typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="711e1-432">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-432">-or-</span>
          </span>
          <span data-ttu-id="711e1-433">
            <typeparamref name="T" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-433">
              <typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-434">
            <paramref name="o" /> kann nicht in <paramref name="TWrapper" /> konvertiert werden, da nicht alle erforderlichen Schnittstellen unterstützt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-434">
              <paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-435">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-435">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-436">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-436">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure">
      <MemberSignature Language="C#" Value="public static void DestroyStructure (IntPtr ptr, Type structuretype);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure(native int ptr, class System.Type structuretype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure (ptr As IntPtr, structuretype As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DestroyStructure(IntPtr ptr, Type ^ structuretype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structuretype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-437">Ein Zeiger auf einen nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-437">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structuretype">
          <span data-ttu-id="711e1-438">Typ einer formatierten Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-438">Type of a formatted class.</span>
          </span>
          <span data-ttu-id="711e1-439">Damit werden die Layoutinformationen bereitgestellt, die zum Löschen des Puffers im <c>ptr</c>-Parameter benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-439">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-440">Gibt alle Unterstrukturen frei, auf die der angegebene nicht verwaltete Speicherblock zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-440">Frees all substructures that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-441">Sie können diese Methode verwenden, Verweistyp-Felder, z. B. Zeichenfolgen, in eine nicht verwaltete Struktur freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-441">You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="711e1-442">Im Gegensatz zu den zugehörigen Felder kann eine Struktur ein Werttyp oder ein Verweistyp sein.</span><span class="sxs-lookup"><span data-stu-id="711e1-442">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="711e1-443">Werttyp-Strukturen, die Felder für Werttyp (alle blitfähig) enthalten haben keine Verweise, dessen Speicher freigegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="711e1-443">Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="711e1-444">Die <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> Methode verwendet diese Methode, um Speicherverluste zu verhindern, wenn von einer Struktur belegten Speicher wiederverwendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-444">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="711e1-445"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> Ruft die COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) -Funktion auf, die wiederum eine reservierte Zeichenfolge freigibt.</span><span class="sxs-lookup"><span data-stu-id="711e1-445"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 <span data-ttu-id="711e1-446">Zusätzlich zu <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, <xref:System.Runtime.InteropServices.Marshal> Klasse enthält zwei weitere Methoden zur Freigabe von belegtem Speicher: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> und <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-446">In addition to <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-447">
            <paramref name="structureType" /> weist ein automatisch angelegtes Layout auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-447">
              <paramref name="structureType" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="711e1-448">Verwenden Sie stattdessen sequenzielles oder explizites Layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-448">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-449">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-449">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-450">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-450">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DestroyStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure(Of T) (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void DestroyStructure(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-451">Der Typ der formatierten Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-451">The type of the formatted structure.</span>
          </span>
          <span data-ttu-id="711e1-452">Damit werden die Layoutinformationen bereitgestellt, die zum Löschen des Puffers im <c>ptr</c>-Parameter benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-452">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="711e1-453">Ein Zeiger auf einen nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-453">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-454">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-454">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-455">Gibt alle Unterstrukturen eines angegebenen Typs frei, auf die der angegebene nicht verwaltete Speicherblock zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-455">Frees all substructures of a specified type that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-456">Sie können diese Methode verwenden, Verweistypfelder, z. B. Zeichenfolgen, einer nicht verwalteten Struktur freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-456">You can use this method to free reference type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="711e1-457">Im Gegensatz zu den zugehörigen Felder kann eine Struktur ein Werttyp oder ein Verweistyp sein.</span><span class="sxs-lookup"><span data-stu-id="711e1-457">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="711e1-458">Wert Typ Strukturen, die Werttypfelder (alle blitfähig) enthalten, haben keine Verweise, dessen Speicher freigegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="711e1-458">Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="711e1-459">Die <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> Methode verwendet diese Methode, um Speicherverluste zu verhindern, wenn von einer Struktur belegten Speicher wiederverwendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-459">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="711e1-460"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> Ruft die COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) -Funktion auf, die wiederum eine reservierte Zeichenfolge freigibt.</span><span class="sxs-lookup"><span data-stu-id="711e1-460"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-461">
            <typeparamref name="T" /> weist ein automatisch angelegtes Layout auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-461">
              <typeparamref name="T" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="711e1-462">Verwenden Sie stattdessen sequenzielles oder explizites Layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-462">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-463">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-463">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-464">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-464">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FinalReleaseComObject">
      <MemberSignature Language="C#" Value="public static int FinalReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FinalReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FinalReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FinalReleaseComObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-465">Der RCW, der freigegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-465">The RCW to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-466">Gibt alle Verweise auf einen [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) durch Festlegen des Verweiszählers auf 0 frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-466">Releases all references to a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) by setting its reference count to 0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-467">Der neue Wert des Verweiszählers des RCWs, der dem <paramref name="o" />-Parameter zugeordnet ist. Dieser ist bei erfolgreicher Freigabe 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-467">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-468">Die <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> Methode frei, die den verwalteten Verweis auf ein COM-Objekt.</span><span class="sxs-lookup"><span data-stu-id="711e1-468">The <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method releases the managed reference to a COM object.</span></span> <span data-ttu-id="711e1-469">Beim Aufrufen dieser Methode entspricht dem Aufrufen der <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> Methode in einer Schleife, bis 0 (null) zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-469">Calling this method is equivalent to calling the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until it returns 0 (zero).</span></span>  
  
 <span data-ttu-id="711e1-470">Wenn der Verweiszähler für den COM-Objekt 0 ist, wird in der Regel das COM-Objekt freigegeben, obwohl dies hängt von der COM-Objekt-Implementierung und befindet sich außerhalb der Kontrolle der Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="711e1-470">When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</span></span> <span data-ttu-id="711e1-471">Jedoch kann der RCW weiterhin vorhanden darauf warten, Garbage Collection übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-471">However, the RCW can still exist, waiting to be garbage-collected.</span></span>  
  
 <span data-ttu-id="711e1-472">Das COM-Objekt kann nicht verwendet werden, nachdem es vom zugrunde liegenden RCW getrennt wurde.</span><span class="sxs-lookup"><span data-stu-id="711e1-472">The COM object cannot be used after it has been separated from its underlying RCW.</span></span> <span data-ttu-id="711e1-473">Wenn Sie versuchen, eine Methode für den RCW aufzurufen, nachdem der entsprechende Verweiszähler 0 ist, wird eine <xref:System.Runtime.InteropServices.InvalidComObjectException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="711e1-473">If you try to call a method on the RCW after its reference count becomes 0, a <xref:System.Runtime.InteropServices.InvalidComObjectException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-474">
            <paramref name="o" /> ist kein gültiges COM-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-474">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-475">
            <paramref name="o" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-475">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-476">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-476">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-477">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-477">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="FreeBSTR">
      <MemberSignature Language="C#" Value="public static void FreeBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeBSTR (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeBSTR(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-478">Die Adresse des freizugebenden BSTR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-478">The address of the BSTR to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-479">Gibt einen <see langword="BSTR" /> mithilfe der COM-[SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633)-Funktion frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-479">Frees a <see langword="BSTR" /> using the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-480">Wie <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, verwenden Sie diese Methode, um Arbeitsspeicher freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-480">Like <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, you can use this method to deallocate memory.</span></span> <span data-ttu-id="711e1-481"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> Ruft die COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) -Funktion, die von einer der folgenden nicht verwalteten Methoden belegten Arbeitsspeicher frei: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span><span class="sxs-lookup"><span data-stu-id="711e1-481"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function, which frees memory allocated by any of the following unmanaged methods: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span></span> <span data-ttu-id="711e1-482">Sie können nicht verwaltete Methoden aufrufen, wie diese mit einem Plattformaufruf aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-482">You can call unmanaged methods such as these with platform invoke.</span></span> <span data-ttu-id="711e1-483">Weitere Informationen finden Sie unter [nicht verwaltete DLL-Funktionen nutzen](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-483">For details, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-484">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-484">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-485">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-485">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeCoTaskMem">
      <MemberSignature Language="C#" Value="public static void FreeCoTaskMem (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeCoTaskMem(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeCoTaskMem (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeCoTaskMem(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-486">Die Adresse des freizugebenden Speichers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-486">The address of the memory to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-487">Gibt einen Speicherblock frei, der von der nicht verwalteten Speicherbelegungsfunktion für COM-Aufgaben belegt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-487">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-488">Sie können <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> auf alle von belegten Arbeitsspeicher freizugeben <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, oder eine entsprechende nicht verwaltete Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-488">You can use <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> to free any memory allocated by <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, or any equivalent unmanaged method.</span></span> <span data-ttu-id="711e1-489">Wenn die `ptr` Parameter ist `null`, die Methode hat keine Funktion.</span><span class="sxs-lookup"><span data-stu-id="711e1-489">If the `ptr` parameter is `null`, the method does nothing.</span></span>  
  
 <span data-ttu-id="711e1-490"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> macht COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) -Funktion, die alle Bytes freigibt, sodass Sie den Speicher nicht mehr verwenden können, die die `ptr` -Parameter zeigt.</span><span class="sxs-lookup"><span data-stu-id="711e1-490"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> exposes the COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) function, which frees all bytes so that you can no longer use the memory that the `ptr` parameter points to.</span></span>  
  
 <span data-ttu-id="711e1-491">Zusätzlich zu <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal> Klasse enthält zwei weitere Methoden zur Freigabe von belegtem Speicher: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> und <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-491">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-492">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-492">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-493">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-493">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeHGlobal">
      <MemberSignature Language="C#" Value="public static void FreeHGlobal (IntPtr hglobal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeHGlobal(native int hglobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeHGlobal (hglobal As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeHGlobal(IntPtr hglobal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hglobal" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hglobal">
          <span data-ttu-id="711e1-494">Das Handle, das beim ursprünglichen übereinstimmenden Aufruf von <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /> zurückgegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-494">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-495">Gibt Speicherplatz frei, der zuvor aus dem nicht verwalteten Speicher des Prozesses belegt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-495">Frees memory previously allocated from the unmanaged memory of the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-496">Sie können <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> zur Freigabe von Speicher aus dem globalen Heap durch <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, oder einer gleichwertigen nicht verwalteten API-Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-496">You can use <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> to free any memory from the global heap allocated by <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, or any equivalent unmanaged API method.</span></span> <span data-ttu-id="711e1-497">Wenn die `hglobal` Parameter ist <xref:System.IntPtr.Zero?displayProperty=nameWithType> die Methode hat keine Funktion.</span><span class="sxs-lookup"><span data-stu-id="711e1-497">If the `hglobal` parameter is <xref:System.IntPtr.Zero?displayProperty=nameWithType> the method does nothing.</span></span>  
  
 <span data-ttu-id="711e1-498"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> macht die [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148640) -Funktion von Kernel32.dll verwenden, die alle Bytes freigibt, damit Sie den Speicher nicht mehr verwenden, können verweist `hglobal`.</span><span class="sxs-lookup"><span data-stu-id="711e1-498"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> exposes the [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640) function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by `hglobal`.</span></span>  
  
 <span data-ttu-id="711e1-499">Zusätzlich zu <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal> Klasse bietet zwei andere Speicherfreigabe API-Methoden: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> und <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-499">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation API methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-500">Im folgenden Beispiel wird das Aufrufen der <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="711e1-500">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method.</span></span> <span data-ttu-id="711e1-501">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-501">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 <span data-ttu-id="711e1-502">Im folgenden Beispiel wird veranschaulicht, wie der Inhalt eines verwalteten konvertiert <xref:System.String> -Klasse auf nicht verwalteten Speicher und dem nicht verwalteten Speicher, wenn Fertig klicken Sie dann löschen.</span><span class="sxs-lookup"><span data-stu-id="711e1-502">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-503">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-503">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-504">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-504">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGuidForType">
      <MemberSignature Language="C#" Value="public static Guid GenerateGuidForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GenerateGuidForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GenerateGuidForType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="711e1-505">Der Typ, für den eine GUID generiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-505">The type to generate a GUID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-506">Gibt die GUID (Globally Unique Identifier, globaler eindeutiger Bezeichner) für den angegebenen Typ zurück oder generiert eine GUID mithilfe des vom Type Library Exporter-Tool (TlbExp.exe) verwendeten Algorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-506">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-507">Ein Bezeichner für den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-507">An identifier for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-508">Wenn der Typ eine GUID in den Metadaten verfügt, wird es zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-508">If the type has a GUID in the metadata, it is returned.</span></span> <span data-ttu-id="711e1-509">Andernfalls wird eine GUID automatisch generiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-509">Otherwise, a GUID is automatically generated.</span></span> <span data-ttu-id="711e1-510">Sie können diese Methode verwenden, können Sie um die COM-GUID für jeden verwalteten Typ, einschließlich COM nicht sichtbare Typen programmgesteuert zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="711e1-510">You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</span></span> <span data-ttu-id="711e1-511">Klassenschnittstellen sind die einzige Ausnahme aus, da sie nicht mit einem verwalteten Typ übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="711e1-511">Class interfaces are the only exception because they do not correspond to a managed type.</span></span> <span data-ttu-id="711e1-512"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> bietet die gleiche Funktionalität wie die <xref:System.Type.GUID%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="711e1-512"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> provides the same functionality as the <xref:System.Type.GUID%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-513">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-513">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-514">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-514">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Type.GUID" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProgIdForType">
      <MemberSignature Language="C#" Value="public static string GenerateProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateProgIdForType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="711e1-515">Der Typ, für den eine ProgID abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-515">The type to get a ProgID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-516">Gibt eine ProgID (Programmbezeichner) für den angegebenen Typ zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-516">Returns a programmatic identifier (ProgID) for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-517">Die ProgID für den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-517">The ProgID of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-518">Wenn der Typ eine ProgID in den Metadaten, die ProgID zurückgegeben wird aufweist.</span><span class="sxs-lookup"><span data-stu-id="711e1-518">If the type has a ProgID in the metadata, that ProgID is returned.</span></span> <span data-ttu-id="711e1-519">Andernfalls wird eine ProgID generiert basierend auf den vollqualifizierten Namen des Typs.</span><span class="sxs-lookup"><span data-stu-id="711e1-519">Otherwise, a ProgID is generated based on the fully qualified name of the type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-520">Der <paramref name="type" />-Parameter ist keine Klasse, die von COM erstellt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-520">The <paramref name="type" /> parameter is not a class that can be create by COM.</span>
          </span>
          <span data-ttu-id="711e1-521">Die Klasse muss öffentlich sein, einen öffentlichen Standardkonstruktor aufweisen und für COM sichtbar sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-521">The class must be public, have a public default constructor, and be COM visible.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-522">Der <paramref name="type" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-522">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-523">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-523">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-524">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-524">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveObject">
      <MemberSignature Language="C#" Value="public static object GetActiveObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetActiveObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetActiveObject(System::String ^ progID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">
          <span data-ttu-id="711e1-525">Der programmgesteuerte Bezeichner (ProgID) des Objekts, das angefordert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-525">The programmatic identifier (ProgID) of the object that was requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-526">Ruft eine ausgeführte Instanz des angegebenen Objekts aus der ROT (Running Object Table) ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-526">Obtains a running instance of the specified object from the running object table (ROT).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-527">Das Objekt, das angefordert wurde, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-527">The object that was requested; otherwise <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-528">Sie können dieses Objekt in eine beliebige unterstützte COM-Schnittstelle umwandeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-528">You can cast this object to any COM interface that it supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-529"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> macht COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) Funktion aus OLEAUT32. DLL; der zweite Wert erwartet jedoch einen Klassenbezeichner (CLSID) anstelle der programmgesteuerte Bezeichner (`ProgID`) von dieser Methode erwartet.</span><span class="sxs-lookup"><span data-stu-id="711e1-529"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> exposes the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (`ProgID`) expected by this method.</span></span> <span data-ttu-id="711e1-530">Zum Abrufen einer ausgeführten Instanz eines COM-Objekts ohne einen registrierten `ProgID`, verwenden eines Plattformaufrufs zum Definieren des erweiterten COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) Funktion.</span><span class="sxs-lookup"><span data-stu-id="711e1-530">To obtain a running instance of a COM object without a registered `ProgID`, use platform invoke to define the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function.</span></span> <span data-ttu-id="711e1-531">Eine Beschreibung der Plattform aufrufen, finden Sie unter [nicht verwaltete DLL-Funktionen nutzen](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-531">For a description of platform invoke, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
## <a name="progid-and-clsid"></a><span data-ttu-id="711e1-532">ProgID und CLSID</span><span class="sxs-lookup"><span data-stu-id="711e1-532">ProgID and CLSID</span></span>  
 <span data-ttu-id="711e1-533">Schlüssel in der Teilstruktur HKEY_CLASSES_ROOT der Registrierung enthalten eine Vielzahl von Unterschlüsseln.</span><span class="sxs-lookup"><span data-stu-id="711e1-533">Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</span></span> <span data-ttu-id="711e1-534">Die meisten der Unterschlüssel werden versionsabhängige Programm-IDs, die eine benutzerfreundliche Zeichenfolge CLSID zuordnen.</span><span class="sxs-lookup"><span data-stu-id="711e1-534">Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</span></span> <span data-ttu-id="711e1-535">Anwendungen verwenden häufig diese lesbare Zeichenfolgen, statt die numerischen CLSIDs.</span><span class="sxs-lookup"><span data-stu-id="711e1-535">Applications often use these human-readable strings instead of the numeric CLSIDs.</span></span> <span data-ttu-id="711e1-536">Eine Komponente verfügt häufig über eine versionsunabhängige ProgID, die auf die neueste Version der Komponente zugeordnet ist, die auf dem System installiert ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-536">Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</span></span>  
  
 <span data-ttu-id="711e1-537">Anwendungen und Komponenten verwenden in erster Linie ProgIDs, um ihre entsprechenden CLSIDs abzurufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-537">Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-538">Im folgende Beispiel wurde auf einem Computer ausgeführt, die mit einer ausgeführten Instanz von Microsoft Word konfiguriert wurde.</span><span class="sxs-lookup"><span data-stu-id="711e1-538">The following example was run on a computer that was configured with a running instance of Microsoft Word.</span></span> <span data-ttu-id="711e1-539">Es wurden keine Instanzen von Microsoft Excel ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="711e1-539">There were no instances of Microsoft Excel running.</span></span>  
  
 <span data-ttu-id="711e1-540">Das Beispiel ruft <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> zweimal.</span><span class="sxs-lookup"><span data-stu-id="711e1-540">The example calls <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> twice.</span></span> <span data-ttu-id="711e1-541">Der erste Aufruf versucht, einen Verweis auf eine Instanz von Microsoft Word abzurufen (eine Instanz von der `Word.Application` Objekt).</span><span class="sxs-lookup"><span data-stu-id="711e1-541">The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the `Word.Application` object).</span></span> <span data-ttu-id="711e1-542">Der zweite Aufruf versucht, einen Verweis auf eine Instanz von Microsoft Excel abrufen (eine Instanz von einem `Excel.Application` Objekt).</span><span class="sxs-lookup"><span data-stu-id="711e1-542">The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an `Excel.Application` object).</span></span>  
  
 <span data-ttu-id="711e1-543">Der Code Ruft einen Verweis auf eine Instanz von Microsoft Word erfolgreich ab.</span><span class="sxs-lookup"><span data-stu-id="711e1-543">The code retrieves a reference to an instance of Microsoft Word successfully.</span></span> <span data-ttu-id="711e1-544">Da jedoch Microsoft Excel nicht ausgeführt wird, der Versuch, das zweite Objekt abzurufen löst eine <xref:System.Runtime.InteropServices.COMException>.</span><span class="sxs-lookup"><span data-stu-id="711e1-544">However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <xref:System.Runtime.InteropServices.COMException>.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/cs/marshal.getactiveobject.cs#1)]
 [!code-vb[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/vb/marshal.getactiveobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="711e1-545">Das Objekt wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-545">The object was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-546">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-546">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-547">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-547">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComInterfaceForObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-548">Gibt einen Schnittstellenzeiger zurück, der eine Schnittstelle für ein Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-548">Returns an interface pointer that represents an interface for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-549">Das Objekt, das die Schnittstelle bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-549">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="711e1-550">Der Typ der angeforderten Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-550">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-551">Gibt einen Zeiger auf eine [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Schnittstelle zurück, die die angegebene Schnittstelle für das angegebene Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-551">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="711e1-552">Der benutzerdefinierte Zugriff auf Abfrageschnittstellen ist standardmäßig aktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-552">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-553">Der Schnittstellenzeiger, der die angegebene Schnittstelle für das Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-553">The interface pointer that represents the specified interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-554">Diese Methode gibt einen Schnittstellenzeiger, der die angeforderte Schnittstelle für das angegebene Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="711e1-554">This method returns an interface pointer that represents the requested interface on the specified object.</span></span> <span data-ttu-id="711e1-555">Dies ist besonders nützlich, wenn Sie eine nicht verwaltete Methode verfügen, die davon ausgeht, einen Schnittstellenzeiger übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-555">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="711e1-556">Aufruf eines Objekts mit dieser Methode bewirkt, dass den Verweiszähler für den Schnittstellenzeiger inkrementiert werden soll, bevor der Zeiger zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-556">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="711e1-557">Verwenden Sie immer <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> um den Verweiszähler zu verringern, sobald Sie den Mauszeiger abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="711e1-557">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="711e1-558">Sie müssen den Regeln, die durch COM definiert, bei Verwendung der unformatierte COM-Schnittstellenzeigern entsprechen.</span><span class="sxs-lookup"><span data-stu-id="711e1-558">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="711e1-559"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> ist nützlich, wenn einen COM-Objekt-Parameter als Aufrufen einer Methode, die verfügbar gemacht werden. ein <xref:System.IntPtr> Typ oder benutzerdefiniertes Marshalling geht.</span><span class="sxs-lookup"><span data-stu-id="711e1-559"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="711e1-560">Obwohl weniger gebräuchlich, können Sie diese Methode für ein verwaltetes Objekt verwenden, um einen Zeiger auf das Objekt COM callable Wrapper.</span><span class="sxs-lookup"><span data-stu-id="711e1-560">Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</span></span> <span data-ttu-id="711e1-561">Beispielsweise können Sie <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> für ein verwaltetes Objekt, das für COM, erhalten einen Schnittstellenzeiger für exportiert wird <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-561">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-562">Einen Zeiger auf eine Klassenschnittstelle kann nicht abgerufen werden, da eine Klassenschnittstelle verfügt nicht über die entsprechenden Typ für die Übergabe an den zweiten Parameter (`t`).</span><span class="sxs-lookup"><span data-stu-id="711e1-562">You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (`t`).</span></span> <span data-ttu-id="711e1-563">Verwenden Sie stattdessen <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> aufzurufenden die Elemente auf die Standardschnittstelle des COM callable Wrapper, die in der Regel eine Klassenschnittstelle Auto-Verteilung ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-563">Instead, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</span></span>  
  
 <span data-ttu-id="711e1-564">Die <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> methodenüberladung ermöglicht das Anpassen der Benutzeroberfläche Abfrage standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="711e1-564">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="711e1-565">Verwenden, um anzugeben, ob beim Anwenden der Anpassung der Abfrage-Schnittstelle der <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="711e1-565">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="711e1-566">Weitere Informationen finden Sie unter der [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), und [Einführung in die Klassenschnittstelle](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) Themen.</span><span class="sxs-lookup"><span data-stu-id="711e1-566">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-567">Der <typeparamref name="T" />-Parameter ist keine Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-567">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="711e1-568">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-568">-or-</span>
          </span>
          <span data-ttu-id="711e1-569">Der Typ ist für COM nicht sichtbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-569">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="711e1-570">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-570">-or-</span>
          </span>
          <span data-ttu-id="711e1-571">Der <typeparamref name="T" />-Parameter ist eine generische Typdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-571">The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-572">Der <paramref name="o" />-Parameter unterstützt die angeforderte Schnittstelle nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-572">The <paramref name="o" /> parameter does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-573">Der <paramref name="o" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-573">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-574">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-574">-or-</span>
          </span>
          <span data-ttu-id="711e1-575">Der <typeparamref name="T" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-575">The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-576">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-576">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-577">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-577">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T, System.Runtime.InteropServices.CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T, valuetype System.Runtime.InteropServices.CustomQueryInterfaceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type, mode As CustomQueryInterfaceMode) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T, System::Runtime::InteropServices::CustomQueryInterfaceMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
        <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-578">Das Objekt, das die Schnittstelle bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-578">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="711e1-579">Der Typ der angeforderten Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-579">The type of interface that is requested.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="711e1-580">Einer der Enumerationswerte, die angeben, ob eine <see langword="IUnknown::QueryInterface" />-Anpassung übernommen werden soll, die von einer <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-580">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-581">Gibt einen Zeiger auf eine [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Schnittstelle zurück, die die angegebene Schnittstelle für das angegebene Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-581">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="711e1-582">Der benutzerdefinierte Zugriff auf die Abfrageschnittstelle wird vom angegebenen Anpassungsmodus gesteuert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-582">Custom query interface access is controlled by the specified customization mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-583">Der Schnittstellenzeiger, der die Schnittstelle für das Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-583">The interface pointer that represents the interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-584"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> Sie können angeben, ob beim Anwenden der Anpassung der Abfrage-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-584"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> lets you specify whether to apply query interface customization.</span></span> <span data-ttu-id="711e1-585">Verwenden der <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> Überladung beim Anwenden der Anpassung der Abfrage-Schnittstelle in der Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="711e1-585">Use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload to apply query interface customization by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-586">Der <typeparamref name="T" />-Parameter ist keine Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-586">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="711e1-587">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-587">-or-</span>
          </span>
          <span data-ttu-id="711e1-588">Der Typ ist für COM nicht sichtbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-588">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="711e1-589">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-589">-or-</span>
          </span>
          <span data-ttu-id="711e1-590">Der <typeparamref name="T" />-Parameter ist eine generische Typdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-590">The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-591">Das Objekt <paramref name="o" /> unterstützt die angeforderte Schnittstelle nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-591">The object <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-592">Der <paramref name="o" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-592">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-593">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-593">-or-</span>
          </span>
          <span data-ttu-id="711e1-594">Der <typeparamref name="T" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-594">The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-595">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-595">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-596">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-596">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject&lt;T,TInterface&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject&lt;T,TInterface&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject&lt;T, TInterface&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject(Of T, TInterface) (o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TInterface&gt;&#xA; static IntPtr GetComInterfaceForObject(T o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TInterface" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-597">Der Typ des <c>o</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-597">The type of <c>o</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TInterface">
          <span data-ttu-id="711e1-598">Der Typ der zurückzugebenden Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-598">The type of interface to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="711e1-599">Das Objekt, das die Schnittstelle bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-599">The object that provides the interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-600">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-600">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-601">Gibt einen Zeiger auf eine [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Schnittstelle zurück, die die angegebene Schnittstelle für das Objekt des angegebenen Typs darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-601">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span>
          </span>
          <span data-ttu-id="711e1-602">Der benutzerdefinierte Zugriff auf Abfrageschnittstellen ist standardmäßig aktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-602">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-603">Der Schnittstellenzeiger, der die <paramref name="TInterface" />-Schnittstelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-603">The interface pointer that represents the <paramref name="TInterface" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-604">Diese Methode gibt einen Schnittstellenzeiger, der darstellt die `TInterface` Schnittstelle für das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="711e1-604">This method returns an interface pointer that represents the `TInterface` interface on the specified object.</span></span> <span data-ttu-id="711e1-605">Dies ist besonders nützlich, wenn Sie eine nicht verwaltete Methode verfügen, die davon ausgeht, einen Schnittstellenzeiger übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-605">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="711e1-606">Aufruf eines Objekts mit dieser Methode bewirkt, dass den Verweiszähler für den Schnittstellenzeiger inkrementiert werden soll, bevor der Zeiger zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-606">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="711e1-607">Verwenden Sie immer die <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> Methode, um den Verweiszähler zu verringern, wenn Sie den Zeiger abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="711e1-607">Always use the <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> method to decrement the reference count when you have finished with the pointer.</span></span> <span data-ttu-id="711e1-608">Sie müssen den Regeln, die durch COM definiert, bei Verwendung der unformatierte COM-Schnittstellenzeigern entsprechen.</span><span class="sxs-lookup"><span data-stu-id="711e1-608">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="711e1-609"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> ist nützlich, wenn einen COM-Objekt-Parameter als Aufrufen einer Methode, die verfügbar gemacht werden. ein <xref:System.IntPtr> Typ oder benutzerdefiniertes Marshalling geht.</span><span class="sxs-lookup"><span data-stu-id="711e1-609"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="711e1-610">Auch können diese Methode für ein verwaltetes Objekt um einen Zeiger auf das Objekt COM callable Wrapper, obwohl dies ungewöhnlich ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-610">You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</span></span> <span data-ttu-id="711e1-611">Beispielsweise können Sie <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> für ein verwaltetes Objekt, das für COM, erhalten einen Schnittstellenzeiger für exportiert wird <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-611">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-612">Die <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> methodenüberladung ermöglicht das Anpassen der Benutzeroberfläche Abfrage standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="711e1-612">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="711e1-613">Verwenden, um anzugeben, ob beim Anwenden der Anpassung der Abfrage-Schnittstelle der <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="711e1-613">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="711e1-614">Weitere Informationen finden Sie unter der [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), und [Einführung in die Klassenschnittstelle](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) Themen.</span><span class="sxs-lookup"><span data-stu-id="711e1-614">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-615">Der <paramref name="TInterface" />-Parameter ist keine Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-615">The <paramref name="TInterface" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="711e1-616">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-616">-or-</span>
          </span>
          <span data-ttu-id="711e1-617">Der Typ ist für COM nicht sichtbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-617">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="711e1-618">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-618">-or-</span>
          </span>
          <span data-ttu-id="711e1-619">Der <typeparamref name="T" />-Parameter ist ein offener generischer Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-619">The <typeparamref name="T" /> parameter is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-620">Der <paramref name="o" />-Parameter unterstützt die angeforderte <paramref name="TInterface" /> Schnittstelle nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-620">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-621">Der <paramref name="o" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-621">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-622">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-622">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-623">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-623">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObjectInContext (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObjectInContext(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObjectInContext (o As Object, t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObjectInContext(System::Object ^ o, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-624">Das Objekt, das die Schnittstelle bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-624">The object that provides the interface.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="711e1-625">Der Typ der angeforderten Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-625">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-626">Gibt einen Schnittstellenzeiger zurück, der die angegebene Schnittstelle für ein Objekt zurückgibt, wenn sich der Aufrufer in demselben Kontext wie das betreffende Objekt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-626">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-627">Der von <paramref name="t" /> angegebene Schnittstellenzeiger, der die Schnittstelle für das angegebene Objekt darstellt, oder <see langword="null" />, wenn sich der Aufrufer nicht in demselben Kontext wie das Objekt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-627">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-628">Diese Methode ist identisch mit <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> mit dem Unterschied, dass zurückgegeben `null` , wenn der Aufrufer nicht in demselben Kontext wie das Objekt befindet.</span><span class="sxs-lookup"><span data-stu-id="711e1-628">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span> <span data-ttu-id="711e1-629">Dies ist besonders nützlich, wenn Sie eine nicht verwaltete Methode verfügen, die davon ausgeht, einen Schnittstellenzeiger übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-629">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-630">
            <paramref name="t" /> ist keine Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-630">
              <paramref name="t" /> is not an interface.</span>
          </span>
          <span data-ttu-id="711e1-631">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-631">-or-</span>
          </span>
          <span data-ttu-id="711e1-632">Der Typ ist für COM nicht sichtbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-632">The type is not visible to COM.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-633">
            <paramref name="o" /> unterstützt die angeforderte Schnittstelle nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-633">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-634">
            <paramref name="o" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-634">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-635">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-635">-or-</span>
          </span>
          <span data-ttu-id="711e1-636">
            <paramref name="t" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-636">
              <paramref name="t" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-637">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-637">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-638">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-638">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComObjectData">
      <MemberSignature Language="C#" Value="public static object GetComObjectData (object obj, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetComObjectData(object obj, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComObjectData (obj As Object, key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetComObjectData(System::Object ^ obj, System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="711e1-639">Das COM-Objekt, das die gewünschten Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-639">The COM object that contains the data that you want.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="711e1-640">Der Schlüssel in der internen Hashtabelle von <c>obj</c>, aus dem die Daten abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-640">The key in the internal hash table of <c>obj</c> to retrieve the data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-641">Ruft Daten ab, auf die durch den angegebenen Schlüssel im angegebenen COM-Objekt verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-641">Retrieves data that is referenced by the specified key from the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-642">Die Daten, die in der internen Hashtabelle des <paramref name="key" />-Parameters durch den <paramref name="obj" />-Parameter dargestellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-642">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-643">Alle COM-Objekte eingebunden in eine [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) zugeordneten Hash-Tabelle, die <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> abgerufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-643">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) have an associated hash table, which <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> retrieves.</span></span> <span data-ttu-id="711e1-644"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> die Hashtabelle hinzugefügt Daten.</span><span class="sxs-lookup"><span data-stu-id="711e1-644"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> adds data to the hash table.</span></span> <span data-ttu-id="711e1-645">Sie müssen sich nie in einer dieser Methoden vom Code aufrufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-645">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-646">
            <paramref name="obj" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-646">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-647">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-647">-or-</span>
          </span>
          <span data-ttu-id="711e1-648">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-648">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-649">
            <paramref name="obj" /> ist kein COM-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-649">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="711e1-650">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-650">-or-</span>
          </span>
          <span data-ttu-id="711e1-651">
            <paramref name="obj" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-651">
              <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-652">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-652">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-653">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-653">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComSlotForMethodInfo">
      <MemberSignature Language="C#" Value="public static int GetComSlotForMethodInfo (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComSlotForMethodInfo(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComSlotForMethodInfo (m As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetComSlotForMethodInfo(System::Reflection::MemberInfo ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="711e1-654">Ein Objekt, das eine Schnittstellenmethode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-654">An object that represents an interface method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-655">Ruft den VTBL-Slot (virtuelle Funktionstabelle, Vtable) für einen angegebenen <see cref="T:System.Reflection.MemberInfo" />-Typ ab, wenn dieser Typ für COM verfügbar gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-655">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-656">Der <paramref name="m" />-Bezeichner für den VTBL-Slot, wenn er für COM verfügbar gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-656">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-657">Die nullbasierte Slotnummer für drei von dieser Methode zurückgegebene [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) und möglicherweise vier [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) Methoden, die den Wert des ersten verfügbaren Einschubfach entweder 3 oder 7.</span><span class="sxs-lookup"><span data-stu-id="711e1-657">The zero-based slot number returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="711e1-658"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> Stellt die Umkehrfunktion von <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-658"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-659">Sie können diese Methode verwenden, abzurufenden Steckplatznummern für Mitglieder von Schnittstellen, die nicht von COM sichtbar sind und für Mitglieder der privaten Schnittstellen.</span><span class="sxs-lookup"><span data-stu-id="711e1-659">You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</span></span> <span data-ttu-id="711e1-660">Slot zurückgegebenen Zahlen entsprechen den vtable-Zahlen, die reserviert werden würde, wenn der Typ für COM verfügbar gemacht wurde</span><span class="sxs-lookup"><span data-stu-id="711e1-660">The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</span></span> <span data-ttu-id="711e1-661">Für COM nicht sichtbare Elemente belegen tatsächlich einen Steckplatz in einer verfügbar gemachten vtable, obwohl der COM-Client den Slot verwenden kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-661">COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</span></span> <span data-ttu-id="711e1-662">Sie können keine <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> auf eine Klassenschnittstelle durch Übergabe <xref:System.Reflection.MemberInfo> aus einer Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-662">You cannot use <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> on a class interface by passing <xref:System.Reflection.MemberInfo> from a class.</span></span> <span data-ttu-id="711e1-663">Weitere Informationen finden Sie unter [Einführung in die Klassenschnittstelle](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="711e1-663">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-664">Der <paramref name="m" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-664">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-665">Der <paramref name="m" />-Parameter ist kein <see cref="T:System.Reflection.MemberInfo" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-665">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span>
          </span>
          <span data-ttu-id="711e1-666">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-666">-or-</span>
          </span>
          <span data-ttu-id="711e1-667">Der <paramref name="m" />-Parameter ist keine Schnittstellenmethode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-667">The <paramref name="m" /> parameter is not an interface method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-668">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-668">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-669">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-669">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer">
      <MemberSignature Language="C#" Value="public static Delegate GetDelegateForFunctionPointer (IntPtr ptr, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate GetDelegateForFunctionPointer(native int ptr, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer (ptr As IntPtr, t As Type) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ GetDelegateForFunctionPointer(IntPtr ptr, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-670">Der nicht verwaltete Funktionszeiger, der konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-670">The unmanaged function pointer to be converted.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="711e1-671">Der Typ des zurückzugebenden Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-671">The type of the delegate to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-672">Konvertiert einen nicht verwalteten Funktionszeiger in einen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-672">Converts an unmanaged function pointer to a delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-673">Eine Delegatinstanz, die in den entsprechenden Delegattyp umgewandelt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-673">A delegate instance that can be cast to the appropriate delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-674">In Version 1.0 und 1.1 von .NET Framework war es möglich, einen Delegaten, die eine verwaltete Methode darstellt, zu nicht verwaltetem Code als Funktionszeiger, den nicht verwalteten Code aufrufen, die verwaltete Methode über den Funktionszeiger ermöglichen zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-674">In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</span></span> <span data-ttu-id="711e1-675">War es auch möglich, für den nicht verwalteten Code mit diesem Funktionszeiger zurück an den verwalteten Code übergeben, und der Zeiger an die zugrunde liegende verwaltete Methode ordnungsgemäß aufgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="711e1-675">It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</span></span>  
  
 <span data-ttu-id="711e1-676">In der .NET Framework 2.0 und höher, können Sie die <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> und <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> Methoden zum Marshallen von Delegaten in beide Richtungen.</span><span class="sxs-lookup"><span data-stu-id="711e1-676">In the .NET Framework 2.0 and later versions, you can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> methods to marshal delegates in both directions.</span></span> <span data-ttu-id="711e1-677">Mit <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` importiert eine <xref:System.IntPtr?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-677">With <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` is imported as a <xref:System.IntPtr?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-678">Ein <xref:System.IntPtr?displayProperty=nameWithType> für einen verwalteten Delegaten abgerufen werden kann, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> und als ein Parameter übergeben, es kann dann von aufgerufen werden, in die nicht verwaltete Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-678">A <xref:System.IntPtr?displayProperty=nameWithType> can be obtained for a managed delegate by calling <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> and passed as a parameter; it can then be called from inside the unmanaged method.</span></span> <span data-ttu-id="711e1-679">Beachten Sie, dass der Parametermarshaller auch Funktionszeiger auf Delegaten in der .NET Framework 2.0 und höheren Versionen marshallen kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-679">Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</span></span>  
  
 <span data-ttu-id="711e1-680">Die <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> Methode hat die folgenden Einschränkungen:</span><span class="sxs-lookup"><span data-stu-id="711e1-680">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="711e1-681">Generika werden nicht in Interop-Szenarien unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-681">Generics are not supported in interop scenarios.</span></span>  
  
-   <span data-ttu-id="711e1-682">Einen ungültiger Funktionszeiger kann nicht an diese Methode übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-682">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="711e1-683">Sie können diese Methode nur für reine nicht verwaltete Funktionszeiger verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-683">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="711e1-684">Mithilfe dieser Methode kann nicht mit Funktionszeigern, die über C++ bzw. von der <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-684">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="711e1-685">Diese Methode können Sie um einen Delegaten über einen Funktionszeiger auf einem anderen verwalteten Delegaten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="711e1-685">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-686">Der <paramref name="t" />-Parameter ist weder ein Delegat, noch ist er generisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-686">The <paramref name="t" /> parameter is not a delegate or is generic.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-687">Der <paramref name="ptr" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-687">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-688">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-688">-or-</span>
          </span>
          <span data-ttu-id="711e1-689">Der <paramref name="t" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-689">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-690">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-690">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-691">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-691">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer(Of TDelegate) (ptr As IntPtr) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static TDelegate GetDelegateForFunctionPointer(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="711e1-692">Der Typ des zurückzugebenden Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-692">The type of the delegate to return.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="711e1-693">Der nicht verwaltete Funktionszeiger, der konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-693">The unmanaged function pointer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-694">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-694">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-695">Konvertiert einen nicht verwalteten Funktionszeiger in einen Delegaten eines angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-695">Converts an unmanaged function pointer to a delegate of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-696">Eine Instanz vom angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-696">A instance of the specified delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-697">Sie können die <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> und <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> Methoden zum Marshallen von Delegaten in beide Richtungen.</span><span class="sxs-lookup"><span data-stu-id="711e1-697">You can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> methods to marshal delegates in both directions.</span></span>  
  
 <span data-ttu-id="711e1-698">Die <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> Methode hat die folgenden Einschränkungen:</span><span class="sxs-lookup"><span data-stu-id="711e1-698">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="711e1-699">Einen ungültiger Funktionszeiger kann nicht an diese Methode übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-699">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="711e1-700">Sie können diese Methode nur für reine nicht verwaltete Funktionszeiger verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-700">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="711e1-701">Mithilfe dieser Methode kann nicht mit Funktionszeigern, die über C++ bzw. von der <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-701">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="711e1-702">Diese Methode können Sie um einen Delegaten über einen Funktionszeiger auf einem anderen verwalteten Delegaten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="711e1-702">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-703">Der <paramref name="TDelegate" /> generische Parameter ist kein Delegat, oder es ist ein offener generischer Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-703">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-704">Der <paramref name="ptr" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-704">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-705">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-705">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-706">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-706">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetEndComSlot">
      <MemberSignature Language="C#" Value="public static int GetEndComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEndComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEndComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetEndComSlot(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="711e1-707">Ein Typ, der eine Schnittstelle oder eine Klasse darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-707">A type that represents an interface or class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-708">Ruft den letzten Slot in der virtuellen Funktionstabelle (Vtable oder VTBL) eines Typs ab, wenn dieser für COM verfügbar gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-708">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-709">Der letzte VTBL-Slot der Schnittstelle, wenn dies für COM verfügbar gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-709">The last VTBL slot of the interface when exposed to COM.</span>
          </span>
          <span data-ttu-id="711e1-710">Wenn der <paramref name="t" />-Parameter eine Klasse ist, handelt es sich bei dem zurückgegebenen VTBL-Slot um den letzten Slot der Schnittstelle, die aus der Klasse generiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-710">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-711">Diese Methode gibt die nullbasierte, vtable-Nummer für eine Schnittstelle oder eine Klasse zurück.</span><span class="sxs-lookup"><span data-stu-id="711e1-711">This method returns the zero-based, v-table number for an interface or a class.</span></span> <span data-ttu-id="711e1-712">Wenn für eine Klasse verwendet wird, bezieht sich die Nummer des Steckplatzes zurückgegeben, auf die Klassenschnittstelle für die Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-712">When used on a class, the slot number returned refers to the class interface for the class.</span></span> <span data-ttu-id="711e1-713">Wenn die Klassenschnittstelle automatisch generiert und Dual ist, gibt diese Methode immer-1 zurück, um anzugeben, dass die Dispatch beschränkte Schnittstelle eine vtable an verwaltete Clients nicht zur Verfügung stellt.</span><span class="sxs-lookup"><span data-stu-id="711e1-713">If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="711e1-714">Sie können <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> und <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in Verbindung mit <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> Slots in einem angegebenen Bereich zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-714">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="711e1-715">Weitere Informationen finden Sie unter [Einführung in die Klassenschnittstelle](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="711e1-715">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-716">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-716">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-717">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-717">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionCode">
      <MemberSignature Language="C#" Value="public static int GetExceptionCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetExceptionCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetExceptionCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="711e1-718">Ruft einen Code ab, der den Typ der aufgetretenen Ausnahme bezeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-718">Retrieves a code that identifies the type of the exception that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-719">Der Typ der Ausnahme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-719">The type of the exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-720"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> wird für compilerunterstützung für die strukturierte Ausnahmebehandlung (SEH) nur verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="711e1-720"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span> <span data-ttu-id="711e1-721">Wenn diese Methode aufgerufen wird, bevor eine Ausnahme ausgelöst wird, wird 0 x 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-721">If this method is called before an exception is thrown, it returns 0x0.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-722">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-722">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-723">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-723">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-724">Konvertiert einen HRESULT-Fehlercode in ein entsprechendes <see cref="T:System.Exception" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-724">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="711e1-725">Das zu konvertierende HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-725">The HRESULT to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-726">Konvertiert den angegebenen HRESULT-Fehlercode in ein entsprechendes <see cref="T:System.Exception" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-726">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-727">Ein Objekt, das das konvertierte HRESULT darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-727">An object that represents the converted HRESULT.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-728">Verwenden der <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> Methode zum Abrufen einer <xref:System.Exception> basierend auf einem HRESULT ohne Aufruf der <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> -Methode und die Ausnahme abfangen.</span><span class="sxs-lookup"><span data-stu-id="711e1-728">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception.</span></span>  
  
 <span data-ttu-id="711e1-729">Die aktuelle [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) Schnittstelle wird verwendet, um die Ausnahme zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="711e1-729">The current [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface is used to construct the exception.</span></span>  
  
 <span data-ttu-id="711e1-730">Die Zuordnung von jedem HRESULT zu seiner vergleichbaren Ausnahmeklasse in .NET Framework, finden Sie unter [Vorgehensweise: Zuordnen von HRESULTs und Ausnahmen](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-730">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-731">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-731">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-732">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-732">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer, errorInfo As IntPtr) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="711e1-733">Das zu konvertierende HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-733">The HRESULT to be converted.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="711e1-734">Ein Zeiger auf die <see langword="IErrorInfo" />-Schnittstelle, die weitere Informationen über den Fehler bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-734">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="711e1-735">Sie können <c>IntPtr(0)</c> angeben, um die aktuelle <see langword="IErrorInfo" />-Schnittstelle zu verwenden, oder <c>IntPtr(-1)</c>, um die aktuelle <see langword="IErrorInfo" />-Schnittstelle zu ignorieren und die Ausnahme direkt aus dem Fehlercode zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-735">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-736">Konvertiert den angegebenen HRESULT-Fehlercode in ein entsprechendes <see cref="T:System.Exception" />-Objekt, wobei zusätzliche Fehlerinformationen für das Ausnahmeobjekt in eine [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)-Schnittstelle übergeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-736">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-737">Ein Objekt, das das konvertierte HRESULT und die aus <paramref name="errorInfo" /> abgerufenen Informationen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-737">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-738">Verwenden der <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> Methode zum Abrufen einer <xref:System.Exception> basierend auf einem HRESULT ohne Aufruf der <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> -Methode und Abfangen der Ausnahme (somit vermieden werden die entsprechenden Systemleistung).</span><span class="sxs-lookup"><span data-stu-id="711e1-738">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception (thus avoiding the corresponding performance overhead).</span></span> <span data-ttu-id="711e1-739">Die `errorInfo` Parameter liefert zusätzliche Informationen über den Fehler, z. B. die textbeschreibung und der global eindeutige Bezeichner (GUID) für die Schnittstelle, die den Fehler definiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-739">The `errorInfo` parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</span></span>  
  
 <span data-ttu-id="711e1-740">Verwenden Sie diese methodenüberladung, wenn Sie benutzerdefinierten Fehlerinformationen verfügen, die Sie bei der Konvertierung angeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-740">Use this method overload if you have custom error information that you have to supply in the conversion.</span></span>  
  
 <span data-ttu-id="711e1-741">Die Zuordnung von jedem HRESULT zu seiner vergleichbaren Ausnahmeklasse in .NET Framework, finden Sie unter [Vorgehensweise: Zuordnen von HRESULTs und Ausnahmen](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-741">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-742">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-742">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-743">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-743">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPointers">
      <MemberSignature Language="C#" Value="public static IntPtr GetExceptionPointers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExceptionPointers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionPointers () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExceptionPointers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="711e1-744">Ruft eine computerunabhängige Beschreibung einer Ausnahme und Informationen zu dem Zustand ab, der beim Auftreten der Ausnahme für den Thread vorlag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-744">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-745">Ein Zeiger auf eine [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648)-Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-745">A pointer to an [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-746"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> wird für compilerunterstützung für die strukturierte Ausnahmebehandlung (SEH) nur verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="711e1-746"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-747">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-747">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-748">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-748">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate (d As Delegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetFunctionPointerForDelegate(Delegate ^ d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="711e1-749">Der Delegat, der an nicht verwalteten Code übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-749">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-750">Konvertiert einen Delegaten in einen Funktionszeiger, der aus nicht verwaltetem Code aufgerufen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-750">Converts a delegate into a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-751">Ein Wert, der an nicht verwalteten Code übergeben werden kann, der mit diesem Wert wiederum den zugrunde liegenden verwalteten Delegaten aufrufen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-751">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-752">Der Delegat `d` wird konvertiert in einen Funktionszeiger, der an nicht verwalteten Code übergeben werden kann die [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) Aufrufkonvention.</span><span class="sxs-lookup"><span data-stu-id="711e1-752">The delegate `d` is converted to a function pointer that can be passed to unmanaged code using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="711e1-753">Sie müssen manuell verhindert, dass der Delegat vom Garbage Collector erfasst wird, die aus verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-753">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="711e1-754">Der Garbage Collector verfolgt keine Verweise auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-754">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-755">Der <paramref name="d" />-Parameter ist eine generische Typdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-755">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-756">Der <paramref name="d" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-756">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-757">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-757">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-758">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-758">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate&lt;TDelegate&gt; (TDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate&lt;TDelegate&gt;(!!TDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate(Of TDelegate) (d As TDelegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static IntPtr GetFunctionPointerForDelegate(TDelegate d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="d" Type="TDelegate" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="711e1-759">Der Typ des zu konvertierenden Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-759">The type of delegate to convert.</span>
          </span>
        </typeparam>
        <param name="d">
          <span data-ttu-id="711e1-760">Der Delegat, der an nicht verwalteten Code übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-760">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-761">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-761">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-762">Konvertiert einen Delegaten eines angegebenen Typs in einen Funktionszeiger, der aus nicht verwaltetem Code aufgerufen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-762">Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-763">Ein Wert, der an nicht verwalteten Code übergeben werden kann, der mit diesem Wert wiederum den zugrunde liegenden verwalteten Delegaten aufrufen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-763">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-764">Der Delegat `d` wird konvertiert in einen Funktionszeiger, der an nicht verwalteten Code durch übergeben werden kann, mithilfe der [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) Aufrufkonvention.</span><span class="sxs-lookup"><span data-stu-id="711e1-764">The delegate `d` is converted to a function pointer that can be passed to unmanaged code by using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="711e1-765">Sie müssen manuell verhindert, dass der Delegat vom Garbage Collector erfasst wird, die aus verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-765">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="711e1-766">Der Garbage Collector verfolgt keine Verweise auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-766">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-767">Der <paramref name="d" />-Parameter ist eine generische Typdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-767">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-768">Der <paramref name="d" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-768">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-769">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-769">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-770">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-770">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHINSTANCE">
      <MemberSignature Language="C#" Value="public static IntPtr GetHINSTANCE (System.Reflection.Module m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHINSTANCE(class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHINSTANCE (m As Module) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHINSTANCE(System::Reflection::Module ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="711e1-771">Das Modul mit dem gewünschten HINSTANCE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-771">The module whose HINSTANCE is desired.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-772">Gibt das Instanzhandle (HINSTANCE) für das angegebene Modul zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-772">Returns the instance handle (HINSTANCE) for the specified module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-773">Das HINSTANCE für <paramref name="m" /> oder -1, wenn das Modul über kein HINSTANCE verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-773">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-774">Wenn dynamische oder in-Memory-Module über kein HINSTANCE.</span><span class="sxs-lookup"><span data-stu-id="711e1-774">When dynamic or in-memory, modules do not have an HINSTANCE.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-775">Der <paramref name="m" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-775">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-776">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-776">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-777">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-777">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHRForException">
      <MemberSignature Language="C#" Value="public static int GetHRForException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForException (e As Exception) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForException(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="711e1-778">Die in ein HRESULT zu konvertierende Ausnahme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-778">The exception to convert to an HRESULT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-779">Konvertiert die angegebene Ausnahme in ein HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-779">Converts the specified exception to an HRESULT.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-780">Das HRESULT, das der bereitgestellten Ausnahme zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-780">The HRESULT mapped to the supplied exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-781"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> Außerdem richtet eine [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) Schnittstelle für die Ausnahme, die durch Aufrufen der Funktion COM GetErrorInfoNEEDGUID abgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-781"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> also sets up an [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</span></span> <span data-ttu-id="711e1-782">Sie können diese Funktion verwenden, um einen HRESULT-Wert für die Implementierung einer verwalteten Klasse einer COM-Schnittstelle zurück, in dem Sie anwenden, der <xref:System.Runtime.InteropServices.PreserveSigAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="711e1-782">You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <xref:System.Runtime.InteropServices.PreserveSigAttribute> attribute.</span></span> <span data-ttu-id="711e1-783">Die attributierte Methode alle Ausnahmen abfangen und die <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> Methode, um den entsprechenden HRESULT-Wert zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-783">Have the attributed method catch all exceptions and use the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method to return the appropriate HRESULT value.</span></span> <span data-ttu-id="711e1-784">Ermöglicht die Weitergabe außerhalb der Methode eine Ausnahme erzeugt Falsches Verhalten.</span><span class="sxs-lookup"><span data-stu-id="711e1-784">Allowing an exception to propagate outside the method produces incorrect behavior.</span></span> <span data-ttu-id="711e1-785">(In der Tat kann die common Language Runtime eine Ausnahme an einem COM-Client übergeben, der eine solche Methode über eine vtable aufruft.)</span><span class="sxs-lookup"><span data-stu-id="711e1-785">(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</span></span>  
  
 <span data-ttu-id="711e1-786">Beachten Sie, dass die <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> Methode legt die [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) Schnittstelle des aktuellen Threads.</span><span class="sxs-lookup"><span data-stu-id="711e1-786">Note that the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method sets the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread.</span></span> <span data-ttu-id="711e1-787">Dies kann zu unerwarteten Ergebnissen führen, für die Methoden wie die <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> Methoden, die standardmäßig auf die Verwendung der [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) des aktuellen Threads ist die Eigenschaft festgelegt.</span><span class="sxs-lookup"><span data-stu-id="711e1-787">This can cause unexpected results for methods like the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> methods that default to using the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) of the current thread if it is set.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-788">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-788">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-789">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-789">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetHRForLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetHRForLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForLastWin32Error();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="711e1-790">Gibt das HRESULT für den letzten Fehler zurück, der durch einen mit <see cref="T:System.Runtime.InteropServices.Marshal" /> ausgeführten Win32-Code ausgelöst wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-790">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-791">Das HRESULT für den letzten Win32-Fehlercode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-791">The HRESULT corresponding to the last Win32 error code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-792">Der Zielfunktion muss hatten die `setLastError` Metadatenflag festgelegt.</span><span class="sxs-lookup"><span data-stu-id="711e1-792">The target function must have had the `setLastError` metadata flag set.</span></span> <span data-ttu-id="711e1-793">Z. B. die `SetLastError` Feld der <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> muss `true`.</span><span class="sxs-lookup"><span data-stu-id="711e1-793">For example, the `SetLastError` field of the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> must be `true`.</span></span> <span data-ttu-id="711e1-794">Der Vorgang zum Festlegen dieses Flags hängt von der Source-Sprache verwendet: c# und C++ sind `false` standardmäßig, aber die `Declare` in Visual Basic-Anweisung ist `true`.</span><span class="sxs-lookup"><span data-stu-id="711e1-794">The process for setting this flag depends on the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-795">Im folgenden Beispiel wird veranschaulicht, wie ein Win32-Fehler Code mit entsprechenden HRESULT Abrufen der <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-795">The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-796">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-796">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-797">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-797">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-798">Das Objekt, dessen <see langword="IDispatch" />-Schnittstelle angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-798">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-799">Gibt eine [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)-Schnittstelle aus einem verwalteten Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-799">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-800">Der <see langword="IDispatch" />-Zeiger für den <paramref name="o" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-800">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-801">In verwaltetem Code nur selten arbeiten Sie direkt mit der `IDispatch` Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-801">In managed code, you seldom work directly with the `IDispatch` interface.</span></span> <span data-ttu-id="711e1-802">Allerdings <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> ist nützlich, wenn einen COM-Objekt-Parameter als Aufrufen einer Methode, die verfügbar gemacht werden. ein <xref:System.IntPtr> Typ oder benutzerdefiniertes Marshalling geht.</span><span class="sxs-lookup"><span data-stu-id="711e1-802">However, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="711e1-803">Aufruf eines Objekts mit dieser Methode bewirkt, dass den Verweiszähler für den Schnittstellenzeiger inkrementiert werden soll, bevor der Zeiger zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-803">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="711e1-804">Verwenden Sie immer <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> um den Verweiszähler zu verringern, sobald Sie den Mauszeiger abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="711e1-804">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span>  
  
 <span data-ttu-id="711e1-805">Sie können diese Methode auch für ein verwaltetes Objekt verwenden, einen Schnittstellenzeiger auf den COM callable Wrapper für das Objekt abgerufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-805">You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</span></span> <span data-ttu-id="711e1-806">Weitere Informationen finden Sie unter [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-806">For additional information, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-807">
            <paramref name="o" /> unterstützt die angeforderte Schnittstelle nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-807">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-808">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-808">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-809">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-809">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObjectInContext(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-810">Das Objekt, dessen <see langword="IDispatch" />-Schnittstelle angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-810">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-811">Gibt einen [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)-Schnittstellenzeiger aus einem verwalteten Objekt zurück, falls sich der Aufrufer in demselben Kontext wie das Objekt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-811">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface pointer from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-812">Der <see langword="IDispatch" />-Schnittstellenzeiger für das angegebene Objekt oder <see langword="null" />, falls sich der Aufrufer nicht in demselben Kontext wie das angegebene Objekt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-812">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-813">Diese Methode ist identisch mit <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> mit dem Unterschied, dass zurückgegeben `null` , wenn der Aufrufer nicht in demselben Kontext wie das Objekt befindet.</span><span class="sxs-lookup"><span data-stu-id="711e1-813">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="711e1-814">
            <paramref name="o" /> unterstützt die angeforderte Schnittstelle nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-814">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-815">
            <paramref name="o" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-815">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-816">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-816">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-817">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-817">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetITypeInfoForType">
      <MemberSignature Language="C#" Value="public static IntPtr GetITypeInfoForType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetITypeInfoForType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetITypeInfoForType (t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetITypeInfoForType(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="711e1-818">Der Typ, dessen <see langword="ITypeInfo" />-Schnittstelle angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-818">The type whose <see langword="ITypeInfo" /> interface is being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-819">Gibt eine <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" />-Schnittstelle aus einem verwalteten Typ zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-819">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-820">Ein Zeiger auf die <see langword="ITypeInfo" />-Schnittstelle für den <paramref name="t" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-820">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-821">Diese Methode gibt einen Zeiger auf eine `ITypeInfo` Implementierung, die auf den ursprünglichen Typ basiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-821">This method returns a pointer to an `ITypeInfo` implementation that is based on the original type.</span></span> <span data-ttu-id="711e1-822">Aufrufen eines Objekts mit <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> bewirkt, dass den Verweiszähler für den Schnittstellenzeiger inkrementiert werden soll, bevor der Zeiger zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-822">Calling an object with <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="711e1-823">Verwenden Sie immer <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> um den Verweiszähler zu verringern, sobald Sie den Mauszeiger abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="711e1-823">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="711e1-824">Sie können Anwenden der <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> standard Interop-Marshalling-Verhalten mit diesem benutzerdefinierten Marshaller ersetzen.</span><span class="sxs-lookup"><span data-stu-id="711e1-824">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-825">Im folgenden Beispiel wird veranschaulicht, wie einen Zeiger zum Abrufen der `ITypeInfo` Schnittstelle für einen Typ mit dem <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-825">The following example demonstrates how to retrieve a pointer to the `ITypeInfo` interface for a type using the <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-826">
            <paramref name="t" /> ist kein für COM sichtbarer Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-826">
              <paramref name="t" /> is not a visible type to COM.</span>
          </span>
          <span data-ttu-id="711e1-827">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-827">-or-</span>
          </span>
          <span data-ttu-id="711e1-828">
            <paramref name="t" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-828">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="711e1-829">Für die Assembly ist eine Typbibliothek registriert, die den Typ enthält, aber die Typdefinition wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-829">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-830">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-830">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-831">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-831">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-832">Das Objekt, dessen <see langword="IUnknown" />-Schnittstelle angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-832">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-833">Gibt eine [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Schnittstelle von einem verwalteten Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-833">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-834">Der <see langword="IUnknown" />-Zeiger für den <paramref name="o" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-834">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-835">In verwaltetem Code nur selten arbeiten Sie direkt mit der `IUnknown` Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-835">In managed code, you seldom work directly with the `IUnknown` interface.</span></span> <span data-ttu-id="711e1-836">Allerdings <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> ist nützlich, wenn einen COM-Objekt-Parameter als Aufrufen einer Methode, die verfügbar gemacht werden. ein <xref:System.IntPtr> Typ oder benutzerdefiniertes Marshalling geht.</span><span class="sxs-lookup"><span data-stu-id="711e1-836">However, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="711e1-837">Aufruf eines Objekts mit dieser Methode bewirkt, dass den Verweiszähler für den Schnittstellenzeiger inkrementiert werden soll, bevor der Zeiger zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-837">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="711e1-838">Verwenden Sie immer <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> um den Verweiszähler zu verringern, sobald Sie den Mauszeiger abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="711e1-838">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="711e1-839">Diese Methode stellt die Umkehrfunktion von der <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-839">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="711e1-840">Sie können auch diese Methode für ein verwaltetes Objekt erhalten einen Schnittstellenzeiger auf die [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) für das Objekt.</span><span class="sxs-lookup"><span data-stu-id="711e1-840">You can also use this method on a managed object to obtain an interface pointer to the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-841">Das folgende Beispiel veranschaulicht das Abrufen einer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Schnittstelle für ein verwaltetes Objekt mit der <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-841">The following example demonstrates how to retrieve an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-842">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-842">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-843">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-843">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObjectInContext(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-844">Das Objekt, dessen <see langword="IUnknown" />-Schnittstelle angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-844">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-845">Gibt eine [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Schnittstelle aus einem verwalteten Objekt zurück, wenn sich der Aufrufer im gleichen Kontext wie dieses Objekt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-845">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-846">Der <see langword="IUnknown" />-Zeiger für das angegebene Objekt oder <see langword="null" />, falls sich der Aufrufer nicht in demselben Kontext wie das angegebene Objekt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-846">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-847">Diese Methode ist identisch mit <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> mit dem Unterschied, dass zurückgegeben `null` , wenn der Aufrufer nicht in demselben Kontext wie das Objekt befindet.</span><span class="sxs-lookup"><span data-stu-id="711e1-847">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-848">Das folgende Beispiel veranschaulicht das Abrufen einer `IUnknown` Schnittstelle für ein verwaltetes Objekt mit der <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-848">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-849">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-849">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-850">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-850">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetLastWin32Error();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="711e1-851">Gibt den Fehlercode zurück, der durch die letzte nicht verwaltete Funktion zurückgegeben wurde, die mit einem Plattformaufruf aufgerufen wurde und bei der das <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />-Flag festgelegt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-851">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-852">Der letzte durch einen Aufruf der Win32-[SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656)-Funktion festgelegte Fehlercode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-852">The last error code set by a call to the Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-853"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> macht die Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) -Funktion von Kernel32.dll verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-853"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> exposes the Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) function from Kernel32.DLL.</span></span> <span data-ttu-id="711e1-854">Diese Methode vorhanden ist, da sie nicht sicher ist, stellen eine direkte Plattformaufruf ist `GetLastError` auf diese Informationen zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="711e1-854">This method exists because it is not safe to make a direct platform invoke call to `GetLastError` to obtain this information.</span></span> <span data-ttu-id="711e1-855">Wenn Sie mit diesem Fehlercode zugreifen möchten, müssen Sie aufrufen <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> anstelle des Schreibens von eigene Definition des Plattformaufrufs für `GetLastError` und Aufrufen dieser Komponente.</span><span class="sxs-lookup"><span data-stu-id="711e1-855">If you want to access this error code, you must call <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> instead of writing your own platform invoke definition for `GetLastError` and calling it.</span></span> <span data-ttu-id="711e1-856">Die common Language Runtime kann interne Aufrufe von APIs, die überschreiben stellen die `GetLastError` vom Betriebssystem verwaltet.</span><span class="sxs-lookup"><span data-stu-id="711e1-856">The common language runtime can make internal calls to APIs that overwrite the `GetLastError` maintained by the operating system.</span></span>  
  
 <span data-ttu-id="711e1-857">Verwenden Sie diese Methode, um Fehlercodes zu erhalten, nur, wenn Sie anwenden der <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> auf die Methodensignatur und die <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> Feld`true`.</span><span class="sxs-lookup"><span data-stu-id="711e1-857">You can use this method to obtain error codes only if you apply the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> to the method signature and set the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field to`true`.</span></span> <span data-ttu-id="711e1-858">Dieser Prozess variiert in Abhängigkeit von der Quellsprache verwendet: c# und C++ sind `false` standardmäßig, aber die `Declare` in Visual Basic-Anweisung ist `true`.</span><span class="sxs-lookup"><span data-stu-id="711e1-858">The process for this varies depending upon the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-859">Im folgenden Beispiel wird das Aufrufen der <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="711e1-859">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> method.</span></span> <span data-ttu-id="711e1-860">Im Beispiel veranschaulicht zunächst beim Aufrufen der Methode kein Fehler aufgetreten ist und klicken Sie dann beim Aufrufen der Methode ein Fehler aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-860">The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-861">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-861">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-862">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-862">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedThunkForUnmanagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetManagedThunkForUnmanagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetManagedThunkForUnmanagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="711e1-863">Ein Zeiger auf die Methode, die gemarshallt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-863">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="711e1-864">Ein Zeiger auf die Methodensignatur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-864">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="711e1-865">Die Anzahl der Bytes in <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-865">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-866">Ruft einen Zeiger auf eine zur Laufzeit generierte Funktion ab, die einen Aufruf aus verwaltetem zu nicht verwaltetem Code marshallt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-866">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-867">Ein Zeiger auf die Funktion, die einen Aufruf aus dem <paramref name="pfnMethodToWrap" />-Parameter zu nicht verwaltetem Code marshallt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-867">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-868"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> für die Unterstützung des Compilers nur wird verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-868"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-869">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-869">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-870">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-870">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfoForComSlot">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMethodInfoForComSlot (Type t, int slot, ref System.Runtime.InteropServices.ComMemberType memberType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMethodInfoForComSlot(class System.Type t, int32 slot, valuetype System.Runtime.InteropServices.ComMemberType&amp; memberType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodInfoForComSlot (t As Type, slot As Integer, ByRef memberType As ComMemberType) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MemberInfo ^ GetMethodInfoForComSlot(Type ^ t, int slot, System::Runtime::InteropServices::ComMemberType % memberType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="711e1-871">Der Typ, für den die <see cref="T:System.Reflection.MemberInfo" /> abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-871">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span>
          </span>
        </param>
        <param name="slot">
          <span data-ttu-id="711e1-872">Der VTBL-Slot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-872">The VTBL slot.</span>
          </span>
        </param>
        <param name="memberType">
          <span data-ttu-id="711e1-873">Bei erfolgreicher Rückgabe einer der Enumerationswerte, der den Typ des Members angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-873">On successful return, one of the enumeration values that specifies the type of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-874">Ruft ein <see cref="T:System.Reflection.MemberInfo" />-Objekt für den angegebenen Slot in der virtuellen Funktionstabelle (Vtable oder VTBL) ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-874">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-875">Das Objekt, das den Member an angegebenen VTBL-Slot darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-875">The object that represents the member at the specified VTBL slot.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-876">Der Rückgabewert ist möglicherweise eine <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, oder <xref:System.Reflection.PropertyInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="711e1-876">The return value may be a <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="711e1-877">Der zurückgegebene Wert hängt vom Typ des verwalteten Members, der in der angegebenen COM-Slot vorhanden ist (also der verallgemeinerte Rückgabetyp <xref:System.Reflection.MemberInfo> von der alle drei abgeleitet werden).</span><span class="sxs-lookup"><span data-stu-id="711e1-877">The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <xref:System.Reflection.MemberInfo> from which all three derive).</span></span>  
  
 <span data-ttu-id="711e1-878">Die nullbasierte, die von dieser Methode zurückgegebene Slotnummer für drei [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) und möglicherweise vier [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) Methoden, die den Wert des ersten verfügbaren Einschubfach entweder 3 oder 7.</span><span class="sxs-lookup"><span data-stu-id="711e1-878">The zero-based slot number that is returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="711e1-879"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> Stellt die Umkehrfunktion von <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-879"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-880">Sie können <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in Verbindung mit <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> Slots in einem angegebenen Bereich zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-880">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> to pass slots within a specified range.</span></span>  
  
 <span data-ttu-id="711e1-881">Die `memberType` Parameter ist nur bei der Rückgabe wichtig.</span><span class="sxs-lookup"><span data-stu-id="711e1-881">The `memberType` parameter is important only on return.</span></span> <span data-ttu-id="711e1-882">Er enthält den Typ des COM-Members (eine normale Methode oder ein Eigenschaftenaccessor), der auf das zurückgegebene entspricht <xref:System.Reflection.MemberInfo> Objekt.</span><span class="sxs-lookup"><span data-stu-id="711e1-882">It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-883">
            <paramref name="t" /> ist für COM nicht sichtbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-883">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-884">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-884">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-885">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-885">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComMemberType" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject (object obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject(object obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject (obj As Object, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetNativeVariantForObject(System::Object ^ obj, IntPtr pDstNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="711e1-886">Das Objekt, für das ein COM-VARIANT abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-886">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="711e1-887">Ein Zeiger, der den VARIANT empfangen soll, der dem <c>obj</c>-Parameter entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-887">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-888">Konvertiert ein Objekt in einen COM-VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-888">Converts an object to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-889">Die `pDstNativeVariant` Parameter muss auf ausreichend Arbeitsspeicher zum Speichern der resultierenden Variante zeigen.</span><span class="sxs-lookup"><span data-stu-id="711e1-889">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="711e1-890">Die Implementierung dieser Methode ruft außerdem die [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) Funktion auf den unformatierten Speicher, der `pDstNativeVariant` -Parameter zeigt.</span><span class="sxs-lookup"><span data-stu-id="711e1-890">Also, the implementation of this method calls the [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-891">Der <paramref name="obj" />-Parameter ist eine Instanz eines generischen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-891">The <paramref name="obj" /> parameter is an instance of a generic type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-892">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-892">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-893">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-893">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject&lt;T&gt; (T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject&lt;T&gt;(!!T obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject(Of T) (obj As T, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="T" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-894">Der Typ, des Objekts, das konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-894">The type of the object to convert.</span>
          </span>
        </typeparam>
        <param name="obj">
          <span data-ttu-id="711e1-895">Das Objekt, für das ein COM-VARIANT abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-895">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="711e1-896">Ein Zeiger, der den VARIANT empfangen soll, der dem <c>obj</c>-Parameter entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-896">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-897">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-897">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-898">Konvertiert ein Objekt eines angegebenen Typs in eine COM VARIANTE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-898">Converts an object of a specified type to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-899">Die `pDstNativeVariant` Parameter muss auf ausreichend Arbeitsspeicher zum Speichern der resultierenden Variante zeigen.</span><span class="sxs-lookup"><span data-stu-id="711e1-899">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="711e1-900">Die Implementierung dieser Methode ruft außerdem [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) Funktion auf den unformatierten Speicher, der `pDstNativeVariant` -Parameter zeigt.</span><span class="sxs-lookup"><span data-stu-id="711e1-900">Also, the implementation of this method calls [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-901">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-901">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-902">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-902">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetObjectForIUnknown (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForIUnknown(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForIUnknown (pUnk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForIUnknown(IntPtr pUnk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="711e1-903">Ein Zeiger auf die <see langword="IUnknown" />-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-903">A pointer to the <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-904">Gibt eine Instanz eines Typs zurück, der ein COM-Objekt mit einem Zeiger auf die [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Schnittstelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-904">Returns an instance of a type that represents a COM object by a pointer to its [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-905">Ein Objekt, das das angegebene nicht verwaltete COM-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-905">An object that represents the specified unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-906">Diese Methode umschließt `IUnknown` in ein verwaltetes Objekt.</span><span class="sxs-lookup"><span data-stu-id="711e1-906">This method wraps `IUnknown` in a managed object.</span></span> <span data-ttu-id="711e1-907">Dies hat den Effekt der Verweiszähler der COM-Komponente.</span><span class="sxs-lookup"><span data-stu-id="711e1-907">This has the effect of incrementing the reference count of the COM component.</span></span> <span data-ttu-id="711e1-908">Der Verweiszähler wird verringert werden, wenn die Common Language Runtime Garbagecollection auf das verwaltete Objekt durchführt, die die COM-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="711e1-908">The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</span></span>  
  
 <span data-ttu-id="711e1-909">Die `pUnk` Parameter darstellt ein `IUnknown` Schnittstellenzeiger, aber da alle COM-Schnittstellen direkt oder indirekt aus ableiten `IUnknown`, können Sie COM-Schnittstelle an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-909">The `pUnk` parameter represents an `IUnknown` interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="711e1-910">Das zurückgegebene Objekt <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> ist ein [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), die als es die common Language Runtime verwaltet ist eines anderes verwalteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="711e1-910">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), which the common language runtime manages as it does any other managed object.</span></span> <span data-ttu-id="711e1-911">Der Typ eines solchen Wrappers ist häufig eine Basis `System.__ComObject` Typ, der ist ein ausgeblendeter Typ verwendet, wenn der Wrappertyp mehrdeutig ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-911">The type of this wrapper is often a base `System.__ComObject` type, which is a hidden type used when the wrapper type is ambiguous.</span></span> <span data-ttu-id="711e1-912">Sie können weiterhin spät gebundene Aufrufe auf solche einen Basistyp vornehmen, solange das COM-Objekt implementiert die [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-912">You can still make late-bound calls to such a base type as long as the COM object implements the [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interface.</span></span> <span data-ttu-id="711e1-913">Ebenso können Sie das zurückgegebene Objekt in eine entsprechende COM-Schnittstelle umwandeln.</span><span class="sxs-lookup"><span data-stu-id="711e1-913">Likewise, you can cast the returned object to an appropriate COM interface.</span></span>  
  
 <span data-ttu-id="711e1-914">Für ein Objekt umschlossen werden mit einer bestimmten verwalteten Klassentyps (und nicht für einen Wrappertyp generische) müssen Sie die folgenden Anforderungen entsprechen:</span><span class="sxs-lookup"><span data-stu-id="711e1-914">For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</span></span>  
  
-   <span data-ttu-id="711e1-915">Implementieren der [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) Schnittstelle für COM-Objekts.</span><span class="sxs-lookup"><span data-stu-id="711e1-915">Implement the [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) interface for the COM object.</span></span>  
  
-   <span data-ttu-id="711e1-916">Registrieren Sie die enthaltende Assembly mit dem [Regasm.exe (Assembly Registration-Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-916">Register the containing assembly with the [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 <span data-ttu-id="711e1-917">Alternativ können Sie vermeiden diese Anforderungen und Abrufen trotzdem ein Objekt, das mit einem bestimmten verwalteten Klasse, mithilfe umschlossen wird der <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-917">Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-918">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-918">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-919">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-919">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant">
      <MemberSignature Language="C#" Value="public static object GetObjectForNativeVariant (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForNativeVariant(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant (pSrcNativeVariant As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="711e1-920">Ein Zeiger auf ein COM-VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-920">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-921">Konvertiert einen COM-VARIANT in ein Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-921">Converts a COM VARIANT to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-922">Ein Objekt, das dem <paramref name="pSrcNativeVariant" />-Parameter entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-922">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-923"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> Gibt ein verwaltetes Objekt, das entspricht, einen unformatierten Zeiger in einen nicht verwalteten Variantentyp zurück.</span><span class="sxs-lookup"><span data-stu-id="711e1-923"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="711e1-924">Die Interopmarshaler führt identische Transformation aus, wenn Sie einen VARIANT-Datentyp an verwalteten Code verfügbar machen.</span><span class="sxs-lookup"><span data-stu-id="711e1-924">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="711e1-925"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> Stellt die Umkehrfunktion von <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-925"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-926">Wenn der VARIANT-Typ VT_ERROR ist <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> gibt ein Objekt vom Typ `Int32` anstelle von `UInt32`.</span><span class="sxs-lookup"><span data-stu-id="711e1-926">When the VARIANT type is VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns an object of type `Int32` instead of `UInt32`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="711e1-927">
            <paramref name="pSrcNativeVariant" /> ist kein gültiger VARIANT-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-927">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="711e1-928">
            <paramref name="pSrcNativeVariant" /> weist einen nicht unterstützten Typ auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-928">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-929">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-929">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-930">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObjectForNativeVariant&lt;T&gt; (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObjectForNativeVariant&lt;T&gt;(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant(Of T) (pSrcNativeVariant As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-931">Der Typ, in den die COM VARIANTE konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-931">The type to which to convert the COM VARIANT.</span>
          </span>
        </typeparam>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="711e1-932">Ein Zeiger auf ein COM-VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-932">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-933">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-933">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-934">Konvertiert ein COM VARIANTE in ein Objekt eines angegebenen Typs .</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-934">Converts a COM VARIANT to an object of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-935">Ein Objekt des angegebenen Typs, der dem <paramref name="pSrcNativeVariant" />-Parameter entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-935">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> Gibt ein verwaltetes Objekt des Typs `T` , einen unformatierten Zeiger in einen nicht verwalteten Variantentyp entspricht.</span><span class="sxs-lookup"><span data-stu-id="711e1-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> returns a managed object of type `T` that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="711e1-937">Die Interopmarshaler führt identische Transformation aus, wenn Sie einen VARIANT-Datentyp an verwalteten Code verfügbar machen.</span><span class="sxs-lookup"><span data-stu-id="711e1-937">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="711e1-938"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> Stellt die Umkehrfunktion von <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span><span class="sxs-lookup"><span data-stu-id="711e1-938"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="711e1-939">
            <paramref name="pSrcNativeVariant" /> ist kein gültiger VARIANT-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-939">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="711e1-940">
            <paramref name="pSrcNativeVariant" /> weist einen nicht unterstützten Typ auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-940">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-941">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-941">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-942">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-942">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants">
      <MemberSignature Language="C#" Value="public static object[] GetObjectsForNativeVariants (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectsForNativeVariants(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants (aSrcNativeVariant As IntPtr, cVars As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="711e1-943">Ein Zeiger auf das erste Element eines Arrays von COM-VARIANTs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-943">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="711e1-944">Die Zählung der COM-VARIANTs in <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-944">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-945">Konvertiert ein Array mit COM-[VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) in ein Array von Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-945">Converts an array of COM [VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) to an array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-946">Ein Objektarray, das diesem <paramref name="aSrcNativeVariant" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-946">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-947"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> Gibt ein Array von verwalteten Objekten, die entspricht in einen unformatierten Zeiger auf ein Array im C-Format von nicht verwalteten VARIANT-Datentypen zurück.</span><span class="sxs-lookup"><span data-stu-id="711e1-947"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="711e1-948">Die Interopmarshaler führt identische Transformation aus, wenn Sie einen VARIANT-Datentyp an verwalteten Code verfügbar machen.</span><span class="sxs-lookup"><span data-stu-id="711e1-948">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="711e1-949">Die Methode gibt ein leeres array, wenn die `cVars` Parameter gleich 0 ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-949">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="711e1-950">Das Objektarray (Rückgabewert) Ruft die Garbage collection wie gewohnt ab.</span><span class="sxs-lookup"><span data-stu-id="711e1-950">The object array (the return value) gets garbage collected as usual.</span></span> <span data-ttu-id="711e1-951">Die nicht verwaltete Eingabearray oder einzelne VARIANTs im Eingabearray werden nicht freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-951">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="711e1-952">Es ist daher sicherstellen, dass Sie diese nach Bedarf freigibt.</span><span class="sxs-lookup"><span data-stu-id="711e1-952">Therefore it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-953">
            <paramref name="cVars" /> ist eine negative Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-953">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-954">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-954">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-955">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-955">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] GetObjectsForNativeVariants&lt;T&gt; (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetObjectsForNativeVariants&lt;T&gt;(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants(Of T) (aSrcNativeVariant As IntPtr, cVars As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-956">Der Typ des zurückzugebenden Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-956">The type of the array to return.</span>
          </span>
        </typeparam>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="711e1-957">Ein Zeiger auf das erste Element eines Arrays von COM-VARIANTs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-957">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="711e1-958">Die Zählung der COM-VARIANTs in <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-958">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-959">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-959">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-960">Konvertiert ein Array mit COM-VARIANT in ein Array eines angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-960">Converts an array of COM VARIANTs to an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-961">Ein Array von <typeparamref name="T" />-Objekten, das <paramref name="aSrcNativeVariant" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-961">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-962"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> Gibt ein Array von `T` , einen unformatierten Zeiger in ein Array im C-Format von nicht verwalteten VARIANT-Typen entspricht.</span><span class="sxs-lookup"><span data-stu-id="711e1-962"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> returns an array of `T` that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="711e1-963">Die Interopmarshaler führt identische Transformation aus, wenn Sie einen VARIANT-Datentyp an verwalteten Code verfügbar machen.</span><span class="sxs-lookup"><span data-stu-id="711e1-963">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="711e1-964">Die Methode gibt ein leeres array, wenn die `cVars` Parameter gleich 0 ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-964">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="711e1-965">Das zurückgegebene Array hat Garbage collection wie gewohnt.</span><span class="sxs-lookup"><span data-stu-id="711e1-965">The returned array is garbage-collected as usual.</span></span> <span data-ttu-id="711e1-966">Die nicht verwaltete Eingabearray oder einzelne VARIANTs im Eingabearray werden nicht freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-966">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="711e1-967">Daher ist es Ihrer Verantwortung, diese nach Bedarf freigibt.</span><span class="sxs-lookup"><span data-stu-id="711e1-967">Therefore, it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-968">
            <paramref name="cVars" /> ist eine negative Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-968">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-969">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-969">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-970">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-970">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetStartComSlot">
      <MemberSignature Language="C#" Value="public static int GetStartComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStartComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStartComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetStartComSlot(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="711e1-971">Ein Typ, der eine Schnittstelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-971">A type that represents an interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-972">Ruft den ersten Slot in der VTBL (Vtable oder virtuelle Funktionstabelle) ab, der benutzerdefinierte Methoden enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-972">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-973">Der erste VTBL-Slot, der benutzerdefinierte Methoden enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-973">The first VTBL slot that contains user-defined methods.</span>
          </span>
          <span data-ttu-id="711e1-974">Der erste Slot lautet 3, wenn die Schnittstelle auf [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) basiert. Er lautet 7, wenn die Schnittstelle auf [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) basiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-974">The first slot is 3 if the interface is based on [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), and 7 if the interface is based on [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-975">Diese Methode gibt die nullbasierte Funktionstabelle für eine Schnittstelle oder eine Klasse zurück.</span><span class="sxs-lookup"><span data-stu-id="711e1-975">This method returns the zero-based v-table number for an interface or a class.</span></span> <span data-ttu-id="711e1-976">Wenn für eine Klasse verwendet wird, bezieht sich die Nummer des Steckplatzes, die zurückgegeben wird, auf die Klassenschnittstelle für die Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-976">When used on a class, the slot number that is returned refers to the class interface for the class.</span></span> <span data-ttu-id="711e1-977">Wenn die Klassenschnittstelle Auto-Verteilung ist, gibt diese Methode immer-1 zurück, um anzugeben, dass die Dispatch beschränkte Schnittstelle eine vtable an verwaltete Clients nicht zur Verfügung stellt.</span><span class="sxs-lookup"><span data-stu-id="711e1-977">If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="711e1-978">Sie können <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> und <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in Verbindung mit <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> Slots in einem angegebenen Bereich zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-978">You can use <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="711e1-979">Weitere Informationen finden Sie unter [Einführung in die Klassenschnittstelle](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="711e1-979">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-980">
            <paramref name="t" /> ist für COM nicht sichtbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-980">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-981">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-981">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-982">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-982">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetThreadFromFiberCookie">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread GetThreadFromFiberCookie (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Thread GetThreadFromFiberCookie(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThreadFromFiberCookie (cookie As Integer) As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Thread ^ GetThreadFromFiberCookie(int cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="711e1-983">Eine ganze Zahl, die ein Fibercookie darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-983">An integer that represents a fiber cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-984">Konvertiert ein Fibercookie in die entsprechende <see cref="T:System.Threading.Thread" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-984">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-985">Ein Thread, der dem <paramref name="cookie" />-Parameter entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-985">A thread that corresponds to the <paramref name="cookie" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-986">Fiber-Cookies werden nicht transparenten Token, die vom Host verwendet werden, wenn die common Language Runtime die Fiber-Planung Entscheidungen Warnungen.</span><span class="sxs-lookup"><span data-stu-id="711e1-986">Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</span></span> <span data-ttu-id="711e1-987">Sie bestehen aus einem Stapel und Kontext zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-987">They consist of a stack and register context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-988">Der <paramref name="cookie" />-Parameter ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-988">The <paramref name="cookie" /> parameter is 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-989">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-989">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-990">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-990">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName="GetTypedObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetTypedObjectForIUnknown (IntPtr pUnk, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetTypedObjectForIUnknown(native int pUnk, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypedObjectForIUnknown (pUnk As IntPtr, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetTypedObjectForIUnknown(IntPtr pUnk, Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="711e1-991">Ein Zeiger auf die <see langword="IUnknown" />-Schnittstelle des nicht verwalteten Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-991">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="711e1-992">Der Typ der angeforderten verwalteten Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-992">The type of the requested managed class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-993">Gibt ein verwaltetes Objekt eines angegebenen Typs zurück, das ein COM-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-993">Returns a managed object of a specified type that represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-994">Eine Instanz der Klasse , die dem <see cref="T:System.Type" />-Objekt entspricht, das das angeforderte nicht verwaltete COM-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-994">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-995">Die `t` Parameter muss ein COM-importierter Typ oder ein Untertyp von einem COM-importiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-995">The `t` parameter must be either a COM-imported type or a subtype of a COM-imported type.</span></span> <span data-ttu-id="711e1-996">Darüber hinaus `t` muss ein Typ, dessen Metadaten, durch importiert wurde, die [Tlbimp.exe (Type Library Importer-Tool)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) Tool.</span><span class="sxs-lookup"><span data-stu-id="711e1-996">In addition, `t` must be a type whose metadata was imported by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool.</span></span> <span data-ttu-id="711e1-997">Dieser Typ muss eine Klasse und keine zugeordnete Co Klassenschnittstelle, die den Namen der COM-Klasse ausführt.</span><span class="sxs-lookup"><span data-stu-id="711e1-997">This type must be a class and not an associated coclass interface, which carries the name of the COM class.</span></span> <span data-ttu-id="711e1-998">Wenn Tlbimp.exe importiert z. B. `Myclass` als eine Klasse mit dem Namen `MyclassClass` und als Co-Schnittstelle aufgerufen `Myclass`, verwenden Sie `MyclassClass` (nicht `Myclass`) mit dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-998">For example, if Tlbimp.exe imports `Myclass` as a class called `MyclassClass` and as a coclass interface called `Myclass`, you must use `MyclassClass` (not `Myclass`) with this method.</span></span> <span data-ttu-id="711e1-999">Weitere Informationen zu importierten Klassen und Klassenschnittstellen, CO-, finden Sie unter [Typkonvertierung importiert](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span><span class="sxs-lookup"><span data-stu-id="711e1-999">For additional information about imported classes and coclass interfaces, see [Imported Type Conversion](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span></span>  
  
 <span data-ttu-id="711e1-1000">Wenn ein Objekt für bereits abgerufen wurde die `pUnk` Parameter `t` wird ignoriert, und das vorhandene Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1000">If an object has already been obtained for the `pUnk` parameter, `t` is ignored and the existing object is returned.</span></span> <span data-ttu-id="711e1-1001">`pUnk` Stellt ein[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Schnittstellenzeiger auf, aber da alle COM-Schnittstellen direkt oder indirekt von abgeleitet `IUnknown`, können Sie COM-Schnittstelle an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1001">`pUnk` represents an[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="711e1-1002">Das zurückgegebene Objekt <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> ist ein [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), die als es die common Language Runtime verwaltet ist eines anderes verwalteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="711e1-1002">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), which the common language runtime manages as it does any other managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1003">
            <paramref name="t" /> ist nicht mit dem Attribut <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> versehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1003">
              <paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          </span>
          <span data-ttu-id="711e1-1004">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1004">-or-</span>
          </span>
          <span data-ttu-id="711e1-1005">
            <paramref name="t" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1005">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1006">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1006">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1007">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1007">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeForITypeInfo">
      <MemberSignature Language="C#" Value="public static Type GetTypeForITypeInfo (IntPtr piTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeForITypeInfo(native int piTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeForITypeInfo (piTypeInfo As IntPtr) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeForITypeInfo(IntPtr piTypeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piTypeInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="piTypeInfo">
          <span data-ttu-id="711e1-1008">Die <see langword="ITypeInfo" />-Schnittstelle, die gemarshallt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1008">The <see langword="ITypeInfo" /> interface to marshal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1009">Konvertiert ein nicht verwaltetes [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)-Objekt in ein verwaltetes <see cref="T:System.Type" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1009">Converts an unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1010">Ein verwalteter Typ, der das nicht verwaltete <see langword="ITypeInfo" />-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1010">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> Gibt eine <xref:System.Type?displayProperty=nameWithType> -Instanz, die auf den ursprünglichen Typ basiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> returns a <xref:System.Type?displayProperty=nameWithType> instance that is based on the original type.</span></span> <span data-ttu-id="711e1-1012">Sie können Anwenden der <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> standard Interop-Marshalling-Verhalten mit diesem benutzerdefinierten Marshaller ersetzen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1012">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span> <span data-ttu-id="711e1-1013">Die [Tlbimp.exe (Type Library Importer-Tool)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) Tool verwendet den benutzerdefinierten Marshaller übersetzen `ITypeInfo` Parameter <xref:System.Type?displayProperty=nameWithType> Parameter.</span><span class="sxs-lookup"><span data-stu-id="711e1-1013">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool uses the custom marshaler to translate `ITypeInfo` parameters to <xref:System.Type?displayProperty=nameWithType> parameters.</span></span> <span data-ttu-id="711e1-1014">Jedoch wenn Sie erhalten eine `ITypeInfo` Schnittstelle von einigen bedeutet außer Tlbimp.exe, können Sie <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> dieselbe Verschiebung manuell ausführen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1014">However, if you obtain an `ITypeInfo` interface by some means other than Tlbimp.exe, you can use <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> to manually perform the same translation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1015">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1015">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1016">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1016">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromCLSID">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromCLSID (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromCLSID(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromCLSID (clsid As Guid) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromCLSID(Guid clsid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="clsid">
          <span data-ttu-id="711e1-1017">Die CLSID des zurückzugebenden Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1017">The CLSID of the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1018">Gibt den Typ zurück, dem die angegebene Klassen-ID (CLSID) zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1018">Returns the type associated with the specified class identifier (CLSID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1019">
            <see langword="System.__ComObject" /> unabhängig von der Gültigkeit der CLSID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1019">
              <see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeInfoName">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1020">Ruft den Namen des Typs ab, der durch ein [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)-Objekt dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1020">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (typeInfo As ITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::ComTypes::ITypeInfo ^ typeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="711e1-1021">Ein Objekt, das einen <see langword="ITypeInfo" />-Zeiger darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1021">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1022">Ruft den Namen des Typs ab, der durch ein [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)-Objekt dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1022">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1023">Der Name des Typs, auf den der <paramref name="typeInfo" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1023">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1024">Sie können auch den Namen des Typs, dargestellt durch Abrufen einer `ITypeInfo` durch Aufrufen der <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> -Methode und-1 als ersten Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1024">You can also retrieve the name of the type represented by an `ITypeInfo` by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1025">Der <paramref name="typeInfo" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1025">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1026">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1026">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1027">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1027">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo pTI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.UCOMITypeInfo pTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (pTI As UCOMITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::UCOMITypeInfo ^ pTI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" />
      </Parameters>
      <Docs>
        <param name="pTI">
          <span data-ttu-id="711e1-1028">Ein Objekt, das einen <see langword="ITypeInfo" />-Zeiger darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1028">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1029">Ruft den Namen des Typs ab, der durch ein [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)-Objekt dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1029">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1030">Der Name des Typs, auf den der <paramref name="pTI" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1030">The name of the type that the <paramref name="pTI" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1031">Sie können auch den Namen des Typs, dargestellt durch Abrufen eine `ITypeInfo` Objekt durch Aufrufen der <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> -Methode und-1 als ersten Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1031">You can also retrieve the name of the type represented by an `ITypeInfo` object by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1032">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1032">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1033">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1033">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibGuid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1034">Ruft die Bibliothek-ID (LIBID) einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1034">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (typelib As ITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="711e1-1035">Die Typbibliothek, deren LIBID abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1035">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1036">Ruft die Bibliothek-ID (LIBID) einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1036">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1037">Die LIBID der angegebenen Typbibliothek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1037">The LIBID of the specified type library.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1038"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extrahiert die LIBID direkt über eine vorhandene Typbibliothek.</span><span class="sxs-lookup"><span data-stu-id="711e1-1038"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="711e1-1039">Dadurch unterscheidet sich von der <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> -Methode, die die LIBID berechnet anhand der aktuellen Assembly.</span><span class="sxs-lookup"><span data-stu-id="711e1-1039">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="711e1-1040">Weitere Informationen zu Library-IDs finden Sie unter [exportiert Assembly Konvertierung](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="711e1-1040">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1041">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1041">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1042">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1042">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (pTLB As UCOMITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="711e1-1043">Die Typbibliothek, deren LIBID abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1043">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1044">Ruft die Bibliothek-ID (LIBID) einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1044">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1045">Die LIBID der Typbibliothek, auf die der <paramref name="pTLB" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1045">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1046"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extrahiert die LIBID direkt über eine vorhandene Typbibliothek.</span><span class="sxs-lookup"><span data-stu-id="711e1-1046"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="711e1-1047">Dadurch unterscheidet sich von der <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> -Methode, die die LIBID berechnet anhand der aktuellen Assembly.</span><span class="sxs-lookup"><span data-stu-id="711e1-1047">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="711e1-1048">Weitere Informationen zu Library-IDs finden Sie unter [exportiert Assembly Konvertierung](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="711e1-1048">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1049">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1049">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1050">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1050">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuidForAssembly">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuidForAssembly (System.Reflection.Assembly asm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuidForAssembly(class System.Reflection.Assembly asm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuidForAssembly (asm As Assembly) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuidForAssembly(System::Reflection::Assembly ^ asm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asm" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="asm">
          <span data-ttu-id="711e1-1051">Der Assembly, aus der die Typbibliothek exportiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1051">The assembly from which the type library was exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1052">Ruft die Bibliothek-ID (LIBID) ab, die einer Typbibliothek beim Export aus der angegebenen Assembly zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1052">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1053">Die LIBID, die einer Typbibliothek beim Export aus der angegebenen Assembly zugewiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1053">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1054">Assemblys in Typbibliotheken exportiert werden, wird die Typbibliothek eine LIBID zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1054">When assemblies are exported to type libraries, the type library is assigned a LIBID.</span></span> <span data-ttu-id="711e1-1055">Sie können die LIBID explizit festlegen, durch Anwenden der <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> auf die Assembly auf, oder es kann automatisch generiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1055">You can set the LIBID explicitly by applying the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> at the assembly level, or it can be generated automatically.</span></span> <span data-ttu-id="711e1-1056">Die [Tlbimp.exe (Type Library Importer-Tool)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) Tool berechnet einen LIBID-Wert, der auf Basis der Identität der Assembly.</span><span class="sxs-lookup"><span data-stu-id="711e1-1056">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool calculates a LIBID value based on the identity of the assembly.</span></span> <span data-ttu-id="711e1-1057"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> Gibt die LIBID, die mit zugeordnetem der <xref:System.Runtime.InteropServices.GuidAttribute>, wenn das Attribut angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-1057"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> returns the LIBID that is associated with the <xref:System.Runtime.InteropServices.GuidAttribute>, if the attribute is applied.</span></span> <span data-ttu-id="711e1-1058">Andernfalls <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> gibt den berechneten Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="711e1-1058">Otherwise, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> returns the calculated value.</span></span> <span data-ttu-id="711e1-1059">Alternativ können Sie die <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> Methode, um die tatsächliche LIBID aus einer vorhandenen Typbibliothek zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="711e1-1059">Alternatively, you can use the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> method to extract the actual LIBID from an existing type library.</span></span>  
  
 <span data-ttu-id="711e1-1060">Finden Sie unter der [exportiert Assembly Konvertierung](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) Thema enthält weitere Informationen zu Library-IDs.</span><span class="sxs-lookup"><span data-stu-id="711e1-1060">See the [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) topic for more information about library identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1061">
            <paramref name="asm" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1061">
              <paramref name="asm" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1062">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1062">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1063">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1063">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GuidAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibLcid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1064">Ruft die LCID einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1064">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (typelib As ITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="711e1-1065">Die Typbibliothek, deren LCID abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1065">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1066">Ruft die LCID einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1066">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1067">Die LCID der Typbibliothek, auf die der <paramref name="typelib" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1067">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1068">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1068">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1069">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1069">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (pTLB As UCOMITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="711e1-1070">Die Typbibliothek, deren LCID abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1070">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1071">Ruft die LCID einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1071">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1072">Die LCID der Typbibliothek, auf die der <paramref name="pTLB" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1072">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1073">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1073">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1074">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1074">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1075">Ruft den Namen einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1075">Retrieves the name of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (typelib As ITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="711e1-1076">Die Typbibliothek, deren Name abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1076">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1077">Ruft den Namen einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1077">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1078">Der Name der Typbibliothek, auf die der <paramref name="typelib" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1078">The name of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1079">Der von dieser Methode zurückgegebene Name ist der Bezeichner, der mit der Bibliothek-Anweisung, wie z. B. ADODB für die Microsoft ADO-Typbibliothek verwendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-1079">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="711e1-1080">Der Name ist kein Dateiname.</span><span class="sxs-lookup"><span data-stu-id="711e1-1080">The name is not a file name.</span></span>  
  
 <span data-ttu-id="711e1-1081">Sie können auch den Namen der Typbibliothek abrufen, durch Aufrufen der <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> -Methode und-1 als ersten Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1081">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1082">Der <paramref name="typelib" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1082">The <paramref name="typelib" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1083">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1083">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1084">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1084">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (pTLB As UCOMITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="711e1-1085">Die Typbibliothek, deren Name abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1085">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1086">Ruft den Namen einer Typbibliothek ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1086">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1087">Der Name der Typbibliothek, auf die der <paramref name="pTLB" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1087">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1088">Der von dieser Methode zurückgegebene Name ist der Bezeichner, der mit der Bibliothek-Anweisung, wie z. B. ADODB für die Microsoft ADO-Typbibliothek verwendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-1088">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="711e1-1089">Der Name ist kein Dateiname.</span><span class="sxs-lookup"><span data-stu-id="711e1-1089">The name is not a file name.</span></span>  
  
 <span data-ttu-id="711e1-1090">Sie können auch den Namen der Typbibliothek abrufen, durch Aufrufen der <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> -Methode und-1 als ersten Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1090">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1091">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1091">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1092">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1092">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibVersionForAssembly">
      <MemberSignature Language="C#" Value="public static void GetTypeLibVersionForAssembly (System.Reflection.Assembly inputAssembly, out int majorVersion, out int minorVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTypeLibVersionForAssembly(class System.Reflection.Assembly inputAssembly, [out] int32&amp; majorVersion, [out] int32&amp; minorVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetTypeLibVersionForAssembly (inputAssembly As Assembly, ByRef majorVersion As Integer, ByRef minorVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetTypeLibVersionForAssembly(System::Reflection::Assembly ^ inputAssembly, [Runtime::InteropServices::Out] int % majorVersion, [Runtime::InteropServices::Out] int % minorVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="majorVersion" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="minorVersion" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputAssembly">
          <span data-ttu-id="711e1-1093">Eine verwaltete Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1093">A managed assembly.</span>
          </span>
        </param>
        <param name="majorVersion">
          <span data-ttu-id="711e1-1094">Die Hauptversionsnummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1094">The major version number.</span>
          </span>
        </param>
        <param name="minorVersion">
          <span data-ttu-id="711e1-1095">Die Nebenversionsnummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1095">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1096">Ruft die Versionsnummer einer Typbibliothek ab, die aus der angegebenen Assembly exportiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1096">Retrieves the version number of a type library that will be exported from the specified assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1097">Vor dem Exportieren einer Assembly mit <xref:System.Runtime.InteropServices.TypeLibExporterFlags> mit der `CallerResolvedReferences` Wert können Sie diese Methode verwenden, um die Version der Typbibliothek aus der Assembly abzurufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1097">Before exporting an assembly by using <xref:System.Runtime.InteropServices.TypeLibExporterFlags> with the `CallerResolvedReferences` value, you can use this method to retrieve the type library version from the assembly.</span></span>  
  
 <span data-ttu-id="711e1-1098">Wenn Sie nicht anwenden der <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> -Attribut auf eine exportierte Assembly explizit steuern die Versionsnummer der generierten Typbibliothek, die Typbibliothek müssen die gleiche Versionsnummer wie die Assembly.</span><span class="sxs-lookup"><span data-stu-id="711e1-1098">If you do not apply the <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1099">
            <paramref name="inputAssembly" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1099">
              <paramref name="inputAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1100">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1100">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1101">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1101">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
        <altmember cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" />
        <altmember cref="T:System.Runtime.InteropServices.ITypeLibConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetUniqueObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetUniqueObjectForIUnknown (IntPtr unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUniqueObjectForIUnknown(native int unknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueObjectForIUnknown (unknown As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUniqueObjectForIUnknown(IntPtr unknown);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknown" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="unknown">
          <span data-ttu-id="711e1-1102">Ein verwalteter Zeiger auf eine <see langword="IUnknown" />-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1102">A managed pointer to an <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1103">Erstellt ein eindeutiges [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md)-Objekt (RCW) für eine angegebene [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1103">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1104">Ein eindeutiger RCW für die angegebene <see langword="IUnknown" />-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1104">A unique RCW for the specified <see langword="IUnknown" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1105">Die <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> Methode wird sichergestellt, dass Sie einen eindeutigen RCW erhalten, weil er nicht mit einem `IUnknown` Zeiger auf ein vorhandenes Objekt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1105">The <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> method ensures that you receive a unique RCW, because it does not match an `IUnknown` pointer to an existing object.</span></span> <span data-ttu-id="711e1-1106">Verwenden Sie diese Methode, wenn Sie einen eindeutigen RCW erstellen, die nicht von anderem Code beeinträchtigt wird, die Aufrufe der <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1106">Use this method when you have to create a unique RCW that is not impacted by other code that calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1107">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1107">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1108">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1108">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedThunkForManagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetUnmanagedThunkForManagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetUnmanagedThunkForManagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="711e1-1109">Ein Zeiger auf die Methode, die gemarshallt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1109">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="711e1-1110">Ein Zeiger auf die Methodensignatur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1110">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="711e1-1111">Die Anzahl der Bytes in <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1111">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1112">Ruft einen Zeiger auf eine zur Laufzeit generierte Funktion ab, die einen Aufruf aus nicht verwaltetem zu verwaltetem Code marshallt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1112">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1113">Ein Zeiger auf eine Funktion, die einen Aufruf aus <paramref name="pfnMethodToWrap" /> zu verwaltetem Code marshallt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1113">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1114"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> für die Unterstützung des Compilers nur wird verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1114"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1115">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1115">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1116">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1116">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsComObject">
      <MemberSignature Language="C#" Value="public static bool IsComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsComObject (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsComObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-1117">Das zu überprüfende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1117">The object to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1118">Gibt an, ob ein angegebenes Objekt ein COM-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1118">Indicates whether a specified object represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1119">
            <see langword="true" />, wenn der <paramref name="o" />-Parameter ein COM-Typ ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1119">
              <see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1120"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> Gibt `true` , wenn der Klassentyp der Instanz zugewiesen ist <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> oder wenn sie direkt oder indirekt von einer Klasse mit dem abgeleitet wird <xref:System.Runtime.InteropServices.ComImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1120"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> returns `true` if the class type of the instance is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> or if it derives directly or indirectly from a class attributed with <xref:System.Runtime.InteropServices.ComImportAttribute>.</span></span> <span data-ttu-id="711e1-1121">Die [Tlbimp.exe (Type Library Importer-Tool)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) Tool wendet dieses Attribut, wenn es sich um eine Typbibliothek importiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1121">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="711e1-1122">Zwei weitere Methoden auch bestimmen, ob ein angegebenes Objekt ein COM-Objekt, aber die Anforderungen für die Rückgabe darstellt `true` unterscheiden sich von dieser Methode Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1122">Two other methods also determine whether a specified object represents a COM object, but the requirements for returning `true` differ from this method's requirements.</span></span> <span data-ttu-id="711e1-1123"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> Gibt `true` , wenn die Klassenmethoden (oder Schnittstellenmethoden) mit attributiert ist <xref:System.Runtime.InteropServices.ComImportAttribute> direkt; sie gibt keine zurück `true` für abgeleitete Typen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1123"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> returns `true` if the class (or interface) is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> directly; it does not return `true` for derived types.</span></span> <span data-ttu-id="711e1-1124"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> Gibt `true` , wenn der Typ mit attributiert ist <xref:System.Runtime.InteropServices.ComImportAttribute> oder von einem Typ mit derselben GUID abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="711e1-1124"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> returns `true` if the type is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> or derives from a type with the same GUID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1125">
            <paramref name="o" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1125">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="P:System.Type.IsImport" />
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsTypeVisibleFromCom">
      <MemberSignature Language="C#" Value="public static bool IsTypeVisibleFromCom (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeVisibleFromCom(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeVisibleFromCom (t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeVisibleFromCom(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="711e1-1126">Der Typ, der auf Sichtbarkeit für COM zu überprüfen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1126">The type to check for COM visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1127">Gibt an, ob ein Typ für COM-Clients sichtbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1127">Indicates whether a type is visible to COM clients.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1128">
            <see langword="true" />, wenn der Typ für COM sichtbar ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1128">
              <see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1129"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> ermöglicht es Ihnen, die COM-Sichtbarkeit in einem Schritt überprüfen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1129"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> enables you to check for COM visibility in one step.</span></span> <span data-ttu-id="711e1-1130">Typen, die nicht sichtbar sind, können nicht aus COM verwendet werden</span><span class="sxs-lookup"><span data-stu-id="711e1-1130">Types that are not visible cannot be used from COM.</span></span> <span data-ttu-id="711e1-1131">Ein Typ ist sichtbar, wenn er ist `public` und nicht mit der <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1131">A type is visible if it is `public` and not hidden with the <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NumParamBytes">
      <MemberSignature Language="C#" Value="public static int NumParamBytes (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumParamBytes(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumParamBytes (m As MethodInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int NumParamBytes(System::Reflection::MethodInfo ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="711e1-1132">Die Methode, die überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1132">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1133">Berechnet die Anzahl der Bytes im nicht verwalteten Speicher, die zum Speichern der Parameter für die angegebene Methode erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1133">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1134">Die Anzahl der Bytes, die erforderlich ist, um die Methodenparameter im nicht verwalteten Speicher darzustellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1134">The number of bytes required to represent the method parameters in unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1135">Die <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> Methode gibt die Stapelgröße (in Bytes) benötigt, um die Parameter der Signatur einer Methode im nicht verwalteten Speicher darzustellen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1135">The <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</span></span>  
  
 <span data-ttu-id="711e1-1136">Beachten Sie, dass der Rückgabewert dieser Methode plattformabhängige ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-1136">Note that the return value of this method is platform-dependent.</span></span> <span data-ttu-id="711e1-1137">Beispielsweise gibt eine Signatur mit einem einzelnen ganzzahligen Parameter einen Wert von 4 auf 32-Bit-Plattformen und einen Wert von 8 auf 64-Bit-Plattformen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1137">For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1138">Der <paramref name="m" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1138">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1139">Der <paramref name="m" />-Parameter ist kein <see cref="T:System.Reflection.MethodInfo" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1139">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1140">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1140">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1141">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1141">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetOf">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf (Type t, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf(class System.Type t, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf (t As Type, fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr OffsetOf(Type ^ t, System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="711e1-1142">Ein Werttyp oder formatierter Referenztyp, der die verwaltete Klasse angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1142">A value type or formatted reference type that specifies the managed class.</span>
          </span>
          <span data-ttu-id="711e1-1143">Sie müssen das <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> auf die Klasse anwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1143">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="711e1-1144">Das Feld im <c>t</c>-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1144">The field within the <c>t</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1145">Gibt den Feldoffset der nicht verwalteten Form der verwalteten Klasse zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1145">Returns the field offset of the unmanaged form of the managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1146">Der Offset in Bytes für den <paramref name="fieldName" />-Parameter in der durch Plattformaufrufe deklarierten angegebenen Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1146">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1147"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> Stellt den Offset in Bezug auf das Layout nicht verwaltete Struktur, die nicht zwangsläufig den Offset des Layouts verwaltete Struktur entspricht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1147"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="711e1-1148">Marshalling der Struktur kann das Layout zu transformieren, und ändern Sie den Offset.</span><span class="sxs-lookup"><span data-stu-id="711e1-1148">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="711e1-1149">Die `t` -Parameter kann ein Werttyp oder ein formatierter Verweistyp (mit sequenziellen oder explizitem Layout) sein.</span><span class="sxs-lookup"><span data-stu-id="711e1-1149">The `t` parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="711e1-1150">Sie können die Größe des gesamten Layouts abrufen, indem Sie mit der <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1150">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="711e1-1151">Weitere Informationen finden Sie unter [Standard Marshalling für Werttypen](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="711e1-1151">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="711e1-1152">Ab .NET Framework, Version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> private Felder kann ausgesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-1152">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1153">Die Klasse kann nicht als Struktur exportiert werden, oder das Feld ist nicht öffentlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1153">The class cannot be exported as a structure or the field is nonpublic.</span>
          </span>
          <span data-ttu-id="711e1-1154">Ab .NET Framework, Version 2.0, ist das Feld möglicherweise privat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1154">Beginning with the .NET Framework version 2.0, the field may be private.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1155">Der <paramref name="t" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1155">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf&lt;T&gt; (string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf&lt;T&gt;(string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf(Of T) (fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr OffsetOf(System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-1156">Ein verwalteter Wert- oder formatierter Verweistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1156">A managed value type or formatted reference type.</span>
          </span>
          <span data-ttu-id="711e1-1157">Sie müssen das <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />-Attribut auf die Klasse anwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1157">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> attribute to the class.</span>
          </span>
        </typeparam>
        <param name="fieldName">
          <span data-ttu-id="711e1-1158">Der Name des Felds im <c>T</c>-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1158">The name of the field in the <c>T</c> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1159">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1159">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-1160">Gibt den Feldoffset der nicht verwalteten Form einer festgelegten verwalteten Klasse zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1160">Returns the field offset of the unmanaged form of a specified managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1161">Der Offset in Bytes für den <paramref name="fieldName" />-Parameter in der durch Plattformaufrufe deklarierten angegebenen Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1161">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1162"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> Stellt den Offset in Bezug auf das Layout nicht verwaltete Struktur, die nicht zwangsläufig den Offset des Layouts verwaltete Struktur entspricht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1162"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="711e1-1163">Marshalling der Struktur kann das Layout zu transformieren, und ändern Sie den Offset.</span><span class="sxs-lookup"><span data-stu-id="711e1-1163">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="711e1-1164">Die `T` generischer Typparameter kann ein Werttyp oder ein formatierter Verweistyp (mit sequenziellen oder explizitem Layout).</span><span class="sxs-lookup"><span data-stu-id="711e1-1164">The `T` generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="711e1-1165">Sie können die Größe des gesamten Layouts abrufen, indem Sie mit der <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1165">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method.</span></span> <span data-ttu-id="711e1-1166">Weitere Informationen finden Sie unter [Standard Marshalling für Werttypen](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="711e1-1166">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="711e1-1167">Ab .NET Framework, Version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> private Felder kann ausgesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-1167">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      </Docs>
    </Member>
    <Member MemberName="Prelink">
      <MemberSignature Language="C#" Value="public static void Prelink (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Prelink(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Prelink (m As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Prelink(System::Reflection::MethodInfo ^ m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="711e1-1168">Die Methode, die überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1168">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1169">Führt einmalige Aufgaben zur Methodeneinrichtung aus, ohne die Methode aufzurufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1169">Executes one-time method setup tasks without calling the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1170">Aufgaben zur methodeneinrichtung Frühe Initialisierung bereitstellen und automatisch ausgeführt werden, wenn die Zielmethode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-1170">Setup tasks provide early initialization and are performed automatically when the target method is invoked.</span></span> <span data-ttu-id="711e1-1171">Einmalig auszuführende Aufgaben umfassen Folgendes:</span><span class="sxs-lookup"><span data-stu-id="711e1-1171">First-time tasks include the following:</span></span>  
  
-   <span data-ttu-id="711e1-1172">Überprüfen, dass die Metadaten der Plattformaufruf ist richtig formatiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1172">Verifying that the platform invoke metadata is correctly formatted.</span></span>  
  
-   <span data-ttu-id="711e1-1173">Überprüfen, dass alle verwalteten Typen gültige Parameter der Plattform sind Funktionen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1173">Verifying that all the managed types are valid parameters of platform invoke functions.</span></span>  
  
-   <span data-ttu-id="711e1-1174">Suchen, und Laden von nicht verwalteten DLL in den Prozess.</span><span class="sxs-lookup"><span data-stu-id="711e1-1174">Locating and loading the unmanaged DLL into the process.</span></span>  
  
-   <span data-ttu-id="711e1-1175">Suchen den Einstiegspunkt im Prozess an.</span><span class="sxs-lookup"><span data-stu-id="711e1-1175">Locating the entry point in the process.</span></span>  
  
 <span data-ttu-id="711e1-1176">Aufrufen von <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> Aufrufen einer Methode außerhalb von Plattform hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1176">Calling <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> on a method outside of platform invoke has no effect.</span></span> <span data-ttu-id="711e1-1177">Aufrufen von Methoden in einen Typ verwenden zum Ausführen von Setup-Tasks auf allen Plattformen <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1177">To execute setup tasks on all platform invoke methods in a type, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1178">Der <paramref name="m" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1178">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1179">Der <paramref name="m" />-Parameter ist kein <see cref="T:System.Reflection.MethodInfo" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1179">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1180">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1181">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="PrelinkAll">
      <MemberSignature Language="C#" Value="public static void PrelinkAll (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrelinkAll(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrelinkAll (c As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrelinkAll(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="711e1-1182">Die Klasse, deren Methoden überprüft werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1182">The class whose methods are to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1183">Führt eine Linkervorstufen-Prüfung für alle Methoden einer Klasse durch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1183">Performs a pre-link check for all methods on a class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1184">Die <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> Methode ruft <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> für jede Methode eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="711e1-1184">The <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> method invokes <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> on every method for a given type.</span></span> <span data-ttu-id="711e1-1185"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> führt einmalige Aufgaben zur methodeneinrichtung ohne jede Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1185"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> executes one-time method setup tasks without calling each method.</span></span> <span data-ttu-id="711e1-1186">Sie können <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> nur für Plattformaufrufe.</span><span class="sxs-lookup"><span data-stu-id="711e1-1186">You can use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> only for platform invoke calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1187">Der <paramref name="c" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1187">The <paramref name="c" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1188">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1188">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1189">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1189">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAnsi">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1190">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert eine nicht verwaltete ANSI-Zeichenfolge ganz oder teilweise hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1190">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1191">Die Adresse des ersten Zeichens der nicht verwalteten Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1191">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1192">Kopiert alle Zeichen bis zum ersten NULL-Zeichen aus einer nicht verwalteten ANSI-Zeichenfolge in einen verwalteten <see cref="T:System.String" /> und erweitert die einzelnen ANSI-Zeichen zu UNICODE-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1192">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1193">Eine verwaltete Zeichenfolge, die eine Kopie der nicht verwalteten ANSI-Zeichenfolge enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1193">A managed string that holds a copy of the unmanaged ANSI string.</span>
          </span>
          <span data-ttu-id="711e1-1194">Wenn <paramref name="ptr" /> den Wert <see langword="null" /> aufweist, gibt die Methode eine NULL-Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1194">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1195"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1195"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1196">Da diese Methode eine Kopie des Inhalts der nicht verwalteten Zeichenfolge erstellt wird, müssen Sie die ursprüngliche Zeichenfolge nach Bedarf freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1196">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="711e1-1197">Diese Methode stellt die Umkehrfunktion von der <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1197">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1198">Im folgenden Beispiel wird die <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> Methode so erstellen Sie eine verwaltete Zeichenfolge aus einem nicht verwalteten `char` Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-1198">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged `char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1199">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1199">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1200">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1200">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1201">Die Adresse des ersten Zeichens der nicht verwalteten Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1201">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="711e1-1202">Die zu kopierende Anzahl von Bytes aus der Eingabezeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1202">The byte count of the input string to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1203">Reserviert einen verwalteten <see cref="T:System.String" />, kopiert eine angegebene Anzahl von Zeichen aus einer nicht verwalteten ANSI-Zeichenfolge hinein und erweitert jedes ANSI-Zeichen zu einem Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1203">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1204">Eine verwaltete Zeichenfolge, die eine Kopie der systemeigenen ANSI-Zeichenfolge enthält, wenn der Wert des <paramref name="ptr" />-Parameters nicht <see langword="null" /> ist. Andernfalls gibt diese Methode <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1204">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1206">Da diese Methode eine Kopie des Inhalts der nicht verwalteten Zeichenfolge erstellt wird, müssen Sie die ursprüngliche Zeichenfolge nach Bedarf freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1206">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="711e1-1207">Diese Methode stellt die Umkehrfunktion von der <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1207">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1208">Im folgenden Beispiel wird die <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> Methode so erstellen Sie eine verwaltete Zeichenfolge aus einem nicht verwalteten`char` Array.</span><span class="sxs-lookup"><span data-stu-id="711e1-1208">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged`char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1209">
            <paramref name="len" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1209">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1210">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1210">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1211">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1211">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAuto">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1212">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert eine nicht verwaltete Zeichenfolge ganz oder teilweise hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1212">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1213">Für Unicode-Plattformen die Adresse des ersten Unicode-Zeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1213">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="711e1-1214">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1214">-or-</span>
          </span>
          <span data-ttu-id="711e1-1215">Für ANSI-Plattformen die Adresse des ersten ANSI-Zeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1215">For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1216">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert alle Zeichen bis zum ersten NULL-Zeichen aus einer Zeichenfolge hinein, die im nicht verwalteten Speicher gespeichert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1216">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1217">Eine verwaltete Zeichenfolge, die eine Kopie der nicht verwalteten Zeichenfolge enthält, wenn der Wert des <paramref name="ptr" />-Parameters nicht <see langword="null" /> ist. Andernfalls gibt diese Methode <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1217">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1218">Wenn die aktuelle Plattform Unicode ist, jedes ANSI-Zeichen in eine Unicode-Zeichen erweitert wird, und diese Methode ruft <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1218">If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span></span> <span data-ttu-id="711e1-1219">Andernfalls ruft diese Methode <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1219">Otherwise, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span>  
  
 <span data-ttu-id="711e1-1220"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1220"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1221">Da diese Methode eine Kopie des Inhalts der nicht verwalteten Zeichenfolge erstellt wird, müssen Sie die ursprüngliche Zeichenfolge nach Bedarf freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1221">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="711e1-1222"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> Stellt die Umkehrfunktion von der <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1222"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1223">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1223">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1224">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1224">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1225">Für Unicode-Plattformen die Adresse des ersten Unicode-Zeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1225">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="711e1-1226">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1226">-or-</span>
          </span>
          <span data-ttu-id="711e1-1227">Für ANSI-Plattformen die Adresse des ersten ANSI-Zeichens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1227">For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="711e1-1228">Die Anzahl der zu kopierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1228">The number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1229">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert die angegebene Anzahl von Zeichen aus einer in nicht verwaltetem Speicher gespeicherten Zeichenfolge hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1229">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1230">Eine verwaltete Zeichenfolge, die eine Kopie der systemeigenen Zeichenfolge enthält, wenn der Wert des <paramref name="ptr" />-Parameters nicht <see langword="null" /> ist. Andernfalls gibt diese Methode <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1230">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1231">Auf Unicode-Plattformen, die diese Methode ruft <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; auf ANSI-Plattformen, ruft er <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1231">On Unicode platforms, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; on ANSI platforms, it calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span> <span data-ttu-id="711e1-1232">Bevor Sie diese Methoden aufgerufen werden, werden keine Transformationen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1232">No transformations are done before these methods are called.</span></span>  
  
 <span data-ttu-id="711e1-1233"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1233"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1234">Da diese Methode eine Kopie des Inhalts der nicht verwalteten Zeichenfolge erstellt wird, müssen Sie die ursprüngliche Zeichenfolge nach Bedarf freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1234">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="711e1-1235"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> Stellt die Umkehrfunktion von <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1235"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1236">
            <paramref name="len" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1236">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1237">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1237">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1238">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1238">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringBSTR">
      <MemberSignature Language="C#" Value="public static string PtrToStringBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringBSTR (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringBSTR(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1239">Die Adresse des ersten Zeichens der nicht verwalteten Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1239">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1240">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert eine [binäre Zeichenfolge (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) aus dem nicht verwalteten Speicher hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1240">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1241">Eine verwaltete Zeichenfolge, die eine Kopie der nicht verwalteten Zeichenfolge enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1241">A managed string that holds a copy of the unmanaged string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1242">Rufen Sie diese Methode nur für Zeichenfolgen, die zugewiesen wurden mit der nicht verwalteten [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) und [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) Funktionen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1242">Call this method only on strings that were allocated with the unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) and [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) functions.</span></span>  
  
 <span data-ttu-id="711e1-1243"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1243"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1244">Da diese Methode eine Kopie des Inhalts der nicht verwalteten Zeichenfolge erstellt wird, müssen Sie die ursprüngliche Zeichenfolge nach Bedarf freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1244">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="711e1-1245">Diese Methode stellt die Umkehrfunktion von der <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1245">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1246">
            <paramref name="ptr" /> ist gleich <see cref="F:System.IntPtr.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1246">
              <paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1247">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1247">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1248">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1248">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringUni">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1249">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert eine nicht verwaltete Unicode-Zeichenfolge ganz oder teilweise hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1249">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1250">Die Adresse des ersten Zeichens der nicht verwalteten Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1250">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1251">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert alle Zeichen bis zum ersten NULL-Zeichen aus einer nicht verwalteten Unicode-Zeichenfolge hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1251">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1252">Eine verwaltete Zeichenfolge, die eine Kopie der nicht verwalteten Zeichenfolge enthält, wenn der Wert des <paramref name="ptr" />-Parameters nicht <see langword="null" /> ist. Andernfalls gibt diese Methode <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1252">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> eignet sich für das Marshalling von benutzerdefinierten oder für die Verwendung beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1254">Da diese Methode eine Kopie des Inhalts der nicht verwalteten Zeichenfolge erstellt wird, müssen Sie die ursprüngliche Zeichenfolge nach Bedarf freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1254">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="711e1-1255">Diese Methode stellt die Umkehrfunktion von der <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1255">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1256">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1256">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1257">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1257">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1258">Die Adresse des ersten Zeichens der nicht verwalteten Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1258">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="711e1-1259">Die Anzahl der zu kopierenden Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1259">The number of Unicode characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1260">Reserviert einen verwalteten <see cref="T:System.String" /> und kopiert eine angegebene Anzahl von Zeichen aus einer nicht verwalteten Unicode-Zeichenfolge hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1260">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1261">Eine verwaltete Zeichenfolge, die eine Kopie der nicht verwalteten Zeichenfolge enthält, wenn der Wert des <paramref name="ptr" />-Parameters nicht <see langword="null" /> ist. Andernfalls gibt diese Methode <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1261">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1262"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1262"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1263">Da diese Methode eine Kopie des Inhalts der nicht verwalteten Zeichenfolge erstellt wird, müssen Sie die ursprüngliche Zeichenfolge nach Bedarf freigeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1263">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="711e1-1264">Diese Methode stellt die Umkehrfunktion von der <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> und <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1264">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1265">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1265">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1266">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1266">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr, int byteLen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr, int32 byteLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr, byteLen As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr, int byteLen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="byteLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="byteLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStructure">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1267">Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem verwalteten Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1267">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static void PtrToStructure (IntPtr ptr, object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure(native int ptr, object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure (ptr As IntPtr, structure As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PtrToStructure(IntPtr ptr, System::Object ^ structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1268">Ein Zeiger auf einen nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1268">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="711e1-1269">Das Objekt, in das die Daten kopiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1269">The object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="711e1-1270">Dabei muss es sich um eine Instanz einer formatierten Klasse handeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1270">This must be an instance of a formatted class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1271">Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem verwalteten Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1271">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1272"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> wird häufig in COM-Interop und Plattformaufrufe aufgerufen wird, wenn die Struktur als dargestellt sind ein <xref:System.IntPtr?displayProperty=nameWithType> Wert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1272"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="711e1-1273">Sie können keine diese überladene Methode mit Werttypen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1273">You cannot use this overload method with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1274">Das Strukturlayout ist weder sequenziell noch explizit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1274">Structure layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="711e1-1275">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1275">-or-</span>
          </span>
          <span data-ttu-id="711e1-1276">Die Struktur ist ein geschachtelter Werttyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1276">Structure is a boxed value type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1277">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1277">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1278">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1278">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static object PtrToStructure (IntPtr ptr, Type structureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PtrToStructure(native int ptr, class System.Type structureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure (ptr As IntPtr, structureType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PtrToStructure(IntPtr ptr, Type ^ structureType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1279">Ein Zeiger auf einen nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1279">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structureType">
          <span data-ttu-id="711e1-1280">Der Typ des zu erstellenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1280">The type of object to be created.</span>
          </span>
          <span data-ttu-id="711e1-1281">Dieses Objekt muss eine formatierte Klasse oder eine Struktur darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1281">This object must represent a formatted class or a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1282">Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem neu belegten, verwalteten Objekt des angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1282">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1283">Ein verwaltetes Objekt mit Daten, auf die der <paramref name="ptr" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1283">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1284"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> wird häufig in COM-Interop und Plattformaufrufe aufgerufen wird, wenn die Struktur als dargestellt sind ein <xref:System.IntPtr?displayProperty=nameWithType> Wert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1284"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="711e1-1285">Sie können einen Werttyp an diese überladene Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1285">You can pass a value type to this overload method.</span></span> <span data-ttu-id="711e1-1286">In diesem Fall ist das zurückgegebene Objekt eine geschachtelte Instanz.</span><span class="sxs-lookup"><span data-stu-id="711e1-1286">In this case, the returned object is a boxed instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1287">Im folgende Beispiel wird eine verwaltete Struktur erstellt, werden in nicht verwalteten Speicher übertragen und dann wieder mit verwalteten Speicher werden übertragen die <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1287">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 <span data-ttu-id="711e1-1288">Im folgenden Beispiel wird veranschaulicht, wie für einen nicht verwalteten Speicherblock zu einem verwalteten Struktur mit Marshallen der <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1288">The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="711e1-1289">Dieser Code wird davon ausgegangen, 32-Bit-Kompilierung.</span><span class="sxs-lookup"><span data-stu-id="711e1-1289">This code assumes 32-bit compilation.</span></span> <span data-ttu-id="711e1-1290">Ersetzen Sie vor dem Verwenden eines 64-Bit-Compilers, <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> mit <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1290">Before using a 64-bit compiler, replace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> with <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[PtrToStructure#1](~/samples/snippets/cpp/VS_Snippets_CLR/PtrToStructure/CPP/pts.cpp#1)]
 [!code-csharp[PtrToStructure#1](~/samples/snippets/csharp/VS_Snippets_CLR/PtrToStructure/CS/pts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1291">Das <paramref name="structureType" />-Parameterlayout ist weder sequenziell noch explizit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1291">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="711e1-1292">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1292">-or-</span>
          </span>
          <span data-ttu-id="711e1-1293">Der <paramref name="structureType" />-Parameter ist eine generische Typdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1293">The <paramref name="structureType" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1294">
            <paramref name="structureType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1294">
              <paramref name="structureType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="711e1-1295">Die - Klasse, die von <paramref name="structureType" /> angegeben wird, hat keinen verwendbaren Standardkonstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1295">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1296">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1296">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1297">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1297">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T PtrToStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T PtrToStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure(Of T) (ptr As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T PtrToStructure(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-1298">Der Typ des Objekts, in das die Daten kopiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1298">The type of the object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="711e1-1299">Dies muss eine formatierte Klasse oder eine Struktur sein .</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1299">This must be a formatted class or a structure.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="711e1-1300">Ein Zeiger auf einen nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1300">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1301">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1301">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-1302">Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem neu belegten, verwalteten Objekt des von einem generischen Typparameter angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1302">Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1303">Ein verwaltetes Objekt mit Daten, auf die der <paramref name="ptr" />-Parameter zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1303">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1304"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> wird häufig in COM-Interop und Plattformaufrufe aufgerufen wird, wenn als Strukturparameter dargestellt werden <xref:System.IntPtr?displayProperty=nameWithType> Werte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1304"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="711e1-1305">Sie können einen Werttyp an Überladung dieser Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1305">You can pass a value type to this method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1306">Das Layout von <typeparamref name="T" />ist weder sequenziell noch explizit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1306">The layout of <typeparamref name="T" /> is not sequential or explicit.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="711e1-1307">Die - Klasse, die von <typeparamref name="T" /> angegeben wird, hat keinen verwendbaren Standardkonstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1307">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1308">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1308">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1309">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1309">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void PtrToStructure&lt;T&gt; (IntPtr ptr, T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure&lt;T&gt;(native int ptr, !!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure(Of T) (ptr As IntPtr, structure As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void PtrToStructure(IntPtr ptr, T structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-1310">Der Typ des <c>Struktur</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1310">The type of <c>structure</c>.</span>
          </span>
          <span data-ttu-id="711e1-1311">Muss eine formatierte Klasse sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1311">This must be a formatted class.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="711e1-1312">Ein Zeiger auf einen nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1312">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="711e1-1313">Das Objekt, in das die Daten kopiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1313">The object to which the data is to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1314">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1314">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-1315">Marshallt Daten aus einem nicht verwalteten Speicherblock zu einem verwalteten Objekt eines festgelegten Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1315">Marshals data from an unmanaged block of memory to a managed object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1316"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> wird häufig in COM-Interop und Plattformaufrufe aufgerufen wird, wenn als Strukturparameter dargestellt werden <xref:System.IntPtr> Werte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1316"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr> values.</span></span> <span data-ttu-id="711e1-1317">Sie können keine Überladung dieser Methode mit Werttypen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1317">You cannot use this method overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1318">Das Strukturlayout ist weder sequenziell noch explizit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1318">Structure layout is not sequential or explicit.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1319">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1319">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1320">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1320">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="QueryInterface">
      <MemberSignature Language="C#" Value="public static int QueryInterface (IntPtr pUnk, ref Guid iid, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 QueryInterface(native int pUnk, valuetype System.Guid&amp; iid, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInterface (pUnk As IntPtr, ByRef iid As Guid, ByRef ppv As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QueryInterface(IntPtr pUnk, Guid % iid, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="iid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppv" Type="System.IntPtr&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="711e1-1321">Die abzufragende Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1321">The interface to be queried.</span>
          </span>
        </param>
        <param name="iid">
          <span data-ttu-id="711e1-1322">Der Schnittstellenbezeichner (Interface Identifier, IID) der angeforderten Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1322">The interface identifier (IID) of the requested interface.</span>
          </span>
        </param>
        <param name="ppv">
          <span data-ttu-id="711e1-1323">Enthält nach dem Beenden der Methode einen Verweis auf die zurückgegebene Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1323">When this method returns, contains a reference to the returned interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1324">Fordert einen Zeiger auf eine angegebene Schnittstelle von einem COM-Objekt an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1324">Requests a pointer to a specified interface from a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1325">Ein HRESULT, das den Erfolg oder Fehler des Aufrufs angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1325">An HRESULT that indicates the success or failure of the call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1326">Die <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> Methode macht die [IUnknown:: QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) Methode von einem COM-Objekt, das versucht, einen bestimmten Schnittstellenzeiger abzurufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1326">The <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> method exposes the [IUnknown::QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) method of a COM object, which attempts to obtain a specific interface pointer.</span></span> <span data-ttu-id="711e1-1327">Mithilfe von `QueryInterface` für ein COM-Objekt ist identisch mit der Ausführung eines Umwandlungsvorgangs in verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1327">Using `QueryInterface` on a COM object is the same as performing a cast operation in managed code.</span></span> <span data-ttu-id="711e1-1328">Aufruf eines Objekts mit dieser Methode bewirkt, dass den Verweiszähler für den Schnittstellenzeiger inkrementiert werden soll, bevor der Zeiger zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-1328">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="711e1-1329">Verwenden Sie immer <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> um den Verweiszähler zu verringern, sobald Sie den Mauszeiger abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1329">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="711e1-1330">Zum Abrufen einer <xref:System.IntPtr> Wert, der darstellt eine [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) Schnittstellenzeiger, rufen Sie <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, oder <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1330">To obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer, you can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1331">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1331">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1332">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1332">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1333">Liest ein einzelnes Byte aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1333">Reads a single byte from unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-1334">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1334">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1335">Die Adresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1335">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1336">Liest ein einzelnes Byte aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1336">Reads a single byte from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1337">Das aus dem nicht verwalteten Arbeitsspeicher gelesene Byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1337">The byte read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1338"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> hat einen impliziten Offset von 0.</span><span class="sxs-lookup"><span data-stu-id="711e1-1338"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> has an implied offset of 0.</span></span> <span data-ttu-id="711e1-1339">Diese Methode ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil Bytearray, der den entfallenden Aufwand für das Kopieren der eines nicht verwalteten Arrays (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1339">This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1340">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1340">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1341">Im folgende Beispiel erstellt einen nicht verwalteten Speicherblock, schreibt ein Byte in den nicht verwalteten Speicher, das Byte wieder aus dem nicht verwalteten Arbeitsspeicher gelesen und dann den nicht verwalteten Arbeitsspeicher frei.</span><span class="sxs-lookup"><span data-stu-id="711e1-1341">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 <span data-ttu-id="711e1-1342">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> Methode, um den Wert eines nicht verwalteten Zeichens lesen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1342">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1343">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1343">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1344">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1344">-or-</span>
          </span>
          <span data-ttu-id="711e1-1345">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1345">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1346">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1346">-or-</span>
          </span>
          <span data-ttu-id="711e1-1347">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1347">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1348">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1348">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1349">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1349">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1350">Die Basisadresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1350">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1351">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1351">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1352">Liest ein einzelnes Byte an einem angegebenen Offset (oder Index) aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1352">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1353">Das aus dem nicht verwalteten Arbeitsspeicher am angegebenen Offset gelesene Byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1353">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1354"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil Bytearray, der den entfallenden Aufwand für das Kopieren der eines nicht verwalteten Arrays (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1354"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1355">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1355">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1356">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1356">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 <span data-ttu-id="711e1-1357">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> Methode, um den Wert eines nicht verwalteten Zeichens lesen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1357">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1358">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1358">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1359">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1359">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1360">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1360">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As Object, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1361">Die Basisadresse im nicht verwalteten Speicher des Quellobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1361">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1362">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1362">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1363">Liest ein einzelnes Byte an einem angegebenen Offset (oder Index) aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1363">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1364">Das aus dem nicht verwalteten Arbeitsspeicher am angegebenen Offset gelesene Byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1364">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1365"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil Bytearray, der den entfallenden Aufwand für das Kopieren der eines nicht verwalteten Arrays (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1365"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1366">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1366">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1367">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1367">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1368">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1368">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-1369">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1369">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1370">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1370">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1371">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1371">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1372">Liest eine 16-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1372">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-1373">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1373">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1374">Die Adresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1374">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1375">Liest eine 16-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1375">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1376">Die 16-Bit-Ganzzahl mit Vorzeichen, die aus dem nicht verwalteten Speicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1376">The 16-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1377"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> hat einen impliziten Offset von 0.</span><span class="sxs-lookup"><span data-stu-id="711e1-1377"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> has an implied offset of 0.</span></span> <span data-ttu-id="711e1-1378">Diese Methode ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `Int16` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1378">This method enables direct interaction with an unmanaged C-style `Int16` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1379">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1379">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1380">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1380">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="711e1-1381">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> Methode zum Lesen des Werts von einer nicht verwalteten `short` Variable.</span><span class="sxs-lookup"><span data-stu-id="711e1-1381">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1382">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1382">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1383">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1383">-or-</span>
          </span>
          <span data-ttu-id="711e1-1384">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1384">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1385">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1385">-or-</span>
          </span>
          <span data-ttu-id="711e1-1386">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1386">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1387">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1387">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1388">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1388">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1389">Die Basisadresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1389">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1390">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1390">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1391">Liest eine 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1391">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1392">Die 16-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1392">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1393"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1393"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1394">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1394">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1395">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1395">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="711e1-1396">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> Methode zum Lesen des Werts von einer nicht verwalteten `short` Variable.</span><span class="sxs-lookup"><span data-stu-id="711e1-1396">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1397">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1397">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1398">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1398">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1399">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1399">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As Object, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1400">Die Basisadresse im nicht verwalteten Speicher des Quellobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1400">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1401">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1401">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1402">Liest eine 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1402">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1403">Die 16-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1403">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1404"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1404"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1405">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1405">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1406">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1406">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1407">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1407">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-1408">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1408">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1409">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1409">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1410">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1410">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1411">Liest eine 32-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1411">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-1412">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1412">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1413">Die Adresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1413">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1414">Liest eine 32-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1414">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1415">Die 32-Bit-Ganzzahl mit Vorzeichen, die aus dem nicht verwalteten Speicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1415">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1416"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> hat einen impliziten Offset von 0.</span><span class="sxs-lookup"><span data-stu-id="711e1-1416"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> has an implied offset of 0.</span></span> <span data-ttu-id="711e1-1417">Diese Methode ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `Int32` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1417">This method enables direct interaction with an unmanaged C-style `Int32` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1418">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1418">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1419">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1419">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="711e1-1420">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> Methode zum Lesen des Werts von einer nicht verwalteten `int` Variable.</span><span class="sxs-lookup"><span data-stu-id="711e1-1420">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1421">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1421">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1422">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1422">-or-</span>
          </span>
          <span data-ttu-id="711e1-1423">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1423">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1424">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1424">-or-</span>
          </span>
          <span data-ttu-id="711e1-1425">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1425">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1426">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1426">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1427">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1427">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1428">Die Basisadresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1428">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1429">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1429">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1430">Liest eine 32-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1430">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1431">Die 32-Bit-Ganzzahl mit Vorzeichen, die aus dem nicht verwalteten Speicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1431">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1432"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 32-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1432"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1433">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1433">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1434">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1434">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="711e1-1435">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> Methode zum Lesen des Werts von einer nicht verwalteten `int` Variable.</span><span class="sxs-lookup"><span data-stu-id="711e1-1435">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1436">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1436">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1437">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1437">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1438">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1438">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As Object, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1439">Die Basisadresse im nicht verwalteten Speicher des Quellobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1439">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1440">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1440">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1441">Liest eine 32-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1441">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1442">Die 32-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1442">The 32-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1443"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 32-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1443"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1444">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1444">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1445">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1445">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1446">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1446">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-1447">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1447">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1448">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1448">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1449">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1449">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1450">Liest eine 64-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1450">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-1451">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1451">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1452">Die Adresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1452">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1453">Liest eine 64-Bit-Ganzzahl mit Vorzeichen aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1453">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1454">Die 64-Bit-Ganzzahl mit Vorzeichen, die aus dem nicht verwalteten Speicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1454">The 64-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1455"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> hat einen impliziten Offset von 0.</span><span class="sxs-lookup"><span data-stu-id="711e1-1455"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> has an implied offset of 0.</span></span> <span data-ttu-id="711e1-1456">Diese Methode ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `Int64` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1456">This method enables direct interaction with an unmanaged C-style `Int64` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1457">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1457">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1458">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1458">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="711e1-1459">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> Methode zum Lesen des Werts von einer nicht verwalteten `__int64` Variable.</span><span class="sxs-lookup"><span data-stu-id="711e1-1459">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1460">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1460">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1461">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1461">-or-</span>
          </span>
          <span data-ttu-id="711e1-1462">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1462">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1463">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1463">-or-</span>
          </span>
          <span data-ttu-id="711e1-1464">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1464">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1465">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1465">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1466">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1466">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1467">Die Basisadresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1467">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1468">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1468">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1469">Liest eine 64-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1469">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1470">Die 64-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1470">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1471"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 64-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1471"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1472">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1472">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1473">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1473">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="711e1-1474">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> Methode zum Lesen des Werts von einer nicht verwalteten `__int64` Variable.</span><span class="sxs-lookup"><span data-stu-id="711e1-1474">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1475">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1475">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1476">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1476">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1477">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1477">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As Object, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1478">Die Basisadresse im nicht verwalteten Speicher des Quellobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1478">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1479">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1479">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1480">Liest eine 64-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1480">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1481">Die 64-Bit-Ganzzahl mit Vorzeichen, die am angegebenen Offset aus dem nicht verwalteten Arbeitsspeicher gelesen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1481">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1482"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 64-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1482"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1483">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1483">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1484">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1484">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1485">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1485">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-1486">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1486">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1487">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1487">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1488">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1488">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1489">Liest eine ganze Zahl von prozessoreigener Größe aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1489">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-1490">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1490">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1491">Die Adresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1491">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1492">Liest eine ganze Zahl von prozessoreigener Größe aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1492">Reads a processor native-sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1493">Die aus dem nicht verwaltetem Arbeitsspeicher gelesene Ganzzahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1493">The integer read from unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-1494">Auf 32-Bit-Computern wird eine 32-Bit-Ganzzahl zurückgegeben und auf 64-Bit-Computern eine 64-Bit-Ganzzahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1494">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1495"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> hat einen impliziten Offset von 0.</span><span class="sxs-lookup"><span data-stu-id="711e1-1495"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> has an implied offset of 0.</span></span> <span data-ttu-id="711e1-1496">Diese Methode ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `IntPtr` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1496">This method enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1497">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1497">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1498">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1498">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1499">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1499">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1500">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1500">-or-</span>
          </span>
          <span data-ttu-id="711e1-1501">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1501">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1502">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1502">-or-</span>
          </span>
          <span data-ttu-id="711e1-1503">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1503">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1504">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1504">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1505">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1505">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1506">Die Basisadresse im nicht verwalteten Speicher, an der gelesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1506">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1507">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1507">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1508">Liest eine ganze Zahl von prozessoreigener Größe an einem angegebenen Offset aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1508">Reads a processor native sized integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1509">Die aus dem nicht verwalteten Arbeitsspeicher am angegebenen Offset gelesene ganze Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1509">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1510"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `IntPtr` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1510"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1511">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1511">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1512">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1512">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1513">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1513">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1514">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1514">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1515">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1515">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As Object, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(System::Object ^ ptr, int ofs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1516">Die Basisadresse im nicht verwalteten Speicher des Quellobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1516">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1517">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Lesen hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1517">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1518">Liest eine ganze Zahl von prozessoreigener Größe aus dem nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1518">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1519">Die aus dem nicht verwalteten Arbeitsspeicher am angegebenen Offset gelesene ganze Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1519">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1520"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `IntPtr` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem Lesen die Elementwerte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1520"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="711e1-1521">Das Lesen aus nicht ausgerichteten Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1521">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1522">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1522">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1523">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1523">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-1524">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1524">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1525">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1525">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1526">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1526">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocCoTaskMem (IntPtr pv, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocCoTaskMem(native int pv, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocCoTaskMem (pv As IntPtr, cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocCoTaskMem(IntPtr pv, int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="711e1-1527">Ein Zeiger auf den mit <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /> belegten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1527">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="711e1-1528">Die neue Größe des belegten Blocks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1528">The new size of the allocated block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1529">Ändert die Größe eines bereits mit <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /> belegten Speicherblocks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1529">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1530">Eine ganze Zahl, die die Adresse des neu belegten Speicherblocks darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1530">An integer representing the address of the reallocated block of memory.</span>
          </span>
          <span data-ttu-id="711e1-1531">Dieser Speicher muss mit <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /> freigegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1531">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1532"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> ist einer von zwei Speicher neuzuordnungen Methoden in der <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-1532"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> is one of two memory reallocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="711e1-1533">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> die andere ist.) Der Anfang des neu belegten Arbeitsspeicher Inhalts ist identisch mit den ursprünglichen Inhalt. der gesamte Speicherblock kann sich jedoch an einem anderen Speicherort.</span><span class="sxs-lookup"><span data-stu-id="711e1-1533">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</span></span> <span data-ttu-id="711e1-1534">Diese Methode macht COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) -Funktion, die so der Speicherbelegungsfunktion für COM-Aufgaben genannte.</span><span class="sxs-lookup"><span data-stu-id="711e1-1534">This method exposes the COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1535">Es ist nicht genügend Arbeitsspeicher zum Erfüllen der Anforderung vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1535">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1536">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1536">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1537">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1537">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocHGlobal (IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocHGlobal(native int pv, native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocHGlobal (pv As IntPtr, cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="711e1-1538">Ein Zeiger auf den mit <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /> belegten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1538">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="711e1-1539">Die neue Größe des belegten Blocks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1539">The new size of the allocated block.</span>
          </span>
          <span data-ttu-id="711e1-1540">Dies ist kein Zeiger; es ist die Byteanzahl, die Sie anfordern, umgewandelt zum Typ <see cref="T:System.IntPtr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1540">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span>
          </span>
          <span data-ttu-id="711e1-1541">Wenn Sie einen Zeiger übergeben, wird er als Größe behandelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1541">If you pass a pointer, it is treated as a size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1542">Ändert die Größe eines bereits mit <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /> belegten Speicherblocks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1542">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1543">Ein Zeiger auf den neu reservierten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1543">A pointer to the reallocated memory.</span>
          </span>
          <span data-ttu-id="711e1-1544">Dieser Speicher muss mit <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> freigegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1544">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1545"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> ist eine der zwei Speicher neuzuordnungen API-Methoden in der <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-1545"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is one of two memory reallocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="711e1-1546">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> die andere ist.)</span><span class="sxs-lookup"><span data-stu-id="711e1-1546">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> is the other.)</span></span>  
  
 <span data-ttu-id="711e1-1547">Diese Methode macht die Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) -Funktion von Kernel32.dll verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1547">This method exposes the Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) function from Kernel32.dll.</span></span> <span data-ttu-id="711e1-1548">Der zurückgegebene Zeiger kann sich vom Original unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1548">The returned pointer can differ from the original.</span></span> <span data-ttu-id="711e1-1549">Falls es abweicht, den Inhalt der ursprüngliche Speicherblock auf den neuen Block kopiert wurden, und der ursprüngliche Speicherblock wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1549">If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1550">Es ist nicht genügend Arbeitsspeicher zum Erfüllen der Anforderung vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1550">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1551">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1551">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1552">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1552">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public static int Release (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Release(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Release (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Release(IntPtr pUnk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="711e1-1553">Die freizugebende Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1553">The interface to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1554">Dekrementiert den Verweiszähler für die angegebene Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1554">Decrements the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1555">Der neue Wert des Verweiszählers für die Schnittstelle, die durch den <paramref name="pUnk" />-Parameter angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1555">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1556">Die common Language Runtime verwaltet den Verweiszähler eines COM-Objekts, so dass es nicht erforderlich ist, verwenden Sie diese Methode direkt Sie.</span><span class="sxs-lookup"><span data-stu-id="711e1-1556">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="711e1-1557">Verwenden Sie diesen Wert nur für Testzwecke verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1557">Use this value only for testing purposes.</span></span> <span data-ttu-id="711e1-1558">In seltenen Fällen, z. B. Tests von einem benutzerdefinierten Marshaller möglicherweise finden Sie es erforderlich, um die Lebensdauer eines Objekts manuell zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="711e1-1558">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="711e1-1559">Dieser Aufruf nur Programme <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> sollten Aufrufen <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1559">Only programs that call <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> should call <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span></span> <span data-ttu-id="711e1-1560">Aufrufen von <xref:System.Runtime.InteropServices.Marshal.Release%2A> den Verweiszähler dieser Planergruppe erreicht ist 0 (null) bewirkt, dass nicht definiertem Verhalten.</span><span class="sxs-lookup"><span data-stu-id="711e1-1560">Calling <xref:System.Runtime.InteropServices.Marshal.Release%2A> after the reference count has reached zero causes undefined behavior.</span></span>  
  
 <span data-ttu-id="711e1-1561">Sie erreichen <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, oder <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> zum Abrufen einer <xref:System.IntPtr> Wert, der darstellt eine [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) -Schnittstellenzeiger.</span><span class="sxs-lookup"><span data-stu-id="711e1-1561">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer to release.</span></span> <span data-ttu-id="711e1-1562">Sie können diese Methoden auch verwenden und die <xref:System.Runtime.InteropServices.Marshal.Release%2A> Methode für verwaltete Objekte, die COM-Schnittstellen, die des verwalteten Objekts dargestellte freizugeben [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-1562">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method on managed objects to release the COM interfaces represented by the managed object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1563">Das folgende Beispiel veranschaulicht das Abrufen einer `IUnknown` Schnittstelle für ein verwaltetes Objekt mit der <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1563">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span> <span data-ttu-id="711e1-1564">Das Beispiel gibt dann den Schnittstellenzeiger frei, durch Aufrufen der <xref:System.Runtime.InteropServices.Marshal.Release%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1564">The example then releases the interface pointer by calling the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1565">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1565">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1566">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1566">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseComObject">
      <MemberSignature Language="C#" Value="public static int ReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReleaseComObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="711e1-1567">Das freizugebende COM-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1567">The COM object to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1568">Dekrementiert den Verweiszähler des dem angegebenen COM-Objekt zugeordneten [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1568">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1569">Der neue Wert für den Verweiszähler des RCW, der <paramref name="o" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1569">The new value of the reference count of the RCW associated with <paramref name="o" />.</span>
          </span>
          <span data-ttu-id="711e1-1570">Dieser Wert ist in der Regel 0, da der RCW unabhängig von der Anzahl der aufrufenden verwalteten Clients genau einen Verweis auf das umschlossene COM-Objekt beibehält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1570">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1571">Diese Methode wird verwendet, um die Lebensdauer eines COM-Objekts, die in verwaltetem Code verwendet explizit zu steuern.</span><span class="sxs-lookup"><span data-stu-id="711e1-1571">This method is used to explicitly control the lifetime of a COM object used from managed code.</span></span> <span data-ttu-id="711e1-1572">Sie sollten diese Methode verwenden, um das zugrunde liegende COM-Objekt freizugeben, das Verweise auf Ressourcen enthält, in kürzester Zeit oder wenn Objekte in einer bestimmten Reihenfolge freigegeben werden müssen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1572">You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</span></span>  
  
 <span data-ttu-id="711e1-1573">Jedes Mal, wenn eine COM-Schnittstellenzeiger auf die common Language Runtime (CLR) eingibt, wird er in einen RCW eingebunden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1573">Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</span></span>  
  
 <span data-ttu-id="711e1-1574">Der RCW besitzt einen Verweiszähler, der inkrementiert wird jedes Mal, wenn ein COM-Schnittstellenzeiger zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-1574">The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</span></span> <span data-ttu-id="711e1-1575">Die <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> Methode dekrementiert den Verweiszähler des RCW.</span><span class="sxs-lookup"><span data-stu-id="711e1-1575">The <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method decrements the reference count of an RCW.</span></span> <span data-ttu-id="711e1-1576">Wenn der Verweiszähler auf 0 (null) erreicht, die Common Language Runtime alle Verweise auf das nicht verwaltete COM-Objekt frei, und löst eine <xref:System.NullReferenceException?displayProperty=nameWithType> , wenn Sie versuchen, das Objekt weiter zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1576">When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <xref:System.NullReferenceException?displayProperty=nameWithType> if you attempt to use the object further.</span></span> <span data-ttu-id="711e1-1577">Wenn die gleiche COM-Schnittstelle mehr als ein Mal aus nicht verwaltetem zu verwaltetem Code übergeben wird, wird der Verweiszähler für den Wrapper jedes Mal inkrementiert, und ein Aufruf <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> gibt die Anzahl der verbleibenden Verweise.</span><span class="sxs-lookup"><span data-stu-id="711e1-1577">If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> returns the number of remaining references.</span></span>  
  
 <span data-ttu-id="711e1-1578">Diese Methode können Sie eine RCW Verweis Count-Version erzwingen, damit es tritt genau wann soll.</span><span class="sxs-lookup"><span data-stu-id="711e1-1578">This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</span></span> <span data-ttu-id="711e1-1579">Allerdings unsachgemäßen Verwendung von <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> kann dazu führen, dass Ihre Anwendung ein Fehler auftritt, oder eine zugriffsverletzung verursachen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1579">However, improper use of <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> may cause your application to fail, or may cause an access violation.</span></span>  
  
 <span data-ttu-id="711e1-1580">Betrachten Sie ein Szenario in der verwalteter Code in einer Anwendungsdomäne einen RCW enthalten kann, der eine COM-Komponente darstellt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1580">Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</span></span> <span data-ttu-id="711e1-1581">Beim Aufrufen der <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> Methode für den RCW, der verwaltete Code wird in der Lage, den RCW zugreifen und löst eine <xref:System.Runtime.InteropServices.InvalidComObjectException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="711e1-1581">If you call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the RCW, the managed code will be unable to access the RCW and will raise an <xref:System.Runtime.InteropServices.InvalidComObjectException> exception.</span></span>  
  
 <span data-ttu-id="711e1-1582">Ein schwerwiegender Fehler kann auftreten, wenn ein Aufruf der RCW ausgeführt wird, wenn der RCW freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-1582">A more serious error may occur if a call to the RCW is executing when the RCW is released.</span></span> <span data-ttu-id="711e1-1583">In diesem Fall besteht die Wahrscheinlichkeit, dass der Thread, die den Aufruf eine zugriffsverletzung verursacht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1583">In this case, there is a good chance that the thread making the call will cause an access violation.</span></span> <span data-ttu-id="711e1-1584">Allerdings Prozessspeicher beschädigt, und der Prozess kann fortgesetzt werden ausgeführt, bis dieser Gründe, die sehr schwer fehlschlägt zu beheben sind.</span><span class="sxs-lookup"><span data-stu-id="711e1-1584">However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</span></span>  
  
 <span data-ttu-id="711e1-1585">Dieses Risiko wird verschärft, wenn die COM-Komponente, die verwendet wird, ein Singleton aus folgendem Grund ist: die CLR aktiviert COM-Komponenten durch Aufrufen von COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) -Funktion, die den gleichen Schnittstellenzeiger gibt jede Uhrzeit, die sie für Singleton-COM-Komponenten aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-1585">This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) function, which returns the same interface pointer every time it is called for singleton COM components.</span></span> <span data-ttu-id="711e1-1586">Folglich separate und unabhängige Teile von verwaltetem Code in einer Anwendungsdomäne können verwenden den gleichen RCW für eine Singleton-COM-Komponente, und wenn entweder ein Aufrufe der <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> -Methode für die COM-Komponente, die andere wird unterbrochen werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1586">Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the COM component, the other will be broken.</span></span>  
  
 <span data-ttu-id="711e1-1587">Verwenden Sie daher die <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> nur, wenn es absolut erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-1587">Therefore, use the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> only if it is absolutely required.</span></span> <span data-ttu-id="711e1-1588">Wenn diese Methode, um sicherzustellen, dass eine COM-Komponente zu einem bestimmten Zeitpunkt aufgehoben ist aufgerufen werden soll, können Sie verwenden die <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1588">If you want to call this method to ensure that a COM component is released at a determined time, consider using the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method instead.</span></span> <span data-ttu-id="711e1-1589"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> Gibt die zugrunde liegende COM-Komponente, unabhängig davon, wie oft frei, die es die CLR erneut eingegeben hat.</span><span class="sxs-lookup"><span data-stu-id="711e1-1589"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> will release the underlying COM component regardless of how many times it has re-entered the CLR.</span></span> <span data-ttu-id="711e1-1590">Der interne Verweiszähler des RCW wird um eins erhöht, jedes Mal, wenn die COM-Komponente die CLR erneut eingegeben werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1590">The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</span></span> <span data-ttu-id="711e1-1591">Sie können daher Aufrufen der <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> -Methode in einer Schleife, bis der zurückgegebene Wert ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="711e1-1591">Therefore, you could call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until the value returned is zero.</span></span> <span data-ttu-id="711e1-1592">Dadurch wird das gleiche Ergebnis wie erreicht die <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1592">This achieves the same result as the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1593">
            <paramref name="o" /> ist kein gültiges COM-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1593">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="711e1-1594">
            <paramref name="o" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1594">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1595">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1595">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1596">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1596">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadCache">
      <MemberSignature Language="C#" Value="public static void ReleaseThreadCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseThreadCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseThreadCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseThreadCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1597">Gibt den Threadcache frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1597">Releases the thread cache.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1598">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1598">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1599">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1599">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToBSTR (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToBSTR(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToBSTR (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToBSTR(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1600">Das zu kopierende verwaltete Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1600">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1601">Reserviert eine nicht verwaltete [binäre Zeichenfolge (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) und kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" />-Objekts hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1601">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1602">Die Adresse im nicht verwalteten Speicher, in die der <paramref name="s" />-Parameter kopiert wurde, oder 0, wenn ein NULL-Objekt bereitgestellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1602">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1603">Die <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> Methode eignet sich für benutzerdefiniertes Marshalling geht oder wenn das Mischen von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1603">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1604">Immer freigeben, da diese Methode belegt wird der nicht verwalteten Speicher für eine Zeichenfolge, die `BSTR` abschließend durch Aufrufen der <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1604">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1605">Der <paramref name="s" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1605">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="711e1-1606">Auf dem aktuellen Computer wird nicht Windows 2000 Service Pack 3 oder höher ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1606">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1607">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1607">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1608">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1608">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1609">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1609">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="711e1-1610">Diese Methode ist nur auf Computern unter Windows 2000 Service Pack 3 oder höher unterstützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="711e1-1610">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1611">Das zu kopierende verwaltete Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1611">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1612">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" />-Objekts in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1612">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1613">Die Adresse im nicht verwalteten Speicher, in die der <paramref name="s" />-Parameter kopiert wurde, oder 0, wenn ein NULL-Objekt bereitgestellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1613">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1614">Die <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> Methode eignet sich für benutzerdefiniertes Marshalling geht oder wenn das Mischen von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1614">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1615">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1615">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="711e1-1616">Die Zeichen der Zeichenfolge werden als ANSI-Zeichen kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1616">The characters of the string are copied as ANSI characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1617">Im folgenden Beispiel wird die <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> gemarshallt und Entschlüsseln des Inhalts der Methode ein <xref:System.Security.SecureString> Objekt, das einen nicht verwalteten Speicherblock.</span><span class="sxs-lookup"><span data-stu-id="711e1-1617">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="711e1-1618">Es verwendet dann die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> Methode, die nicht verwaltete Block mit Nullen gefüllt und freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1618">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1619">Der <paramref name="s" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1619">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="711e1-1620">Auf dem aktuellen Computer wird nicht Windows 2000 Service Pack 3 oder höher ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1620">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1621">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1621">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1622">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1622">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1623">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1623">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="711e1-1624">Diese Methode ist nur auf Computern unter Windows 2000 Service Pack 3 oder höher unterstützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="711e1-1624">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1625">Das zu kopierende verwaltete Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1625">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1626">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" />-Objekts in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1626">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1627">Die Adresse im nicht verwalteten Speicher, in die der <paramref name="s" />-Parameter kopiert wurde, oder 0, wenn ein NULL-Objekt bereitgestellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1627">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1628">Die <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> Methode eignet sich für benutzerdefiniertes Marshalling geht oder wenn das Mischen von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1628">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1629">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch Aufrufen der <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1629">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="711e1-1630">Die Zeichen der Zeichenfolge werden als Unicode-Zeichen kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1630">The characters of the string are copied as Unicode characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1631">Im folgenden Beispiel wird die <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> gemarshallt und Entschlüsseln des Inhalts der Methode ein <xref:System.Security.SecureString> Objekt, das einen nicht verwalteten Speicherblock.</span><span class="sxs-lookup"><span data-stu-id="711e1-1631">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="711e1-1632">Es verwendet dann die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> Methode, die nicht verwaltete Block mit Nullen gefüllt und freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1632">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1633">Der <paramref name="s" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1633">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="711e1-1634">Auf dem aktuellen Computer wird nicht Windows 2000 Service Pack 3 oder höher ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1634">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1635">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1635">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1636">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1636">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1637">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1637">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="711e1-1638">Diese Methode ist nur auf Computern unter Windows 2000 Service Pack 3 oder höher unterstützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="711e1-1638">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1639">Das zu kopierende verwaltete Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1639">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1640">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" /> in den nicht verwalteten Speicher und konvertiert ihn beim Kopieren in das ANSI-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1640">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1641">Die Adresse im nicht verwalteten Speicher, in die der <paramref name="s" />-Parameter kopiert wurde, oder 0, wenn ein NULL-Objekt bereitgestellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1641">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1642">Die <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> Methode eignet sich für benutzerdefiniertes Marshalling geht oder wenn das Mischen von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1642">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1643">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch Aufrufen der <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1643">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1644">Im folgenden Beispiel wird die <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> gemarshallt und Entschlüsseln des Inhalts der Methode ein <xref:System.Security.SecureString> Objekt, das einen nicht verwalteten Speicherblock.</span><span class="sxs-lookup"><span data-stu-id="711e1-1644">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="711e1-1645">Es verwendet dann die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> Methode, die nicht verwaltete Block mit Nullen gefüllt und freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1645">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1646">Der <paramref name="s" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1646">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="711e1-1647">Auf dem aktuellen Computer wird nicht Windows 2000 Service Pack 3 oder höher ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1647">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1648">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1648">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1649">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1649">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1650">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1650">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="711e1-1651">Diese Methode ist nur auf Computern unter Windows 2000 Service Pack 3 oder höher unterstützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="711e1-1651">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1652">Das zu kopierende verwaltete Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1652">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1653">Kopiert den Inhalt eines verwalteten <see cref="T:System.Security.SecureString" />-Objekts in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1653">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1654">Die Adresse im nicht verwalteten Arbeitsspeicher, an die <paramref name="s" /> kopiert wurde, oder 0, wenn <paramref name="s" /> ein <see cref="T:System.Security.SecureString" />-Objekt mit der Länge 0 ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1654">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1655">Die <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> Methode eignet sich für das Marshalling von benutzerdefinierten oder für die Verwendung beim Kombinieren von verwaltetem und nicht Code verwaltetem.</span><span class="sxs-lookup"><span data-stu-id="711e1-1655">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1656">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch Aufrufen der <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1656">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1657">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> Methode mit dem nicht verwalteten `LogonUser` Funktion zum Ausführen der Identitätswechsel mit den <xref:System.Security.SecureString> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-1657">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="711e1-1658">Anschließend wird die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> Methode 0 (null) und des Verweis nicht verwalteten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="711e1-1658">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1659">Der <paramref name="s" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1659">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="711e1-1660">Auf dem aktuellen Computer wird nicht Windows 2000 Service Pack 3 oder höher ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1660">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1661">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1661">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1662">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1662">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1663">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1663">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="711e1-1664">Diese Methode ist nur auf Computern unter Windows 2000 Service Pack 3 oder höher unterstützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="711e1-1664">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetComObjectData">
      <MemberSignature Language="C#" Value="public static bool SetComObjectData (object obj, object key, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetComObjectData(object obj, object key, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetComObjectData (obj As Object, key As Object, data As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetComObjectData(System::Object ^ obj, System::Object ^ key, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="711e1-1665">Das COM-Objekt, in dem die Daten gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1665">The COM object in which to store the data.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="711e1-1666">Der Schlüssel in der internen Hashtabelle des COM-Objekts, in dem die Daten gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1666">The key in the internal hash table of the COM object in which to store the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="711e1-1667">Die festzulegenden Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1667">The data to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1668">Legt Daten fest, auf die durch den angegebenen Schlüssel im angegebenen COM-Objekt verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1668">Sets data referenced by the specified key in the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1669">
            <see langword="true" />, wenn die Daten erfolgreich festgelegt wurden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1669">
              <see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1670">Alle COM-Objekte umschlossen eine [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) haben eine zugeordnete Hashtabelle, zu dem <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> fügt Daten hinzu.</span><span class="sxs-lookup"><span data-stu-id="711e1-1670">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) have an associated hash table, to which <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> adds data.</span></span> <span data-ttu-id="711e1-1671"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> Ruft Daten aus der Hashtabelle ab.</span><span class="sxs-lookup"><span data-stu-id="711e1-1671"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> retrieves data from the hash table.</span></span> <span data-ttu-id="711e1-1672">Sie müssen sich nie in einer dieser Methoden vom Code aufrufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1672">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1673">
            <paramref name="obj" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1673">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1674">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1674">-or-</span>
          </span>
          <span data-ttu-id="711e1-1675">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1675">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1676">
            <paramref name="obj" /> ist kein COM-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1676">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="711e1-1677">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1677">-or-</span>
          </span>
          <span data-ttu-id="711e1-1678">
            <paramref name="obj" /> ist ein [!INCLUDE[wrt](~/includes/wrt-md.md)]-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1678">
              <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1679">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1679">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1680">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1680">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SizeOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1681">Gibt die nicht verwaltete Größe einer Klasse in Bytes zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1681">Returns the unmanaged size, in bytes, of a class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (structure As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(System::Object ^ structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="711e1-1682">Das Objekt, dessen Größe zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1682">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1683">Gibt die nicht verwaltete Größe eines Objekts in Bytes zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1683">Returns the unmanaged size of an object in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1684">Die Größe des angegebenen Objekts in nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1684">The size of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1685">Diese Methode akzeptiert eine Instanz einer Struktur, die ein Verweistyp oder ein geschachtelter Werttyp sein kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-1685">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="711e1-1686">Das Layout muss sequenziell oder explizit sein.</span><span class="sxs-lookup"><span data-stu-id="711e1-1686">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="711e1-1687">Die zurückgegebene Größe ist die Größe des nicht verwalteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="711e1-1687">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="711e1-1688">Die verwalteten und nicht verwaltete Größe eines Objekts können sich unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1688">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="711e1-1689">Für Zeichentypen entspricht, wird die Größe von beeinflusst die <xref:System.Runtime.InteropServices.CharSet> Wert für diese Klasse angewendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-1689">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="711e1-1690">Können Sie die <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> Methode, um zu bestimmen, wie viel nicht verwalteten Speicher mithilfe der <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> und <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1690">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1691">Im folgenden Beispiel wird eine verwaltete Struktur erstellt, werden in nicht verwalteten Speicher übertragen und dann wieder in den verwalteten Speicher werden übertragen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1691">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</span></span> <span data-ttu-id="711e1-1692">Dieses Beispiel verwendet die <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> Methode, um zu bestimmen, wie viel Speicher belegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1692">This example uses the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1693">Der <paramref name="structure" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1693">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(Type ^ t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="711e1-1694">Der Typ, dessen Größe zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1694">The type whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1695">Gibt die Größe eines nicht verwalteten Typs in Bytes zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1695">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1696">Die Größe des angegebenen Typs in nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1696">The size of the specified type in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1697">Sie können diese Methode verwenden, wenn Sie nicht über eine Struktur verfügen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1697">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="711e1-1698">Das Layout muss sequenziell oder explizit sein.</span><span class="sxs-lookup"><span data-stu-id="711e1-1698">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="711e1-1699">Die zurückgegebene Größe ist die Größe des nicht verwalteten Typs an.</span><span class="sxs-lookup"><span data-stu-id="711e1-1699">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="711e1-1700">Die verwalteten und nicht verwaltete Größe eines Objekts können sich unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1700">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="711e1-1701">Für Zeichentypen entspricht, wird die Größe von beeinflusst die <xref:System.Runtime.InteropServices.CharSet> Wert für diese Klasse angewendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-1701">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1702">Im folgenden Beispiel wird das Aufrufen der <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1702">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method.</span></span> <span data-ttu-id="711e1-1703">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-1703">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#3](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#3)]
 [!code-csharp[Marshal#3](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#3)]
 [!code-vb[Marshal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1704">Der <paramref name="t" />-Parameter ist eine generische Typdefinition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1704">The <paramref name="t" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1705">Der <paramref name="t" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1705">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-1706">Der Typ, dessen Größe zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1706">The type whose size is to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="711e1-1707">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1707">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-1708">Gibt die Größe eines nicht verwalteten Typs in Bytes zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1708">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1709">Die Größe, in Bytes, des Typs, der durch den <typeparamref name="T" /> generischen Typparameter angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1709">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1710">Sie können diese Methode verwenden, wenn Sie nicht über eine Struktur verfügen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1710">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="711e1-1711">Das Layout muss sequenziell oder explizit sein.</span><span class="sxs-lookup"><span data-stu-id="711e1-1711">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="711e1-1712">Die zurückgegebene Größe ist die Größe des nicht verwalteten Typs an.</span><span class="sxs-lookup"><span data-stu-id="711e1-1712">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="711e1-1713">Die verwalteten und nicht verwaltete Größe eines Objekts können sich unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1713">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="711e1-1714">Für Zeichentypen entspricht, wird die Größe von beeinflusst die <xref:System.Runtime.InteropServices.CharSet> Wert für diese Klasse angewendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-1714">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; (T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;(!!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) (structure As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf(T structure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-1715">Der Typ des der <c>Struktur</c> Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1715">The type of the <c>structure</c> parameter.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="711e1-1716">Das Objekt, dessen Größe zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1716">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1717">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1717">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-1718">Gibt die nicht verwaltete Größe eines Objekts eines angegebenen Typs in Bytes zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1718">Returns the unmanaged size of an object of a specified type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1719">Die Größe des angegebenen Objekts in nicht verwaltetem Code in Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1719">The size, in bytes, of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1720">Diese Methode akzeptiert eine Instanz einer Struktur, die ein Verweistyp oder ein geschachtelter Werttyp sein kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-1720">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="711e1-1721">Das Layout muss sequenziell oder explizit sein.</span><span class="sxs-lookup"><span data-stu-id="711e1-1721">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="711e1-1722">Die zurückgegebene Größe ist die Größe des nicht verwalteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="711e1-1722">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="711e1-1723">Die verwalteten und nicht verwaltete Größe eines Objekts können sich unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1723">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="711e1-1724">Für Zeichentypen entspricht, wird die Größe von beeinflusst die <xref:System.Runtime.InteropServices.CharSet> Wert für diese Klasse angewendet.</span><span class="sxs-lookup"><span data-stu-id="711e1-1724">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="711e1-1725">Sie können die <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> Methode, um zu bestimmen, wie viel Speicher mithilfe der <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> und <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1725">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method to determine how much unmanaged memory to allocate by using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="711e1-1726">Der <paramref name="structure" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1726">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr StringToBSTR (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToBSTR(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToBSTR (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToBSTR(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1727">Die zu kopierende verwaltete Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1727">The managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1728">Weist einen [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) zu und kopiert den Inhalt eines verwalteten <see cref="T:System.String" /> hinein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1728">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1729">Ein nicht verwalteter Zeiger auf das <see langword="BSTR" /> oder 0, wenn <paramref name="s" /> NULL ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1729">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1730"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1730"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1731">Immer freigeben, da diese Methode belegt wird der nicht verwalteten Speicher für eine Zeichenfolge, die `BSTR` abschließend durch Aufrufen von <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1731">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-1732">Diese Methode stellt die Umkehrfunktionen der <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1732">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1733">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1733">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-1734">Die Länge für <paramref name="s" /> liegt außerhalb des gültigen Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1734">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1735">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1735">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1736">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1736">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAnsi(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1737">Eine zu kopierende verwaltete Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1737">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1738">Kopiert den Inhalt eines verwalteten <see cref="T:System.String" /> in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1738">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1739">Eine ganze Zahl, die einen Zeiger auf den für die Zeichenfolge belegten Speicherblock darstellt, oder 0, wenn <paramref name="s" /> gleich <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1739">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1740"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1740"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1741">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1741">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="711e1-1742">Diese Methode stellt die Umkehrfunktionen der <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1742">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-1743">Die Zeichen der Zeichenfolge werden als ANSI-Zeichen kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1743">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1744">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1744">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-1745">Der <paramref name="s" />-Parameter übersteigt die vom Betriebssystem zugelassene maximale Länge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1745">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1746">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1746">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1747">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1747">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAuto(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1748">Eine zu kopierende verwaltete Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1748">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1749">Kopiert den Inhalt eines verwalteten <see cref="T:System.String" /> in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1749">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1750">Der reservierte Speicherblock oder 0, wenn <paramref name="s" /> gleich <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1750">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1751"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> eignet sich für das Marshalling von benutzerdefinierten oder für die Verwendung beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1751"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1752">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1752">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="711e1-1753">Diese Methode stellt die Umkehrfunktionen der <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1753">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-1754">Die Zeichen der Zeichenfolge werden als ANSI oder Unicode-Zeichen, und je nach Betriebssystem kopiert, auf dem der Code ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="711e1-1754">The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</span></span> <span data-ttu-id="711e1-1755">Unter Windows 98 werden die Zeichen als ANSI-Zeichen kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1755">On Windows 98, the characters are copied as ANSI characters.</span></span> <span data-ttu-id="711e1-1756">Unter Windows NT 4.0, Windows 2000, Windows XP und Windows Server 2003-Produktfamilie werden die Zeichen als Unicode-Zeichen kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1756">On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1757">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1757">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-1758">Die Länge für <paramref name="s" /> liegt außerhalb des gültigen Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1758">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1759">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1759">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1760">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1760">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUni(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1761">Eine zu kopierende verwaltete Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1761">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1762">Kopiert den Inhalt eines verwalteten <see cref="T:System.String" /> in einen Speicherblock, der von der nicht verwalteten Speicherbelegung für COM-Aufgaben reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1762">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1763">Eine ganze Zahl, die einen Zeiger auf den für die Zeichenfolge belegten Speicherblock darstellt, oder 0, wenn s gleich <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1763">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1764"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> eignet sich für das Marshalling von benutzerdefinierten oder für die Verwendung beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1764"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1765">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1765">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-1766">Diese Methode stellt die Umkehrfunktionen der <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1766">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="711e1-1767">Die Zeichen der Zeichenfolge werden als Unicode-Zeichen kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1767">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-1768">Der <paramref name="s" />-Parameter übersteigt die vom Betriebssystem zugelassene maximale Länge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1768">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1769">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1769">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1770">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1770">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1771">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1771">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUTF8 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUTF8(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUTF8 (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUTF8(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAnsi(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1772">Eine zu kopierende verwaltete Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1772">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1773">Kopiert den Inhalt eines verwalteten <see cref="T:System.String" /> in den nicht verwalteten Speicher und konvertiert ihn beim Kopieren in das ANSI-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1773">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1774">Die Adresse im nicht verwalteten Arbeitsspeicher, an die <paramref name="s" /> kopiert wurde, oder 0, wenn <paramref name="s" /> gleich <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1774">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1775"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> eignet sich für das Marshalling von benutzerdefinierten oder beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1775"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1776">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1776">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="711e1-1777"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> Stellt die Umkehrfunktion von <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1777"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-1778">Diese Methode kopiert eingebettete Null-Zeichen und enthält ein abschließendes Nullzeichen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1778">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1779">Im folgenden Beispiel wird veranschaulicht, wie der Inhalt eines verwalteten konvertiert <xref:System.String> -Klasse auf nicht verwalteten Speicher und dem nicht verwalteten Speicher, wenn Fertig klicken Sie dann löschen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1779">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1780">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1780">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-1781">Der <paramref name="s" />-Parameter übersteigt die vom Betriebssystem zugelassene maximale Länge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1781">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1782">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1782">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1783">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1783">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAuto(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1784">Eine zu kopierende verwaltete Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1784">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1785">Kopiert den Inhalt eines verwalteten <see cref="T:System.String" /> in den nicht verwalteten Speicher und konvertiert ihn ggf. in das ANSI-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1785">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1786">Die Adresse im nicht verwalteten Arbeitsspeicher, an die die Zeichenfolge kopiert wurde, oder 0, wenn <paramref name="s" /> gleich <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1786">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1787"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> eignet sich für das Marshalling von benutzerdefinierten oder für die Verwendung beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1787"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1788">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1788">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="711e1-1789">Diese Methode stellt die Umkehrfunktionen der <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1789">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-1790">Diese Methode kopiert eingebettete Null-Zeichen und enthält ein abschließendes Nullzeichen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1790">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1791">Im folgenden Beispiel wird veranschaulicht, wie der Inhalt eines verwalteten konvertiert <xref:System.String> -Klasse auf nicht verwalteten Speicher und dem nicht verwalteten Speicher, wenn Fertig klicken Sie dann löschen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1791">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAuto#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAuto/CPP/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1792">Es ist nicht genügend Arbeitsspeicher verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1792">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1793">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1793">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1794">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1794">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalUni(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-1795">Eine zu kopierende verwaltete Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1795">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1796">Kopiert den Inhalt eines verwalteten <see cref="T:System.String" /> in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1796">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1797">Die Adresse im nicht verwalteten Arbeitsspeicher, an die <paramref name="s" /> kopiert wurde, oder 0, wenn <paramref name="s" /> gleich <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1797">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1798"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> eignet sich für das Marshalling von benutzerdefinierten oder für die Verwendung beim Kombinieren von verwaltetem und nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="711e1-1798"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="711e1-1799">Da der nicht verwalteten Speicher für eine Zeichenfolge in dieser Methode belegt wird, müssen Sie den Speicher immer freigeben, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1799">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="711e1-1800">Diese Methode stellt die Umkehrfunktionen der <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1800">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-1801">Diese Methode kopiert eingebettete Null-Zeichen und enthält ein abschließendes Nullzeichen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1801">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="711e1-1802">Die Methode konnte nicht genügend Speicher für den systemeigenen Heap belegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1802">The method could not allocate enough native heap memory.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="711e1-1803">Der <paramref name="s" />-Parameter übersteigt die vom Betriebssystem zugelassene maximale Länge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1803">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1804">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1804">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1805">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1805">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr">
      <MemberSignature Language="C#" Value="public static void StructureToPtr (object structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr(object structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr (structure As Object, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StructureToPtr(System::Object ^ structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="711e1-1806">Ein verwaltetes Objekt mit den zu marshallenden Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1806">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="711e1-1807">Dieses Objekt muss eine Struktur oder Instanz einer formatierten Klasse sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1807">This object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="711e1-1808">Ein Zeiger auf einen nicht verwalteten Speicherblock, der vor dem Aufruf der Methode belegt werden muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1808">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="711e1-1809">
            <see langword="true" />, wenn die <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />-Methode für den <c>ptr</c>-Parameter aufgerufen werden soll, bevor diese Methode die Daten kopiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1809">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="711e1-1810">Der Block muss gültige Daten enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1810">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="711e1-1811">Beachten Sie, dass das Übergeben von <see langword="false" />, wenn der Speicherblock bereits Daten enthält, zu einem Speicherverlust führen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1811">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1812">Marshallt Daten aus einem verwalteten Objekt zu einem nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1812">Marshals data from a managed object to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1813">Wenn `structure` ein Werttyp ist, wird er mittels Boxing konvertiert oder mittels Unboxing zurückkonvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="711e1-1813">If `structure` is a value type, it can be boxed or unboxed.</span></span> <span data-ttu-id="711e1-1814">Wenn sie mittels Boxing konvertiert wird, wird es vor dem Kopieren mittels Unboxing konvertiert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1814">If it is boxed, it is unboxed before copying.</span></span>  
  
 <span data-ttu-id="711e1-1815">Eine formatierte Klasse ist ein Verweistyp, deren Layout, indem angegeben wird, die <xref:System.Runtime.InteropServices.StructLayoutAttribute> Attribut, entweder als <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> oder <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1815">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-1816"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> kopiert den Inhalt des `structure` zu den voraus belegten Speicherblock, der `ptr` -Parameter zeigt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1816"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="711e1-1817">Wenn `structure` Verweistypen, die in COM-Schnittstellenzeigern gemarshallt enthält (Schnittstellen, Klassen ohne Layout und <xref:System.Object?displayProperty=nameWithType>), werden die verwalteten Objekte mit Verweiszähler aufrechterhalten.</span><span class="sxs-lookup"><span data-stu-id="711e1-1817">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="711e1-1818">Alle anderen Verweistypen (z. B. Zeichenfolgen und Arrays) werden Kopien gemarshallt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1818">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="711e1-1819">Um diese verwaltete oder nicht verwaltete Objekte freizugeben, rufen Sie die <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> -Methode auf, bevor Sie den Speicherblock freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1819">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="711e1-1820">Bei Verwendung der <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> Geben Sie die Methode, um eine andere Instanz auf den Speicherblock zu einem späteren Zeitpunkt kopieren `true` für `fDeleteOld` zählt Sie so entfernen Sie den Verweis für Verweistypen, die in der vorherigen Instanz.</span><span class="sxs-lookup"><span data-stu-id="711e1-1820">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="711e1-1821">Andernfalls werden die verwaltete Verweise nicht verwaltete Typesand Kopien effektiv verloren.</span><span class="sxs-lookup"><span data-stu-id="711e1-1821">Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="711e1-1822">Das allgemeine Muster für die Verwendung von <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="711e1-1822">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> is as follows:</span></span>  
  
1.  <span data-ttu-id="711e1-1823">Beim ersten Aufruf von der <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> -Methode auf, nachdem Sie ein Speicherblock belegt wurde, `fDeleteOld` muss `false`, da es keine Inhalte sind gelöscht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1823">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="711e1-1824">Geben Sie `true` für `fDeleteOld` nur, wenn der Block gültige Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="711e1-1824">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="711e1-1825">Wenn Sie eine andere Instanz, auf den Speicherblock kopieren und das Objekt enthält die Verweistypen, `fDeleteOld` muss `true` um Verweistypen in den alten Inhalt freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1825">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="711e1-1826">Wenn das Objekt Verweistypen enthält, müssen Sie Aufrufen der <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> -Methode auf, bevor Sie den Speicherblock freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1826">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="711e1-1827">Verwenden Sie zum Anheften einer vorhandenen Struktur, anstatt Sie zu kopieren, die <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> Typ ein fixiertes Handle für die Struktur zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1827">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="711e1-1828">Weitere Informationen zum anheften, finden Sie unter [kopieren und fixieren](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-1828">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1829">Im folgenden Beispiel wird eine verwaltete Struktur erstellt, überträgt er an nicht verwalteten Speicher mithilfe der <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> -Methode, und klicken Sie dann wieder mit verwalteten Speicher überträgt die <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1829">The following example creates a managed structure, transfers it to unmanaged memory using the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1830">
            <paramref name="structure" /> ist ein Verweistyp, der keine formatierte Klasse ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1830">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
          <span data-ttu-id="711e1-1831">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1831">-or-</span>
          </span>
          <span data-ttu-id="711e1-1832">
            <paramref name="structure" /> ist eine Instanz eines generischen Typs (nur in .NET Framework 4.5 und früheren Versionen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1832">
              <paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1833">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1833">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1834">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1834">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StructureToPtr&lt;T&gt; (T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr&lt;T&gt;(!!T structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr(Of T) (structure As T, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-1835">Der Typ des verwalteten Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1835">The type of the managed object.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="711e1-1836">Ein verwaltetes Objekt mit den zu marshallenden Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1836">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="711e1-1837">Dieses Objekt muss eine Struktur oder Instanz einer formatierten Klasse sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1837">The object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="711e1-1838">Ein Zeiger auf einen nicht verwalteten Speicherblock, der vor dem Aufruf der Methode belegt werden muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1838">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="711e1-1839">
            <see langword="true" />, wenn die <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />-Methode für den <c>ptr</c>-Parameter aufgerufen werden soll, bevor diese Methode die Daten kopiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1839">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="711e1-1840">Der Block muss gültige Daten enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1840">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="711e1-1841">Beachten Sie, dass das Übergeben von <see langword="false" />, wenn der Speicherblock bereits Daten enthält, zu einem Speicherverlust führen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1841">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1842">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1842">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-1843">Marshallt Daten aus einem verwalteten Objekt eines festgelegten Typs zu einem nicht verwalteten Speicherblock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1843">Marshals data from a managed object of a specified type to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1844">Eine formatierte Klasse ist ein Verweistyp, deren Layout, indem angegeben wird, die <xref:System.Runtime.InteropServices.StructLayoutAttribute> Attribut, entweder als <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> oder <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="711e1-1844">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="711e1-1845"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> kopiert den Inhalt des `structure` zu den voraus belegten Speicherblock, der `ptr` -Parameter zeigt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1845"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="711e1-1846">Wenn `structure` Verweistypen, die in COM-Schnittstellenzeigern gemarshallt enthält (Schnittstellen, Klassen ohne Layout und <xref:System.Object?displayProperty=nameWithType>), werden die verwalteten Objekte mit Verweiszähler aufrechterhalten.</span><span class="sxs-lookup"><span data-stu-id="711e1-1846">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="711e1-1847">Alle anderen Verweistypen (z. B. Zeichenfolgen und Arrays) werden Kopien gemarshallt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1847">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="711e1-1848">Um diese verwaltete oder nicht verwaltete Objekte freizugeben, rufen Sie die <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> -Methode auf, bevor Sie den Speicherblock freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1848">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="711e1-1849">Bei Verwendung der <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> Geben Sie die Methode, um eine andere Instanz auf den Speicherblock zu einem späteren Zeitpunkt kopieren `true` für `fDeleteOld` zählt Sie so entfernen Sie den Verweis für Verweistypen, die in der vorherigen Instanz.</span><span class="sxs-lookup"><span data-stu-id="711e1-1849">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="711e1-1850">Andernfalls sind die Verweistypen verwalteten und nicht verwalteten Kopien effektiv verloren.</span><span class="sxs-lookup"><span data-stu-id="711e1-1850">Otherwise, the managed reference types and unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="711e1-1851">Das allgemeine Muster für die Verwendung von <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> lautet wie folgt:</span><span class="sxs-lookup"><span data-stu-id="711e1-1851">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> is as follows:</span></span>  
  
1.  <span data-ttu-id="711e1-1852">Beim ersten Aufruf von der <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> -Methode auf, nachdem Sie ein Speicherblock belegt wurde, `fDeleteOld` muss `false`, da es keine Inhalte sind gelöscht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1852">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="711e1-1853">Geben Sie `true` für `fDeleteOld` nur, wenn der Block gültige Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="711e1-1853">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="711e1-1854">Wenn Sie eine andere Instanz, auf den Speicherblock kopieren und das Objekt enthält die Verweistypen, `fDeleteOld` muss `true` um Verweistypen in den alten Inhalt freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1854">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="711e1-1855">Wenn das Objekt Verweistypen enthält, müssen Sie Aufrufen der <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> -Methode auf, bevor Sie den Speicherblock freizugeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-1855">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="711e1-1856">Verwenden Sie zum Anheften einer vorhandenen Struktur, anstatt Sie zu kopieren, die <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> Typ ein fixiertes Handle für die Struktur zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1856">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="711e1-1857">Weitere Informationen zum anheften, finden Sie unter [kopieren und fixieren](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-1857">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1858">
            <paramref name="structure" /> ist ein Verweistyp, der keine formatierte Klasse ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1858">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1859">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1859">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1860">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1860">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="SystemDefaultCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemDefaultCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemDefaultCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemDefaultCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemDefaultCharSize;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1861">Stellt die Standardzeichengröße für das System dar. Der Standardwert ist 2 für Unicode-Systeme und 1 für ANSI-Systeme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1861">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span>
          </span>
          <span data-ttu-id="711e1-1862">Dieses Feld ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1862">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="711e1-1863">Das folgende Beispiel veranschaulicht die <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> Feld.</span><span class="sxs-lookup"><span data-stu-id="711e1-1863">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="711e1-1864">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-1864">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemMaxDBCSCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemMaxDBCSCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemMaxDBCSCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemMaxDBCSCharSize;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1865">Stellt die maximale Größe eines DBCS (Double-Byte Character Set) für das aktuelle Betriebssystem in Bytes dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1865">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span>
          </span>
          <span data-ttu-id="711e1-1866">Dieses Feld ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1866">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="711e1-1867">Das folgende Beispiel veranschaulicht die <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> Feld.</span><span class="sxs-lookup"><span data-stu-id="711e1-1867">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="711e1-1868">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.InteropServices.Marshal> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-1868">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThrowExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1869">Löst eine Ausnahme mit einem bestimmten HRESULT-Fehlerwert aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1869">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="711e1-1870">Das der gewünschten Ausnahme entsprechende HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1870">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1871">Löst eine Ausnahme mit einem bestimmten HRESULT-Fehlerwert aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1871">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1872">Diese Methode erstellt ein Exception-Objekt für den angegebenen HRESULT-Fehler.</span><span class="sxs-lookup"><span data-stu-id="711e1-1872">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="711e1-1873">Wenn das HRESULT 0 oder positiv ist (einen Erfolgscode) ist, erfolgt die Methodenrückgabe ohne erstellen oder eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1873">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="711e1-1874">Beachten Sie, dass die <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> Methodenrückgabe eine Ausnahme, die auf der Grundlage der [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) Schnittstelle des aktuellen Threads an, wenn diese festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-1874">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="711e1-1875">In diesem Fall die `errorCode` Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1875">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="711e1-1876">Einige Fehler-HRESULTs zuordnen definierten Ausnahmen aus, während andere nicht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1876">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="711e1-1877">Wenn ein HRESULT einer definierten Ausnahme zugeordnet <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> erstellt eine Instanz der Ausnahme und wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="711e1-1877">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="711e1-1878">Andernfalls, erstellt er eine Instanz des <xref:System.Runtime.InteropServices.COMException>das Codefeld Fehler mit HRESULT initialisiert und löst diese Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="711e1-1878">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="711e1-1879">Wenn <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> wird aufgerufen, um zusätzliche Informationen über den Fehler mithilfe der nicht verwalteten abzurufen versucht [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) Funktion.</span><span class="sxs-lookup"><span data-stu-id="711e1-1879">When <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) function.</span></span>  
  
 <span data-ttu-id="711e1-1880">Die Zuordnung von jedem HRESULT zu seiner vergleichbaren Ausnahmeklasse in .NET Framework, finden Sie unter [Vorgehensweise: Zuordnen von HRESULTs und Ausnahmen](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-1880">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="711e1-1881">In einigen Fällen <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> möglicherweise eine Ausnahme von einem vorherigen COM-Methodenaufruf zurück.</span><span class="sxs-lookup"><span data-stu-id="711e1-1881">Occasionally, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> might return an exception from a previous COM call.</span></span> <span data-ttu-id="711e1-1882">In diesem Fall können Sie die folgende problemumgehung verwenden und übergeben `IntPtr(-1)` als zweiten Parameter (`errorInfo`):</span><span class="sxs-lookup"><span data-stu-id="711e1-1882">In this case, you can use the following workaround and pass `IntPtr(-1)` as the second parameter (`errorInfo`):</span></span>  
  
```  
[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]  
public static void ThrowExceptionForHR(interrorCode,IntPtrerrorInfo)  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1883">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1883">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1884">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1884">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer, errorInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="711e1-1885">Das der gewünschten Ausnahme entsprechende HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1885">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="711e1-1886">Ein Zeiger auf die [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)-Schnittstelle, die weitere Informationen über den Fehler bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1886">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="711e1-1887">Sie können <c>IntPtr(0)</c> angeben, um die aktuelle [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)-Schnittstelle zu verwenden, oder <c>IntPtr(-1)</c>, um die aktuelle [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)-Schnittstelle zu ignorieren und die Ausnahme direkt aus dem Fehlercode zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1887">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1888">Löst eine Ausnahme mit einem bestimmten Fehler-HRESULT auf Grundlage der angegebenen [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)-Schnittstelle aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1888">Throws an exception with a specific failure HRESULT, based on the specified [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1889">Diese Methode erstellt ein Exception-Objekt für den angegebenen HRESULT-Fehler.</span><span class="sxs-lookup"><span data-stu-id="711e1-1889">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="711e1-1890">Wenn das HRESULT 0 oder positiv ist (einen Erfolgscode) ist, erfolgt die Methodenrückgabe ohne erstellen oder eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1890">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="711e1-1891">Die <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> Methode Versionen der `errorInfo` -Parameter, verringert den COM-verweisen, die Anzahl der dem [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="711e1-1891">The <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method releases the `errorInfo` parameter, decreasing the COM reference count of the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span></span>  
  
 <span data-ttu-id="711e1-1892">Beachten Sie, dass die <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> Methodenrückgabe eine Ausnahme, die auf der Grundlage der [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) Schnittstelle des aktuellen Threads an, wenn diese festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="711e1-1892">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="711e1-1893">In diesem Fall die `errorCode` Parameter wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="711e1-1893">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="711e1-1894">Einige Fehler-HRESULTs zuordnen definierten Ausnahmen aus, während andere nicht.</span><span class="sxs-lookup"><span data-stu-id="711e1-1894">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="711e1-1895">Wenn ein HRESULT einer definierten Ausnahme zugeordnet <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> erstellt eine Instanz der Ausnahme und wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="711e1-1895">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="711e1-1896">Andernfalls, erstellt er eine Instanz des <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>das Codefeld Fehler mit HRESULT initialisiert und löst diese Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="711e1-1896">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="711e1-1897">Die `errorInfo` Parameter wird verwendet, um zusätzliche Informationen über den Fehler abzurufen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1897">The `errorInfo` parameter is used to retrieve extra information regarding the error.</span></span>  
  
 <span data-ttu-id="711e1-1898">Die Zuordnung von jedem HRESULT zu seiner vergleichbaren Ausnahmeklasse in .NET Framework, finden Sie unter [Vorgehensweise: Zuordnen von HRESULTs und Ausnahmen](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="711e1-1898">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1899">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1899">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1900">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1900">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement (arr As Array, index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(Array ^ arr, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="711e1-1901">Das Array, das das gewünschte Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1901">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="711e1-1902">Der Index im <c>arr</c>-Parameter des gewünschten Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1902">The index in the <c>arr</c> parameter of the desired element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1903">Ruft die Adresse des Elements am angegebenen Index des angegebenen Arrays ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1903">Gets the address of the element at the specified index inside the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1904">Die Adresse des <paramref name="index" /> im <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1904">The address of <paramref name="index" /> inside <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1905">Das Array muss angeheftet werden, mithilfe einer <xref:System.Runtime.InteropServices.GCHandle> vor der Übergabe an diese Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1905">The array must be pinned using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="711e1-1906">Um eine optimale Leistung überprüft diese Methode nicht das Array übergeben wird; Dies kann zu unerwartetem Verhalten führen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1906">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1907">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1907">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1908">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1908">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement&lt;T&gt; (T[] arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement&lt;T&gt;(!!T[] arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement(Of T) (arr As T(), index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(cli::array &lt;T&gt; ^ arr, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arr" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="711e1-1909">Der Typ des Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1909">The type of the array.</span>
          </span>
        </typeparam>
        <param name="arr">
          <span data-ttu-id="711e1-1910">Das Array, das das gewünschte Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1910">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="711e1-1911">Der Index des gewünschten Elements im <c>arr</c>-Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1911">The index of the desired element in the <c>arr</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1912">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1912">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="711e1-1913">Ruft die Adresse des Elements am angegebenen Index in einem Arrays des angegebenen Typs ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1913">Gets the address of the element at the specified index in an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="711e1-1914">Die Adresse des <paramref name="index" /> im <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1914">The address of <paramref name="index" /> in <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1915">Das Array muss angeheftet werden, mithilfe einer <xref:System.Runtime.InteropServices.GCHandle> vor der Übergabe an diese Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-1915">The array must be pinned by using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="711e1-1916">Um eine optimale Leistung überprüft diese Methode nicht das Array übergeben wird; Dies kann zu unerwartetem Verhalten führen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1916">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1917">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1917">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1918">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1918">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1919">Schreibt einen einzelnen Bytewert in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1919">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, System::Byte val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1920">Die Adresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1920">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-1921">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1921">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1922">Schreibt einen einzelnen Bytewert in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1922">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1923"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil Bytearray, der den entfallenden Aufwand für das Kopieren der eines nicht verwalteten Arrays (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1923"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1924">Im folgende Beispiel erstellt einen nicht verwalteten Speicherblock, schreibt ein Byte in den nicht verwalteten Speicher, das Byte wieder aus dem nicht verwalteten Arbeitsspeicher gelesen und dann den nicht verwalteten Arbeitsspeicher frei.</span><span class="sxs-lookup"><span data-stu-id="711e1-1924">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1925">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1925">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1926">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1926">-or-</span>
          </span>
          <span data-ttu-id="711e1-1927">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1927">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1928">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1928">-or-</span>
          </span>
          <span data-ttu-id="711e1-1929">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1929">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1930">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1930">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1931">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1931">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, int ofs, System::Byte val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1932">Die Basisadresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1932">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1933">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1933">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-1934">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1934">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1935">Schreibt einen einzelnen Bytewert an einem angegebenen Offset in den nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1935">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1936"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil Bytearray, der den entfallenden Aufwand für das Kopieren der eines nicht verwalteten Arrays (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1936"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1937">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1937">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1938">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1938">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1939">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1939">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1940">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1940">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (object ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte([out] object ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As Object, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(System::Object ^ ptr, int ofs, System::Byte val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1941">Die Basisadresse im nicht verwalteten Speicher des Zielobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1941">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1942">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1942">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-1943">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1943">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1944">Schreibt einen einzelnen Bytewert an einem angegebenen Offset in den nicht verwalteten Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1944">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1945"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil Bytearray, der den entfallenden Aufwand für das Kopieren der eines nicht verwalteten Arrays (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1945"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1946">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1946">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-1947">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1947">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-1948">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1948">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1949">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1949">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1950">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1950">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-1951">Schreibt eine 16-Bit-Ganzzahl mit Vorzeichen in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1951">Writes a 16-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-1952">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1952">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, char val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1953">Die Adresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1953">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-1954">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1954">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1955">Schreibt ein Zeichen als 16-Bit-Ganzzahl in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1955">Writes a character as a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1956"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1956"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-1957">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1957">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1958">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1958">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1959">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1959">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1960">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1960">-or-</span>
          </span>
          <span data-ttu-id="711e1-1961">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1961">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1962">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1962">-or-</span>
          </span>
          <span data-ttu-id="711e1-1963">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1963">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1964">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1964">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1965">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1965">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, short val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1966">Die Adresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1966">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-1967">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1967">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1968">Schreibt eine 16-Bit-Ganzzahl in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1968">Writes a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-1970">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1970">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1971">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1971">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1972">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1972">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-1973">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1973">-or-</span>
          </span>
          <span data-ttu-id="711e1-1974">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1974">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-1975">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1975">-or-</span>
          </span>
          <span data-ttu-id="711e1-1976">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1976">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1977">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1977">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1978">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1978">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, char val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1979">Die Basisadresse im systemeigenen Heap, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1979">The base address in the native heap to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1980">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1980">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-1981">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1981">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1982">Schreibt den Wert einer 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1982">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1983"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1983"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-1984">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1984">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1985">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1985">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1986">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1986">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1987">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1987">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1988">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1988">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, short val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1989">Die Basisadresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1989">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-1990">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1990">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-1991">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1991">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-1992">Schreibt den Wert einer 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1992">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-1993"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-1993"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-1994">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-1994">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-1995">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-1995">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-1996">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1996">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-1997">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1997">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-1998">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1998">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, char val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-1999">Die Basisadresse im nicht verwalteten Speicher des Zielobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-1999">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2000">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2000">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2001">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2001">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2002">Schreibt den Wert einer 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2002">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2004">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2004">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2005">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2005">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-2006">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2006">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-2007">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2007">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2008">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2008">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2009">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2009">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, short val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2010">Die Basisadresse im nicht verwalteten Speicher des Zielobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2010">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2011">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2011">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2012">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2012">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2013">Schreibt den Wert einer 16-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2013">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2014"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 16-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2014"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2015">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2015">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2016">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2016">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-2017">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2017">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-2018">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2018">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2019">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2019">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2020">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2020">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-2021">Schreibt eine 32-Bit-Ganzzahl mit Vorzeichen in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2021">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-2022">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2022">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2023">Die Adresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2023">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2024">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2024">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2025">Schreibt eine 32-Bit-Ganzzahl mit Vorzeichen in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2025">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2026"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 32-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2026"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2027">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2027">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2028">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-2028">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2029">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2029">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-2030">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2030">-or-</span>
          </span>
          <span data-ttu-id="711e1-2031">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2031">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-2032">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2032">-or-</span>
          </span>
          <span data-ttu-id="711e1-2033">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2033">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2034">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2034">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2035">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2035">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int ofs, int val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2036">Die Basisadresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2036">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2037">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2037">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2038">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2038">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2039">Schreibt den Wert einer 32-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2039">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2040"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 32-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2040"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2041">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2041">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2042">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-2042">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2043">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2043">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2044">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2044">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2045">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2045">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (object ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32([out] object ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As Object, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(System::Object ^ ptr, int ofs, int val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2046">Die Basisadresse im nicht verwalteten Speicher des Zielobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2046">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2047">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2047">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2048">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2048">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2049">Schreibt den Wert einer 32-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2049">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2050"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 32-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2050"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2051">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2051">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2052">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2052">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-2053">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2053">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-2054">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2054">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2055">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2055">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2056">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2056">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-2057">Schreibt eine 64-Bit-Ganzzahl mit Vorzeichen in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2057">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-2058">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2058">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, long val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2059">Die Adresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2059">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2060">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2060">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2061">Schreibt eine 64-Bit-Ganzzahl mit Vorzeichen in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2061">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2062"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 64-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2062"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2063">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2063">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2064">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-2064">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2065">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2065">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-2066">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2066">-or-</span>
          </span>
          <span data-ttu-id="711e1-2067">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2067">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-2068">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2068">-or-</span>
          </span>
          <span data-ttu-id="711e1-2069">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2069">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2070">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2070">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2071">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2071">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, int ofs, long val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2072">Die zu schreibende Basisadresse im nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2072">The base address in unmanaged memory to write.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2073">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2073">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2074">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2074">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2075">Schreibt den Wert einer 64-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2075">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2076"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 64-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2076"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2077">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2077">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2078">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-2078">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2079">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2079">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2080">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2080">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2081">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2081">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (object ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64([out] object ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As Object, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(System::Object ^ ptr, int ofs, long val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2082">Die Basisadresse im nicht verwalteten Speicher des Zielobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2082">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2083">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2083">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2084">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2084">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2085">Schreibt den Wert einer 64-Bit-Ganzzahl mit Vorzeichen an einem angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2085">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2086"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten 64-Bit mit Vorzeichen, ein nicht verwaltetes Array kopieren den entfallenden (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2086"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2087">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2087">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2088">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2088">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-2089">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2089">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-2090">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2090">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2091">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2091">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2092">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2092">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="711e1-2093">Schreibt einen Ganzzahlwert von prozessoreigener Größe in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2093">Writes a processor native-sized integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="711e1-2094">32-Bit-Ganzzahlen werden auf 32-Bit-Systemen geschrieben, und 64-Bit-Ganzzahlen werden auf 64-Bit-Systemen geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2094">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span>
          </span>
          <span data-ttu-id="711e1-2095">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2095">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, IntPtr val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2096">Die Adresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2096">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2097">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2097">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2098">Schreibt einen Ganzzahlwert von prozessoreigener Größe in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2098">Writes a processor native sized integer value into unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2099"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `IntPtr` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2099"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2100">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2100">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2101">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-2101">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2102">
            <paramref name="ptr" /> ist kein erkanntes Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2102">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="711e1-2103">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2103">-or-</span>
          </span>
          <span data-ttu-id="711e1-2104">
            <paramref name="ptr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2104">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="711e1-2105">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2105">-or-</span>
          </span>
          <span data-ttu-id="711e1-2106">
            <paramref name="ptr" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2106">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2107">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2107">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2108">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2108">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2109">Die Basisadresse im nicht verwalteten Speicher, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2109">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2110">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2110">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2111">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2111">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2112">Schreibt einen Ganzzahlwert von prozessoreigener Größe am angegebenen Offset in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2112">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2113">Diese Methode schreibt eine 32-Bit-Ganzzahl auf 32-Bit-Systemen und eine 64-Bit-Ganzzahl in 64-Bit-Systemen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2113">This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</span></span>  
  
 <span data-ttu-id="711e1-2114"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil `IntPtr` -Array, sodass ein nicht verwaltetes Array kopiert (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2114"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2115">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2115">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2116">Im folgenden Beispiel wird veranschaulicht, wie das Lesen und Schreiben in ein nicht verwaltetes Array mithilfe der <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> und <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="711e1-2116">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2117">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2117">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2118">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2118">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2119">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2119">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (object ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr([out] object ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As Object, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(System::Object ^ ptr, int ofs, IntPtr val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="711e1-2120">Die Basisadresse im nicht verwalteten Speicher des Zielobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2120">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="711e1-2121">Ein zusätzlicher Byteoffset, der dem <c>ptr</c>-Parameter vor dem Schreiben hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2121">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="711e1-2122">Der zu schreibende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2122">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2123">Schreibt einen Ganzzahlwert von prozessoreigener Größe in den nicht verwalteten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2123">Writes a processor native sized integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2124"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> ermöglicht die direkte Interaktion mit einem nicht verwalteten C-Stil Bytearray, der den entfallenden Aufwand für das Kopieren der eines nicht verwalteten Arrays (mit <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in ein separates verwaltetes Array vor dem die Elementwerte festlegen.</span><span class="sxs-lookup"><span data-stu-id="711e1-2124"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="711e1-2125">Das Schreiben in nicht ausgerichtete Speicheradressen wird unterstützt.</span><span class="sxs-lookup"><span data-stu-id="711e1-2125">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="711e1-2126">Die Basisadresse (<paramref name="ptr" />) und das Offsetbyte (<paramref name="ofs" />) erzeugen NULL oder eine ungültige Adresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2126">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="711e1-2127">
            <paramref name="ptr" /> ist ein <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2127">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="711e1-2128">Diese Methode akzeptiert keine <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2128">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2129">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2129">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2130">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeBSTR">
      <MemberSignature Language="C#" Value="public static void ZeroFreeBSTR (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeBSTR(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeBSTR (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeBSTR(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-2131">Die Adresse des freizugebenden <see langword="BSTR" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2131">The address of the <see langword="BSTR" /> to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2132">Gibt einen [BSTR](https://msdn.microsoft.com/library/ms221069.aspx)-Zeiger frei, der mit der <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />-Methode reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2132">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2133">Die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> Methode legt zuerst den Inhalt des BSTR auf 0 (null), und dann freigegeben BSTR.</span><span class="sxs-lookup"><span data-stu-id="711e1-2133">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method first sets the contents of the BSTR to zero, and then frees the BSTR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2134">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2134">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2135">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2135">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemAnsi(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-2136">Die Adresse der nicht verwalteten Zeichenfolge, die freigegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2136">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2137">Gibt einen nicht verwalteten Zeichenfolgenzeiger frei, der mit der <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />-Methode reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2137">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2138">Die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> Methode zuerst Nullen und dann freigegeben nicht verwalteten Speicher, der belegt wurde mithilfe der <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-2138">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2139">Im folgenden Beispiel wird die <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> gemarshallt und Entschlüsseln des Inhalts der Methode ein <xref:System.Security.SecureString> Objekt, das einen nicht verwalteten Speicherblock.</span><span class="sxs-lookup"><span data-stu-id="711e1-2139">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="711e1-2140">Es verwendet dann die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> Methode, die nicht verwaltete Block mit Nullen gefüllt und freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-2140">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2141">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2141">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2142">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2142">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUnicode(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-2143">Die Adresse der nicht verwalteten Zeichenfolge, die freigegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2143">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2144">Gibt einen nicht verwalteten Zeichenfolgenzeiger frei, der mit der <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />-Methode reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2144">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2145">Die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> Methode zuerst Nullen und dann freigegeben nicht verwalteten Speicher, der belegt wurde mithilfe der <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-2145">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2146">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2146">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2147">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2147">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUTF8 (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUTF8(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUTF8 (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUTF8(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocAnsi(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-2148">Die Adresse der nicht verwalteten Zeichenfolge, die freigegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2148">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2149">Gibt einen nicht verwalteten Zeichenfolgenzeiger frei, der mit der <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />-Methode reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2149">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2150">Die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> Methode zuerst Nullen und dann freigegeben nicht verwalteten Speicher, der belegt wurde mithilfe der <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-2150">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2151">Im folgenden Beispiel wird die <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> gemarshallt und Entschlüsseln des Inhalts der Methode ein <xref:System.Security.SecureString> Objekt, das einen nicht verwalteten Speicherblock.</span><span class="sxs-lookup"><span data-stu-id="711e1-2151">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="711e1-2152">Es verwendet dann die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> Methode, die nicht verwaltete Block mit Nullen gefüllt und freigegeben.</span><span class="sxs-lookup"><span data-stu-id="711e1-2152">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2153">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2153">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2154">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2154">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocUnicode(IntPtr s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="711e1-2155">Die Adresse der nicht verwalteten Zeichenfolge, die freigegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2155">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="711e1-2156">Gibt einen nicht verwalteten Zeichenfolgenzeiger frei, der mit der <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />-Methode reserviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2156">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="711e1-2157">Die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> Methode zuerst Nullen und dann freigegeben nicht verwalteten Speicher, der belegt wurde mithilfe der <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="711e1-2157">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="711e1-2158">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> Methode mit dem nicht verwalteten `LogonUser` Funktion zum Ausführen der Identitätswechsel mit den <xref:System.Security.SecureString> Klasse.</span><span class="sxs-lookup"><span data-stu-id="711e1-2158">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="711e1-2159">Anschließend wird die <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> Methode 0 (null) und des Verweis nicht verwalteten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="711e1-2159">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="711e1-2160">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2160">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="711e1-2161">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="711e1-2161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>