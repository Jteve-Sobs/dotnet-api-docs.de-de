<Type Name="_MethodInfo" FullName="System.Runtime.InteropServices._MethodInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="950099548d1a6ddcfd62fbe767036b4487d72c49" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _MethodInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _MethodInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._MethodInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _MethodInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _MethodInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("FFCC1B5D-ECB8-38DD-9B01-3DC8ABC2AA5F")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d9bf1-101">Macht die öffentlichen Member der <see cref="T:System.Reflection.MethodInfo" />-Klasse für nicht verwalteten Code verfügbar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9bf1-101">Exposes the public members of the <see cref="T:System.Reflection.MethodInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-102">Diese Schnittstelle ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-103">Diese Schnittstelle behält die Vtable-Reihenfolge von der <xref:System.Reflection.MethodInfo?displayProperty=nameWithType> -Klassenmember, die von nicht verwalteten COM-Objekte zugegriffen werden können.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-103">This interface preserves the vtable order of the <xref:System.Reflection.MethodInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-104">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.Attributes" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-105">Einer der <see cref="T:System.Reflection.MethodAttributes" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-105">One of the <see cref="T:System.Reflection.MethodAttributes" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-106">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-107">Die <xref:System.Reflection.MethodBase.Attributes%2A> -Eigenschaft ruft die Attribute dieser Methode zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-107">The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-108">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.CallingConvention" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.CallingConvention" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-109">Einer der <see cref="T:System.Reflection.CallingConventions" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-109">One of the <see cref="T:System.Reflection.CallingConventions" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-110">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-111">Die <xref:System.Reflection.MethodBase.CallingConvention%2A> -Eigenschaft ruft einen Wert, der angibt, der Aufrufkonventionen für diese Methode ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-111">The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-112">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MemberInfo.DeclaringType" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-113">Das <see langword="Type" />-Objekt für die Klasse, in der dieser Member deklariert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-113">The <see langword="Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-114">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-115">Die <xref:System.Reflection.MemberInfo.DeclaringType%2A> -Eigenschaft ruft die Klasse, die diesen Member deklariert.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-115">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="d9bf1-116">Das <see cref="T:System.Object" />, das mit dem aktuellen <see cref="T:System.Object" /> verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-116">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-117">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Object.Equals(System.Object)" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-117">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-118">
            <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich der aktuellen <see cref="T:System.Object" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-118">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-119">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-119">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-120">Die <xref:System.Object.Equals%2A> Methode bestimmt, ob das angegebene <xref:System.Object> ist gleich dem aktuellen <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-120">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetBaseDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetBaseDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetBaseDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseDefinition () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetBaseDefinition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-121">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MethodInfo.GetBaseDefinition" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-121">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodInfo.GetBaseDefinition" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-122">Ein <see cref="T:System.Reflection.MethodInfo" />-Objekt für die erste Implementierung dieser Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-122">A <see cref="T:System.Reflection.MethodInfo" /> object for the first implementation of this method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-123">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-123">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-124">Die <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> Methode gibt die <xref:System.Reflection.MethodInfo> -Objekt für die Methode für die direkte oder indirekte Basisklasse, die von dieser Instanz dargestellte Methode in der ersten wurde deklariert.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-124">The <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> method returns the <xref:System.Reflection.MethodInfo> object for the method on the direct or indirect base class in which the method represented by this instance was first declared.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-125">Stellt einen versionsunabhängigen Zugriff auf die <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />-Methoden für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-126">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-127">Die <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Elemente zurückzugeben, alle Attribute, die auf diesen Member angewendet.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-127">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> members return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="d9bf1-128">
            <see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-128">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-129">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-129">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-130">Ein Array, das alle benutzerdefinierten Attribute enthält, oder ein Array mit 0 (null) Elementen, wenn keine Attribute definiert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-130">An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-131">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-131">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-132">Die <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> -Methode gibt ein Array, das alle benutzerdefinierten Attribute enthält.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-132">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="d9bf1-133">Der Typ des zu suchenden Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-133">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="d9bf1-134">Nur Attribute, die diesem Typ zugeordnet werden können, werden zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-134">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="d9bf1-135">
            <see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-135">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-136">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-136">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-137">Ein Array von benutzerdefinierten Attributen, die auf diesen Member angewendet werden, oder ein Array mit 0 (null) Elementen, wenn keine Attribute angewendet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-137">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-138">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-139">Die <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> -Methode gibt ein Array benutzerdefinierter Attribute identifizierten <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-139">The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-140">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Object.GetHashCode" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-140">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-141">Der Hashcode für die aktuelle Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-141">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-142">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-142">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-143">Die <xref:System.Object.GetHashCode%2A> Methode dient als Hashfunktion für einen bestimmten Typ.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-143">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="d9bf1-144"><xref:System.Object.GetHashCode%2A> eignet sich für die Verwendung in Hashalgorithmen und Datenstrukturen wie Hashtabellen.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-144"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="d9bf1-145">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-145">Reserved for future use.</span>
          </span>
          <span data-ttu-id="d9bf1-146">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-146">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="d9bf1-147">Ein Array von zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-147">An array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="d9bf1-148">Die Anzahl der zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-148">The count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="d9bf1-149">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-149">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="d9bf1-150">Ein Array, das vom Aufrufer zugeordnet wird, das die den Namen entsprechenden Bezeichner empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-150">An array allocated by the caller that receives the identifiers corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-151">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-151">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-152">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-152">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="d9bf1-153">Weitere Informationen zu `IDispatch::GetIDsOfNames`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-153">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-154">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-154">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-155">Einer der <see cref="T:System.Reflection.MethodImplAttributes" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-155">One of the <see cref="T:System.Reflection.MethodImplAttributes" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-156">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-157">Die <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> Element gibt die <xref:System.Reflection.MethodImplAttributes> Flags.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-157">The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-158">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MethodBase.GetParameters" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-158">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetParameters" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-159">Ein Array vom Typ <see cref="T:System.Reflection.ParameterInfo" /> mit Informationen, die mit der Signatur der Methode (bzw. Konstruktors) übereinstimmen, die bzw. der durch diese Instanz reflektiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-159">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing information that matches the signature of the method (or constructor) reflected by this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-160">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-160">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-161">Die <xref:System.Reflection.MethodBase.GetParameters%2A> Methode ruft die Parameter der angegebenen Methode oder des Konstruktors ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-161">The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-162">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Type.GetType" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-162">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-163">Ein <see cref="T:System.Type" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-163">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-164">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-164">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-165">Die <xref:System.Type.GetType%2A> Methode ruft den Typ der aktuellen Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-165">The <xref:System.Type.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="d9bf1-166">Die zurückzugebenden Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-166">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="d9bf1-167">Der Gebietsschemabezeichner für die Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-167">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="d9bf1-168">Ein Zeiger auf das angeforderte Objekt mit den Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-168">A pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-169">Ruft die Typinformationen für ein Objekt ab, mit deren Hilfe die Typinformationen für eine Schnittstelle abgerufen werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-169">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-170">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-170">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="d9bf1-171">Weitere Informationen zu `IDispatch::GetTypeInfo`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-171">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="d9bf1-172">Diese Methode gibt einen Zeiger auf einen Speicherort zurück, der die Anzahl der von dem Objekt bereitgestellten Schnittstellen mit Typinformationen empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-172">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="d9bf1-173">Dieser Parameter wird nicht initialisiert übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-173">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-174">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-174">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-175">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-175">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="d9bf1-176">Weitere Informationen zu `IDispatch::GetTypeInfoCount`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-176">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-177">Stellt einen versionsunabhängigen Zugriff auf die <see cref="Overload:System.Reflection.MethodBase.Invoke" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-177">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MethodBase.Invoke" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-178">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-178">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-179">Die <xref:System.Reflection.ConstructorInfo.Invoke%2A> Methoden aufrufen, die von der Instanz, die den angegebenen Parametern reflektierten Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-179">The <xref:System.Reflection.ConstructorInfo.Invoke%2A> methods invoke the constructor reflected by the instance that has the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d9bf1-180">Die Instanz, die diese Methode erstellt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-180">The instance that created this method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="d9bf1-181">Eine Argumentliste für die aufgerufene Methode oder den Konstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-181">An argument list for the invoked method or constructor.</span>
          </span>
          <span data-ttu-id="d9bf1-182">Diese ist ein Array von Objekten, die hinsichtlich Anzahl, Reihenfolge und Typ mit den Parametern der aufzurufenden Methode bzw. des aufzurufenden Konstruktors identisch sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-182">This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</span>
          </span>
          <span data-ttu-id="d9bf1-183">Wenn keine Parameter vorhanden sind, sollte <c>parameters</c> gleich <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-183">If there are no parameters, <c>parameters</c> should be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d9bf1-184">Wenn die Methode oder der Konstruktor, die bzw. der von dieser Instanz dargestellt wird, einen <see langword="ref" />-Parameter (<see langword="ByRef" /> in Visual Basic) akzeptiert, ist für diesen Parameter kein besonderes Attribut erforderlich, um die Methode oder den Konstruktor mithilfe dieser Funktion aufzurufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-184">If the method or constructor represented by this instance takes a <see langword="ref" /> parameter (<see langword="ByRef" /> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function.</span>
          </span>
          <span data-ttu-id="d9bf1-185">Jedes Objekt im Array, das nicht explizit mit einem Wert initialisiert wird, wird den Standardwert für diesen Objekttyp enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-185">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="d9bf1-186">Bei Elementen mit Verweistyp ist dieser Wert <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-186">For reference type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d9bf1-187">Bei Elementen mit Werttyp beträgt dieser Wert je nach Typ des jeweiligen Elements 0, 0.0 oder <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-187">For value type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-188">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-188">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-189">Eine Instanz der Klasse, die dem Konstruktor zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-189">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-190">Die <xref:System.Reflection.MethodBase.Invoke%2A> Methode ruft die Methode oder der Konstruktor, der von diesem Objekt, das mit den angegebenen Parametern dargestellt.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-190">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d9bf1-191">Die Instanz, die diese Methode erstellt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-191">The instance that created this method.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="d9bf1-192">Einer der <see langword="BindingFlags" />-Werte, der den Typ der Bindung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-192">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="d9bf1-193">Ein <see langword="Binder" />, der eine Gruppe von Eigenschaften definiert und die Bindung, die Umwandlung der Argumenttypen sowie das Aufrufen von Membern mithilfe der Reflektion ermöglicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-193">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="d9bf1-194">Wenn <c>binder</c> den Wert <see langword="null" /> hat, wird <see langword="Binder.DefaultBinding" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-194">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="d9bf1-195">Ein Array vom Typ <see langword="Object" />, das zum Abgleichen der Anzahl, der Reihenfolge und des Typs der Parameter für diesen Konstruktor verwendet wird, wobei die Einschränkungen von <c>binder</c> gelten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-195">An array of type <see langword="Object" /> used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="d9bf1-196">Wenn für diesen Konstruktor keine Parameter erforderlich sind, übergeben Sie ein Array mit 0 Elementen, wie in <c>Object[] parameters = new Object[0]</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-196">If this constructor does not require parameters, pass an array with zero elements, as in <c>Object[] parameters = new Object[0]</c>.</span>
          </span>
          <span data-ttu-id="d9bf1-197">Jedes Objekt im Array, das nicht explizit mit einem Wert initialisiert wird, wird den Standardwert für diesen Objekttyp enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-197">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="d9bf1-198">Bei Elementen mit Verweistyp ist dieser Wert <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-198">For reference type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d9bf1-199">Bei Elementen mit Werttyp beträgt dieser Wert je nach Typ des jeweiligen Elements 0, 0.0 oder <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-199">For value type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d9bf1-200">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, mit dem die Umwandlung von Typen gesteuert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-200">A <see cref="T:System.Globalization.CultureInfo" /> object used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="d9bf1-201">Wenn dies <see langword="null" /> ist, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-201">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-202">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-202">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-203">Eine Instanz der Klasse, die dem Konstruktor zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-203">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-204">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-204">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-205">Die <xref:System.Reflection.MethodBase.Invoke%2A> Methode aufruft, die von diesem reflektierten Konstruktor <xref:System.Reflection.ConstructorInfo> Objekt mit den angegebenen Argumenten gemäß den Einschränkung des angegebenen <xref:System.Reflection.Binder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-205">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="d9bf1-206">Ein Bezeichner für den Member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-206">An identifier for the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="d9bf1-207">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-207">Reserved for future use.</span>
          </span>
          <span data-ttu-id="d9bf1-208">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-208">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="d9bf1-209">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-209">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="d9bf1-210">Flags, die den Kontext des Aufrufs beschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-210">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="d9bf1-211">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-211">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="d9bf1-212">Ein Zeiger auf den Speicherort, an dem das Ergebnis gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-212">A pointer to the location where the result will be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="d9bf1-213">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-213">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="d9bf1-214">Der Index des ersten Arguments mit einem Fehler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-214">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-215">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-215">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-216">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-216">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="d9bf1-217">Weitere Informationen zu `IDispatch::Invoke`, finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-217">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-218">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsAbstract" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-218">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAbstract" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-219">
            <see langword="true" />, wenn die Methode abstrakt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-219">
              <see langword="true" /> if the method is abstract; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-220">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-220">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-221">Die <xref:System.Reflection.MethodBase.IsAbstract%2A> -Eigenschaft ruft einen Wert, der angibt, ob die Methode abstrakt ist.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-221">The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-222">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsAssembly" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-222">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-223">
            <see langword="true" />, wenn diese Methode von anderen Klassen in derselben Assembly aufgerufen werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-223">
              <see langword="true" /> if this method can be called by other classes in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-224">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-224">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-225">Die <xref:System.Reflection.MethodBase.IsAssembly%2A> -Eigenschaft ruft einen Wert, der angibt, ob diese Methode von anderen Klassen in der gleichen Assembly aufgerufen werden kann</span><span class="sxs-lookup"><span data-stu-id="d9bf1-225">The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructor">
      <MemberSignature Language="C#" Value="public bool IsConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructor" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsConstructor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-226">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsConstructor" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-226">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsConstructor" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-227">
            <see langword="true" />, wenn diese Methode ein Konstruktor ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-227">
              <see langword="true" /> if this method is a constructor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-228">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-228">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-229">Die <xref:System.Reflection.MethodBase.IsConstructor%2A> -Eigenschaft ruft einen Wert, der angibt, ob die Methode einen Konstruktor ist.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-229">The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="d9bf1-230">Das <see langword="Type" />-Objekt, auf das die benutzerdefinierten Attribute angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-230">The <see langword="Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="d9bf1-231">
            <see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-231">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9bf1-232">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-232">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-233">
            <see langword="true" />, wenn eine oder mehrere Instanzen des <paramref name="attributeType" />-Parameters auf diesen Member angewendet werden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-233">
              <see langword="true" /> if one or more instance of the <paramref name="attributeType" /> parameter is applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-234">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-234">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-235">Die <xref:System.Reflection.MemberInfo.IsDefined%2A> Element gibt an, ob eine oder mehrere Instanzen der `attributeType` -Parameters auf diesen Member angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-235">The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of the `attributeType` parameter are applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-236">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsFamily" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-236">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamily" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-237">
            <see langword="true" />, wenn der Zugriff auf die Klasse auf Member der Klasse selbst und auf Member ihrer abgeleiteten Klassen beschränkt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-237">
              <see langword="true" /> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-238">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-238">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-239">Die <xref:System.Reflection.MethodBase.IsFamily%2A> -Eigenschaft ruft einen Wert, der angibt, ob der Zugriff auf diese Methode auf Member der Klasse und die Member der abgeleiteten Klassen beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-239">The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-240">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-240">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-241">
            <see langword="true" />, wenn der Zugriff auf diese Methode auf Member der Klasse selbst und auf Member abgeleiteter Klassen in derselben Assembly beschränkt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-241">
              <see langword="true" /> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-242">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-242">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-243">Die <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> -Eigenschaft ruft einen Wert, der angibt, ob diese Methode von Mitgliedern der Klasse aufgerufen werden kann und abgeleiteten Klassen aus, wenn sie sich in derselben Assembly befinden</span><span class="sxs-lookup"><span data-stu-id="d9bf1-243">The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-244">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-244">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-245">
            <see langword="true" />, wenn der Zugriff auf diese Methode auf Member der Klasse selbst, auf Member abgeleiteter Klassen unabhängig von ihrer Position und auf Member anderer Klassen in derselben Assembly beschränkt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-245">
              <see langword="true" /> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-246">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-246">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-247">Die <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> -Eigenschaft ruft einen Wert, der angibt, ob diese Methode von abgeleiteten Klassen aufgerufen werden kann, wo sie gespeichert sind, und durch alle Klassen in der gleichen Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-247">The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinal">
      <MemberSignature Language="C#" Value="public bool IsFinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFinal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFinal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-248">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsFinal" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-248">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFinal" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-249">
            <see langword="true" />, wenn diese Methode <see langword="final" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-249">
              <see langword="true" /> if this method is <see langword="final" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-250">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-250">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-251">Die <xref:System.Reflection.MethodBase.IsFinal%2A> -Eigenschaft ruft einen Wert, der angibt, ob diese Methode ist `final`.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-251">The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHideBySig">
      <MemberSignature Language="C#" Value="public bool IsHideBySig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHideBySig" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsHideBySig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHideBySig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHideBySig { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-252">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsHideBySig" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-252">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsHideBySig" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-253">
            <see langword="true" />, wenn der Member durch die Signatur verborgen ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-253">
              <see langword="true" /> if the member is hidden by signature; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-254">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-254">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-255">Die <xref:System.Reflection.MethodBase.IsHideBySig%2A> -Eigenschaft ruft einen Wert, der angibt, ob nur ein Element mit dem gleichen Namen mit derselben Signatur in der abgeleiteten Klasse ausgeblendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-255">The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-256">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsPrivate" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-256">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPrivate" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-257">
            <see langword="true" />, wenn der Zugriff auf diese Methode auf andere Member der Klasse selbst beschränkt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-257">
              <see langword="true" /> if access to this method is restricted to other members of the class itself; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-258">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-258">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-259">Die <xref:System.Reflection.MethodBase.IsPrivate%2A> -Eigenschaft ruft einen Wert, der angibt, ob es sich bei diesem Member privat ist.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-259">The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-260">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsPublic" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-260">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-261">
            <see langword="true" />, wenn diese Methode öffentlich ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-261">
              <see langword="true" /> if this method is public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-262">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-262">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-263">Die <xref:System.Reflection.MethodBase.IsPublic%2A> -Eigenschaft ruft einen Wert, der angibt, ob diese Methode öffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-263">The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-264">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsSpecialName" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-264">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-265">
            <see langword="true" />, wenn diese Methode einen besonderen Namen hat, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-265">
              <see langword="true" /> if this method has a special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-266">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-266">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-267">Die <xref:System.Reflection.MethodBase.IsSpecialName%2A> -Eigenschaft ruft einen Wert, der angibt, ob diese Methode einen besonderen Namen hat.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-267">The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-268">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsStatic" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-268">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsStatic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-269">
            <see langword="true" />, wenn diese Methode <see langword="static" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-269">
              <see langword="true" /> if this method is <see langword="static" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-270">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-270">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-271">Die <xref:System.Reflection.MethodBase.IsStatic%2A> -Eigenschaft ruft einen Wert, der angibt, ob die Methode ist `static`.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-271">The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtual">
      <MemberSignature Language="C#" Value="public bool IsVirtual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVirtual" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsVirtual" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVirtual As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVirtual { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-272">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.IsVirtual" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-272">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsVirtual" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-273">
            <see langword="true" />, wenn diese Methode <see langword="virtual" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-273">
              <see langword="true" /> if this method is <see langword="virtual" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-274">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-274">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-275">Die <xref:System.Reflection.MethodBase.IsVirtual%2A> -Eigenschaft ruft einen Wert, der angibt, ob die Methode ist `virtual`.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-275">The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-276">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MemberInfo.MemberType" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-276">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-277">Einer der <see cref="T:System.Reflection.MemberTypes" />-Werte, die den Membertyp angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-277">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating the type of member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-278">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-278">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-279">Die <xref:System.Reflection.MemberInfo.MemberType%2A> Eigenschaft ruft eine <xref:System.Reflection.MemberTypes> Wert, der angibt, der Typ des Members – Methode, Konstruktor, Ereignis- und So weiter.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-279">The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-280">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodBase.MethodHandle" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-280">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.MethodHandle" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-281">Ein <see cref="T:System.RuntimeMethodHandle" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-281">A <see cref="T:System.RuntimeMethodHandle" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-282">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-282">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-283">Die <xref:System.Reflection.MethodBase.MethodHandle%2A> -Eigenschaft ruft ein Handle für die interne Metadatendarstellung einer Methode ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-283">The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-284">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MemberInfo.Name" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-284">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-285">Ein <see cref="T:System.String" />-Objekt mit dem Namen dieses Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-285">A <see cref="T:System.String" /> object containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-286">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-286">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-287">Die <xref:System.Reflection.MemberInfo.Name%2A> Eigenschaft ruft den Namen des aktuellen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-287">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-288">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MemberInfo.ReflectedType" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-288">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-289">Das <see langword="Type" />-Objekt, mit dem dieses <see langword="MemberInfo" />-Objekt abgerufen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-289">The <see langword="Type" /> object that was used to obtain this <see langword="MemberInfo" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-290">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-290">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-291">Die <xref:System.Reflection.MemberInfo.ReflectedType%2A> Eigenschaft ruft das Klassenobjekt, der verwendet wurde, zum Abrufen dieser `MemberInfo` Objekt.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-291">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this `MemberInfo` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-292">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodInfo.ReturnType" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-292">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodInfo.ReturnType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-293">Der Rückgabetyp dieser Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-293">The return type of this method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-294">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-294">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-295">Die <xref:System.Reflection.MethodInfo.ReturnType%2A> Eigenschaft ruft den Rückgabetyp dieser Methode ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-295">The <xref:System.Reflection.MethodInfo.ReturnType%2A> property gets the return type of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributes">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnTypeCustomAttributes As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ ReturnTypeCustomAttributes { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-296">Stellt einen versionsunabhängigen Zugriff auf die <see cref="P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes" />-Eigenschaft für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-296">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9bf1-297">Ein <see cref="T:System.Reflection.ICustomAttributeProvider" />-Objekt, das die benutzerdefinierten Attribute für den Rückgabetyp darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-297">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> object representing the custom attributes for the return type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-298">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-298">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="d9bf1-299">Die <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> -Eigenschaft ruft die benutzerdefinierten Attribute für den Rückgabetyp ab.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-299">The <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> property gets the custom attributes for the return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9bf1-300">Stellt einen versionsunabhängigen Zugriff auf die <see cref="M:System.Object.ToString" />-Methode für COM-Objekte bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-300">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9bf1-301">Eine Zeichenfolge, die das aktuelle <see cref="T:System.Object" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9bf1-301">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9bf1-302">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d9bf1-302">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>