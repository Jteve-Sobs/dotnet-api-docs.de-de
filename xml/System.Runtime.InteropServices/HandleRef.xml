<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HandleRef.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c6025563932e240869a1ba4e28b71c466b6e7e86.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6025563932e240869a1ba4e28b71c466b6e7e86</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.</source>
          <target state="translated">Umschließt ein verwaltetes Objekt, das ein Handle zu einer Ressource enthält, die über einen Plattformaufruf an nicht verwalteten Code übergeben wird.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>Starting with the .NET Framework 2.0, the functionality of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> class has been replaced by the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class and its derived classes, as well as by the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph> class.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, die Funktionalität der <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> Klasse wurde ersetzt durch die <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> Klasse und abgeleitete Klassen, als auch durch die <ph id="ph3">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>If you use platform invoke to call a managed object, and the object is not referenced elsewhere after the platform invoke call, it is possible for the garbage collector to finalize the managed object.</source>
          <target state="translated">Bei Verwendung von Plattform aufrufen, um ein verwaltetes Objekt aufzurufen und das Objekt ist nicht an anderer Stelle verwiesen, nach der Plattformaufruf, es ist möglich, dass der Garbage Collector das verwaltete Objekt abschließen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>This action releases the resource and invalidates the handle, causing the platform invoke call to fail.</source>
          <target state="translated">Diese Aktion gibt die Ressource frei und erklärt das Handle die Plattform verursacht Plattformaufrufs fehlschlägt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>Wrapping a handle with <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> guarantees that the managed object is not garbage collected until the platform invoke call completes.</source>
          <target state="translated">Ein Handle mit Wrapping <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> wird sichergestellt, dass das verwaltete Objekt wird keine Garbage Collection durchgeführt wird, bis der Plattformaufruf abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>For a description of platform invoke services, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">Eine Beschreibung der Plattform Dienste aufrufen, finden Sie unter <bpt id="p1">[</bpt>nicht verwaltete DLL-Funktionen nutzen<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> value type, like <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph>, is a special type recognized by the interop marshaler.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> Werttyp, z. B. <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph>, ist ein spezieller Typ von der Interop-Marshaller erkannt.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>A normal, nonpinned <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> also prevents untimely garbage collection, yet <ph id="ph2">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> provides better performance.</source>
          <target state="translated">Ein normaler nicht fixiertes <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> vorzeitige Erfassung durch die Garbagecollection, wird außerdem verhindert <ph id="ph2">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> bietet eine bessere Leistung.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>Although using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> to keep an object alive for the duration of a platform invoke call is preferred, you can also use the <ph id="ph2">&lt;xref:System.GC.KeepAlive%2A?displayProperty=nameWithType&gt;</ph> method for the same purpose.</source>
          <target state="translated">Obwohl durch die Verwendung <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> auf ein Objekt am Leben zu erhalten, für die Dauer einer Plattform Plattformaufrufs werden bevorzugt, können Sie auch die <ph id="ph2">&lt;xref:System.GC.KeepAlive%2A?displayProperty=nameWithType&gt;</ph> Methode für den gleichen Zweck.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> constructor takes two parameters: an <ph id="ph2">&lt;xref:System.Object&gt;</ph> representing the wrapper, and an <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> representing the unmanaged handle.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef&gt;</ph> Konstruktor akzeptiert zwei Parameter: eine <ph id="ph2">&lt;xref:System.Object&gt;</ph> , die den Wrapper darstellt und ein <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> , die nicht verwaltete Handle darstellt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.HandleRef">
          <source>The interop marshaler passes only the handle to unmanaged code, and guarantees that the wrapper (passed as the first parameter to the constructor of the <ph id="ph1">`HandleRef`</ph>) remains alive for the duration of the call.</source>
          <target state="translated">Der Interop-Marshaller übergibt nur das Handle zu nicht verwaltetem Code und stellt sicher, dass den Wrapper (als erster Parameter übergeben wird, an den Konstruktor der <ph id="ph1">`HandleRef`</ph>) für die Dauer des Aufrufs aktiv bleibt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
          <source>A managed object that should not be finalized until the platform invoke call returns.</source>
          <target state="translated">Ein verwaltetes Objekt, das nicht finalisiert werden darf, bevor der Plattformaufruf beendet wird.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that indicates a handle to a resource.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>, das ein Handle für eine Ressource angibt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> class with the object to wrap and a handle to the resource used by unmanaged code.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph>-Klasse mit dem zu umschließenden Objekt und einem Handle auf die Ressource, die von nicht verwaltetem Code verwendet wird.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.HandleRef.Handle">
          <source>Gets the handle to a resource.</source>
          <target state="translated">Ruft das Handle für eine Ressource ab.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.HandleRef.Handle">
          <source>The handle to a resource.</source>
          <target state="translated">Das Handle für eine Ressource.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
          <source>The object that needs a handle.</source>
          <target state="translated">Das Objekt, für das ein Handle erforderlich ist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
          <source>Returns the handle to a resource of the specified <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> object.</source>
          <target state="translated">Gibt das Handle für eine Ressource des angegebenen <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph>-Objekts zurück.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
          <source>The handle to a resource of the specified <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> object.</source>
          <target state="translated">Das Handle für eine Ressource des angegebenen <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Die entsprechende Methode für diesen Operator ist. <ph id="ph1">&lt;xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> object to retrieve an internal integer representation from.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph>-Objekt, aus dem eine interne Ganzzahldarstellung abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
          <source>Returns the internal integer representation of a <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> object.</source>
          <target state="translated">Gibt die interne Ganzzahldarstellung eines <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph>-Objekts zurück.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> object that represents a <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Objekt, das ein <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph>-Objekt darstellt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.HandleRef.Wrapper">
          <source>Gets the object holding the handle to a resource.</source>
          <target state="translated">Ruft das Objekt ab, das das Handle für eine Ressource enthält.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.HandleRef.Wrapper">
          <source>The object holding the handle to a resource.</source>
          <target state="translated">Das Objekt, das das Handle für eine Ressource enthält.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>