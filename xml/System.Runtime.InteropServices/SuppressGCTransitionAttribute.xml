<Type Name="SuppressGCTransitionAttribute" FullName="System.Runtime.InteropServices.SuppressGCTransitionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f1ee401625ff08c65ddd9314d102ba7a6f5fadc" /><Meta Name="ms.sourcegitcommit" Value="ff93f301301180af9a0213650c5b4edb28570fd0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/18/2020" /><Meta Name="ms.locfileid" Value="88557082" /></Metadata><TypeSignature Language="C#" Value="public sealed class SuppressGCTransitionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressGCTransitionAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SuppressGCTransitionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SuppressGCTransitionAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SuppressGCTransitionAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SuppressGCTransitionAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass ein Garbage-Collection-Übergang übersprungen werden soll, wenn ein nicht verwalteter Funktionsaufruf erfolgt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

Dieses Attribut wird ignoriert, wenn es ohne das auf eine Methode angewendet wird <xref:System.Runtime.InteropServices.DllImportAttribute> .
 
 Diese Umstellung kann zu Vorteilen führen, wenn die Kosten des Übergangs die Ausführungszeit der nicht verwalteten Funktion überschreiten. Das vermeiden dieses Übergangs entfernt jedoch einige der Garantien, die die Laufzeit durch einen normalen P/Aufruf bereitstellt. Beim Beenden der verwalteten Laufzeit für die Eingabe einer nicht verwalteten Funktion muss der GC vom kooperativen Modus in den präemptiven Modus übergehen. Ausführliche Informationen zu diesen Modi finden Sie unter https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/clr-code-guide.md#2.1.8 .
Das Unterdrücken des GC-Übergangs ist ein erweitertes Szenario und sollte nicht ohne vollständiges Verständnis potenzieller Konsequenzen erreicht werden.
 
 Eine dieser Konsequenzen wirkt sich auf das [Debuggen im gemischten Modus](https://docs.microsoft.com/visualstudio/debugger/how-to-debug-in-mixed-mode)aus.
Während des Debuggens im gemischten Modus ist es nicht möglich, in einem P/-Aufruf, der mit diesem Attribut markiert wurde, einen Einzelschritt durchzuführen oder Haltepunkte festzulegen. Eine Problem Umgehung besteht darin, zu nativem Debugging zu wechseln und in der systemeigenen Funktion einen Haltepunkt festzulegen.
Im Allgemeinen ist die Verwendung dieses Attributs nicht empfehlenswert, wenn das Debuggen des P/Aufrufs wichtig ist, z. b. durchlaufen des systemeigenen Codes oder diagnostizieren einer Ausnahme, die vom systemeigenen Code ausgelöst wird.
 
 Die P/Aufruf-Methode, auf die dieses Attribut angewendet wird, muss über die folgenden Eigenschaften verfügen:
 * Die native Funktion wird immer für einen trivialen Zeitraum (weniger als eine Mikrosekunde) ausgeführt.
 * Die native Funktion führt keine blockierende syscall-Funktion aus (z. b. beliebige e/a-Typen).
 * Die native Funktion ruft keinen Rückruf für die Laufzeit auf (z. b. Reverse-P/aufrufen).
 * Die native Funktion löst keine Ausnahmen aus.
 * Die native Funktion bearbeitet keine Sperren oder anderen Parallelitäts primitiven.
 
 Zu den Folgen der ungültigen Verwendung dieses Attributs gehören:
 
 * GC-Hunger.
 * Sofortiges Beenden der Laufzeit.
 * Beschädigung von Daten.

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressGCTransitionAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SuppressGCTransitionAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SuppressGCTransitionAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
