<Type Name="ComWrappers" FullName="System.Runtime.InteropServices.ComWrappers">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c7496199f6066ff8a685d21c4927fed3abc7082" /><Meta Name="ms.sourcegitcommit" Value="6fca7f55940a389853cc2d183619073ce0d69092" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/26/2020" /><Meta Name="ms.locfileid" Value="88868185" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComWrappers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComWrappers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComWrappers" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComWrappers" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComWrappers abstract" />
  <TypeSignature Language="F#" Value="type ComWrappers = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Klasse zum Verwalten von Wrappern von COM-IUnknown-Typen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComWrappers();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeVtables">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry* ComputeVtables (object? obj, System.Runtime.InteropServices.CreateComInterfaceFlags flags, out int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.InteropServices.ComWrappers/ComInterfaceEntry* ComputeVtables(object obj, valuetype System.Runtime.InteropServices.CreateComInterfaceFlags flags, [out] int32&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.ComputeVtables(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::InteropServices::ComWrappers::ComInterfaceEntry* ComputeVtables(System::Object ^ obj, System::Runtime::InteropServices::CreateComInterfaceFlags flags, [Runtime::InteropServices::Out] int % count);" />
      <MemberSignature Language="F#" Value="abstract member ComputeVtables : obj * System.Runtime.InteropServices.CreateComInterfaceFlags * int -&gt; nativeptr&lt;System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry&gt;" Usage="comWrappers.ComputeVtables (obj, flags, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComWrappers+ComInterfaceEntry*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateComInterfaceFlags" />
        <Parameter Name="count" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj">Ziel der zurückgegebenen VTables.</param>
        <param name="flags">Flags, die zum Berechnen von VTables verwendet werden.</param>
        <param name="count">Die Anzahl der Elemente, die im zurückgegebenen Arbeitsspeicher enthalten sind.</param>
        <summary>Berechnet die gewünschte VTable für <paramref name="obj" />, wobei die Werte von <paramref name="flags" /> beachtet werden.</summary>
        <returns><see cref="T:System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry" />-Zeiger, der den Arbeitsspeicher für alle COM-Schnittstelleneinträge enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Der gesamte von dieser Funktion zurückgegebene Arbeitsspeicher muss entweder nicht verwalteter Arbeitsspeicher oder angehefteter verwalteter Speicher sein oder mit der API zugeordnet worden sein <xref:System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(System.Type,System.Int32)> .
 
Wenn die Schnittstellen Einträge nicht erstellt werden können und ein negativer oder ein ungleich `count` `null` NULL-Wert `count` zurückgegeben wird, löst der-Aufrufvorgang <xref:System.Runtime.InteropServices.ComWrappers.GetOrCreateComInterfaceForObject(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags)> einen aus <xref:System.ArgumentException> .

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="protected abstract object CreateObject (IntPtr externalComObject, System.Runtime.InteropServices.CreateObjectFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateObject(native int externalComObject, valuetype System.Runtime.InteropServices.CreateObjectFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.CreateObject(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateObject (externalComObject As IntPtr, flags As CreateObjectFlags) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ CreateObject(IntPtr externalComObject, System::Runtime::InteropServices::CreateObjectFlags flags);" />
      <MemberSignature Language="F#" Value="abstract member CreateObject : nativeint * System.Runtime.InteropServices.CreateObjectFlags -&gt; obj" Usage="comWrappers.CreateObject (externalComObject, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalComObject" Type="System.IntPtr" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateObjectFlags" />
      </Parameters>
      <Docs>
        <param name="externalComObject">Objekt, das zur Verwendung in der .NET-Runtime importiert werden soll.</param>
        <param name="flags">Flags, die zum Beschreiben des externen Objekts verwendet werden.</param>
        <summary>Erstellt ein verwaltetes Objekt für das Objekt, auf das <paramref name="externalComObject" /> verweist, wobei die Werte von <paramref name="flags" /> beachtet werden.</summary>
        <returns>Ein verwaltetes Objekt, das dem bereitgestellten externen COM-Objekt zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Wenn das Objekt nicht erstellt werden kann und `null` zurückgegeben wird, löst der-Aufrufvorgang <xref:System.Runtime.InteropServices.ComWrappers.GetOrCreateObjectForComInstance(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags)> einen aus <xref:System.ArgumentNullException> .

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownImpl">
      <MemberSignature Language="C#" Value="protected static void GetIUnknownImpl (out IntPtr fpQueryInterface, out IntPtr fpAddRef, out IntPtr fpRelease);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void GetIUnknownImpl([out] native int&amp; fpQueryInterface, [out] native int&amp; fpAddRef, [out] native int&amp; fpRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetIUnknownImpl(System.IntPtr@,System.IntPtr@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub GetIUnknownImpl (ByRef fpQueryInterface As IntPtr, ByRef fpAddRef As IntPtr, ByRef fpRelease As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void GetIUnknownImpl([Runtime::InteropServices::Out] IntPtr % fpQueryInterface, [Runtime::InteropServices::Out] IntPtr % fpAddRef, [Runtime::InteropServices::Out] IntPtr % fpRelease);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownImpl : nativeint * nativeint * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.ComWrappers.GetIUnknownImpl (fpQueryInterface, fpAddRef, fpRelease)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fpQueryInterface" Type="System.IntPtr" RefType="out" />
        <Parameter Name="fpAddRef" Type="System.IntPtr" RefType="out" />
        <Parameter Name="fpRelease" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fpQueryInterface">Funktionszeiger auf QueryInterface.</param>
        <param name="fpAddRef">Funktionszeiger auf AddRef.</param>
        <param name="fpRelease">Funktionszeiger auf Release.</param>
        <summary>Ruft die von der Runtime bereitgestellte IUnknown-Implementierung ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateComInterfaceForObject">
      <MemberSignature Language="C#" Value="public IntPtr GetOrCreateComInterfaceForObject (object instance, System.Runtime.InteropServices.CreateComInterfaceFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetOrCreateComInterfaceForObject(object instance, valuetype System.Runtime.InteropServices.CreateComInterfaceFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetOrCreateComInterfaceForObject(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateComInterfaceForObject (instance As Object, flags As CreateComInterfaceFlags) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetOrCreateComInterfaceForObject(System::Object ^ instance, System::Runtime::InteropServices::CreateComInterfaceFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateComInterfaceForObject : obj * System.Runtime.InteropServices.CreateComInterfaceFlags -&gt; nativeint" Usage="comWrappers.GetOrCreateComInterfaceForObject (instance, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateComInterfaceFlags" />
      </Parameters>
      <Docs>
        <param name="instance">Das verwaltete Objekt, das außerhalb der .NET-Runtime verfügbar gemacht werden soll.</param>
        <param name="flags">Flags, die zum Konfigurieren der generierten Schnittstelle verwendet werden.</param>
        <summary>Erstellt eine COM-Darstellung des angegebenen Objekts, die an eine nicht verwaltete Umgebung übergeben werden kann.</summary>
        <returns>Die generierte COM-Schnittstelle, die außerhalb der .NET-Runtime übergeben werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Wenn zuvor eine com-Darstellung für die angegebene erstellt wurde `instance` <xref:System.Runtime.InteropServices.ComWrappers> , die diese Instanz verwendet, wird die zuvor erstellte COM-Schnittstelle zurückgegeben. Wenn dies nicht der Fall ist, wird ein neuer erstellt.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateObjectForComInstance">
      <MemberSignature Language="C#" Value="public object GetOrCreateObjectForComInstance (IntPtr externalComObject, System.Runtime.InteropServices.CreateObjectFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOrCreateObjectForComInstance(native int externalComObject, valuetype System.Runtime.InteropServices.CreateObjectFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetOrCreateObjectForComInstance(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateObjectForComInstance (externalComObject As IntPtr, flags As CreateObjectFlags) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOrCreateObjectForComInstance(IntPtr externalComObject, System::Runtime::InteropServices::CreateObjectFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateObjectForComInstance : nativeint * System.Runtime.InteropServices.CreateObjectFlags -&gt; obj" Usage="comWrappers.GetOrCreateObjectForComInstance (externalComObject, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalComObject" Type="System.IntPtr" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateObjectFlags" />
      </Parameters>
      <Docs>
        <param name="externalComObject">Objekt, das zur Verwendung in der .NET-Runtime importiert werden soll.</param>
        <param name="flags">Flags, die zum Beschreiben des externen Objekts verwendet werden.</param>
        <summary>Ruft das derzeit registrierte verwaltete Objekt ab oder erstellt ein neues verwaltetes Objekt und registriert es.</summary>
        <returns>Ein verwaltetes Objekt, das dem bereitgestellten externen COM-Objekt zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Wenn zuvor ein verwaltetes Objekt für das angegebene-Objekt `externalComObject` mit dieser Instanz erstellt wurde <xref:System.Runtime.InteropServices.ComWrappers> , wird das zuvor erstellte-Objekt zurückgegeben. Wenn dies nicht der Fall ist, wird ein neuer erstellt.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrRegisterObjectForComInstance">
      <MemberSignature Language="C#" Value="public object GetOrRegisterObjectForComInstance (IntPtr externalComObject, System.Runtime.InteropServices.CreateObjectFlags flags, object wrapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOrRegisterObjectForComInstance(native int externalComObject, valuetype System.Runtime.InteropServices.CreateObjectFlags flags, object wrapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetOrRegisterObjectForComInstance(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrRegisterObjectForComInstance (externalComObject As IntPtr, flags As CreateObjectFlags, wrapper As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOrRegisterObjectForComInstance(IntPtr externalComObject, System::Runtime::InteropServices::CreateObjectFlags flags, System::Object ^ wrapper);" />
      <MemberSignature Language="F#" Value="member this.GetOrRegisterObjectForComInstance : nativeint * System.Runtime.InteropServices.CreateObjectFlags * obj -&gt; obj" Usage="comWrappers.GetOrRegisterObjectForComInstance (externalComObject, flags, wrapper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalComObject" Type="System.IntPtr" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateObjectFlags" />
        <Parameter Name="wrapper" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="externalComObject">Objekt, das zur Verwendung in der .NET-Runtime importiert werden soll.</param>
        <param name="flags">Flags, die zum Beschreiben des externen Objekts verwendet werden.</param>
        <param name="wrapper">Das Objekt, das als Wrapper für das externe Objekt verwendet werden soll.</param>
        <summary>Ruft das derzeit registrierte verwaltete Objekt ab oder verwendet das angegebene verwaltete Objekt und registriert es.</summary>
        <returns>Ein verwaltetes Objekt, das dem bereitgestellten externen COM-Objekt zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Die Wrapperinstanz ist bereits einem externen Objekt zugeordnet.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterForMarshalling">
      <MemberSignature Language="C#" Value="public static void RegisterForMarshalling (System.Runtime.InteropServices.ComWrappers instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForMarshalling(class System.Runtime.InteropServices.ComWrappers instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.RegisterForMarshalling(System.Runtime.InteropServices.ComWrappers)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterForMarshalling (instance As ComWrappers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterForMarshalling(System::Runtime::InteropServices::ComWrappers ^ instance);" />
      <MemberSignature Language="F#" Value="static member RegisterForMarshalling : System.Runtime.InteropServices.ComWrappers -&gt; unit" Usage="System.Runtime.InteropServices.ComWrappers.RegisterForMarshalling instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Runtime.InteropServices.ComWrappers" />
      </Parameters>
      <Docs>
        <param name="instance">Die zu registrierende Instanz.</param>
        <summary>Registriert eine <see cref="T:System.Runtime.InteropServices.ComWrappers" />-Instanz, die als globale Instanz für das Marshalling in der Runtime verwendet werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Funktion kann nur einmal aufgerufen werden. Nachfolgende Aufrufe dieser Funktion führen dazu, dass eine ausgelöst wird <xref:System.InvalidOperationException> .
Szenarios, in denen diese globale Instanz verwendet werden kann, sind: * Verwendung von com-bezogenen Mars Hall-APIs * P/Aufrufe mit com-bezogenen Typen * com-Aktivierung

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Methode wurde mehrmals aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterForTrackerSupport">
      <MemberSignature Language="C#" Value="public static void RegisterForTrackerSupport (System.Runtime.InteropServices.ComWrappers instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForTrackerSupport(class System.Runtime.InteropServices.ComWrappers instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.RegisterForTrackerSupport(System.Runtime.InteropServices.ComWrappers)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterForTrackerSupport (instance As ComWrappers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterForTrackerSupport(System::Runtime::InteropServices::ComWrappers ^ instance);" />
      <MemberSignature Language="F#" Value="static member RegisterForTrackerSupport : System.Runtime.InteropServices.ComWrappers -&gt; unit" Usage="System.Runtime.InteropServices.ComWrappers.RegisterForTrackerSupport instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Runtime.InteropServices.ComWrappers" />
      </Parameters>
      <Docs>
        <param name="instance">Die zu registrierende Instanz.</param>
        <summary>Registriert eine <see cref="T:System.Runtime.InteropServices.ComWrappers" />-Instanz, die als globale Instanz zur Unterstützung der Verweisnachverfolgung verwendet werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Diese Funktion kann nur einmal aufgerufen werden. Nachfolgende Aufrufe dieser Funktion führen dazu, dass eine ausgelöst wird <xref:System.InvalidOperationException> .
Szenarien, in denen diese globale Instanz verwendet werden kann, sind: * Objektverfolgung über die <xref:System.Runtime.InteropServices.CreateComInterfaceFlags.TrackerSupport> -und- <xref:System.Runtime.InteropServices.CreateObjectFlags.TrackerObject> Flags.

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Methode wurde mehrmals aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjects">
      <MemberSignature Language="C#" Value="protected abstract void ReleaseObjects (System.Collections.IEnumerable objects);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReleaseObjects(class System.Collections.IEnumerable objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.ReleaseObjects(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ReleaseObjects (objects As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ReleaseObjects(System::Collections::IEnumerable ^ objects);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseObjects : System.Collections.IEnumerable -&gt; unit" Usage="comWrappers.ReleaseObjects objects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="objects">Sammlung der Objekte, die freigegeben werden sollen.</param>
        <summary>Gibt eine Objektsammlung außerhalb der normalen Lebensdauer für Objekte oder COM-Schnittstellen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
