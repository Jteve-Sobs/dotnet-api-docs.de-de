<Type Name="ComWrappers" FullName="System.Runtime.InteropServices.ComWrappers">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da740c82433ee0b9723e58a2f69365ba0953a517" /><Meta Name="ms.sourcegitcommit" Value="ff93f301301180af9a0213650c5b4edb28570fd0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/18/2020" /><Meta Name="ms.locfileid" Value="88557151" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComWrappers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComWrappers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComWrappers" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComWrappers" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComWrappers abstract" />
  <TypeSignature Language="F#" Value="type ComWrappers = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d897-101">Klasse zum Verwalten von Wrappern von COM-IUnknown-Typen.</span><span class="sxs-lookup"><span data-stu-id="4d897-101">Class for managing wrappers of COM IUnknown types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComWrappers();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeVtables">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry* ComputeVtables (object? obj, System.Runtime.InteropServices.CreateComInterfaceFlags flags, out int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.InteropServices.ComWrappers/ComInterfaceEntry* ComputeVtables(object obj, valuetype System.Runtime.InteropServices.CreateComInterfaceFlags flags, [out] int32&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.ComputeVtables(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::InteropServices::ComWrappers::ComInterfaceEntry* ComputeVtables(System::Object ^ obj, System::Runtime::InteropServices::CreateComInterfaceFlags flags, [Runtime::InteropServices::Out] int % count);" />
      <MemberSignature Language="F#" Value="abstract member ComputeVtables : obj * System.Runtime.InteropServices.CreateComInterfaceFlags * int -&gt; nativeptr&lt;System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry&gt;" Usage="comWrappers.ComputeVtables (obj, flags, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComWrappers+ComInterfaceEntry*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateComInterfaceFlags" />
        <Parameter Name="count" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4d897-102">Ziel der zurückgegebenen VTables.</span><span class="sxs-lookup"><span data-stu-id="4d897-102">Target of the returned Vtables.</span></span></param>
        <param name="flags"><span data-ttu-id="4d897-103">Flags, die zum Berechnen von VTables verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4d897-103">Flags used to compute Vtables.</span></span></param>
        <param name="count"><span data-ttu-id="4d897-104">Die Anzahl der Elemente, die im zurückgegebenen Arbeitsspeicher enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="4d897-104">The number of elements contained in the returned memory.</span></span></param>
        <summary><span data-ttu-id="4d897-105">Berechnet die gewünschte VTable für <paramref name="obj" />, wobei die Werte von <paramref name="flags" /> beachtet werden.</span><span class="sxs-lookup"><span data-stu-id="4d897-105">Computes the desired Vtable for <paramref name="obj" />, respecting the values of <paramref name="flags" />.</span></span></summary>
        <returns><span data-ttu-id="4d897-106"><see cref="T:System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry" />-Zeiger, der den Arbeitsspeicher für alle COM-Schnittstelleneinträge enthält.</span><span class="sxs-lookup"><span data-stu-id="4d897-106"><see cref="T:System.Runtime.InteropServices.ComWrappers.ComInterfaceEntry" /> pointer containing memory for all COM interface entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4d897-107">Der gesamte von dieser Funktion zurückgegebene Arbeitsspeicher muss entweder nicht verwalteter Arbeitsspeicher oder angehefteter verwalteter Speicher sein oder mit der API zugeordnet worden sein <xref:System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(System.Type,System.Int32)> .</span><span class="sxs-lookup"><span data-stu-id="4d897-107">All memory returned from this function must either be unmanaged memory or pinned managed memory, or have been allocated with the <xref:System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(System.Type,System.Int32)> API.</span></span>
 
<span data-ttu-id="4d897-108">Wenn die Schnittstellen Einträge nicht erstellt werden können und ein negativer oder ein ungleich `count` `null` NULL-Wert `count` zurückgegeben wird, löst der-Aufrufvorgang <xref:System.Runtime.InteropServices.ComWrappers.GetOrCreateComInterfaceForObject(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags)> einen aus <xref:System.ArgumentException> .</span><span class="sxs-lookup"><span data-stu-id="4d897-108">If the interface entries cannot be created and a negative `count` or `null` and a non-zero `count` are returned, the call to <xref:System.Runtime.InteropServices.ComWrappers.GetOrCreateComInterfaceForObject(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags)> will throw a <xref:System.ArgumentException>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="protected abstract object CreateObject (IntPtr externalComObject, System.Runtime.InteropServices.CreateObjectFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateObject(native int externalComObject, valuetype System.Runtime.InteropServices.CreateObjectFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.CreateObject(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateObject (externalComObject As IntPtr, flags As CreateObjectFlags) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ CreateObject(IntPtr externalComObject, System::Runtime::InteropServices::CreateObjectFlags flags);" />
      <MemberSignature Language="F#" Value="abstract member CreateObject : nativeint * System.Runtime.InteropServices.CreateObjectFlags -&gt; obj" Usage="comWrappers.CreateObject (externalComObject, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalComObject" Type="System.IntPtr" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateObjectFlags" />
      </Parameters>
      <Docs>
        <param name="externalComObject"><span data-ttu-id="4d897-109">Objekt, das zur Verwendung in der .NET-Runtime importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d897-109">Object to import for usage into the .NET runtime.</span></span></param>
        <param name="flags"><span data-ttu-id="4d897-110">Flags, die zum Beschreiben des externen Objekts verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4d897-110">Flags used to describe the external object.</span></span></param>
        <summary><span data-ttu-id="4d897-111">Erstellt ein verwaltetes Objekt für das Objekt, auf das <paramref name="externalComObject" /> verweist, wobei die Werte von <paramref name="flags" /> beachtet werden.</span><span class="sxs-lookup"><span data-stu-id="4d897-111">Creates a managed object for the object that <paramref name="externalComObject" /> points to, respecting the values of <paramref name="flags" />.</span></span></summary>
        <returns><span data-ttu-id="4d897-112">Ein verwaltetes Objekt, das dem bereitgestellten externen COM-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="4d897-112">A managed object associated with the supplied external COM object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4d897-113">Wenn das Objekt nicht erstellt werden kann und `null` zurückgegeben wird, löst der-Aufrufvorgang <xref:System.Runtime.InteropServices.ComWrappers.GetOrCreateObjectForComInstance(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags)> einen aus <xref:System.ArgumentNullException> .</span><span class="sxs-lookup"><span data-stu-id="4d897-113">If the object cannot be created and `null` is returned, the call to <xref:System.Runtime.InteropServices.ComWrappers.GetOrCreateObjectForComInstance(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags)> will throw a <xref:System.ArgumentNullException>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownImpl">
      <MemberSignature Language="C#" Value="protected static void GetIUnknownImpl (out IntPtr fpQueryInterface, out IntPtr fpAddRef, out IntPtr fpRelease);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void GetIUnknownImpl([out] native int&amp; fpQueryInterface, [out] native int&amp; fpAddRef, [out] native int&amp; fpRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetIUnknownImpl(System.IntPtr@,System.IntPtr@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub GetIUnknownImpl (ByRef fpQueryInterface As IntPtr, ByRef fpAddRef As IntPtr, ByRef fpRelease As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void GetIUnknownImpl([Runtime::InteropServices::Out] IntPtr % fpQueryInterface, [Runtime::InteropServices::Out] IntPtr % fpAddRef, [Runtime::InteropServices::Out] IntPtr % fpRelease);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownImpl : nativeint * nativeint * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.ComWrappers.GetIUnknownImpl (fpQueryInterface, fpAddRef, fpRelease)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fpQueryInterface" Type="System.IntPtr" RefType="out" />
        <Parameter Name="fpAddRef" Type="System.IntPtr" RefType="out" />
        <Parameter Name="fpRelease" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fpQueryInterface"><span data-ttu-id="4d897-114">Funktionszeiger auf QueryInterface.</span><span class="sxs-lookup"><span data-stu-id="4d897-114">Function pointer to QueryInterface.</span></span></param>
        <param name="fpAddRef"><span data-ttu-id="4d897-115">Funktionszeiger auf AddRef.</span><span class="sxs-lookup"><span data-stu-id="4d897-115">Function pointer to AddRef.</span></span></param>
        <param name="fpRelease"><span data-ttu-id="4d897-116">Funktionszeiger auf Release.</span><span class="sxs-lookup"><span data-stu-id="4d897-116">Function pointer to Release.</span></span></param>
        <summary><span data-ttu-id="4d897-117">Ruft die von der Runtime bereitgestellte IUnknown-Implementierung ab.</span><span class="sxs-lookup"><span data-stu-id="4d897-117">Gets the runtime-provided IUnknown implementation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateComInterfaceForObject">
      <MemberSignature Language="C#" Value="public IntPtr GetOrCreateComInterfaceForObject (object instance, System.Runtime.InteropServices.CreateComInterfaceFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetOrCreateComInterfaceForObject(object instance, valuetype System.Runtime.InteropServices.CreateComInterfaceFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetOrCreateComInterfaceForObject(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateComInterfaceForObject (instance As Object, flags As CreateComInterfaceFlags) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetOrCreateComInterfaceForObject(System::Object ^ instance, System::Runtime::InteropServices::CreateComInterfaceFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateComInterfaceForObject : obj * System.Runtime.InteropServices.CreateComInterfaceFlags -&gt; nativeint" Usage="comWrappers.GetOrCreateComInterfaceForObject (instance, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateComInterfaceFlags" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4d897-118">Das verwaltete Objekt, das außerhalb der .NET-Runtime verfügbar gemacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d897-118">The managed object to expose outside the .NET runtime.</span></span></param>
        <param name="flags"><span data-ttu-id="4d897-119">Flags, die zum Konfigurieren der generierten Schnittstelle verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4d897-119">Flags used to configure the generated interface.</span></span></param>
        <summary><span data-ttu-id="4d897-120">Erstellt eine COM-Darstellung des angegebenen Objekts, die an eine nicht verwaltete Umgebung übergeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="4d897-120">Creates a COM representation of the supplied object that can be passed to a non-managed environment.</span></span></summary>
        <returns><span data-ttu-id="4d897-121">Die generierte COM-Schnittstelle, die außerhalb der .NET-Runtime übergeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="4d897-121">The generated COM interface that can be passed outside the .NET runtime.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateObjectForComInstance">
      <MemberSignature Language="C#" Value="public object GetOrCreateObjectForComInstance (IntPtr externalComObject, System.Runtime.InteropServices.CreateObjectFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOrCreateObjectForComInstance(native int externalComObject, valuetype System.Runtime.InteropServices.CreateObjectFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetOrCreateObjectForComInstance(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateObjectForComInstance (externalComObject As IntPtr, flags As CreateObjectFlags) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOrCreateObjectForComInstance(IntPtr externalComObject, System::Runtime::InteropServices::CreateObjectFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateObjectForComInstance : nativeint * System.Runtime.InteropServices.CreateObjectFlags -&gt; obj" Usage="comWrappers.GetOrCreateObjectForComInstance (externalComObject, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalComObject" Type="System.IntPtr" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateObjectFlags" />
      </Parameters>
      <Docs>
        <param name="externalComObject"><span data-ttu-id="4d897-122">Objekt, das zur Verwendung in der .NET-Runtime importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d897-122">Object to import for usage into the .NET runtime.</span></span></param>
        <param name="flags"><span data-ttu-id="4d897-123">Flags, die zum Beschreiben des externen Objekts verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4d897-123">Flags used to describe the external object.</span></span></param>
        <summary><span data-ttu-id="4d897-124">Ruft das derzeit registrierte verwaltete Objekt ab oder erstellt ein neues verwaltetes Objekt und registriert es.</span><span class="sxs-lookup"><span data-stu-id="4d897-124">Gets the currently registered managed object or creates a new managed object and registers it.</span></span></summary>
        <returns><span data-ttu-id="4d897-125">Ein verwaltetes Objekt, das dem bereitgestellten externen COM-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="4d897-125">A managed object associated with the supplied external COM object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrRegisterObjectForComInstance">
      <MemberSignature Language="C#" Value="public object GetOrRegisterObjectForComInstance (IntPtr externalComObject, System.Runtime.InteropServices.CreateObjectFlags flags, object wrapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOrRegisterObjectForComInstance(native int externalComObject, valuetype System.Runtime.InteropServices.CreateObjectFlags flags, object wrapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.GetOrRegisterObjectForComInstance(System.IntPtr,System.Runtime.InteropServices.CreateObjectFlags,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrRegisterObjectForComInstance (externalComObject As IntPtr, flags As CreateObjectFlags, wrapper As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOrRegisterObjectForComInstance(IntPtr externalComObject, System::Runtime::InteropServices::CreateObjectFlags flags, System::Object ^ wrapper);" />
      <MemberSignature Language="F#" Value="member this.GetOrRegisterObjectForComInstance : nativeint * System.Runtime.InteropServices.CreateObjectFlags * obj -&gt; obj" Usage="comWrappers.GetOrRegisterObjectForComInstance (externalComObject, flags, wrapper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="externalComObject" Type="System.IntPtr" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.CreateObjectFlags" />
        <Parameter Name="wrapper" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="externalComObject"><span data-ttu-id="4d897-126">Objekt, das zur Verwendung in der .NET-Runtime importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d897-126">Object to import for usage into the .NET runtime.</span></span></param>
        <param name="flags"><span data-ttu-id="4d897-127">Flags, die zum Beschreiben des externen Objekts verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4d897-127">Flags used to describe the external object.</span></span></param>
        <param name="wrapper"><span data-ttu-id="4d897-128">Das Objekt, das als Wrapper für das externe Objekt verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d897-128">The object to use as the wrapper for the external object.</span></span></param>
        <summary><span data-ttu-id="4d897-129">Ruft das derzeit registrierte verwaltete Objekt ab oder verwendet das angegebene verwaltete Objekt und registriert es.</span><span class="sxs-lookup"><span data-stu-id="4d897-129">Gets the currently registered managed object or uses the supplied managed object and registers it.</span></span></summary>
        <returns><span data-ttu-id="4d897-130">Ein verwaltetes Objekt, das dem bereitgestellten externen COM-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="4d897-130">A managed object associated with the supplied external COM object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4d897-131">Die Wrapperinstanz ist bereits einem externen Objekt zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="4d897-131">The wrapper instance is already associated with an external object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterForMarshalling">
      <MemberSignature Language="C#" Value="public static void RegisterForMarshalling (System.Runtime.InteropServices.ComWrappers instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForMarshalling(class System.Runtime.InteropServices.ComWrappers instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.RegisterForMarshalling(System.Runtime.InteropServices.ComWrappers)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterForMarshalling (instance As ComWrappers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterForMarshalling(System::Runtime::InteropServices::ComWrappers ^ instance);" />
      <MemberSignature Language="F#" Value="static member RegisterForMarshalling : System.Runtime.InteropServices.ComWrappers -&gt; unit" Usage="System.Runtime.InteropServices.ComWrappers.RegisterForMarshalling instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Runtime.InteropServices.ComWrappers" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForTrackerSupport">
      <MemberSignature Language="C#" Value="public static void RegisterForTrackerSupport (System.Runtime.InteropServices.ComWrappers instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForTrackerSupport(class System.Runtime.InteropServices.ComWrappers instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.RegisterForTrackerSupport(System.Runtime.InteropServices.ComWrappers)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterForTrackerSupport (instance As ComWrappers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterForTrackerSupport(System::Runtime::InteropServices::ComWrappers ^ instance);" />
      <MemberSignature Language="F#" Value="static member RegisterForTrackerSupport : System.Runtime.InteropServices.ComWrappers -&gt; unit" Usage="System.Runtime.InteropServices.ComWrappers.RegisterForTrackerSupport instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Runtime.InteropServices.ComWrappers" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjects">
      <MemberSignature Language="C#" Value="protected abstract void ReleaseObjects (System.Collections.IEnumerable objects);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReleaseObjects(class System.Collections.IEnumerable objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComWrappers.ReleaseObjects(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ReleaseObjects (objects As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ReleaseObjects(System::Collections::IEnumerable ^ objects);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseObjects : System.Collections.IEnumerable -&gt; unit" Usage="comWrappers.ReleaseObjects objects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="objects"><span data-ttu-id="4d897-132">Sammlung der Objekte, die freigegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4d897-132">Collection of objects to release.</span></span></param>
        <summary><span data-ttu-id="4d897-133">Gibt eine Objektsammlung außerhalb der normalen Lebensdauer für Objekte oder COM-Schnittstellen frei.</span><span class="sxs-lookup"><span data-stu-id="4d897-133">Releases a collection of objects outside of the normal object or COM interface lifetime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
