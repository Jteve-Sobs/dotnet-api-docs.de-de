<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeLibConverter.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa155d3d322e5c94d67fa47d00f7015797185f63.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa155d3d322e5c94d67fa47d00f7015797185f63</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.TypeLibConverter">
          <source>Provides a set of services that convert a managed assembly to a COM type library and vice versa.</source>
          <target state="translated">Stellt eine Gruppe von Diensten bereit, die eine verwaltete Assembly in eine COM-Typbibliothek konvertieren und umgekehrt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibConverter" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibConverter" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>The assembly to convert.</source>
          <target state="translated">Die zu konvertierende Assembly.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>The file name of the resulting type library.</source>
          <target state="translated">Der Dateiname der resultierenden Typbibliothek.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /&gt;</ph> value indicating any special settings.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /&gt;</ph>-Wert, der alle speziellen Einstellungen angibt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /&gt;</ph> interface implemented by the caller.</source>
          <target state="translated">Die vom Aufrufer implementierte <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /&gt;</ph>-Schnittstelle.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>Converts an assembly to a COM type library.</source>
          <target state="translated">Konvertiert eine Assembly in eine COM-Typbibliothek.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>An object that implements the <ph id="ph1">&lt;see langword="ITypeLib" /&gt;</ph> interface.</source>
          <target state="translated">Ein Objekt, das die <ph id="ph1">&lt;see langword="ITypeLib" /&gt;</ph>-Schnittstelle implementiert.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>For more information on <ph id="ph1">`ITypeLib`</ph>, please see its existing documentation in the MSDN library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`ITypeLib`</ph>, finden Sie in der vorhandenen Dokumentation in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">f√ºr die Berechtigung zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>Security Action: Demand.</source>
          <target state="translated">Sicherheitsaktion: Anforderung.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
          <source>Associated Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.TypeLibConverter">
          <source>Converts a COM type library to an assembly.</source>
          <target state="translated">Konvertiert eine COM-Typbibliothek in eine Assembly.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>The object that implements the <ph id="ph1">&lt;see langword="ITypeLib" /&gt;</ph> interface.</source>
          <target state="translated">Das Objekt, das die <ph id="ph1">&lt;see langword="ITypeLib" /&gt;</ph>-Schnittstelle implementiert.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>The file name of the resulting assembly.</source>
          <target state="translated">Der Dateiname der resultierenden Assembly.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /&gt;</ph> value indicating any special settings.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /&gt;</ph>-Wert, der alle speziellen Einstellungen angibt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /&gt;</ph> interface implemented by the caller.</source>
          <target state="translated">Die vom Aufrufer implementierte <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /&gt;</ph>-Schnittstelle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>A <ph id="ph1">&lt;see langword="byte" /&gt;</ph> array containing the public key.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="byte" /&gt;</ph>-Array, das den √∂ffentlichen Schl√ºssel enth√§lt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> object containing the public and private cryptographic key pair.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph>-Objekt, das das kryptografische Schl√ºsselpaar aus √∂ffentlichem und privatem Schl√ºssel enth√§lt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the interfaces require link time checks for <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph> permission.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="true" /&gt;</ph>, erfordert die Schnittstelle √úberpr√ºfungen in der Bindungsphase f√ºr die <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>-Berechtigung.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="false" /&gt;</ph>, erfordern die Schnittstellen Laufzeit√ºberpr√ºfungen, bei denen ein Stackwalk durchgef√ºhrt werden muss. Diese sind aufwendiger, aber sicherer.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>Converts a COM type library to an assembly.</source>
          <target state="translated">Konvertiert eine COM-Typbibliothek in eine Assembly.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.AssemblyBuilder" /&gt;</ph> object containing the converted type library.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.AssemblyBuilder" /&gt;</ph>-Objekt, das die konvertierte Typbibliothek enth√§lt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>If you do not want to generate a strong name for your assembly, it is valid for <ph id="ph1">`publicKey`</ph> and <ph id="ph2">`keyPair`</ph> to be <ph id="ph3">`null`</ph>, as long as <ph id="ph4">`flags`</ph> does not equal <ph id="ph5">&lt;xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Sie nicht, zum Generieren eines starken Namens f√ºr die Assembly m√∂chten ist ung√ºltig f√ºr <ph id="ph1">`publicKey`</ph> und <ph id="ph2">`keyPair`</ph> werden <ph id="ph3">`null`</ph>, solange <ph id="ph4">`flags`</ph> stimmt nicht mit <ph id="ph5">&lt;xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>Otherwise, at least one of these parameters must be specified.</source>
          <target state="translated">Andernfalls muss mindestens einer dieser Parameter angegeben werden.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>If <ph id="ph1">`publicKey`</ph> is <ph id="ph2">`null`</ph>, the public key in <ph id="ph3">`keyPair`</ph> will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.</source>
          <target state="translated">Wenn <ph id="ph1">`publicKey`</ph> ist <ph id="ph2">`null`</ph>, den √∂ffentlichen Schl√ºssel in <ph id="ph3">`keyPair`</ph> wird in der Zielassembly manifest Metadaten festgelegt und eine Signatur generiert, die basierend auf dem Inhalt der Assembly.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>If <ph id="ph1">`keyPair`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`publicKey`</ph> will be set in the target assembly's manifest metadata and no signature will be generated.</source>
          <target state="translated">Wenn <ph id="ph1">`keyPair`</ph> ist <ph id="ph2">`null`</ph>, <ph id="ph3">`publicKey`</ph> wird in der Zielassembly manifest Metadaten festgelegt werden und keine Signatur generiert werden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>Specifying both parameters is not generally useful, and can result in an invalid signature.</source>
          <target state="translated">Beide Parameter angeben, ist nicht in der Regel sinnvoll und kann dazu f√ºhren, eine ung√ºltige Signatur.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>For more information on <ph id="ph1">`ITypeLib`</ph>, please see its existing documentation in the MSDN library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`ITypeLib`</ph>, finden Sie in der vorhandenen Dokumentation in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="typeLib" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeLib" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="notifySink" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="notifySink" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> ist eine leere Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> is longer than MAX_PATH.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> ist l√§nger als MAX_PATH.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="flags" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="flags" /&gt;</ph> ist nicht <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> and <ph id="ph2">&lt;paramref name="keyPair" /&gt;</ph> are <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> und <ph id="ph2">&lt;paramref name="keyPair" /&gt;</ph> sind <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>The metadata produced has errors preventing any types from loading.</source>
          <target state="translated">Die erstellten Metadaten enthalten Fehler, die das Laden von Typen verhindern.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">f√ºr die Berechtigung zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>Security Action: Demand.</source>
          <target state="translated">Sicherheitsaktion: Anforderung.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
          <source>Associated Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>The object that implements the <ph id="ph1">&lt;see langword="ITypeLib" /&gt;</ph> interface.</source>
          <target state="translated">Das Objekt, das die <ph id="ph1">&lt;see langword="ITypeLib" /&gt;</ph>-Schnittstelle implementiert.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>The file name of the resulting assembly.</source>
          <target state="translated">Der Dateiname der resultierenden Assembly.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /&gt;</ph> value indicating any special settings.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /&gt;</ph>-Wert, der alle speziellen Einstellungen angibt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /&gt;</ph> interface implemented by the caller.</source>
          <target state="translated">Die vom Aufrufer implementierte <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /&gt;</ph>-Schnittstelle.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>A <ph id="ph1">&lt;see langword="byte" /&gt;</ph> array containing the public key.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="byte" /&gt;</ph>-Array, das den √∂ffentlichen Schl√ºssel enth√§lt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> object containing the public and private cryptographic key pair.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph>-Objekt, das das kryptografische Schl√ºsselpaar aus √∂ffentlichem und privatem Schl√ºssel enth√§lt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>The namespace for the resulting assembly.</source>
          <target state="translated">Der Namespace f√ºr die resultierende Assembly.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>The version of the resulting assembly.</source>
          <target state="translated">Die Version der resultierenden Assembly.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the version of the type library is used.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wird die Version der Typbibliothek verwendet.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>Converts a COM type library to an assembly.</source>
          <target state="translated">Konvertiert eine COM-Typbibliothek in eine Assembly.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.AssemblyBuilder" /&gt;</ph> object containing the converted type library.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.AssemblyBuilder" /&gt;</ph>-Objekt, das die konvertierte Typbibliothek enth√§lt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>If you do not want to generate a strong name for your assembly, it is valid for <ph id="ph1">`publicKey`</ph> and <ph id="ph2">`keyPair`</ph> to be <ph id="ph3">`null`</ph>, as long as <ph id="ph4">`flags`</ph> does not equal <ph id="ph5">&lt;xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Sie nicht, zum Generieren eines starken Namens f√ºr die Assembly m√∂chten ist ung√ºltig f√ºr <ph id="ph1">`publicKey`</ph> und <ph id="ph2">`keyPair`</ph> werden <ph id="ph3">`null`</ph>, solange <ph id="ph4">`flags`</ph> stimmt nicht mit <ph id="ph5">&lt;xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>Otherwise, atleast one of these parameters must be specified.</source>
          <target state="translated">Andernfalls muss mindestens einer dieser Parameter angegeben werden.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>If <ph id="ph1">`publicKey`</ph> is <ph id="ph2">`null`</ph>, the public key in <ph id="ph3">`keyPair`</ph> will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.</source>
          <target state="translated">Wenn <ph id="ph1">`publicKey`</ph> ist <ph id="ph2">`null`</ph>, den √∂ffentlichen Schl√ºssel in <ph id="ph3">`keyPair`</ph> wird in der Zielassembly manifest Metadaten festgelegt und eine Signatur generiert, die basierend auf dem Inhalt der Assembly.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>If <ph id="ph1">`keyPair`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`publicKey`</ph> will be set in the target assembly's manifest metadata and no signature will be generated.</source>
          <target state="translated">Wenn <ph id="ph1">`keyPair`</ph> ist <ph id="ph2">`null`</ph>, <ph id="ph3">`publicKey`</ph> wird in der Zielassembly manifest Metadaten festgelegt werden und keine Signatur generiert werden.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>Specifying both parameters is not generally useful, and can result in an invalid signature.</source>
          <target state="translated">Beide Parameter angeben, ist nicht in der Regel sinnvoll und kann dazu f√ºhren, eine ung√ºltige Signatur.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>For more information on <ph id="ph1">`ITypeLib`</ph>, please see its existing documentation in the MSDN library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`ITypeLib`</ph>, finden Sie in der vorhandenen Dokumentation in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;paramref name="typeLib" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeLib" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;paramref name="notifySink" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="notifySink" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> ist eine leere Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> is longer than MAX_PATH.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asmFileName" /&gt;</ph> ist l√§nger als MAX_PATH.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;paramref name="flags" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="flags" /&gt;</ph> ist nicht <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>-or-</source>
          <target state="translated">-¬†oder¬†- </target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> and <ph id="ph2">&lt;paramref name="keyPair" /&gt;</ph> are <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> und <ph id="ph2">&lt;paramref name="keyPair" /&gt;</ph> sind <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>The metadata produced has errors preventing any types from loading.</source>
          <target state="translated">Die erstellten Metadaten enthalten Fehler, die das Laden von Typen verhindern.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">f√ºr die Berechtigung zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>Security Action: Demand.</source>
          <target state="translated">Sicherheitsaktion: Anforderung.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
          <source>Associated Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source>The GUID of the type library.</source>
          <target state="translated">Die GUID der Typbibliothek.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source>The major version number of the type library.</source>
          <target state="translated">Die Hauptversionsnummer der Typbibliothek.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source>The minor version number of the type library.</source>
          <target state="translated">Die Nebenversionsnummer der Typbibliothek.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source>The LCID of the type library.</source>
          <target state="translated">Die LCID der Typbibliothek.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source>On successful return, the name of the primary interop assembly associated with <bpt id="p1">&lt;c&gt;</bpt>g<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Bei erfolgreicher R√ºckgabe der Name der prim√§ren Interop-Assembly, die <bpt id="p1">&lt;c&gt;</bpt>g<ept id="p1">&lt;/c&gt;</ept> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source>On successful return, the code base of the primary interop assembly associated with <bpt id="p1">&lt;c&gt;</bpt>g<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Bei erfolgreicher R√ºckgabe die CodeBase der prim√§ren Interop-Assembly, die <bpt id="p1">&lt;c&gt;</bpt>g<ept id="p1">&lt;/c&gt;</ept> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source>Gets the name and code base of a primary interop assembly for a specified type library.</source>
          <target state="translated">Ruft Name und CodeBase einer prim√§ren Interop-Assembly f√ºr eine angegebene Typbibliothek ab.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the primary interop assembly was found in the registry; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die prim√§re Interop-Assembly in der Registrierung gefunden wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>