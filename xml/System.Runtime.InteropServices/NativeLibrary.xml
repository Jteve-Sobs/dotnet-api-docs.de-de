<Type Name="NativeLibrary" FullName="System.Runtime.InteropServices.NativeLibrary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85aa85f3b8986cbc570c4cf47534c2556c2827df" /><Meta Name="ms.sourcegitcommit" Value="727af77f0b7ae2636efa3bc47000697540084461" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/15/2019" /><Meta Name="ms.locfileid" Value="67877117" /></Metadata><TypeSignature Language="C#" Value="public static class NativeLibrary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NativeLibrary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.NativeLibrary" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeLibrary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeLibrary abstract sealed" />
  <TypeSignature Language="F#" Value="type NativeLibrary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6c8e1-101">Stellt APIs für die Verwaltung nativer Bibliotheken bereit.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-101">Provides APIs for managing native libraries.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Free (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member Free : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.Free handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6c8e1-102">Das Handle der nativen Bibliothek, die freigegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-102">The native library handle to be freed.</span></span></param>
        <summary><span data-ttu-id="6c8e1-103">Gibt ein bestimmtes geladenes Bibliothekshandle frei oder führt keine Aktion durch, wenn das Eingabehandle <see cref="F:System.IntPtr.Zero" /> ist.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-103">Frees a given a loaded library handle, or takes no action if the input handle is <see cref="F:System.IntPtr.Zero" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public static IntPtr GetExport (IntPtr handle, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExport(native int handle, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExport (handle As IntPtr, name As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExport(IntPtr handle, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetExport : nativeint * string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.GetExport (handle, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6c8e1-104">Das Handle der nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-104">The native library handle.</span></span></param>
        <param name="name"><span data-ttu-id="6c8e1-105">Der Name des exportierten Symbols.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-105">The name of the exported symbol.</span></span></param>
        <summary><span data-ttu-id="6c8e1-106">Ruft die Adresse eines exportierten Symbols ab.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-106">Gets the address of an exported symbol.</span></span></summary>
        <returns><span data-ttu-id="6c8e1-107">Die Adresse des Symbols.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-107">The address of the symbol.</span></span></returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6c8e1-108">Dies ist ein einfacher Wrapper um OS-Aufrufe und führt keine die namenszerlegung.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-108">This is a simple wrapper around OS calls and does not perform any name mangling.</span></span>

         ]]></format>
         </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c8e1-109"><paramref name="handle" /> oder <paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-109"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.EntryPointNotFoundException"><span data-ttu-id="6c8e1-110">Das Symbol wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-110">The symbol is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (libraryPath As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryPath);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load libraryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="6c8e1-111">Der Name der zu ladenden nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-111">The name of the native library to be loaded.</span></span></param>
        <summary><span data-ttu-id="6c8e1-112">Bietet eine einfache API zum Laden einer nativen Bibliothek, die das Betriebssystem-Ladeprogramm umschließt und Standardflags verwendet.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-112">Provides a simple API for loading a native library that wraps the OS loader and uses default flags.</span></span></summary>
        <returns><span data-ttu-id="6c8e1-113">Das Handle für die geladene native Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-113">The handle for the loaded native library.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c8e1-114"><paramref name="libraryPath" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-114"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="6c8e1-115">Die Bibliothek wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-115">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6c8e1-116">Die Bibliothek ist nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-116">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryName, System.Reflection.Assembly assembly, Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath);" />
      <MemberSignature Language="F#" Value="static member Load : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load (libraryName, assembly, searchPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="6c8e1-117">Der Name der zu ladenden nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-117">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="6c8e1-118">Die Assembly, die die native Bibliothek lädt.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-118">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="6c8e1-119">Der Suchpfad.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-119">The search path.</span></span></param>
        <summary><span data-ttu-id="6c8e1-120">Bietet eine API auf höchster Stufe zum Laden einer nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-120">Provides a high-level API for loading a native library.</span></span></summary>
        <returns><span data-ttu-id="6c8e1-121">Das Handle für die geladene Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-121">The handle for the loaded library.</span></span></returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6c8e1-122">Wenn einen Bibliotheksnamen, sucht diese Methode bestimmte Pfade, die basierend auf der Runtime-Konfiguration, die Eingabeparameter und die Attribute der aufrufenden Assembly.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-122">Given a library name, this method searches specific paths based on the  runtime configuration, input parameters, and attributes of the calling assembly.</span></span> <span data-ttu-id="6c8e1-123">Wenn die `searchPath` -Parameter ungleich Null ist, die Flags in dieser Enumeration werden verwendet.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-123">If the `searchPath` parameter is non-null, the flags in this enumeration are used.</span></span> <span data-ttu-id="6c8e1-124">Die Flags andernfalls angegeben, durch die <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> für die aufrufende Assembly, wenn einer vorhanden ist, verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-124">Otherwise, the flags specified by the <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> on the calling assembly, if any are present, are used.</span></span> <span data-ttu-id="6c8e1-125">Mit dieser Methode wird die folgenden verwalteten Rückrufe für die Auflösung der nativen Bibliothek nicht aufgerufen werden:</span><span class="sxs-lookup"><span data-stu-id="6c8e1-125">This method does not invoke the following managed callbacks for native library resolution:</span></span> 

- <span data-ttu-id="6c8e1-126">Der Rückruf pro Assembly registriert.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-126">The per-assembly registered callback.</span></span>
- <span data-ttu-id="6c8e1-127">Die <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> -Methode.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-127">The <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> method.</span></span>
- <span data-ttu-id="6c8e1-128">Die <xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-128">The <xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> event.</span></span>

         ]]></format>
         </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c8e1-129"><paramref name="libraryName" /> oder <paramref name="assembly" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-129"><paramref name="libraryName" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c8e1-130"><paramref name="assembly" /> ist keine <see langword="RuntimeAssembly" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-130"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="6c8e1-131">Die Bibliothek wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-131">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6c8e1-132">Die Bibliothek ist nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-132">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetDllImportResolver">
      <MemberSignature Language="C#" Value="public static void SetDllImportResolver (System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDllImportResolver(class System.Reflection.Assembly assembly, class System.Runtime.InteropServices.DllImportResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDllImportResolver(System::Reflection::Assembly ^ assembly, System::Runtime::InteropServices::DllImportResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member SetDllImportResolver : System.Reflection.Assembly * System.Runtime.InteropServices.DllImportResolver -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver (assembly, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resolver" Type="System.Runtime.InteropServices.DllImportResolver" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="6c8e1-133">Die Assembly, für die der Resolver registriert ist.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-133">The assembly for which the resolver is registered.</span></span></param>
        <param name="resolver"><span data-ttu-id="6c8e1-134">Der zu registrierende Resolverrückruf.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-134">The resolver callback to register.</span></span></param>
        <summary><span data-ttu-id="6c8e1-135">Legt einen Rückruf für die Auflösung von Importen nativer Bibliotheken aus einer Assembly fest.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-135">Sets a callback for resolving native library imports from an assembly.</span></span></summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6c8e1-136">Dieser Resolver pro Assembly ist der erste Versuch zum Auflösen der nativen Bibliothek lädt, die von dieser Assembly initiiert.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-136">This per-assembly resolver is the first attempt to resolve native library loads initiated by this assembly.</span></span> 

<span data-ttu-id="6c8e1-137">Nur einen Resolver kann pro Assembly registriert werden.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-137">Only one resolver can be registered per assembly.</span></span> <span data-ttu-id="6c8e1-138">Versuch der Registrierung von einer Sekunde Konfliktlöser schlägt mit einer <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-138">Trying to register a second resolver fails with an <xref:System.InvalidOperationException>.</span></span>

         ]]></format>
         </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c8e1-139"><paramref name="assembly" /> oder paramref name="resolver" /&gt; ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-139"><paramref name="assembly" /> or paramref name="resolver" /&gt; is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c8e1-140">Ein Resolver ist bereits für diese Assembly festgelegt.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-140">A resolver is already set for this assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public static bool TryGetExport (IntPtr handle, string name, out IntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetExport(native int handle, string name, [out] native int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetExport (handle As IntPtr, name As String, ByRef address As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetExport(IntPtr handle, System::String ^ name, [Runtime::InteropServices::Out] IntPtr % address);" />
      <MemberSignature Language="F#" Value="static member TryGetExport : nativeint * string *  -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryGetExport (handle, name, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="address" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="6c8e1-141">Das Handle der nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-141">The  native library handle.</span></span></param>
        <param name="name"><span data-ttu-id="6c8e1-142">Der Name des exportierten Symbols.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-142">The name of the exported symbol.</span></span></param>
        <param name="address"><span data-ttu-id="6c8e1-143">Enthält bei Rückgabe der Methode die Symboladresse, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-143">When the method returns, contains the symbol address, if it exists.</span></span></param>
        <summary><span data-ttu-id="6c8e1-144">Ruft die Adresse eines exportierten Symbols ab und gibt einen Wert zurück, der angibt, ob der Methodenaufruf erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-144">Gets the address of an exported symbol and returns a value that indicates whether the method call succeeded.</span></span></summary>
        <returns><span data-ttu-id="6c8e1-145"><see langword="true" />, wenn die Rückgabe durch die Methode erfolgreich war; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-145"><see langword="true" /> if the method returned successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c8e1-146"><paramref name="handle" /> oder <paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-146"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryLoad (libraryPath As String, ByRef handle As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string *  -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="6c8e1-147">Der Name der zu ladenden nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-147">The name of the native library to be loaded.</span></span></param>
        <param name="handle"><span data-ttu-id="6c8e1-148">Bei Rückgabe der Methode das Handle der geladenen nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-148">When the method returns, the handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="6c8e1-149">Bietet eine einfache API zum Laden einer nativen Bibliothek und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-149">Provides a simple API for loading a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="6c8e1-150"><see langword="true" />, wenn die native Bibliothek erfolgreich geladen wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-150"><see langword="true" /> if the native library was loaded successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c8e1-151"><paramref name="libraryPath" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-151"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryName, System.Reflection.Assembly assembly, Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; *  -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryName, assembly, searchPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="6c8e1-152">Der Name der zu ladenden nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-152">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="6c8e1-153">Die Assembly, die die native Bibliothek lädt.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-153">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="6c8e1-154">Der Suchpfad.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-154">The search path.</span></span></param>
        <param name="handle"><span data-ttu-id="6c8e1-155">Bei Rückgabe der Methode das Handle der geladenen nativen Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-155">When the method returns, the handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="6c8e1-156">Bietet eine API auf höchster Stufe zum Laden einer nativen Bibliothek und gibt einen Wert zurück, der angibt, ob der Vorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-156">Provides a high-level API that loads a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="6c8e1-157"><see langword="true" />, wenn der Ladevorgang erfolgreich war; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-157"><see langword="true" /> if the load operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c8e1-158"><paramref name="libraryPath" /> oder <paramref name="assembly" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-158"><paramref name="libraryPath" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c8e1-159"><paramref name="assembly" /> ist keine <see langword="RuntimeAssembly" />.</span><span class="sxs-lookup"><span data-stu-id="6c8e1-159"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
