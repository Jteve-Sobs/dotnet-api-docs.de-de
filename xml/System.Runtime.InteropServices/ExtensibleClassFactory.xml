<Type Name="ExtensibleClassFactory" FullName="System.Runtime.InteropServices.ExtensibleClassFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46f1f358bdb52c32f5076a22fc81232e956f93c1" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86764485" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExtensibleClassFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExtensibleClassFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ExtensibleClassFactory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExtensibleClassFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExtensibleClassFactory sealed" />
  <TypeSignature Language="F#" Value="type ExtensibleClassFactory = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht das Anpassen verwalteter Objekte, bei denen es sich um eine Erweiterung nicht verwalteter Objekte während der Erstellung handelt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ExtensibleClassFactory`Ermöglicht Benutzern das Angeben eines- `delegate` Objekts, das während der Erstellung eines Runtime Callable Wrapper (RCW) aufgerufen wird, das eine Instanz des zugrunde liegenden COM-Objekts bereitstellt. Der Rückruf fungiert in der Tat als Klassenfactory für das COM-Objekt, das vom RCW umschließt wird. Ohne den Rückruf erstellt der Common Language Runtime das zugrunde liegende COM-Objekt durch Aufrufen von `CoCreateInstance` . Dieser Rückruf bietet eine alternative Möglichkeit zum Aktivieren des zugrunde liegenden Objekts, z. b. durch einen com-Moniker oder durch Bereitstellen eines Singleton-Objekts. Die- <xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A> Methode muss im `static` Initialisierer der-Klasse aufgerufen werden, die den RCW erweitert. Pro Objekttyp ist nur ein Rückruf für die Objekt Erstellung zulässig. Wenn der erweiterbare RCW aktiviert ist, wird der Rückruf registriert. Wenn das zugrunde liegende COM-Objekt erstellt werden muss, wird der Rückruf aufgerufen, um einen Verweis auf das Objekt bereitzustellen. Der Rückruf muss einen `IUnknown` Schnittstellen Zeiger für das Basisobjekt zurückgeben.  
  
   
  
## Examples  
 Registriert ein `delegate` , das aufgerufen wird, wenn eine Instanz eines verwalteten Typs, die von einem nicht verwalteten Typ reicht, das aggregierte nicht verwaltete Objekt zuordnen muss. Dabei `delegate` wird davon ausgegangen, dass das nicht verwaltete Objekt zuzuordnen und aggregiert und anstelle von aufgerufen wird `CoCreateInstance` . Diese Routine muss im Kontext des `static` Initialisierers für die Klasse aufgerufen werden, für die die Rückrufe erstellt werden.  
  
 [!code-cpp[Classic ExtensibleClassFactory Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ExtensibleClassFactory Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ExtensibleClassFactory Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ExtensibleClassFactory Example/CS/source.cs#1)]
 [!code-vb[Classic ExtensibleClassFactory Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ExtensibleClassFactory Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="RegisterObjectCreationCallback">
      <MemberSignature Language="C#" Value="public static void RegisterObjectCreationCallback (System.Runtime.InteropServices.ObjectCreationDelegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObjectCreationCallback(class System.Runtime.InteropServices.ObjectCreationDelegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterObjectCreationCallback (callback As ObjectCreationDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterObjectCreationCallback(System::Runtime::InteropServices::ObjectCreationDelegate ^ callback);" />
      <MemberSignature Language="F#" Value="static member RegisterObjectCreationCallback : System.Runtime.InteropServices.ObjectCreationDelegate -&gt; unit" Usage="System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Runtime.InteropServices.ObjectCreationDelegate" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see langword="delegate" />, der anstelle von <see langword="CoCreateInstance" /> aufgerufen wird.</param>
        <summary>Registriert einen <see langword="delegate" />, der aufgerufen wird, wenn eine Instanz eines verwalteten Typs, der aus einem nicht verwalteten Typ erweitert wird, das aggregierte, nicht verwaltete Objekt reservieren muss.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dadurch `delegate` wird das nicht verwaltete Objekt zugeordnet und aggregiert und anstelle von aufgerufen `CoCreateInstance` . Diese `delegate` muss im Kontext des `static` Klasseninitialisierers registriert werden, für den die Rückrufe durchgeführt werden.  
  
 Nur eine Klasse in einer Hierarchie sollte einen `delegate` Rückruf registrieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
