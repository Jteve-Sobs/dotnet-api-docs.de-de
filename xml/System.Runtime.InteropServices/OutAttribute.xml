<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ed01540200bbcb13db49d5379a7544c6fbf4669" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86763471" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="66907-101">Gibt an, dass Daten vom Aufgerufenen zurück zum Aufrufer gemarshallt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="66907-101">Indicates that data should be marshaled from callee back to caller.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66907-102">Sie können dieses Attribut auf Parameter anwenden.</span><span class="sxs-lookup"><span data-stu-id="66907-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="66907-103"><xref:System.Runtime.InteropServices.OutAttribute>Ist optional.</span><span class="sxs-lookup"><span data-stu-id="66907-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="66907-104">Das-Attribut wird nur für COM-Interop und Platt Form Aufrufe unterstützt.</span><span class="sxs-lookup"><span data-stu-id="66907-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="66907-105">Wenn keine expliziten Einstellungen vorhanden sind, übernimmt der Interop-Mars Haller Regeln, die auf dem Parametertyp basieren, ob der Parameter als Verweis oder als Wert übergeben wird und ob der Typ blitfähig oder nicht blitfähig ist.</span><span class="sxs-lookup"><span data-stu-id="66907-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="66907-106">Beispielsweise wird angenommen, dass die <xref:System.Text.StringBuilder> -Klasse in/out ist, und ein Array von Zeichen folgen, die als Wert übergebenen werden, wird als in angenommen.</span><span class="sxs-lookup"><span data-stu-id="66907-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="66907-107">Das reine Verhalten ist nie ein Standardmäßiges Marshallingverhalten für Parameter.</span><span class="sxs-lookup"><span data-stu-id="66907-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="66907-108">Sie können den auf Wert und die Verweis Typen, die als Verweis übergeben wurden, anwenden, um das <xref:System.Runtime.InteropServices.OutAttribute> Verhalten in das out-only-Verhalten zu ändern. Dies entspricht der Verwendung des- `out` Schlüssel Worts in c#.</span><span class="sxs-lookup"><span data-stu-id="66907-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="66907-109">Beispielsweise können als Wert übergebene Arrays, die standardmäßig als in-only-Parameter gemarshallt werden, in out-only geändert werden.</span><span class="sxs-lookup"><span data-stu-id="66907-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="66907-110">Allerdings bietet das Verhalten nicht immer die erwartete Semantik, wenn die Typen alle blitfähigen Elemente oder Felder einschließen, da der Interop-Mars Haller Pinning verwendet.</span><span class="sxs-lookup"><span data-stu-id="66907-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="66907-111">Wenn Sie sich keine Gedanken über das Übergeben von Daten an den aufgerufenen machen, kann das out-only-Marshalling eine bessere Leistung für nicht blitfähige Typen bieten.</span><span class="sxs-lookup"><span data-stu-id="66907-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="66907-112">Die Kombination von <xref:System.Runtime.InteropServices.InAttribute> und <xref:System.Runtime.InteropServices.OutAttribute> ist besonders nützlich, wenn Sie auf Arrays und formatierte, nicht blitfähige Typen angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="66907-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="66907-113">Aufrufer sehen die Änderungen, die ein aufgerufener an diesen Typen vornimmt, wenn Sie beide Attribute anwenden.</span><span class="sxs-lookup"><span data-stu-id="66907-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="66907-114">Da diese Typen beim Marshalling kopiert werden müssen, können Sie und verwenden, <xref:System.Runtime.InteropServices.InAttribute> <xref:System.Runtime.InteropServices.OutAttribute> um unnötige Kopien zu verringern.</span><span class="sxs-lookup"><span data-stu-id="66907-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="66907-115">Weitere Informationen zu den Auswirkungen des <xref:System.Runtime.InteropServices.OutAttribute> marshallingverhaltens finden Sie unter [direktionale Attribute](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="66907-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66907-116">Im folgenden Beispiel wird gezeigt, wie <xref:System.Runtime.InteropServices.InAttribute> Sie und <xref:System.Runtime.InteropServices.OutAttribute> auf einen Platt Form Aufruf-Prototyp anwenden, der ein Array als Parameter übergibt.</span><span class="sxs-lookup"><span data-stu-id="66907-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="66907-117">Die Kombination aus direktionalen Attributen ermöglicht dem Aufrufer, die vom aufgerufenen vorgenommenen Änderungen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="66907-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
    <related type="Article" href="/dotnet/framework/interop/blittable-and-non-blittable-types"><span data-ttu-id="66907-118">Für Blitting geeignete und nicht geeignete Typen</span><span class="sxs-lookup"><span data-stu-id="66907-118">Blittable and Non-Blittable Types</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66907-119">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.OutAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66907-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
