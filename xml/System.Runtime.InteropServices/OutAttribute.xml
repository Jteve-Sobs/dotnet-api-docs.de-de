<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc83c194c574bc1fa62df28fa811b2ca6701020a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36633182" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cab12-101">Gibt an, dass Daten vom Aufgerufenen zurück zum Aufrufer gemarshallt werden sollen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cab12-101">Indicates that data should be marshaled from callee back to caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cab12-102">Sie können dieses Attribut auf Parameter anwenden.</span><span class="sxs-lookup"><span data-stu-id="cab12-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="cab12-103">Die <xref:System.Runtime.InteropServices.OutAttribute> ist optional.</span><span class="sxs-lookup"><span data-stu-id="cab12-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="cab12-104">Das Attribut wird unterstützt, für COM-Interop und Plattformaufrufe nur.</span><span class="sxs-lookup"><span data-stu-id="cab12-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="cab12-105">In Ermangelung explizite Einstellungen vorausgesetzt der Interop-Marshaller Regeln basiert auf dem Parameter, Typ gibt an, ob der Parameter als Verweis oder als Wert übergeben wird, und gibt an, ob der Typ für Blitvorgänge geeigneter oder blitfähige ist.</span><span class="sxs-lookup"><span data-stu-id="cab12-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="cab12-106">Z. B. die <xref:System.Text.StringBuilder> Klasse ist immer werden als In/Out und wird davon ausgegangen, dass ein Array von Zeichenfolgen nach Wert übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="cab12-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="cab12-107">Außenumgrenzung Verhalten ist nie eine Marshallingverhalten für Parameter Standard.</span><span class="sxs-lookup"><span data-stu-id="cab12-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="cab12-108">Können Sie anwenden der <xref:System.Runtime.InteropServices.OutAttribute> zu Wert- und Referenztypen Verweisübergabe In/Out-Verhalten in außenumgrenzung Verhalten zu ändern, der Verwendung entspricht dem `out` -Schlüsselwort in c#.</span><span class="sxs-lookup"><span data-stu-id="cab12-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="cab12-109">Beispielsweise können für Arrays, die nach Wert übergeben, als In-Parameter gemarshallt wird, wird standardmäßig auf außenumgrenzung geändert werden.</span><span class="sxs-lookup"><span data-stu-id="cab12-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="cab12-110">Das Verhalten wird jedoch immer bietet keine erwarteten Semantik, wenn alle blitfähigen Elementen die folgenden Anweisungstypen oder Felder, da der Interop-Marshaller anheften verwendet.</span><span class="sxs-lookup"><span data-stu-id="cab12-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="cab12-111">Wenn Daten an den aufgerufenen übergibt unerheblich ist, kann das außenumgrenzung Marshalling eine bessere Leistung für nicht blitfähige Typen sind.</span><span class="sxs-lookup"><span data-stu-id="cab12-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="cab12-112">Kombiniert die <xref:System.Runtime.InteropServices.InAttribute> und <xref:System.Runtime.InteropServices.OutAttribute> ist besonders nützlich, wenn auf Arrays angewendet und formatiert, nicht blitfähige Typen.</span><span class="sxs-lookup"><span data-stu-id="cab12-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="cab12-113">Aufrufer finden Sie in der Änderungen, die eine aufrufende Instanz auf diese Typen vornimmt, nur, wenn Sie beide Attribute anwenden.</span><span class="sxs-lookup"><span data-stu-id="cab12-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="cab12-114">Da diese Typen erforderlich sind, während des Marshallens kopieren, können Sie <xref:System.Runtime.InteropServices.InAttribute> und <xref:System.Runtime.InteropServices.OutAttribute> um unnötige Kopien zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="cab12-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="cab12-115">Weitere Informationen zu den Auswirkungen der <xref:System.Runtime.InteropServices.OutAttribute> zum Marshallen von Verhalten, finden Sie unter [direktionale Attribute](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="cab12-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cab12-116">Im folgende Beispiel wird gezeigt, wie zum Anwenden der <xref:System.Runtime.InteropServices.InAttribute> und <xref:System.Runtime.InteropServices.OutAttribute> in einem Plattformaufrufe Prototyp, den ein Array als Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="cab12-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="cab12-117">Die Kombination der direktionalen Attribute ermöglicht den Aufrufer, die von der aufgerufenen Instanz vorgenommenen Änderungen finden Sie unter.</span><span class="sxs-lookup"><span data-stu-id="cab12-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cab12-118">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.OutAttribute" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cab12-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>