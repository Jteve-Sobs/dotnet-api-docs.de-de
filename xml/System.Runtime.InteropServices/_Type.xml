<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="_Type.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c6da68c02b5adbe897e69251abe53d1bf839191a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6da68c02b5adbe897e69251abe53d1bf839191a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Exposes the public members of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> class to the unmanaged code.</source>
          <target state="translated">Macht die öffentlichen Member der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Klasse für den nicht verwalteten Code verfügbar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Diese Schnittstelle ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This interface preserves the vtable order of the <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">Diese Schnittstelle behält die Vtable-Reihenfolge von der <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> -Klassenmember, die von nicht verwalteten COM-Objekte zugegriffen werden können.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> instance that describes the assembly containing the current type.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>-Instanz, die die Assembly mit dem aktuellen Typ beschreibt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property gets the <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> in which the type is declared.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft ruft die <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> in der der Typ deklariert wird.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>For generic types, this property gets the <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> in which the generic type is defined.</source>
          <target state="translated">Für generische Typen, die diese Eigenschaft ruft den <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> in dem der generische Typ definiert ist.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>The assembly-qualified name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, including the name of the assembly from which the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> was loaded.</source>
          <target state="translated">Der durch die Assembly gekennzeichnete Name von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> einschließlich des Namens der Assembly, aus der der <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geladen wurde.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>The <ph id="ph1">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> property gets the assembly-qualified name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>, including the name of the assembly from which the <ph id="ph3">&lt;xref:System.Type&gt;</ph> was loaded.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft die Assembly bezeichnete Name des der <ph id="ph2">&lt;xref:System.Type&gt;</ph>, einschließlich des Namens der Assembly, aus der die <ph id="ph3">&lt;xref:System.Type&gt;</ph> geladen wurde.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Attributes" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.Attributes" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.TypeAttributes" /&gt;</ph> object representing the attribute set of the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, unless the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represents a generic type parameter, in which case the value is unspecified.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.TypeAttributes" /&gt;</ph>-Objekt, das die Attributgruppe von <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> darstellt. Falls <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> jedoch einen generischen Typparameter darstellt, ist der Wert nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>The <ph id="ph1">&lt;xref:System.Type.Attributes%2A?displayProperty=nameWithType&gt;</ph> property gets the attributes associated with the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.Attributes%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft ruft die zugeordneten Attribute ab der <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.BaseType" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.BaseType" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from which the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> directly inherits, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the current <ph id="ph4">&lt;see langword="Type" /&gt;</ph> represents the <ph id="ph5">&lt;see cref="T:System.Object" /&gt;</ph> class.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, von dem der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> direkt erbt, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn der aktuelle <ph id="ph4">&lt;see langword="Type" /&gt;</ph> die <ph id="ph5">&lt;see cref="T:System.Object" /&gt;</ph>-Klasse darstellt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.Type.BaseType%2A?displayProperty=nameWithType&gt;</ph> property gets the type from which the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> directly inherits.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.BaseType%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft den Typ ab, aus dem aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph> direkt erbt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.DeclaringType" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.DeclaringType" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object for the class that declares this member.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt für die Klasse, in der dieser Member deklariert ist.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>If the type is a nested type, this property returns the enclosing type.</source>
          <target state="translated">Wenn der Typ ein geschachtelter Typ ist, gibt diese Eigenschaft den einschließenden Typ zurück.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>The <ph id="ph1">&lt;xref:System.Type.DeclaringType%2A?displayProperty=nameWithType&gt;</ph> property gets the class that declares this member.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.DeclaringType%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft ruft die Klasse, die diesen Member deklariert.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.Equals" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.Equals" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> method determines if the underlying system type of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id="ph3">&lt;xref:System.Object&gt;</ph> or <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> Methode bestimmt, ob der zugrunde liegende des aktuellen Systemtyp <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist identisch mit den zugrunde liegenden Systemtyp des angegebenen <ph id="ph3">&lt;xref:System.Object&gt;</ph> oder <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>.</source>
          <target state="translated">sein.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose underlying system type is to be compared with the underlying system type of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, dessen zugrunde liegender Systemtyp mit dem zugrunde liegenden Systemtyp des aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Object)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the underlying system type of <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is the same as the underlying system type of the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der zugrunde liegende Systemtyp von <ph id="ph2">&lt;paramref name="o" /&gt;</ph> mit dem zugrunde liegenden Systemtyp des aktuellen <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> übereinstimmt, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> method determines if the underlying system type of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> Methode bestimmt, ob der zugrunde liegende des aktuellen Systemtyp <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist identisch mit den zugrunde liegenden Systemtyp des angegebenen <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose underlying system type is to be compared with the underlying system type of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, dessen zugrunde liegender Systemtyp mit dem zugrunde liegenden Systemtyp des aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Type)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the underlying system type of <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is the same as the underlying system type of the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der zugrunde liegende Systemtyp von <ph id="ph2">&lt;paramref name="o" /&gt;</ph> mit dem zugrunde liegenden Systemtyp des aktuellen <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> übereinstimmt, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> method determines if the underlying system type of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> Methode bestimmt, ob der zugrunde liegende des aktuellen Systemtyp <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist identisch mit den zugrunde liegenden Systemtyp des angegebenen <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.TypeFilter" /&gt;</ph> delegate that compares the interfaces against <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Reflection.TypeFilter" /&gt;</ph>-Delegat, der die Schnittstellen anhand der <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept> vergleicht.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>The search criteria that determines whether an interface should be included in the returned array.</source>
          <target state="translated">Die Suchkriterien, die bestimmen, ob eine Schnittstelle in das zurückgegebene Array aufgenommen wird.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing a filtered list of the interfaces implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Gibt ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten zurück, die eine gefilterte Liste von Schnittstellen darstellen, die vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> implementiert oder geerbt wurden.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no interfaces matching the filter are implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein leeres Array vom Typ <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine dem Filter entsprechende Schnittstellen implementiert oder geerbt hat.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType&gt;</ph> method returns an array of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects representing a filtered list of interfaces implemented or inherited by the current <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType&gt;</ph> Methode gibt ein Array von <ph id="ph2">&lt;xref:System.Type&gt;</ph> Objekte implementiert, die eine gefilterte Liste von Schnittstellen darstellt, oder der aktuelle <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>A <ph id="ph1">&lt;see langword="MemberTypes" /&gt;</ph> object indicating the type of member to search for.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="MemberTypes" /&gt;</ph>-Objekt, das den Typ der gesuchten Member angibt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The delegate that does the comparisons, returning <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member currently being inspected matches the <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept> and <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">Der Delegat, der die Vergleiche durchführt. Der Rückgabewert ist <ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der gerade betrachtete Member den <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept> entspricht, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>You can use the <ph id="ph1">&lt;see langword="FilterAttribute" /&gt;</ph>, <ph id="ph2">&lt;see langword="FilterName" /&gt;</ph>, and <ph id="ph3">&lt;see langword="FilterNameIgnoreCase" /&gt;</ph> delegates supplied by this class.</source>
          <target state="translated">Sie können die Delegaten <ph id="ph1">&lt;see langword="FilterAttribute" /&gt;</ph>, <ph id="ph2">&lt;see langword="FilterName" /&gt;</ph> und <ph id="ph3">&lt;see langword="FilterNameIgnoreCase" /&gt;</ph> dieser Klasse verwenden.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The first uses the fields of <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph>, and <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph> as search criteria, and the other two delegates use <ph id="ph4">&lt;see langword="String" /&gt;</ph> objects as the search criteria.</source>
          <target state="translated">Der erste Delegat verwendet als Suchkriterien die Felder von <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph> und <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph>, die anderen beiden Delegaten verwenden <ph id="ph4">&lt;see langword="String" /&gt;</ph>-Objekte als Suchkriterien.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The search criteria that determines whether a member is returned in the array of <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph> objects.</source>
          <target state="translated">Die Suchkriterien, die bestimmen, ob ein Member im Array von <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph>-Objekten zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The fields of <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph>, and <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph> can be used in conjunction with the <ph id="ph4">&lt;see langword="FilterAttribute" /&gt;</ph> delegate supplied by this class.</source>
          <target state="translated">Die Felder von <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph> und <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph> können zusammen mit dem <ph id="ph4">&lt;see langword="FilterAttribute" /&gt;</ph>-Delegaten dieser Klasse verwendet werden.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>A filtered array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects of the specified member type.</source>
          <target state="translated">Ein gefiltertes Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten vom angegebenen Membertyp.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have members of type <ph id="ph3">&lt;paramref name="memberType" /&gt;</ph> that match the filter criteria.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine den Filterkriterien entsprechenden Member vom <ph id="ph3">&lt;paramref name="memberType" /&gt;</ph>-Typ besitzt.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.FindMembers%2A?displayProperty=nameWithType&gt;</ph> method returns a filtered array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects of the specified member type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.FindMembers%2A?displayProperty=nameWithType&gt;</ph> Methode gibt ein gefiltertes Array von <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> Objekte mit dem angegebenen Membertyp.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>A string containing the fully qualified name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, including the namespace of the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> but not the assembly.</source>
          <target state="translated">Eine Zeichenfolge mit dem vollqualifizierten Namen von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>. Dies schließt den Namespace von <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, nicht jedoch die Assembly ein.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>The <ph id="ph1">&lt;xref:System.Type.FullName%2A?displayProperty=nameWithType&gt;</ph> property gets the fully qualified name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>, including the namespace of the <ph id="ph3">&lt;xref:System.Type&gt;</ph> but not the assembly.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.FullName%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft den vollqualifizierten Namen des der <ph id="ph2">&lt;xref:System.Type&gt;</ph>, einschließlich des Namespace des der <ph id="ph3">&lt;xref:System.Type&gt;</ph> , jedoch ausschließlich der Assembly.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetArrayRank" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetArrayRank" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the number of dimensions in the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> mit der Anzahl der Dimensionen im aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType&gt;</ph> method gets the number of dimensions in an <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die Anzahl der Dimensionen in einem <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructor" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructor" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method gets a specific constructor of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> Methode ruft einen bestimmten Konstruktor des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the desired constructor.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, das die Anzahl, die Reihenfolge und den Typ der Parameter des abzurufenden Konstruktors darstellt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>An empty array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects, to get a constructor that takes no parameters.</source>
          <target state="translated">Ein leeres Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten zum Abrufen eines Konstruktors ohne Parameter.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>Such an empty array is provided by the <ph id="ph1">&lt;see langword="static" /&gt;</ph> field <ph id="ph2">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see langword="static" /&gt;</ph>-Feld <ph id="ph2">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph> stellt ein entsprechendes leeres Array bereit.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Type[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph>-Objekt, das den öffentlichen Konstruktor für Instanzen darstellt, dessen Parameter den Typen im Parametertyparray entsprechen, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn ein solcher Konstruktor nicht gefunden wurde.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method searches for a public instance constructor whose parameters match the types in the specified array.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> Methode sucht einen öffentlichen Instanzkonstruktor, dessen Parameter den Typen im angegebenen Array entsprechen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the constructor to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, das Anzahl, Reihenfolge und Typ der Parameter des abzurufenden Konstruktors darstellt.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen eines Konstruktors, der keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the parameter type array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im Parametertyparray zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> object representing the constructor that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph>-Objekt, das den Konstruktor darstellt, der den angegebenen Anforderungen entspricht, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn kein entsprechender Konstruktor gefunden wurde.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach einem Konstruktor, dessen Parameter den angegebenen Argumenttypen und -Modifizierern unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph>-Objekt, das die Regeln für die Reihenfolge und das Layout von Argumenten, die Art der Übergabe des Rückgabewerts, die für Argumente zu verwendenden Register und die Art der Bereinigung des Stapels angibt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the constructor to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, das Anzahl, Reihenfolge und Typ der Parameter des abzurufenden Konstruktors darstellt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen eines Konstruktors, der keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>-Array zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> object representing the constructor that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph>-Objekt, das den Konstruktor darstellt, der den angegebenen Anforderungen entspricht, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn kein entsprechender Konstruktor gefunden wurde.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> Methode sucht einen Konstruktor, dessen Parameter den angegebenen Argumenttypen und -Modifizierern mithilfe der angegebenen bindungseinschränkungen und die angegebene Aufrufkonvention.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructors" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructors" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> method gets the constructors of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die Konstruktoren des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> objects representing all the public instance constructors defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, but not including the type initializer (static constructor).</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> -Objekten, die alle für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> definierten öffentlichen Instanzkonstruktoren mit Ausnahme des Typinitialisierers (statischer Konstruktor) darstellen.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>If no public instance constructors are defined for the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, or if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> represents a type parameter of a generic type or method definition, an empty array of type <ph id="ph3">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> is returned.</source>
          <target state="translated">Wenn für den aktuellen <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> keine öffentlichen Instanzkonstruktoren definiert sind oder der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> einen Typparameter einer generischen Typ- oder Methodendefinition darstellt, wird ein leeres Array vom Typ <ph id="ph3">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> zurückgegeben.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> method returns all the public constructors defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> Methodenrückgabe alle öffentlichen Konstruktoren definiert, die für den aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> objects representing all constructors defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints, including the type initializer if it is defined.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph>-Objekten, die sämtliche für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> definierten Konstruktoren, einschließlich eines ggf. definierten Typinitialisierers, darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>Returns an empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> if no constructors are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if none of the defined constructors match the binding constraints, or if the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represents a type parameter of a generic type or method definition.</source>
          <target state="translated">Gibt ein leeres Array vom Typ <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> zurück, wenn für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Konstruktoren definiert sind, keiner der definierten Konstruktoren den Bindungseinschränkungen entspricht oder der aktuelle <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> einen Typparameter einer generischen Typ- oder Methodendefinition darstellt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> method searches for the constructors defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified <ph id="ph3">&lt;xref:System.Reflection.BindingFlags&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die Konstruktoren für die aktuelle definiert <ph id="ph2">&lt;xref:System.Type&gt;</ph>, unter Verwendung des angegebenen <ph id="ph3">&lt;xref:System.Reflection.BindingFlags&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> method returns all attributes applied to this member.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> Methodenrückgabe alle Attribute, die auf diesen Member angewendet.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Gibt an, ob die Vererbungskette dieses Members nach den Attributen durchsucht werden soll.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">Ein Array von benutzerdefinierten Attributen, die auf diesen Member angewendet werden, oder ein Array mit 0 (null) Elementen, wenn keine Attribute angewendet wurden.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> method returns all attributes applied to this member.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> Methodenrückgabe alle Attribute, die auf diesen Member angewendet.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">Der Typ des zu suchenden Attributs.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">Nur Attribute, die diesem Typ zugeordnet werden können, werden zurückgegeben.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Gibt an, ob die Vererbungskette dieses Members nach den Attributen durchsucht werden soll.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">Ein Array von benutzerdefinierten Attributen, die auf diesen Member angewendet werden, oder ein Array mit 0 (null) Elementen, wenn keine Attribute angewendet wurden.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> method returns all attributes applied to this member.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> Methodenrückgabe alle Attribute, die auf diesen Member angewendet.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetDefaultMembers" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetDefaultMembers" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing all default members of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die alle Standardmember des aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> darstellen.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have default members.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Standardmember besitzt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType&gt;</ph> method searches for the members defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> whose <ph id="ph3">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> is set.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach den für den aktuellen definierten Membern <ph id="ph2">&lt;xref:System.Type&gt;</ph> , deren <ph id="ph3">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetElementType" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetElementType" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object encompassed or referred to by the current array, pointer or reference type.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> des Objekts, das der aktuelle Array-, Zeiger- oder Verweistyp einschließt bzw. auf das er verweist.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> weder ein Array noch ein Zeiger ist, nicht als Verweis übergeben wird oder einen generischen Typ bzw. einen Typparameter einer generischen Typ- oder Methodendefinition darstellt.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetElementType%2A?displayProperty=nameWithType&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the object encompassed or referred to by the current array, pointer or reference type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetElementType%2A?displayProperty=nameWithType&gt;</ph> Methode gibt die <ph id="ph2">&lt;xref:System.Type&gt;</ph> des Objekts enthalten oder durch den aktuellen Array-, Zeiger- oder Verweistyp Typ bezeichnet.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvent" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvent" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> method gets a specific event declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> Methode ruft ein bestimmtes Ereignis deklariert oder geerbt wurden von der aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> objects representing all events that are declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>-Objekten, die sämtliche vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> deklarierten oder geerbten Ereignisse darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have events, or if none of the events match the binding constraints.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Ereignisse besitzt oder keines der Ereignisse den Bindungseinschränkungen entspricht.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> method searches for events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach Ereignissen, die deklarierten oder geerbten vom aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>, unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of an event that is declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen eines vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> deklarierten oder geerbten Ereignisses enthält.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> object representing the specified event that is declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>-Objekt, das das angegebene, vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> deklarierte oder geerbte Ereignis darstellt (sofern ein solches gefunden wird), andernfalls <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> object representing the specified event, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> Methode gibt die <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> Objekt, das das angegebene Ereignis unter Verwendung der angegebenen bindungseinschränkungen darstellt.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvents" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvents" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> method gets the events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die Ereignisse, die deklarierten oder geerbten vom aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvents" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetEvents" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> objects representing all the public events that are declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Gibt ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>-Objekten zurück, die sämtliche vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> deklarierten oder geerbten öffentlichen Ereignisse darstellen.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have public events.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine öffentlichen Ereignisse besitzt.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> method returns all the public events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> Methode gibt die öffentlichen Ereignisse, die deklarierten oder geerbten vom aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> objects representing all events that are declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>-Objekten, die sämtliche vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> deklarierten oder geerbten Ereignisse darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have events, or if none of the events match the binding constraints.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Ereignisse besitzt oder keines der Ereignisse den Bindungseinschränkungen entspricht.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> method searches for events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach Ereignissen, die deklarierten oder geerbten vom aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>, unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetField" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetField" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> method gets a specific field of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> Methode ruft ein bestimmtes Feld des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the data field to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen des abzurufenden Datenfelds enthält.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object representing the public field with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekt, das das öffentliche Feld mit dem angegebenen Namen darstellt, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> method searches for the public field with the specified name.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> Methode sucht das öffentliche Feld mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the data field to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen des abzurufenden Datenfelds enthält.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object representing the field that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekt, das das Feld darstellt, das den angegebenen Anforderungen entspricht, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn das Feld nicht gefunden wurde.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified field, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> Methode sucht das angegebene Feld unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetFields" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetFields" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> method gets a specific field of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> Methode ruft ein bestimmtes Feld des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetFields" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetFields" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects representing all the public fields defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekten, die alle für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> definierten öffentlichen Felder darstellen.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>, if no public fields are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Typ, wenn für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine öffentlichen Felder definiert sind.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> method returns all the public fields of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> Methode gibt sämtliche öffentlichen Felder des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects representing all fields defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekten, die sämtliche für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> definierten öffentlichen Felder darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>, if no fields are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the defined fields match the binding constraints.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Typ, wenn für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Felder definiert sind oder keines der definierten Felder den Bindungseinschränkungen entspricht.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> method searches for the fields defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach den für den aktuellen definierten Feldern <ph id="ph2">&lt;xref:System.Type&gt;</ph>, unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetHashCode" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetHashCode" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the hash code for this instance.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> mit dem Hashcode für diese Instanz.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetHashCode%2A?displayProperty=nameWithType&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Für zukünftige Verwendung reserviert.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Muss IID_NULL sein.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">Das übergebene Array von zuzuordnenden Namen.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Count of the names to be mapped.</source>
          <target state="translated">Die Anzahl der zuzuordnenden Namen.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">Das vom Aufrufer zugeordnete Array, das die IDs entsprechend den Namen empfängt.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetInterface" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetInterface" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> method gets a specific interface implemented or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> Methode ruft eine bestimmte Schnittstelle implementiert oder geerbt wurden von der aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the interface to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Schnittstelle enthält.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>For generic interfaces, this is the mangled name.</source>
          <target state="translated">Bei generischen Schnittstellen ist dies der ergänzte Name.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the interface with the specified name, implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, das die vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> implementierte oder geerbte Schnittstelle mit dem angegebenen Namen darstellt, sofern gefunden, andernfalls <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> method searches for the interface with the specified name..</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die Schnittstelle mit dem angegebenen Namen...</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the interface to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Schnittstelle enthält.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>For generic interfaces, this is the mangled name.</source>
          <target state="translated">Bei generischen Schnittstellen ist dies der ergänzte Name.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform a case-insensitive search for <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn nach <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> ohne Berücksichtigung der Groß- und Kleinschreibung gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to perform a case-sensitive search for <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>, wenn nach <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> mit Berücksichtigung der Groß- und Kleinschreibung gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the interface with the specified name, implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, das die vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> implementierte oder geerbte Schnittstelle mit dem angegebenen Namen darstellt, sofern gefunden, andernfalls <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified interface, specifying whether to do a case-sensitive search.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene Schnittstelle, die angibt, ob die Groß-/Kleinschreibung zu suchen.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the interface of which to retrieve a mapping.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> der Schnittstelle, deren Zuordnung abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaceMap(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaceMap(System.Type)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.InterfaceMapping" /&gt;</ph> object representing the interface mapping for <ph id="ph2">&lt;paramref name="interfaceType" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.InterfaceMapping" /&gt;</ph>-Objekt, das die Schnittstellenzuordnung für den <ph id="ph2">&lt;paramref name="interfaceType" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType&gt;</ph> method returns an interface mapping for the specified interface type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType&gt;</ph> Methode gibt eine schnittstellenzuordnung für den angegebenen Schnittstellentyp zurück.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaces" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaces" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing all the interfaces implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, die sämtliche vom aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> implementierten oder geerbten Schnittstellen darstellen.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no interfaces are implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Schnittstellen implementiert oder geerbt hat.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType&gt;</ph> method gets all the interfaces implemented or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die Schnittstellen implementiert oder geerbt wurden von der aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMember" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetMember" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method gets the specified members of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die angegebenen Member des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public members to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen des abzurufenden öffentlichen Members enthält.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die die öffentlichen Member mit dem angegebenen Namen darstellen, sofern gefunden, andernfalls ein leeres Array.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method searches for the public members with the specified name.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die öffentlichen Member mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the members to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Member enthält.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return an empty array.</source>
          <target state="translated">0 (null), um ein leeres Array zurückzugeben.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die die öffentlichen Member mit dem angegebenen Namen darstellen, sofern gefunden, andernfalls ein leeres Array.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified members, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebenen Member unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the members to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Member enthält.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> value to search for.</source>
          <target state="translated">Der zu suchende <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>Zero, to return an empty array.</source>
          <target state="translated">0 (null), um ein leeres Array zurückzugeben.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die die öffentlichen Member mit dem angegebenen Namen darstellen, sofern gefunden, andernfalls ein leeres Array.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified members of the specified member type, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebenen Member des angegebenen Membertyps unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMembers" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetMembers" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> method gets the members (properties, methods, fields, events, and so on) of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die Member (Eigenschaften, Methoden, Felder, Ereignisse usw.) des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMembers" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMembers" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing all the public members of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die sämtliche öffentlichen Member des aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> darstellen.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have public members.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Standardmember besitzt.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> method returns all the public members of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> Methode gibt sämtliche öffentlichen Member des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing all members defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die sämtliche für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> definierten öffentlichen Member darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if no members are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the defined members match the binding constraints.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Typ, wenn für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Member definiert sind oder keiner der definierten Member den Bindungseinschränkungen entspricht.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> method searches for the members defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach den für den aktuellen definierten Membern <ph id="ph2">&lt;xref:System.Type&gt;</ph>, unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethod" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethod" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public method to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Methode enthält.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the public method with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt, das die öffentliche Methode mit dem angegebenen Namen darstellt, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the public method with the specified name..</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die öffentliche Methode mit dem angegebenen Namen...</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the method to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Methode enthält.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt, das die Methode darstellt, die den angegebenen Anforderungen entspricht, sofern diese gefunden wird. Andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified method, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene Methode unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public method to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Methode enthält.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, das die Anzahl, die Reihenfolge und den Typ der Parameter der abzurufenden Methode darstellt.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the public method whose parameters match the specified argument types, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt, das die öffentliche Methode darstellt, deren Parameter den angegebenen Argumenttypen entsprechen, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public method whose parameters match the specified argument types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene öffentliche Methode, deren Parameter den angegebenen Argumenttypen entsprechen.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public method to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Methode enthält.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, das die Anzahl, die Reihenfolge und den Typ der Parameter der abzurufenden Methode darstellt.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>-Array zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the public method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt, das die öffentliche Methode darstellt, die den angegebenen Anforderungen entspricht, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public method whose parameters match the specified argument types and modifiers.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene öffentliche Methode, deren Parameter den angegebenen Argumenttypen und -Modifizierern zu entsprechen.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the method to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Methode enthält.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, das die Anzahl, die Reihenfolge und den Typ der Parameter der abzurufenden Methode darstellt.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>-Array zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt, das die Methode darstellt, die den angegebenen Anforderungen entspricht, sofern diese gefunden wird. Andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach der angegebenen Methode, deren Parameter den angegebenen Argumenttypen und -Modifizierern unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the method to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Methode enthält.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph>-Objekt, das die Regeln für Reihenfolge und Layout der Argumente, die Art der Übergabe des Rückgabewerts, die für Argumente zu verwendenden Register und die Art der Bereinigung des Stapels angibt.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, das die Anzahl, die Reihenfolge und den Typ der Parameter der abzurufenden Methode darstellt.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer Methode, die keine Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>-Array zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt, das die Methode darstellt, die den angegebenen Anforderungen entspricht, sofern diese gefunden wird. Andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene Methode, deren Parameter den angegebenen Argumenttypen und -Modifizierern mithilfe der angegebenen bindungseinschränkungen und die angegebene Aufrufkonvention.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethods" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethods" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> method gets the methods of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die Methoden des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethods" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethods" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects representing all the public methods defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekten, die alle für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> definierten öffentlichen Member darstellen.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>, if no public methods are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Typ, wenn für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine öffentlichen Methoden definiert sind.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> method returns all the public methods of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> Methode gibt sämtliche öffentlichen Methoden des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects representing all methods defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekten, die sämtliche für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> definierten öffentlichen Methoden darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>, if no methods are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the defined methods match the binding constraints.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Typ, wenn für den aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Methoden definiert sind oder keine der definierten Methoden den Bindungseinschränkungen entspricht.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> method searches for the methods defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach den für den aktuellen definierten Methoden <ph id="ph2">&lt;xref:System.Type&gt;</ph>, unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedType" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedType" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> method gets a specific type nested within the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> Methode ruft einen bestimmten Typ in der aktuellen geschachtelten <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>The string containing the name of the nested type to get.</source>
          <target state="translated">Die Zeichenfolge, die den Namen des abzurufenden geschachtelten Typs enthält.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the public nested type with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, das den öffentlichen geschachtelten Typ mit dem angegebenen Namen darstellt, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> method searches for the public nested type with the specified name.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> Methode sucht den öffentlichen geschachtelten Typ mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>The string containing the name of the nested type to get.</source>
          <target state="translated">Die Zeichenfolge, die den Namen des abzurufenden geschachtelten Typs enthält.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the nested type that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, das den geschachtelten Typ darstellt, der den angegebenen Anforderungen entspricht, sofern dieser gefunden wird. Andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified nested type, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> Methode sucht den angegebenen geschachtelten Typ unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedTypes" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedTypes" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> method gets the types nested within the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die in der aktuellen geschachtelten Typen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing all the types nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, die sämtliche im aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelten Typen darstellen.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no types are nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein leeres Array vom Typ <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, wenn im aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Typen geschachtelt sind.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> method returns all the types nested within the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> Methodenrückgabe alle Typen, die in der aktuellen geschachtelten <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /&gt;</ph> method, and searches for the types nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Ermöglicht für COM-Objekte den versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /&gt;</ph>-Methode und sucht die im aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelten Typen unter Verwendung der angegebenen Bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing all the types nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, die sämtliche im aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelten Typen darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no types are nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the nested types match the binding constraints.</source>
          <target state="translated">Ein leeres Array vom Typ <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, wenn im aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Typen geschachtelt sind oder keiner der geschachtelten Typen den Bindungseinschränkungen entspricht.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperties" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperties" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> method gets the properties of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>..</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die Eigenschaften des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>...</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperties" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperties" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects representing all public properties of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekten, die alle öffentlichen Eigenschaften des aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> darstellen.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have public properties.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine öffentlichen Eigenschaften besitzt.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> method returns all the public properties of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> Methode gibt sämtliche öffentlichen Eigenschaften des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects representing all properties of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekten, die sämtliche Eigenschaften des aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> darstellen, die den angegebenen Bindungseinschränkungen entsprechen.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have properties, or if none of the properties match the binding constraints.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Typ, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> keine Eigenschaften besitzt oder keine der Eigenschaften den Bindungseinschränkungen entspricht.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> method searches for the properties of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach den Eigenschaften des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>, unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperty" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperty" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method gets a specific property of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode ruft eine bestimmte Eigenschaft des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Eigenschaft enthält.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt, das die öffentliche Eigenschaft mit dem angegebenen Namen darstellt, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the public property with the specified name.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die öffentliche Eigenschaft mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the property to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Eigenschaft enthält.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the property that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt, das die Eigenschaft darstellt, die den angegebenen Anforderungen entspricht, sofern diese gefunden wird. Andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified property, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene Eigenschaft unter Verwendung der angegebenen bindungseinschränkungen.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Eigenschaft enthält.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>The return type of the property.</source>
          <target state="translated">Der Rückgabetyp der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt, das die öffentliche Eigenschaft mit dem angegebenen Namen darstellt, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the public property with the specified name and return type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die öffentliche Eigenschaft mit dem angegebenen Namen und Rückgabetyp.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Eigenschaft enthält.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, die Anzahl, Reihenfolge und Typ der Parameter der abzurufenden indizierten Eigenschaft darstellen.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer nicht indizierten Eigenschaft.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property whose parameters match the specified argument types, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt, das die öffentliche Eigenschaft darstellt, deren Parameter den angegebenen Argumenttypen entsprechen, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public property whose parameters match the specified argument types..</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene öffentliche Eigenschaft, deren Parameter den angegebenen Argumenttypen entsprechen...</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Eigenschaft enthält.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>The return type of the property.</source>
          <target state="translated">Der Rückgabetyp der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, die Anzahl, Reihenfolge und Typ der Parameter der abzurufenden indizierten Eigenschaft darstellen.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer nicht indizierten Eigenschaft.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property whose parameters match the specified argument types, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt, das die öffentliche Eigenschaft darstellt, deren Parameter den angegebenen Argumenttypen entsprechen, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public property whose parameters match the specified argument types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene öffentliche Eigenschaft, deren Parameter den angegebenen Argumenttypen entsprechen.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden öffentlichen Eigenschaft enthält.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return type of the property.</source>
          <target state="translated">Der Rückgabetyp der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, die Anzahl, Reihenfolge und Typ der Parameter der abzurufenden indizierten Eigenschaft darstellen.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer nicht indizierten Eigenschaft.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>-Array zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt, das die öffentliche Eigenschaft darstellt, die den angegebenen Anforderungen entspricht, sofern gefunden, andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public property whose parameters match the specified argument types and modifiers.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode sucht die angegebene öffentliche Eigenschaft, deren Parameter den angegebenen Argumenttypen und -Modifizierern zu entsprechen.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the property to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der abzurufenden Eigenschaft enthält.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">0 (null), damit <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return type of the property.</source>
          <target state="translated">Der Rückgabetyp der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekten, die Anzahl, Reihenfolge und Typ der Parameter der abzurufenden indizierten Eigenschaft darstellen.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Ein leeres Array vom <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Typ, d. h. Type[] types = new Type[0], zum Abrufen einer nicht indizierten Eigenschaft.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>-Array zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the property that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt, das die Eigenschaft darstellt, die den angegebenen Anforderungen entspricht, sofern diese gefunden wird. Andernfalls <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> Methode sucht nach der angegebenen Eigenschaft, deren Parameter den angegebenen Argumenttypen und -Modifizierern unter Verwendung der angegebenen bindungseinschränkungen zu entsprechen.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetType" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.GetType" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Der aktuelle <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> method gets the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The type information to return.</source>
          <target state="translated">Die zurückzugebenden Typinformationen.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale identifier for the type information.</source>
          <target state="translated">Der Gebietsschemabezeichner für die Typinformationen.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Retrieves the type information for an object, which can then be used to get the type information for an interface.</source>
          <target state="translated">Ruft die Typinformationen für ein Objekt ab, die dann zum Abrufen der Typinformationen für eine Schnittstelle verwendet werden können.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.GUID" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.GUID" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>The GUID associated with the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Die dem <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> zugeordnete GUID.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>The <ph id="ph1">&lt;xref:System.Type.GUID%2A?displayProperty=nameWithType&gt;</ph> property gets the GUID associated with the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.GUID%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft ruft die zugeordnete GUID ab der <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.HasElementType" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.HasElementType" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an array, a pointer, or is passed by reference; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> ein Array oder ein Zeiger ist oder als Verweis übergeben wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source>The <ph id="ph1">&lt;xref:System.Type.HasElementType%2A?displayProperty=nameWithType&gt;</ph> property</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.HasElementType%2A?displayProperty=nameWithType&gt;</ph>-Eigenschaft.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Identifies the member.</source>
          <target state="translated">Bezeichnet den Member.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Für zukünftige Verwendung reserviert.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Muss IID_NULL sein.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Flags describing the context of the call.</source>
          <target state="translated">Flags, die den Kontext des Aufrufs beschreiben.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">Der Index des ersten Arguments mit einem Fehler.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`IDispatch::Invoke`</ph>, finden Sie in der MSDN Library.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes a specific member of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> Methode ruft einen bestimmten Member vom aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>.</source>
          <target state="translated">sein.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen des aufzurufenden Konstruktors, der Methode, der Eigenschaft oder des Feldmembers enthält.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>An empty string ("") to invoke the default member.</source>
          <target state="translated">Eine leere Zeichenfolge ("") zum Aufrufen des Standardmembers.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>For IDispatch members, a string representing the DispID, for example "[DispID=3]".</source>
          <target state="translated">Für IDispatch-Member eine Zeichenfolge, die die DispID darstellt, z. B. "[DispID=3]".</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The access can be one of the <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> such as <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph>, and so on.</source>
          <target state="translated">Der Zugriff kann aus einem der <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> wie <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph> usw. bestehen.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The type of lookup need not be specified.</source>
          <target state="translated">Die Art der Suche muss nicht angegeben werden.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>If the type of lookup is omitted, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> will apply.</source>
          <target state="translated">Wenn die Art der Suche nicht angegeben ist, werden <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, für das der angegebene Member aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>An array containing the arguments to pass to the member to invoke.</source>
          <target state="translated">Ein Array mit den Argumenten, die dem aufzurufenden Member übergeben werden sollen.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the return value of the invoked member.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den Rückgabewert des aufgerufenen Members darstellt.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die angegebenen Member auf, mit dem angegebenen Einschränkungen binden und der angegebenen Argumentliste entspricht.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen des aufzurufenden Konstruktors, der Methode, der Eigenschaft oder des Feldmembers enthält.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>An empty string ("") to invoke the default member.</source>
          <target state="translated">Eine leere Zeichenfolge ("") zum Aufrufen des Standardmembers.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>For IDispatch members, a string representing the DispID, for example "[DispID=3]".</source>
          <target state="translated">Für IDispatch-Member eine Zeichenfolge, die die DispID darstellt, z. B. "[DispID=3]".</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The access can be one of the <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> such as <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph>, and so on.</source>
          <target state="translated">Der Zugriff kann aus einem der <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> wie <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph> usw. bestehen.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The type of lookup need not be specified.</source>
          <target state="translated">Die Art der Suche muss nicht angegeben werden.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>If the type of lookup is omitted, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> will apply.</source>
          <target state="translated">Wenn die Art der Suche nicht angegeben ist, werden <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, für das der angegebene Member aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>An array containing the arguments to pass to the member to invoke.</source>
          <target state="translated">Ein Array mit den Argumenten, die dem aufzurufenden Member übergeben werden sollen.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>-Objekt, das das zu verwendende Globalisierungsgebietsschema darstellt, das für gebietsspezifische Konvertierungen wie die Konvertierung einer numerischen Zeichenfolge in einen Double erforderlich sein kann.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the current thread's <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> des aktuellen Threads verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the return value of the invoked member.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den Rückgabewert des aufgerufenen Members darstellt.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die angegebenen Member auf, mit dem angegebenen Einschränkungen binden und der angegebenen Argumentliste und Kultur entspricht.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen des aufzurufenden Konstruktors, der Methode, der Eigenschaft oder des Feldmembers enthält.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An empty string ("") to invoke the default member.</source>
          <target state="translated">Eine leere Zeichenfolge ("") zum Aufrufen des Standardmembers.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>For IDispatch members, a string representing the DispID, for example "[DispID=3]".</source>
          <target state="translated">Für IDispatch-Member eine Zeichenfolge, die die DispID darstellt, z. B. "[DispID=3]".</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Eine Bitmaske aus einem oder mehreren <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>, die angeben, wie die Suche durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The access can be one of the <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> such as <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph>, and so on.</source>
          <target state="translated">Der Zugriff kann aus einem der <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> wie <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph> usw. bestehen.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The type of lookup need not be specified.</source>
          <target state="translated">Die Art der Suche muss nicht angegeben werden.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>If the type of lookup is omitted, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> will apply.</source>
          <target state="translated">Wenn die Art der Suche nicht angegeben ist, werden <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>-Objekt, das eine Gruppe von Eigenschaften definiert und eine Bindung ermöglicht. Dazu kann die Auswahl einer überladenen Methode, die Umwandlung von Argumenttypen und der Aufruf eines Members durch Reflektion gehören.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, für das der angegebene Member aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array containing the arguments to pass to the member to invoke.</source>
          <target state="translated">Ein Array mit den Argumenten, die dem aufzurufenden Member übergeben werden sollen.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten, die die Attribute darstellen, die dem entsprechenden Element im <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>-Array zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A parameter's associated attributes are stored in the member's signature.</source>
          <target state="translated">Die einem Parameter zugeordneten Attribute werden in der Signatur des Members gespeichert.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">Der Standardbinder verarbeitet diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>-Objekt, das das zu verwendende Globalisierungsgebietsschema darstellt, das für gebietsspezifische Konvertierungen wie die Konvertierung einer numerischen Zeichenfolge in einen Double erforderlich sein kann.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the current thread's <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> des aktuellen Threads verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array containing the names of the parameters to which the values in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array are passed.</source>
          <target state="translated">Ein Array mit den Namen der Parameter, an die die Werte des <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>-Arrays übergeben werden.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the return value of the invoked member.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das den Rückgabewert des aufgerufenen Members darstellt.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> Methode ruft die angegebenen Member auf, mit dem angegebenen Einschränkungen binden und der angegebenen Argumentliste, Modifizierer, und Kultur entspricht.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAbstract" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsAbstract" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is abstract; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> abstrakt ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAbstract%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is abstract and must be overridden.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsAbstract%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist abstrakt und muss überschrieben werden.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAnsiClass" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsAnsiClass" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string format attribute <ph id="ph2">&lt;see langword="AnsiClass" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn für <ph id="ph2">&lt;see langword="AnsiClass" /&gt;</ph> das Zeichenfolgenformatattribut <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> ausgewählt ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the string format attribute <ph id="ph2">`AnsiClass`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob das Zeichenfolgenformatattribut <ph id="ph2">`AnsiClass`</ph> ausgewählt ist, für die <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsArray" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsArray" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an array; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> ein Array ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsArray%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is an array.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsArray%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist ein Array.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, das mit dem aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.IsAssignableFrom(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.IsAssignableFrom(System.Type)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> and the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represent the same type, or if the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> is in the inheritance hierarchy of <ph id="ph5">&lt;paramref name="c" /&gt;</ph>, or if the current <ph id="ph6">&lt;see cref="T:System.Type" /&gt;</ph> is an interface that <ph id="ph7">&lt;paramref name="c" /&gt;</ph> implements, or if <ph id="ph8">&lt;paramref name="c" /&gt;</ph> is a generic type parameter and the current <ph id="ph9">&lt;see cref="T:System.Type" /&gt;</ph> represents one of the constraints of <ph id="ph10">&lt;paramref name="c" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> unter den folgenden Bedingungen: <ph id="ph2">&lt;paramref name="c" /&gt;</ph> und der aktuelle <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> stellen denselben Typ dar, oder der aktuelle <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> befindet sich in der Vererbungshierarchie von <ph id="ph5">&lt;paramref name="c" /&gt;</ph>, oder der aktuelle <ph id="ph6">&lt;see cref="T:System.Type" /&gt;</ph> ist eine von <ph id="ph7">&lt;paramref name="c" /&gt;</ph> implementierte Schnittstelle, oder <ph id="ph8">&lt;paramref name="c" /&gt;</ph> ist ein generischer Typparameter, und der aktuelle <ph id="ph9">&lt;see cref="T:System.Type" /&gt;</ph> stellt eine der Einschränkungen von <ph id="ph10">&lt;paramref name="c" /&gt;</ph> dar.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if none of these conditions are the case, or if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>, wenn keine dieser Bedingungen zutrifft, oder wenn <ph id="ph2">&lt;paramref name="c" /&gt;</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAutoClass" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsAutoClass" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string format attribute <ph id="ph2">&lt;see langword="AutoClass" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn für <ph id="ph2">&lt;see langword="AutoClass" /&gt;</ph> das Zeichenfolgenformatattribut <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> ausgewählt ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the string format attribute <ph id="ph2">`AutoClass`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob das Zeichenfolgenformatattribut <ph id="ph2">`AutoClass`</ph> ausgewählt ist, für die <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAutoLayout" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsAutoLayout" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class layout attribute <ph id="ph2">&lt;see langword="AutoLayout" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn für <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> das Klassenlayoutattribut <ph id="ph2">&lt;see langword="AutoLayout" /&gt;</ph> ausgewählt ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the class layout attribute <ph id="ph2">`AutoLayout`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob das Klassenattribut Layout <ph id="ph2">`AutoLayout`</ph> ausgewählt ist, für die <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsByRef" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsByRef" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is passed by reference; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> als Verweis übergeben wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsByRef%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is passed by reference.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsByRef%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> als Verweis übergeben wird.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsClass" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsClass" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a class; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> eine Klasse ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a class; that is, not a value type or interface.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsClass%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist eine Klasse; d. h. keine Werttyp oder Schnittstelle.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsCOMObject" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsCOMObject" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a COM object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> ein COM-Objekt ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a COM object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist ein COM-Objekt.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsContextful" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsContextful" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> can be hosted in a context; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> in einen Kontext aufgenommen werden kann, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsContextful%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> can be hosted in a context.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsContextful%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> in einen Kontext aufgenommen werden kann.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Type" /&gt;</ph> object to which the custom attributes are applied.</source>
          <target state="translated">Das <ph id="ph1">&lt;see langword="Type" /&gt;</ph>-Objekt, auf das die benutzerdefinierten Attribute angewendet werden.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Gibt an, ob die Vererbungskette dieses Members nach den Attributen durchsucht werden soll.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more instance of <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to this member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine oder mehrere Instanzen von <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> auf diesen Member angewendet werden, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType&gt;</ph> method indicates whether one or more instance of <ph id="ph2">`attributeType`</ph> is applied to this member.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType&gt;</ph> Methode gibt an, ob ein oder mehrere Instanzen von <ph id="ph2">`attributeType`</ph> auf dieses Element angewendet wird.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsEnum" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsEnum" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> represents an enumeration; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> eine Enumeration darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsEnum%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> represents an enumeration.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsEnum%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die aktuelle <ph id="ph2">&lt;xref:System.Type&gt;</ph> eine Enumeration darstellt.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsExplicitLayout" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsExplicitLayout" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class layout attribute <ph id="ph2">&lt;see langword="ExplicitLayout" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn für <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> das Klassenlayoutattribut <ph id="ph2">&lt;see langword="ExplicitLayout" /&gt;</ph> ausgewählt ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the class layout attribute <ph id="ph2">`ExplicitLayout`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob das Klassenattribut Layout <ph id="ph2">`ExplicitLayout`</ph> ausgewählt ist, für die <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsImport" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsImport" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> has <ph id="ph3">&lt;see cref="T:System.Runtime.InteropServices.ComImportAttribute" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Runtime.InteropServices.ComImportAttribute" /&gt;</ph> hat, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsImport%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> has <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph>, indicating that it was imported from a COM type library.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsImport%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> hat <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph>, der angibt, dass er aus einer COM-Typbibliothek importiert wurde.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Das Objekt, das mit der aktuellen <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.IsInstanceOfType(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.IsInstanceOfType(System.Object)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is in the inheritance hierarchy of the object represented by <ph id="ph3">&lt;paramref name="o" /&gt;</ph>, or if the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> is an interface that <ph id="ph5">&lt;paramref name="o" /&gt;</ph> supports.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der aktuelle <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> in der Vererbungshierarchie des Objekts vorhanden ist, das von <ph id="ph3">&lt;paramref name="o" /&gt;</ph> dargestellt wird, oder wenn der aktuelle <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> eine Schnittstelle ist, die von <ph id="ph5">&lt;paramref name="o" /&gt;</ph> unterstützt wird.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if neither of these conditions is the case, or if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>, or if the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> is an open generic type (that is, <ph id="ph5">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> returns <ph id="ph6">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>, wenn keine dieser Bedingungen zutrifft oder wenn <ph id="ph2">&lt;paramref name="o" /&gt;</ph> den Wert <ph id="ph3">&lt;see langword="null" /&gt;</ph> hat oder wenn der aktuelle <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> ein offener generischer Typ ist (d. h., <ph id="ph5">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> gibt <ph id="ph6">&lt;see langword="true" /&gt;</ph> zurück).</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType&gt;</ph> method determines whether the specified object is an instance of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType&gt;</ph> Methode bestimmt, ob das angegebene Objekt eine Instanz des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsInterface" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsInterface" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an interface; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> eine Schnittstelle ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsInterface%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is an interface; that is, not a class or a value type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsInterface%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> eine Schnittstelle ist, die weder eine Klasse noch ein Werttyp.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsLayoutSequential" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsLayoutSequential" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class layout attribute <ph id="ph2">&lt;see langword="SequentialLayout" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn für <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> das Klassenlayoutattribut <ph id="ph2">&lt;see langword="SequentialLayout" /&gt;</ph> ausgewählt ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the class layout attribute <ph id="ph2">`SequentialLayout`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob das Klassenattribut Layout <ph id="ph2">`SequentialLayout`</ph> ausgewählt ist, für die <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsMarshalByRef" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsMarshalByRef" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is marshaled by reference; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> als Verweis gemarshallt wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the Type is marshaled by reference.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft ruft einen Wert, der angibt, ob der Typ als Verweis gemarshallt wird.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedAssembly" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsNestedAssembly" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only within its own assembly; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelt und nur innerhalb der eigenen Assembly sichtbar ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only within its own assembly.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> geschachtelt und nur innerhalb der eigenen Assembly sichtbar ist.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamANDAssem" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamANDAssem" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelt und ausschließlich für Klassen sichtbar ist, die sowohl zur eigenen Familie als auch zur eigenen Assembly gehören, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only to classes that belong to both its own family and its own assembly.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> wird geschachtelte und nur für Klassen sichtbare, die sowohl zur eigenen Familie als auch der eigenen Assembly gehören.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamily" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamily" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only within its own family; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelt und nur innerhalb der eigenen Familie sichtbar ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only within its own family.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> geschachtelt und nur innerhalb der eigenen Familie sichtbar ist.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamORAssem" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamORAssem" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelt und ausschließlich für Klassen sichtbar ist, die zur eigenen Familie oder zur eigenen Assembly gehören, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only to classes that belong to either its own family or to its own assembly.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> geschachtelt und ausschließlich für Klassen, die entweder zur eigenen Familie gehören oder zur eigenen Assembly sichtbar ist.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPrivate" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPrivate" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and declared private; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> geschachtelt und als privat deklariert ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and declared private.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> geschachtelt und als privat deklariert ist.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPublic" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPublic" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class is nested and declared public; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Klasse geschachtelt und als öffentlich deklariert ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether a class is nested and declared public.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft ruft einen Wert, der angibt, ob eine Klasse geschachtelt und als öffentlich deklariert ist.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNotPublic" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsNotPublic" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the top-level <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is not declared public; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> auf oberster Ebene nicht als öffentlich deklariert ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the top-level <ph id="ph2">&lt;xref:System.Type&gt;</ph> is not declared public.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob der obersten Ebene <ph id="ph2">&lt;xref:System.Type&gt;</ph> nicht als öffentlich deklariert ist.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsPointer" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsPointer" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a pointer; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> ein Zeiger ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsPointer%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a pointer.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsPointer%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> ist ein Zeiger.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsPrimitive" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsPrimitive" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is one of the primitive types; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> zu den primitiven Typen gehört, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is one of the primitive types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> zu den primitiven Typen ist.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsPublic" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsPublic" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the top-level <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is declared public; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> auf oberster Ebene als öffentlich deklariert ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsPublic%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the top-level <ph id="ph2">&lt;xref:System.Type&gt;</ph> is declared public.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsPublic%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob der obersten Ebene <ph id="ph2">&lt;xref:System.Type&gt;</ph> als öffentlich deklariert ist.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsSealed" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsSealed" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is declared sealed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> als versiegelt deklariert ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSealed%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is declared sealed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsSealed%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> als versiegelt deklariert ist.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsSerializable" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsSerializable" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is serializable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> serialisierbar ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSerializable%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is serializable.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsSerializable%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> serialisierbar ist.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsSpecialName" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsSpecialName" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> has a name that requires special handling; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> einen Namen besitzt, der eine Sonderbehandlung erfordert, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> has a name that requires special handling.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> hat einen Namen, die besondere Verarbeitung erforderlich ist.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, das mit dem aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.IsSubclassOf(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.IsSubclassOf(System.Type)" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> represented by the <ph id="ph3">&lt;paramref name="c" /&gt;</ph> parameter and the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> represent classes, and the class represented by the current <ph id="ph5">&lt;see cref="T:System.Type" /&gt;</ph> derives from the class represented by <ph id="ph6">&lt;paramref name="c" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der durch den <ph id="ph3">&lt;paramref name="c" /&gt;</ph>-Parameter dargestellte <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> und der aktuelle <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> Klassen darstellen und die durch den aktuellen <ph id="ph5">&lt;see cref="T:System.Type" /&gt;</ph> dargestellte Klasse von der durch <ph id="ph6">&lt;paramref name="c" /&gt;</ph> dargestellten Klasse abgeleitet ist, andernfalls <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> and the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represent the same class.</source>
          <target state="translated">Diese Methode gibt auch dann <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn <ph id="ph2">&lt;paramref name="c" /&gt;</ph> und der aktuelle <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> dieselbe Klasse darstellen.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType&gt;</ph> method determines whether the class represented by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> derives from the class represented by the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType&gt;</ph> Methode bestimmt, ob die Klasse von der aktuellen dargestellt <ph id="ph2">&lt;xref:System.Type&gt;</ph> leitet sich von der Klasse dargestellt, die durch das angegebene <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsUnicodeClass" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsUnicodeClass" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string format attribute <ph id="ph2">&lt;see langword="UnicodeClass" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn für <ph id="ph2">&lt;see langword="UnicodeClass" /&gt;</ph> das Zeichenfolgenformatattribut <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> ausgewählt ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the string format attribute <ph id="ph2">`UnicodeClass`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob das Zeichenfolgenformatattribut <ph id="ph2">`UnicodeClass`</ph> ausgewählt ist, für die <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsValueType" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.IsValueType" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a value type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> ein Werttyp ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsValueType%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a value type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.IsValueType%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft einen Wert, der angibt, ob die <ph id="ph2">&lt;xref:System.Type&gt;</ph> ein Werttyp ist.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.MemberType" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.MemberType" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> value indicating that this member is a type or a nested type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph>-Wert, der angibt, dass dieser Member ein Typ oder ein geschachtelter Typ ist.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>The <ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.Reflection.MemberTypes&gt;</ph> value indicating that this member is a type or a nested type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft eine <ph id="ph2">&lt;xref:System.Reflection.MemberTypes&gt;</ph> Wert, der angibt, dass dieser Member ein Typ oder ein geschachtelter Typ ist.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Module" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.Module" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>The name of the module in which the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is defined.</source>
          <target state="translated">Der Name des Moduls, in dem der aktuelle <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> definiert ist.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>The <ph id="ph1">&lt;xref:System.Type.Module%2A?displayProperty=nameWithType&gt;</ph> property gets the module (the DLL) in which the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is defined.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.Module%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft des Moduls (DLL) in der aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph> definiert ist.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.Name" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.Name" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Der Name des <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType&gt;</ph> property gets the name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft den Namen des der <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Namespace" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.Namespace" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>The namespace of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Der Namespace von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Type.Namespace%2A?displayProperty=nameWithType&gt;</ph> property gets the namespace of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.Namespace%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft den Namespace ab der <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.ReflectedType" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.ReflectedType" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object through which this <ph id="ph2">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> object was obtained.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, über das dieses <ph id="ph2">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekt abgerufen wurde.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>The <ph id="ph1">&lt;xref:System.Type.ReflectedType%2A?displayProperty=nameWithType&gt;</ph> property gets the class object that was used to obtain this member.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.ReflectedType%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft das Klassenobjekt, mit dem dieser Member abgerufen wurde.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.ToString" /&gt;</ph> method.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="M:System.Type.ToString" /&gt;</ph>-Methode für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representing the name of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen des aktuellen <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Type.ToString%2A?displayProperty=nameWithType&gt;</ph> method returns the name of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.ToString%2A?displayProperty=nameWithType&gt;</ph> -Methode gibt den Namen des aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.TypeHandle" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.TypeHandle" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>The handle for the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Das Handle für den aktuellen <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>The <ph id="ph1">&lt;xref:System.Type.TypeHandle%2A?displayProperty=nameWithType&gt;</ph> property gets the handle for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.TypeHandle%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft das Handle für den aktuellen <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.TypeInitializer" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.TypeInitializer" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> containing the name of the class constructor for the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph>, das den Namen des Klassenkonstruktors von <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType&gt;</ph> property gets the initializer for the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ruft den Initialisierer für die <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.UnderlyingSystemType" /&gt;</ph> property.</source>
          <target state="translated">Stellt einen versionsunabhängigen Zugriff auf die <ph id="ph1">&lt;see cref="P:System.Type.UnderlyingSystemType" /&gt;</ph>-Eigenschaft für COM-Objekte bereit.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>The underlying system type for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Der Systemtyp, der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>zugrunde liegt.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Diese Eigenschaft ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>The <ph id="ph1">&lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType&gt;</ph> property indicates the type provided by the common language runtime that represents this type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft gibt die von der common Language Runtime, die dieser Typ stellt bereitgestellten Typ an.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>