<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComUnregisterFunctionAttribute.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50923d7d067e7aaa3785bcd8f026f85b68193c7fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0923d7d067e7aaa3785bcd8f026f85b68193c7fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source>Specifies the method to call when you unregister an assembly for use from COM; this allows for the execution of user-written code during the unregistration process.</source>
          <target state="translated">Gibt die Methode an, die beim Aufheben der Registrierung einer Assembly für die Verwendung durch COM aufgerufen werden muss. Dadurch kann während des Aufhebens der Registrierung vom Benutzer erstellter Code ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source>You can apply this attribute to methods.</source>
          <target state="translated">Sie können dieses Attribut auf Methoden anwenden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&gt;</ph> enables you to add code that reverses the operations performed by a registration method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&gt;</ph> ermöglicht es Ihnen, Code hinzufügen, die die von einer Registrierungsmethode durchgeführten Vorgänge rückgängig macht.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source>If you apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComRegisterFunctionAttribute&gt;</ph> to provide a registration method, you must also provide an unregistration method to reverse the operations done in the registration method.</source>
          <target state="translated">Wenden Sie die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComRegisterFunctionAttribute&gt;</ph> um eine Registrierungsmethode zu ermöglichen, müssen Sie auch eine Methode zum Aufheben der Registrierung zum Umkehren der Vorgänge ausgeführt werden, in der Registrierungsmethode angeben.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source>You can have only one unregistration method for a class.</source>
          <target state="translated">Sie können nur eine Aufhebung der Registrierung-Methode für eine Klasse haben.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source>The common language runtime calls the method with this attribute when its containing assembly is unregistered (directly or indirectly) with the <bpt id="p1">[</bpt>Regasm.exe (Assembly Registration Tool)<ept id="p1">](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept> or through the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly%2A?displayProperty=nameWithType&gt;</ph> API method.</source>
          <target state="translated">Die common Language Runtime Ruft die Methode mit diesem Attribut aus, wenn die enthaltende Assembly (direkt oder indirekt) mit aufgehoben wird die <bpt id="p1">[</bpt>Regasm.exe (Assembly Registration-Tool)<ept id="p1">](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept> oder über die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly%2A?displayProperty=nameWithType&gt;</ph> -API-Methode.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source>Methods with this attribute can have any visibility (public, private, and so on), but must be <ph id="ph1">`static`</ph> and must take a single <ph id="ph2">&lt;xref:System.Type&gt;</ph> parameter for the <ph id="ph3">&lt;xref:System.Type&gt;</ph> to unregister.</source>
          <target state="translated">Methoden mit diesem Attribut können Sichtbarkeit (public, private usw.), jedoch muss <ph id="ph1">`static`</ph> daher erforderlich, eine einzelne <ph id="ph2">&lt;xref:System.Type&gt;</ph> -Parameter für die <ph id="ph3">&lt;xref:System.Type&gt;</ph> aufgehoben werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
          <source>The following example demonstrates applying <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComRegisterFunctionAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&gt;</ph> to methods with the appropriate signature.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Anwenden <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComRegisterFunctionAttribute&gt;</ph> und <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&gt;</ph> an Methoden mit einer geeigneten Signatur.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComUnregisterFunctionAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /&gt;</ph>-Klasse.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>