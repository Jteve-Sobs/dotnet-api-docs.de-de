<Type Name="VariantWrapper" FullName="System.Runtime.InteropServices.VariantWrapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a84591fd7cb50c13a7f8aef350fff9b0edf44ee7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75165016" /></Metadata><TypeSignature Language="C#" Value="public sealed class VariantWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit VariantWrapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.VariantWrapper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VariantWrapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class VariantWrapper sealed" />
  <TypeSignature Language="F#" Value="type VariantWrapper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1;netcore-3.1">
      <AttributeName>System.Obsolete("VariantWrapper and support for marshalling to the VARIANT type may be unavailable in future releases.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9ea9-101">Marshallt Daten vom Typ <see langword="VT_VARIANT | VT_BYREF" /> von verwaltetem an nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-101">Marshals data of type <see langword="VT_VARIANT | VT_BYREF" /> from managed to unmanaged code.</span></span> <span data-ttu-id="c9ea9-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9ea9-103">Der Zweck <xref:System.Runtime.InteropServices.VariantWrapper> besteht darin, eine Dereferenzierungsebene hinzuzufügen, wenn ein verwalteter Typ in den entsprechenden `VARIANT` Typ gemarshallt wird.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-103">The purpose of <xref:System.Runtime.InteropServices.VariantWrapper> is to add one level of indirection when marshaling a managed type to the corresponding `VARIANT` type.</span></span>  
  
 <span data-ttu-id="c9ea9-104">Sie können diese Klasse verwenden, um einen <xref:System.Object> zu wrappen, den der Interop-Mars Haller als `VT_VARIANT | VT_BYREF`übergibt.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-104">You can use this class to wrap an <xref:System.Object> that the interop marshaler passes as `VT_VARIANT | VT_BYREF`.</span></span> <span data-ttu-id="c9ea9-105">In den Versionen 1,0 und 1,1 des .NET Framework war es nicht möglich, Variant-Daten vom Typ `VT_VARIANT | VT_BYREF` zu nicht verwaltetem Code zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-105">In versions 1.0 and 1.1 of the .NET Framework, it was not possible to marshal variant data of type `VT_VARIANT | VT_BYREF` to unmanaged code.</span></span> <span data-ttu-id="c9ea9-106">Der Interop-Mars Haller hat eine Variante des verwalteten Typs (z. b. `VT_BSTR | VT_BYREF` für <xref:System.String>oder `VT_I4 | VT_BYREF` für <xref:System.Int32>), aber nicht `VT_VARIANT | VT_BYREF`übergebenen.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-106">The interop marshaler passed a variant of the managed type (for example, `VT_BSTR | VT_BYREF` for <xref:System.String>, or `VT_I4 | VT_BYREF` for <xref:System.Int32>), but not `VT_VARIANT | VT_BYREF`.</span></span>  
  
 <span data-ttu-id="c9ea9-107">Ein Vorteil der Verwendung `VT_VARIANT | VT_BYREF` Variant-Typen besteht darin, dass der Datentyp während eines Methoden Aufrufes geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-107">One advantage of using `VT_VARIANT | VT_BYREF` variant types is that the type of data can be changed during a method call.</span></span> <span data-ttu-id="c9ea9-108">Sie können z. b. einen `VT_VARIANT | VT_BYREF` Variant-Typ übergeben, der eine `VT_BSTR` enthält, und eine zurückgegebene Variante abrufen, die eine `VT_I4` nach einem Methoden Aufrufwert enthält.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-108">For example, you can pass a `VT_VARIANT | VT_BYREF` variant type that contains a `VT_BSTR` and get a variant returned that contains a `VT_I4` after a method call.</span></span> <span data-ttu-id="c9ea9-109">Da der COM-Interop-Mars Haller nicht wissen kann, wann `VT_BSTR | VT_BYREF` übergeben werden soll und wann `VT_VARIANT | VT_BYREF`, der auf eine Variante verweist, die eine `BSTR` für als `VARIANT *`deklarierte Parameter enthält, können Sie den Mars Haller mithilfe <xref:System.Runtime.InteropServices.VariantWrapper>anweisen.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-109">Because the COM interop marshaler has no way of knowing when to pass `VT_BSTR | VT_BYREF` and when to pass `VT_VARIANT | VT_BYREF`, which points to a variant that contains a `BSTR` for parameters declared as `VARIANT *`, you can instruct the marshaler by using <xref:System.Runtime.InteropServices.VariantWrapper>.</span></span>  
  
 <span data-ttu-id="c9ea9-110">Beachten Sie, dass frühe Bindungen nicht unterstützt werden. Sie können <xref:System.Runtime.InteropServices.VariantWrapper> nur verwenden, wenn Sie <xref:System.Type.InvokeMember%2A> aufrufen, oder mit einer reinen Dispatch-Schnittstelle, die in einem frühen Stil aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-110">Note that early binding is not supported; you can use <xref:System.Runtime.InteropServices.VariantWrapper> only when calling <xref:System.Type.InvokeMember%2A> or with a Dispatch-only interface called in an early bound fashion.</span></span> <span data-ttu-id="c9ea9-111">In C#müssen Sie auch das `ref`-Schlüsselwort verwenden, um `ByRef` Semantik für einen beliebigen Parameter des Typs <xref:System.Runtime.InteropServices.VariantWrapper>anzugeben.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-111">In C#, you must also use the `ref` keyword to specify `ByRef` semantics for any parameter of type <xref:System.Runtime.InteropServices.VariantWrapper>.</span></span> <span data-ttu-id="c9ea9-112">In Visual Basic werden `ByRef` Semantik automatisch für jeden impliziten, späten Bindungs Aufrufer hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-112">In Visual Basic, `ByRef` semantics are added automatically for every implicit late binding call.</span></span> <span data-ttu-id="c9ea9-113">Beachten Sie außerdem, dass das Schachteln <xref:System.Runtime.InteropServices.VariantWrapper> Objekte und Arrays von <xref:System.Runtime.InteropServices.VariantWrapper> Objekten nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-113">Also note that nesting <xref:System.Runtime.InteropServices.VariantWrapper> objects and arrays of <xref:System.Runtime.InteropServices.VariantWrapper> objects is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9ea9-114">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.VariantWrapper>-Klasse verwendet wird, um eine <xref:System.Object> zu wrappen, die der Interop-Mars Haller als `VT_VARIANT | VT_BYREF`übergibt.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-114">The following code example demonstrates how to use the <xref:System.Runtime.InteropServices.VariantWrapper> class to wrap an <xref:System.Object> that the interop marshaler passes as `VT_VARIANT | VT_BYREF`.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.VariantWrapper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.VariantWrapper/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.VariantWrapper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.VariantWrapper/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VariantWrapper (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.VariantWrapper.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VariantWrapper(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.VariantWrapper : obj -&gt; System.Runtime.InteropServices.VariantWrapper" Usage="new System.Runtime.InteropServices.VariantWrapper obj" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c9ea9-115">Das zu marshallende Objekt.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-115">The object to marshal.</span></span></param>
        <summary><span data-ttu-id="c9ea9-116">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.VariantWrapper" />-Klasse für den angegebenen <see cref="T:System.Object" />-Parameter.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-116">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> class for the specified <see cref="T:System.Object" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9ea9-117">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Runtime.InteropServices.VariantWrapper>-Klasse verwendet wird, um eine <xref:System.Object> zu wrappen, die der Interop-Mars Haller als `VT_VARIANT | VT_BYREF`übergibt.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-117">The following code example demonstrates how to use the <xref:System.Runtime.InteropServices.VariantWrapper> class to wrap an <xref:System.Object> that the interop marshaler passes as `VT_VARIANT | VT_BYREF`.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.VariantWrapper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.VariantWrapper/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.VariantWrapper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.VariantWrapper/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrappedObject">
      <MemberSignature Language="C#" Value="public object WrappedObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrappedObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.VariantWrapper.WrappedObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrappedObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrappedObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WrappedObject : obj" Usage="System.Runtime.InteropServices.VariantWrapper.WrappedObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9ea9-118">Ruft das von dem <see cref="T:System.Runtime.InteropServices.VariantWrapper" />-Objekt umschlossene Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-118">Gets the object wrapped by the <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> object.</span></span></summary>
        <value><span data-ttu-id="c9ea9-119">Das von dem <see cref="T:System.Runtime.InteropServices.VariantWrapper" />-Objekt umschlossene Objekt.</span><span class="sxs-lookup"><span data-stu-id="c9ea9-119">The object wrapped by the <see cref="T:System.Runtime.InteropServices.VariantWrapper" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
