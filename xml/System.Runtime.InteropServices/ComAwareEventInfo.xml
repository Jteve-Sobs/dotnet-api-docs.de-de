<Type Name="ComAwareEventInfo" FullName="System.Runtime.InteropServices.ComAwareEventInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fde01ce49c427da1cd909d23c3634887973dd37a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82439807" /></Metadata><TypeSignature Language="C#" Value="public class ComAwareEventInfo : System.Reflection.EventInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComAwareEventInfo extends System.Reflection.EventInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComAwareEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComAwareEventInfo&#xA;Inherits EventInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComAwareEventInfo : System::Reflection::EventInfo" />
  <TypeSignature Language="F#" Value="type ComAwareEventInfo = class&#xA;    inherit EventInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="System.Runtime.InteropServices" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Reflection.EventInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;net-5.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Obsolete("ComAwareEventInfo may be unavailable in future releases.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
      <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ee370-101">Lässt die spät gebundene Registrierung eines Ereignishandlers zu.</span><span class="sxs-lookup"><span data-stu-id="ee370-101">Permits late-bound registration of an event handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee370-102">Normalerweise Betten Compiler Aufrufe der <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>-und <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> Methoden automatisch ein, anstatt reguläre Handler zum Hinzufügen von Handlern und Entfernen von Handlern für Ereignisse zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="ee370-102">Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods instead of using regular add handler and remove handler methods for events.</span></span> <span data-ttu-id="ee370-103">Dies tritt auf, wenn die Schnittstelle, für die das entsprechende Ereignis definiert ist, eingebettet werden muss.</span><span class="sxs-lookup"><span data-stu-id="ee370-103">This occurs if the interface that the corresponding event is defined on needs to be embedded.</span></span>  
  
 <span data-ttu-id="ee370-104">Dies können Sie angeben, indem Sie die gesamte Assembly, die die-Schnittstelle enthält, mithilfe der **/Link** -Option für die Compiler oder durch Festlegen der Eigenschaft **Interop-Typen einbetten** auf `True` in Visual Studio einbetten.</span><span class="sxs-lookup"><span data-stu-id="ee370-104">You can specify this by embedding the entire assembly that contains the interface by using the **/link** option on the compilers or by setting the **Embed Interop Types** property to `True` in Visual Studio.</span></span>  
  
 <span data-ttu-id="ee370-105">Der <xref:System.Runtime.InteropServices.ComAwareEventInfo> Typ wird von der <xref:System.Reflection.EventInfo>-Klasse abgeleitet und überschreibt die Methoden <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> und <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee370-105">The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComAwareEventInfo (Type type, string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComAwareEventInfo(Type ^ type, System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ComAwareEventInfo : Type * string -&gt; System.Runtime.InteropServices.ComAwareEventInfo" Usage="new System.Runtime.InteropServices.ComAwareEventInfo (type, eventName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ee370-106">Der Typ des Objekts.</span><span class="sxs-lookup"><span data-stu-id="ee370-106">The type of object.</span></span></param>
        <param name="eventName"><span data-ttu-id="ee370-107">Der Name eines Ereignisses für <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-107">The name of an event on <paramref name="type" />.</span></span></param>
        <summary><span data-ttu-id="ee370-108">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />-Klasse unter Verwendung des angegebenen Typs und Namens des Ereignisses für den Typ.</span><span class="sxs-lookup"><span data-stu-id="ee370-108">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> class by using the specified type and a name of the event on the type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public override void AddEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="override this.AddEventHandler : obj * Delegate -&gt; unit" Usage="comAwareEventInfo.AddEventHandler (target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ee370-109">Das Zielobjekt, an das der Ereignisdelegat gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="ee370-109">The target object that the event delegate should bind to.</span></span></param>
        <param name="handler"><span data-ttu-id="ee370-110">Der Ereignisdelegat.</span><span class="sxs-lookup"><span data-stu-id="ee370-110">The event delegate.</span></span></param>
        <summary><span data-ttu-id="ee370-111">Fügt einen Ereignishandler an ein COM-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="ee370-111">Attaches an event handler to a COM object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee370-112">Diese Methode ähnelt der <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>-Methode, mit der Ausnahme, dass Sie Ereignisse an COM-Objekte anfügen können.</span><span class="sxs-lookup"><span data-stu-id="ee370-112">This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method except that it allows you to attach events to COM objects.</span></span>  
  
 <span data-ttu-id="ee370-113">Wenn `target` ein COM-Objekt ist, fügt diese Methode einem Ereignis einen Delegaten hinzu, indem die <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>-Methode verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-113">If `target` is a COM object, this method adds a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ee370-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> erleichtert das Registrieren von com-Ereignis senken, die Aufrufe an entsprechende verwaltete Delegaten weiterleiten.</span><span class="sxs-lookup"><span data-stu-id="ee370-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="ee370-115">Hierfür sind die folgenden Informationen erforderlich:</span><span class="sxs-lookup"><span data-stu-id="ee370-115">It requires the following information:</span></span>  
  
-   <span data-ttu-id="ee370-116">Das Zielobjekt selbst (`target`).</span><span class="sxs-lookup"><span data-stu-id="ee370-116">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="ee370-117">Der GUID der Quell Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="ee370-117">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="ee370-118">Die DispID der Methode in der COM-Schnittstelle, die dem angegebenen Ereignis entspricht.</span><span class="sxs-lookup"><span data-stu-id="ee370-118">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="ee370-119">Der Delegat, der aufgerufen wird, wenn das COM-Objekt das entsprechende Ereignis auslöst (`handler`).</span><span class="sxs-lookup"><span data-stu-id="ee370-119">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="ee370-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> sucht die entsprechende com-Quell Schnittstelle (als erster Parameter des <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType>-Konstruktors angegeben).</span><span class="sxs-lookup"><span data-stu-id="ee370-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="ee370-121">Anschließend sucht er eine Methode in der Quell Schnittstelle, deren Name mit dem Ereignis Namen identisch ist.</span><span class="sxs-lookup"><span data-stu-id="ee370-121">It then looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="ee370-122">Der Wert von `GuidAttribute` in der Quell Schnittstelle ist die GUID, die an <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>weitergegeben wird. der Wert `DispIDAttribute` für die-Methode ist der DISPID-Wert, der an <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-122">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.EventAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As EventAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::EventAttributes Attributes { System::Reflection::EventAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.EventAttributes" Usage="System.Runtime.InteropServices.ComAwareEventInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee370-123">Ruft die Attribute für dieses Ereignis ab.</span><span class="sxs-lookup"><span data-stu-id="ee370-123">Gets the attributes for this event.</span></span></summary>
        <value><span data-ttu-id="ee370-124">Die Schreibschutzattribute für dieses Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ee370-124">The read-only attributes for this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee370-125">Die Attribute werden in einer 4-Byte-Ganzzahl zurückgegeben, die eine Bitmap der Attribute für das Ereignis darstellt, das von dieser Instanz reflektiert wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-125">The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee370-126">Ruft die Klasse ab, die diesen Member deklariert.</span><span class="sxs-lookup"><span data-stu-id="ee370-126">Gets the class that declares this member.</span></span></summary>
        <value><span data-ttu-id="ee370-127">Das <see cref="T:System.Type" />-Objekt für die Klasse, in der dieser Member deklariert ist.</span><span class="sxs-lookup"><span data-stu-id="ee370-127">The <see cref="T:System.Type" /> object for the class that declares this member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.DeclaringType" />
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetAddMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetAddMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAddMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetAddMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetAddMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetAddMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="ee370-128"><see langword="true" />, wenn nicht öffentliche Methoden zurückgegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-128"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ee370-129">Ruft die Methode ab, mit der der Ereignisquelle ein Ereignishandlerdelegat hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="ee370-129">Gets the method that was used to add an event handler delegate to the event source.</span></span></summary>
        <returns><span data-ttu-id="ee370-130">Die Methode, mit der der Ereignisquelle ein Ereignishandlerdelegat hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="ee370-130">The method that was used to add an event handler delegate to the event source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee370-131">Diese Methode ruft die <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType>-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="ee370-131">This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="ee370-132"><paramref name="nonPublic" /> ist <see langword="true" />, und die zum Hinzufügen eines Ereignishandlerdelegaten verwendete Methode ist nicht öffentlich, aber der Aufrufer hat keine Berechtigung zum Reflektieren nicht öffentlicher Methoden.</span><span class="sxs-lookup"><span data-stu-id="ee370-132"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee370-133">Gibt alle auf diesen Member angewendeten Attribute zurück, wenn sie in einer abgeleiteten Klasse überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-133">When overridden in a derived class, returns all attributes that are applied to this member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="comAwareEventInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="ee370-134"><see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-134"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ee370-135">Ruft ein Array ab, das alle auf diesen Member angewendeten benutzerdefinierten Attribute enthält, wenn sie in einer abgeleiteten Klasse überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-135">When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="ee370-136">Ein Array, das alle benutzerdefinierte Attribute enthält, oder ein Array ohne Elemente, wenn keine Attribute definiert wurden.</span><span class="sxs-lookup"><span data-stu-id="ee370-136">An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee370-137">Diese Methode ruft die <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>-Methode des zugrunde liegenden <xref:System.Reflection.EventInfo> Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="ee370-137">This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ee370-138">Dieser Member gehört zu einem Typ, der in den auf Reflexionen beschränkten Kontext geladen wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-138">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="ee370-139">Weitere Informationen finden Sie unter [Gewusst wie: Laden von Assemblys in den reflexionsbezogenen Kontext](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span><span class="sxs-lookup"><span data-stu-id="ee370-139">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="ee370-140">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="ee370-140">A custom attribute type cannot be loaded.</span></span></exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="comAwareEventInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="ee370-141">Der zu suchende Attributtyp.</span><span class="sxs-lookup"><span data-stu-id="ee370-141">The attribute type to search for.</span></span> <span data-ttu-id="ee370-142">Es können nur Attribute zurückgegeben werden, die diesem Typ zugewiesen werden können.</span><span class="sxs-lookup"><span data-stu-id="ee370-142">Only attributes that are assignable to this type can be returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="ee370-143"><see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-143"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ee370-144">Ruft ein Array ab, das alle auf diesen Member angewendeten benutzerdefinierten Attribute des angegebenen Typs enthält, wenn sie in einer abgeleiteten Klasse überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-144">When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="ee370-145">Ein Array, das alle benutzerdefinierte Attribute des angegebenen Typs enthält, oder ein Array ohne Elemente, wenn keine Attribute definiert wurden.</span><span class="sxs-lookup"><span data-stu-id="ee370-145">An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee370-146"><paramref name="attributeType" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="ee370-146"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ee370-147">Dieser Member gehört zu einem Typ, der in den auf Reflexionen beschränkten Kontext geladen wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-147">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="ee370-148">Weitere Informationen finden Sie unter [Gewusst wie: Laden von Assemblys in den reflektionsbezogenen Kontext](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span><span class="sxs-lookup"><span data-stu-id="ee370-148">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="ee370-149">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="ee370-149">A custom attribute type cannot be loaded.</span></span></exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="comAwareEventInfo.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee370-150">Gibt eine Liste von <see cref="T:System.Reflection.CustomAttributeData" />-Klassen für die aktuelle <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />-Klasse zurück.</span><span class="sxs-lookup"><span data-stu-id="ee370-150">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects for the current <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</span></span></summary>
        <returns><span data-ttu-id="ee370-151">Eine generische Liste von <see cref="T:System.Reflection.CustomAttributeData" />-Klassen, die Daten zu den Attributen darstellen, die auf die aktuelle <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />-Klasse angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="ee370-151">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOtherMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetOtherMethods (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetOtherMethods(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetOtherMethods(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOtherMethods (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetOtherMethods(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetOtherMethods : bool -&gt; System.Reflection.MethodInfo[]" Usage="comAwareEventInfo.GetOtherMethods nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="ee370-152"><see langword="true" />, wenn nicht öffentliche Methoden eingeschlossen werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-152"><see langword="true" /> to include non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ee370-153">Gibt die öffentlichen oder nicht öffentlichen Methoden zurück, die einem Ereignis in den Metadaten zugeordnet wurden.</span><span class="sxs-lookup"><span data-stu-id="ee370-153">Returns the public or non-public methods that have been associated with an event in metadata.</span></span></summary>
        <returns><span data-ttu-id="ee370-154">Ein Array, das die Methoden darstellt, die dem Ereignis in den Metadaten zugeordnet wurden.</span><span class="sxs-lookup"><span data-stu-id="ee370-154">An array representing the methods that have been associated with the event in metadata.</span></span> <span data-ttu-id="ee370-155">Wenn keine solchen Methoden vorhanden sind, wird ein leeres Array zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="ee370-155">If there are no such methods, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRaiseMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRaiseMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRaiseMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRaiseMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRaiseMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetRaiseMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetRaiseMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="ee370-156"><see langword="true" />, wenn nicht öffentliche Methoden zurückgegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-156"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ee370-157">Gibt die Methode zurück, die beim Auslösen des Ereignisses aufgerufen wurde, wenn sie in einer abgeleiteten Klasse überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-157">When overridden in a derived class, returns the method that was called when the event was raised.</span></span></summary>
        <returns><span data-ttu-id="ee370-158">Das Objekt, das beim Auslösen des Ereignisses aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="ee370-158">The object that was called when the event was raised.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee370-159">Diese Methode gibt `null` für Ereignisse zurück, die mit dem C# Schlüsselwort `event` oder dem Visual Basic `Event`-Schlüsselwort deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="ee370-159">This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword.</span></span> <span data-ttu-id="ee370-160">Dies liegt daran, C# dass die-und-Visual Basic Compiler diese Methode nicht generieren.</span><span class="sxs-lookup"><span data-stu-id="ee370-160">This is because the C# and Visual Basic compilers do not generate such a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="ee370-161"><paramref name="nonPublic" /> ist <see langword="true" />, und die zum Hinzufügen eines Ereignishandlerdelegaten verwendete Methode ist nicht öffentlich, aber der Aufrufer hat keine Berechtigung zum Reflektieren nicht öffentlicher Methoden.</span><span class="sxs-lookup"><span data-stu-id="ee370-161"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRemoveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRemoveMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRemoveMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRemoveMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRemoveMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetRemoveMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetRemoveMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="ee370-162"><see langword="true" />, wenn nicht öffentliche Methoden zurückgegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-162"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ee370-163">Ruft das <see cref="T:System.Reflection.MethodInfo" />-Objekt zum Entfernen einer Methode des Ereignisses ab, wenn sie in einer abgeleiteten Klasse überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-163">When overridden in a derived class, retrieves the <see cref="T:System.Reflection.MethodInfo" /> object for removing a method of the event.</span></span></summary>
        <returns><span data-ttu-id="ee370-164">Die Methode, mit der ein Ereignishandlerdelegat aus der Ereignisquelle entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="ee370-164">The method that was used to remove an event handler delegate from the event source.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="ee370-165"><paramref name="nonPublic" /> ist <see langword="true" />, und die zum Hinzufügen eines Ereignishandlerdelegaten verwendete Methode ist nicht öffentlich, aber der Aufrufer hat keine Berechtigung zum Reflektieren nicht öffentlicher Methoden.</span><span class="sxs-lookup"><span data-stu-id="ee370-165"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="comAwareEventInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="ee370-166">Der zu suchende Attributtyp.</span><span class="sxs-lookup"><span data-stu-id="ee370-166">The attribute type to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="ee370-167"><see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-167"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ee370-168">Gibt an, ob eine oder mehrere Instanzen des angegebenen Attributs auf diesen Member angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="ee370-168">Indicates whether one or more instances of the specified attribute are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="ee370-169"><see langword="true" />, wenn das angegebene Attribut auf diesen Member angewendet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ee370-169"><see langword="true" /> if the specified attribute has been applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Delegate" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Runtime.InteropServices.ComAwareEventInfo.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee370-170">Ruft das Metadatentoken ab, das der aktuellen <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />-Klasse zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="ee370-170">Gets the metadata token associated with the current <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="ee370-171">Eine 32-Bit-Ganzzahl, die das Metadatentoken darstellt.</span><span class="sxs-lookup"><span data-stu-id="ee370-171">A 32-bit Integer that represents the metadata token.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Runtime.InteropServices.ComAwareEventInfo.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee370-172">Ruft das Modul ab, das der aktuellen <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />-Klasse zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="ee370-172">Gets the module associated with the current <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="ee370-173">Das Modul, das dem aktuellen <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="ee370-173">The module associated with the current <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices.ComAwareEventInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee370-174">Ruft den Namen des aktuellen Members ab.</span><span class="sxs-lookup"><span data-stu-id="ee370-174">Gets the name of the current member.</span></span></summary>
        <value><span data-ttu-id="ee370-175">Der Name dieses Members.</span><span class="sxs-lookup"><span data-stu-id="ee370-175">The name of this member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee370-176">Ruft das Klassenobjekt ab, das zum Initialisieren dieser Instanz verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="ee370-176">Gets the class object that was used to initialize this instance.</span></span></summary>
        <value><span data-ttu-id="ee370-177">Das <see cref="T:System.Type" />-Objekt, das zum Initialisieren des aktuellen Objekts verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="ee370-177">The <see cref="T:System.Type" /> object that was used to initialize the current object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public override void RemoveEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="override this.RemoveEventHandler : obj * Delegate -&gt; unit" Usage="comAwareEventInfo.RemoveEventHandler (target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ee370-178">Das Zielobjekt, an das der Ereignisdelegat gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="ee370-178">The target object that the event delegate is bound to.</span></span></param>
        <param name="handler"><span data-ttu-id="ee370-179">Der Ereignisdelegat.</span><span class="sxs-lookup"><span data-stu-id="ee370-179">The event delegate.</span></span></param>
        <summary><span data-ttu-id="ee370-180">Trennt einen Ereignishandler von einem COM-Objekt.</span><span class="sxs-lookup"><span data-stu-id="ee370-180">Detaches an event handler from a COM object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee370-181">Diese Methode ähnelt der <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>-Methode, mit dem Unterschied, dass Sie das Trennen von Ereignissen von COM-Objekten ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="ee370-181">This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method, except that it allows you to detach events from COM objects.</span></span>  
  
 <span data-ttu-id="ee370-182">Wenn `target` ein COM-Objekt ist, gibt diese Methode einen Delegaten mit der <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>-Methode für ein Ereignis frei.</span><span class="sxs-lookup"><span data-stu-id="ee370-182">If `target` is a COM object, this method releases a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ee370-183"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> ermöglicht die Aufhebung der Registrierung von com-Ereignis senken, die Aufrufe an entsprechende verwaltete Delegaten weiterleiten.</span><span class="sxs-lookup"><span data-stu-id="ee370-183"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="ee370-184">Hierfür sind die folgenden Informationen erforderlich:</span><span class="sxs-lookup"><span data-stu-id="ee370-184">It requires the following information:</span></span>  
  
-   <span data-ttu-id="ee370-185">Das Zielobjekt selbst (`target`).</span><span class="sxs-lookup"><span data-stu-id="ee370-185">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="ee370-186">Der GUID der Quell Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="ee370-186">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="ee370-187">Die DispID der Methode in der COM-Schnittstelle, die dem angegebenen Ereignis entspricht.</span><span class="sxs-lookup"><span data-stu-id="ee370-187">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="ee370-188">Der Delegat, der aufgerufen wird, wenn das COM-Objekt das entsprechende Ereignis auslöst (`handler`).</span><span class="sxs-lookup"><span data-stu-id="ee370-188">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="ee370-189"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> sucht die entsprechende com-Quell Schnittstelle (als erster Parameter des <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType>-Konstruktors angegeben).</span><span class="sxs-lookup"><span data-stu-id="ee370-189"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="ee370-190">Anschließend sucht er eine Methode in der Quell Schnittstelle, deren Name mit dem Ereignis Namen identisch ist.</span><span class="sxs-lookup"><span data-stu-id="ee370-190">It then it looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="ee370-191">Der Wert von `GuidAttribute` in der Quell Schnittstelle ist die GUID, die an <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>weitergegeben wird. der Wert `DispIDAttribute` für die-Methode ist der DISPID-Wert, der an <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="ee370-191">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ee370-192">Das Ereignis besitzt keinen öffentlichen <see langword="remove" />-Accessor.</span><span class="sxs-lookup"><span data-stu-id="ee370-192">The event does not have a public <see langword="remove" /> accessor.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ee370-193">Der übergebene Handler kann nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="ee370-193">The handler that was passed in cannot be used.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="ee370-194">Fangen Sie in <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET für Windows Store-Apps</see> oder der <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">portablen Klassenbibliothek</see> stattdessen <see cref="T:System.Exception" /> ab.</span><span class="sxs-lookup"><span data-stu-id="ee370-194">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="ee370-195">Der <paramref name="target" />-Parameter ist <see langword="null" />, und das Ereignis ist nicht statisch.</span><span class="sxs-lookup"><span data-stu-id="ee370-195">The <paramref name="target" /> parameter is <see langword="null" /> and the event is not static.</span></span>  
  
<span data-ttu-id="ee370-196">Oder</span><span class="sxs-lookup"><span data-stu-id="ee370-196">-or-</span></span> 
<span data-ttu-id="ee370-197">Die <see cref="T:System.Reflection.EventInfo" /> ist im Ziel nicht deklariert.</span><span class="sxs-lookup"><span data-stu-id="ee370-197">The <see cref="T:System.Reflection.EventInfo" /> is not declared on the target.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="ee370-198">Fangen Sie in <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET für Windows Store-Apps</see> oder der <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">portablen Klassenbibliothek</see> stattdessen die Basisklassenausnahme <see cref="T:System.MemberAccessException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="ee370-198">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="ee370-199">Der Aufrufer verfügt nicht über Zugriffsberechtigung für diesen Member.</span><span class="sxs-lookup"><span data-stu-id="ee370-199">The caller does not have access permission to the member.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
