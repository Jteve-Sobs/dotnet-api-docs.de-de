<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICustomMarshaler.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac596e612f036008e38d852a9b63135ce9093ba596a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96e612f036008e38d852a9b63135ce9093ba596a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Provides custom wrappers for handling method calls.</source>
          <target state="translated">Stellt benutzerdefinierte Wrapper für die Behandlung von Methodenaufrufen bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A marshaler provides a bridge between the functionality of old and new interfaces.</source>
          <target state="translated">Ein Marshaller stellt eine Brücke zwischen der Funktionalität des alten und neuen Schnittstellen bereit.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshaling provides the following benefits:</source>
          <target state="translated">Benutzerdefiniertes Marshalling geht, bietet die folgenden Vorteile:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</source>
          <target state="translated">Er ermöglicht es Clientanwendungen, die entwickelt wurden, funktionieren mit einer alten Schnittstelle funktioniert auch mit Servern, die eine neue Schnittstelle implementieren.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications built to work with a new interface to work with servers that implement an old interface.</source>
          <target state="translated">Sie ermöglicht Clientanwendungen erstellt, um eine neue Schnittstelle arbeiten, arbeiten mit Servern, die eine alte Schnittstelle zu implementieren.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</source>
          <target state="translated">Wenn Sie eine Schnittstelle, die verschiedenen Marshalling-Verhalten führt oder, wird das Component Object Model (COM) in eine andere Weise verfügbar gemacht, können Sie einen benutzerdefinierten Marshaller anstelle des Interop-Marshallers entwerfen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</source>
          <target state="translated">Sie können mit einem benutzerdefinierten Marshaller, den Unterschied zwischen neuen .NET Framework-Komponenten und vorhandenen COM-Komponenten minimieren.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, suppose that you are developing a managed interface called <ph id="ph1">`INew`</ph>.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie eine verwaltete Schnittstelle namens entwickeln <ph id="ph1">`INew`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</source>
          <target state="translated">Wenn diese Schnittstelle über einen standardmäßigen COM callable Wrapper (CCW) für COM bereitgestellt wird, verfügt über die gleichen Methoden wie die verwaltete Schnittstelle und verwendet die in der Interop-Marshaller integrierte Marshallregeln.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Now suppose that a well-known COM interface called <ph id="ph1">`IOld`</ph> already provides the same functionality as the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Nehmen wir jetzt an, dass eine bekannte COM-Schnittstelle aufgerufen <ph id="ph1">`IOld`</ph> enthält bereits die gleiche Funktionalität wie die <ph id="ph2">`INew`</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By designing a custom marshaler, you can provide an unmanaged implementation of <ph id="ph1">`IOld`</ph> that simply delegates the calls to the managed implementation of the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Durch Entwerfen von einem benutzerdefinierten Marshaller, können Sie eine nicht verwaltete Implementierung bereitstellen <ph id="ph1">`IOld`</ph> , die lediglich die Aufrufe an die verwaltete Implementierung der delegiert die <ph id="ph2">`INew`</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</source>
          <target state="translated">Die benutzerdefinierte Marshaller fungiert als Brücke zwischen verwalteten und nicht verwalteten Schnittstellen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</source>
          <target state="translated">Benutzerdefinierte Marshaller werden nicht aufgerufen, wenn von verwaltetem Code an nicht verwalteten Code an einer Dispatch beschränkte Schnittstelle aufrufen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Defining the Marshaling Type</source>
          <target state="translated">Definieren des Marshallingtyps</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</source>
          <target state="translated">Bevor Sie einen benutzerdefinierten Marshaller erstellen können, müssen Sie die verwalteten und nicht verwalteten Schnittstellen definieren, die gemarshallt werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</source>
          <target state="translated">Diese Schnittstellen im Allgemeinen führen dieselbe Funktion aber werden verfügbar gemacht werden anders verwalteten und nicht verwalteten Objekte.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</source>
          <target state="translated">Ein verwalteter Compiler generiert eine verwaltete Schnittstelle aus Metadaten und die resultierende Schnittstelle sieht eine beliebige andere verwaltete Schnittstelle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows a typical interface.</source>
          <target state="translated">Das folgende Beispiel zeigt eine typische-Schnittstelle.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</source>
          <target state="translated">Sie definieren Sie den nicht verwalteten Typ in der Interface Definition Language (IDL), und kompilieren Sie ihn mit dem (MIDL, Microsoft Interface Definition Language)-Compiler.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</source>
          <target state="translated">Sie definiert die Schnittstelle in einer Bibliothek-Anweisung, und weisen sie eine Schnittstellen-ID mit dem Attribut universelle eindeutige Bezeichner (UUID), wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The MIDL compiler produces several output files.</source>
          <target state="translated">Der MIDL-Compiler erzeugt mehrere Ausgabedateien.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the interface is defined in Old.idl, the output file Old_i.c defines a <ph id="ph1">`const`</ph> variable with the interface identifier (IID) of the interface, as the following example demonstrates.</source>
          <target state="translated">Die Ausgabedatei Old_i.c definiert, wenn die Schnittstelle in Old.idl definiert ist, eine <ph id="ph1">`const`</ph> Variable mit der Schnittstellenbezeichner (IID) der Schnittstelle, wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The Old.h file is also produced by MIDL.</source>
          <target state="translated">Die Datei Old.h wird auch von "MIDL" ausgelöst.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It contains a C++ definition of the interface that can be included in your C++ source code.</source>
          <target state="translated">Sie enthält eine C++-Definition der Schnittstelle, die in Ihrem C++-Quellcode aufgenommen werden kann.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the ICustomMarshaler Interface</source>
          <target state="translated">Implementieren der ICustomMarshaler-Schnittstelle</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Your custom marshaler must implement the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface to provide the appropriate wrappers to the runtime.</source>
          <target state="translated">Muss Ihre benutzerdefinierten Marshaller implementieren die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> Schnittstelle, um die entsprechenden Wrapper für die Laufzeit bereitzustellen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following C# code displays the base interface that must be implemented by all custom marshalers.</source>
          <target state="translated">Der folgende C#-Code zeigt die Basisschnittstelle, die von allen benutzerdefinierten Marshaller implementiert werden muss.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> -Schnittstelle enthält Methoden, die Unterstützung der Konvertierung, Cleanup-Unterstützung und Informationen zu den Daten, die gemarshallt werden.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Type of operation</source>
          <target state="translated">Typ des Vorgangs</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>ICustomMarshaler method</source>
          <target state="translated">ICustomMarshaler-Methode</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from native to managed code)</source>
          <target state="translated">Konvertierung (von systemeigenem zu verwaltetem Code)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Marshallt einen Zeiger auf systemeigene Daten in ein verwaltetes Objekt.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Diese Methode gibt einen benutzerdefinierten Runtime callable Wrapper (RCW), der nicht verwaltete Schnittstelle marshallen kann, die als Argument übergeben wird.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">Der Marshaller sollte eine Instanz des benutzerdefinierten RCW für diesen Typ zurückgeben.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from managed to native code)</source>
          <target state="translated">Konvertierung (von verwaltetem zu systemeigenem Code)</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Marshallt ein verwaltetes Objekt in einen Zeiger auf systemeigene Daten.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Diese Methode gibt einen benutzerdefinierten COM callable Wrapper (CCW), der die verwaltete Schnittstelle marshallen kann, die als Argument übergeben wird.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">Der Marshaller sollte eine Instanz des benutzerdefinierten CCW für diesen Typ zurückgeben.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of native code)</source>
          <target state="translated">Bereinigung (von systemeigenem Code)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Ermöglicht der Marshaller systemeigenen Daten (CCW) bereinigen, die von zurückgegeben wird die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of managed code)</source>
          <target state="translated">Bereinigung (von verwaltetem Code)</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Ermöglicht der Marshaller die verwalteten Datentypinformationen (RCW) bereinigen, die von zurückgegeben wird die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Information (about native code)</source>
          <target state="translated">Informationen (systemeigener Code)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Gibt die Größe der nicht verwalteten Daten, die gemarshallt werden.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion</source>
          <target state="translated">Umwandeln</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Marshallt einen Zeiger auf systemeigene Daten in ein verwaltetes Objekt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Diese Methode gibt einen benutzerdefinierten Runtime callable Wrapper (RCW), der nicht verwaltete Schnittstelle marshallen kann, die als Argument übergeben wird.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">Der Marshaller sollte eine Instanz des benutzerdefinierten RCW für diesen Typ zurückgeben.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Marshallt ein verwaltetes Objekt in einen Zeiger auf systemeigene Daten.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Diese Methode gibt einen benutzerdefinierten COM callable Wrapper (CCW), der die verwaltete Schnittstelle marshallen kann, die als Argument übergeben wird.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">Der Marshaller sollte eine Instanz des benutzerdefinierten CCW für diesen Typ zurückgeben.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup</source>
          <target state="translated">Bereinigung</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Ermöglicht der Marshaller systemeigenen Daten (CCW) bereinigen, die von zurückgegeben wird die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Ermöglicht der Marshaller die verwalteten Datentypinformationen (RCW) bereinigen, die von zurückgegeben wird die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Size Information</source>
          <target state="translated">Informationen zur Datenbankgröße</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Gibt die Größe der nicht verwalteten Daten, die gemarshallt werden.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the GetInstance Method</source>
          <target state="translated">Implementieren der GetInstance-Methode</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition to implementing the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface, custom marshalers must implement a <ph id="ph2">`static`</ph> method called <ph id="ph3">`GetInstance`</ph> that accepts a <ph id="ph4">&lt;xref:System.String&gt;</ph> as a parameter and has a return type of <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</source>
          <target state="translated">Zusätzlich zur Implementierung der <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> -Schnittstelle, benutzerdefinierten Marshaller müssen implementieren eine <ph id="ph2">`static`</ph> Methode mit dem Namen <ph id="ph3">`GetInstance`</ph> , akzeptiert eine <ph id="ph4">&lt;xref:System.String&gt;</ph> als Parameter und einen Rückgabetyp von <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This <ph id="ph1">`static`</ph> method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</source>
          <target state="translated">Dies <ph id="ph1">`static`</ph> Methode wird von der common Language Runtime COM-Interop-Ebene zum Instanziieren einer Instanz des benutzerdefinierten Marshaller aufgerufen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The string that is passed to <ph id="ph1">`GetInstance`</ph> is a cookie that the method can use to customize the returned custom marshaler.</source>
          <target state="translated">Die Zeichenfolge, die an <ph id="ph1">`GetInstance`</ph> ist ein Cookie, das die Methode verwenden kann, um den zurückgegebenen benutzerdefinierten Marshaller anzupassen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Applying MarshalAsAttribute</source>
          <target state="translated">Anwenden von MarshalAsAttribute</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>To use a custom marshaler, you must apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to the parameter or field that is being marshaled.</source>
          <target state="translated">Sie müssen für die Verwendung einen benutzerdefinierten Marshaller Anwenden der <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> -Attribut auf den Parameter oder ein Feld, das gemarshallt wird.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You must also pass the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value to the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> constructor.</source>
          <target state="translated">Müssen Sie außerdem die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> Enumerationswert, auf die <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition, you must specify the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field with one of the following named parameters:</source>
          <target state="translated">Darüber hinaus müssen Sie angeben der <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> -Feld durch eine der folgenden benannte Parameter:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (required): The assembly-qualified name of the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (erforderlich): die Assembly qualifizierte Name des benutzerdefinierten Marshaller.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The name should include the namespace and class of the custom marshaler.</source>
          <target state="translated">Der Name sollte den Namespace und die Klasse des benutzerdefinierten Marshaller enthalten.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</source>
          <target state="translated">Wenn die benutzerdefinierte Marshaller nicht in der Assembly definiert ist, in dem er verwendet wird, müssen Sie den Namen der Assembly angeben, in denen sie definiert ist.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field.</source>
          <target state="translated">Können Sie die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> Feld statt der <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> Feld.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> takes a type that is easier to specify.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> akzeptiert einen Typ, der einfacher angegeben ist.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (optional): A cookie that is passed to the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (optional): ein Cookie, das für dem benutzerdefinierten Marshaller übergeben wird.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the cookie to provide additional information to the marshaler.</source>
          <target state="translated">Das Cookie können Sie zusätzliche Informationen für den Marshaller angeben.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</source>
          <target state="translated">Der Marshaller verwendet wird, um eine Zahl von Wrappern bereitzustellen, identifiziert das Cookie z. B. einen bestimmten Wrapper.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The cookie is passed to the <ph id="ph1">`GetInstance`</ph> method of the marshaler.</source>
          <target state="translated">Das Cookie wird zum Übergeben der <ph id="ph1">`GetInstance`</ph> Methode der Marshaller.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute identifies the custom marshaler so it can activate the appropriate wrapper.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> Attribut identifiziert den benutzerdefinierten Marshaller, damit den entsprechenden Wrapper aktiviert werden kann.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</source>
          <target state="translated">Interop-Dienst für die common Language Runtime überprüft das Attribut und erstellt die benutzerdefinierten Marshaller das erste Argument (Parameter oder ein Feld) muss das gemarshallt werden.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The runtime then calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> methods on the custom marshaler to activate the correct wrapper to handle the call.</source>
          <target state="translated">Die Common Language Runtime ruft dann die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> Methoden für den benutzerdefinierten Marshaller den korrekten Wrapper um den Aufruf zu bewältigen zu aktivieren.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Using a Custom Marshaler</source>
          <target state="translated">Verwenden von einem benutzerdefinierten Marshaller</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</source>
          <target state="translated">Wenn der benutzerdefinierte Marshaller abgeschlossen ist, können Sie für einen bestimmten Typ als benutzerdefinierte Wrapper verwenden werden.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows the definition of the <ph id="ph1">`IUserData`</ph> managed interface:</source>
          <target state="translated">Das folgende Beispiel zeigt die Definition der <ph id="ph1">`IUserData`</ph> verwaltete Schnittstelle:</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the following example, the <ph id="ph1">`IUserData`</ph> interface uses the <ph id="ph2">`NewOldMarshaler`</ph> custom marshaler to enable unmanaged client applications to pass an <ph id="ph3">`IOld`</ph> interface to the <ph id="ph4">`DoSomeStuff`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel die <ph id="ph1">`IUserData`</ph> Benutzeroberfläche verwendet die <ph id="ph2">`NewOldMarshaler`</ph> benutzerdefinierten Marshaller zum Aktivieren von nicht verwalteten Clientanwendungen übergeben ein <ph id="ph3">`IOld`</ph> Schnittstelle zu der <ph id="ph4">`DoSomeStuff`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The managed description of the <ph id="ph1">`DoSomeStuff`</ph> method takes an <ph id="ph2">`INew`</ph> interface, as shown in the previous example, whereas the unmanaged version of <ph id="ph3">`DoSomeStuff`</ph> takes an <ph id="ph4">`IOld`</ph> interface pointer, as shown in the following example.</source>
          <target state="translated">Die verwaltete Beschreibung der der <ph id="ph1">`DoSomeStuff`</ph> -Methode übernimmt ein <ph id="ph2">`INew`</ph> -Schnittstelle ein, wie im vorherigen Beispiel dargestellt, während die nicht verwaltete Version der <ph id="ph3">`DoSomeStuff`</ph> akzeptiert ein <ph id="ph4">`IOld`</ph> Schnittstellenzeiger, wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The type library that is generated by exporting the managed definition of <ph id="ph1">`IUserData`</ph> yields the unmanaged definition shown in this example instead of the standard definition.</source>
          <target state="translated">Die Typbibliothek, die generiert wird, indem Sie die verwaltete Definition der exportieren <ph id="ph1">`IUserData`</ph> ergibt die nicht verwaltete Definition dargestellt, die in diesem Beispiel wird anstelle der Standarddefinition ab.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute applied to the <ph id="ph2">`INew`</ph> argument in the managed definition of the <ph id="ph3">`DoSomeStuff`</ph> method indicates that the argument uses a custom marshaler, as the following example shows.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> -Attribut angewendet wird, die <ph id="ph2">`INew`</ph> -Argument in die verwaltete Definition der der <ph id="ph3">`DoSomeStuff`</ph> Methode gibt an, dass das Argument einen benutzerdefinierten Marshaller, wie im folgenden Beispiel gezeigt verwendet.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the previous examples, the first parameter provided to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute is the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</source>
          <target state="translated">In den vorherigen Beispielen wird der erste Parameter bereitgestellt, um die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> -Attribut ist der <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> Enumerationswert <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The second parameter is the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field, which provides the assembly-qualified name of the custom marshaler.</source>
          <target state="translated">Der zweite Parameter ist der <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> Feld, die die Assembly qualifizierte Name des benutzerdefinierten Marshaller bereitstellt.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This name consists of the namespace and class of the custom marshaler (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</source>
          <target state="translated">Dieser Name besteht aus dem Namespace und die Klasse des benutzerdefinierten Marshaller (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>The managed object to be destroyed.</source>
          <target state="translated">Das verwaltete Objekt, das zerstört werden soll.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">Führt die notwendigen Bereinigungsvorgänge für verwaltete Daten durch, wenn diesen nicht mehr benötigt werden.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">Ein Zeiger auf nicht verwaltete Daten, die zerstört werden sollen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">Führt die notwendigen Bereinigungsvorgänge für nicht verwaltete Daten durch, wenn diesen nicht mehr benötigt werden.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>Returns the size of the native data to be marshaled.</source>
          <target state="translated">Gibt die Größe der systemeigenen Daten zurück, die gemarshallt werden sollen.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>The size, in bytes, of the native data.</source>
          <target state="translated">Die Größe der systemeigenen Daten in Bytes.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>The managed object to be converted.</source>
          <target state="translated">Das verwaltete Objekt, das konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>Converts the managed data to unmanaged data.</source>
          <target state="translated">Konvertiert verwaltete in nicht verwaltete Daten.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>A pointer to the COM view of the managed object.</source>
          <target state="translated">Ein Zeiger auf die COM-Ansicht des verwalteten Objekts.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A pointer to the unmanaged data to be wrapped.</source>
          <target state="translated">Ein Zeiger auf nicht verwaltete Daten, die umschlossen werden sollen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>Converts the unmanaged data to managed data.</source>
          <target state="translated">Konvertiert verwaltete in nicht verwaltete Daten.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>An object that represents the managed view of the COM data.</source>
          <target state="translated">Ein Objekt, das die verwaltete Ansicht der COM-Daten darstellt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>