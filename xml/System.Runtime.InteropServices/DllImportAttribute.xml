<Type Name="DllImportAttribute" FullName="System.Runtime.InteropServices.DllImportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c88c893bbcacbedffc6f6936c071741ed1dd6858" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48745061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DllImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DllImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.DllImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DllImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DllImportAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DllImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="814ca-101">Gibt an, dass die attributierte Methode durch eine nicht verwaltete Dynamic Link Library (DLL) als statischer Einstiegspunkt verfügbar gemacht wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="814ca-101">Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-102">Sie können dieses Attribut auf Methoden anwenden.</span><span class="sxs-lookup"><span data-stu-id="814ca-102">You can apply this attribute to methods.</span></span>  
  
 <span data-ttu-id="814ca-103">Die <xref:System.Runtime.InteropServices.DllImportAttribute> Attribut enthält die erforderlichen Informationen zum Aufrufen einer Funktion, die aus einer nicht verwalteten DLL exportiert wurden.</span><span class="sxs-lookup"><span data-stu-id="814ca-103">The <xref:System.Runtime.InteropServices.DllImportAttribute> attribute provides the information needed to call a function exported from an unmanaged DLL.</span></span> <span data-ttu-id="814ca-104">Als Mindestanforderung müssen Sie den Namen der DLL, die den Einstiegspunkt enthält angeben.</span><span class="sxs-lookup"><span data-stu-id="814ca-104">As a minimum requirement, you must supply the name of the DLL containing the entry point.</span></span>  
  
 <span data-ttu-id="814ca-105">Sie können dieses Attribut anwenden, direkt mit c# und C++-Methodendefinitionen; Visual Basic-Compiler gibt dieses Attribut jedoch bei Verwendung der `Declare` Anweisung.</span><span class="sxs-lookup"><span data-stu-id="814ca-105">You apply this attribute directly to C# and C++ method definitions; however, the Visual Basic compiler emits this attribute when you use the `Declare` statement.</span></span> <span data-ttu-id="814ca-106">Bei komplexen Methodendefinitionen, die enthalten <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, oder <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Felder Sie dieses Attribut direkt in Visual Basic-Methodendefinitionen anwenden.</span><span class="sxs-lookup"><span data-stu-id="814ca-106">For complex method definitions that include <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, or <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields, you apply this attribute directly to Visual Basic method definitions.</span></span>  
  
 <span data-ttu-id="814ca-107">**Beachten Sie** JScript dieses Attribut nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="814ca-107">**Note** JScript does not support this attribute.</span></span> <span data-ttu-id="814ca-108">Sie können C#- oder Visual Basic-Wrapperklassen verwenden, auf nicht verwaltete API-Methoden von JScript-Programme zugreifen.</span><span class="sxs-lookup"><span data-stu-id="814ca-108">You can use C# or Visual Basic wrapper classes to access unmanaged API methods from JScript programs.</span></span>  
  
 <span data-ttu-id="814ca-109">Weitere Informationen zur Verwendung der plattformbasis-Dienst zugreifen auf Funktionen in nicht verwaltete DLLs aufrufen, finden Sie unter [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="814ca-109">For additional information about using the platform invoke service to access functions in unmanaged DLLs, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="814ca-110">Die <xref:System.Runtime.InteropServices.DllImportAttribute> Marshalling von generischen Typen nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="814ca-110">The <xref:System.Runtime.InteropServices.DllImportAttribute> does not support marshaling of generic types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-111">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Runtime.InteropServices.DllImportAttribute> Attribut zum Importieren der Win32- `MessageBox` Funktion.</span><span class="sxs-lookup"><span data-stu-id="814ca-111">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="814ca-112">Im Codebeispiel ruft dann die importierte-Methode.</span><span class="sxs-lookup"><span data-stu-id="814ca-112">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DllImportAttribute (string dllName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dllName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DllImportAttribute(System::String ^ dllName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.DllImportAttribute : string -&gt; System.Runtime.InteropServices.DllImportAttribute" Usage="new System.Runtime.InteropServices.DllImportAttribute dllName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dllName">
          <span data-ttu-id="814ca-113">Der Name der DLL, die die nicht verwaltete Methode enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-113">The name of the DLL that contains the unmanaged method.</span>
          </span>
          <span data-ttu-id="814ca-114">Dieser kann einen Assemblyanzeigenamen einschließen, wenn die DLL in einer Assembly enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-114">This can include an assembly display name, if the DLL is included in an assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ca-115">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.InteropServices.DllImportAttribute" />-Klasse mit dem Namen der DLL, die die zu importierende Methode enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> class with the name of the DLL containing the method to import.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-116">Wenn eine nicht verwaltete DLL-Datei in einer Assembly, z. B. enthalten ist mithilfe des Linkers oder `/linkresource` -Compileroption verwenden, können Sie den Anzeigenamen der Assembly angeben, als Teil des `dllName`.</span><span class="sxs-lookup"><span data-stu-id="814ca-116">If an unmanaged DLL file is included in an assembly, for example, by using the linker or the `/linkresource` compiler option, you can specify the assembly display name as part of `dllName`.</span></span> <span data-ttu-id="814ca-117">Wenn eine nicht verwaltete DLL, die mit dem Namen z. B. `unmanaged.dll` befindet sich in einer verwalteten Assembly, die mit dem Namen `MyAssembly`, das Attribut kann angegeben werden, wie im folgenden Code gezeigt.</span><span class="sxs-lookup"><span data-stu-id="814ca-117">For example, if an unmanaged DLL named `unmanaged.dll` is included in a managed assembly named `MyAssembly`, the attribute might be specified as shown in the following code.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="814ca-118">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Runtime.InteropServices.DllImportAttribute> Attribut zum Importieren der Win32- `MessageBox` Funktion.</span><span class="sxs-lookup"><span data-stu-id="814ca-118">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="814ca-119">Im Codebeispiel ruft dann die importierte-Methode.</span><span class="sxs-lookup"><span data-stu-id="814ca-119">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BestFitMapping">
      <MemberSignature Language="C#" Value="public bool BestFitMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public bool BestFitMapping" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberSignature Language="VB.NET" Value="Public BestFitMapping As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool BestFitMapping;" />
      <MemberSignature Language="F#" Value="val mutable BestFitMapping : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-120">Aktiviert bzw. deaktiviert das Verhalten der optimalen Zuordnung bei der Konvertierung von Unicode-Zeichen in ANSI-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-120">Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-121">Wenn `true`, Fallback mit ähnlichen Zuordnungsverhalten aktiviert ist; andernfalls, Fallback mit ähnlichen Zuordnung ist deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="814ca-121">If `true`, best-fit mapping behavior is enabled; otherwise, best-fit mapping is disabled.</span></span> <span data-ttu-id="814ca-122">Die <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> Feld `true` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="814ca-122">The <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is `true` by default.</span></span> <span data-ttu-id="814ca-123">Einstellungen für dieses Feld überschreiben, die alle Einstellungen für die <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> Attribut.</span><span class="sxs-lookup"><span data-stu-id="814ca-123">Settings for this field override the any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 <span data-ttu-id="814ca-124">Die common Language Runtime konvertiert wird, in die ANSI-Zeichen, die alle Unicode-Zeichen verwalteten, die an eine nicht verwaltete Methode ausführen unter Windows 98 oder Windows Me enthalten.</span><span class="sxs-lookup"><span data-stu-id="814ca-124">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="814ca-125">Zuordnung mit ähnlichen Zeichen ermöglicht den Interop-Marshaller, eine schließen-Zeichen angeben, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="814ca-125">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="814ca-126">Der Marshaller konvertiert z. B. copyright Unicode-Zeichen "c" für nicht verwaltete Methoden, die ANSI-Zeichen akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="814ca-126">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="814ca-127">Einige Zeichen ist keine optimale Darstellung; Diese Zeichen werden nicht zuzuordnenden bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="814ca-127">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="814ca-128">Nicht zuzuordnenden Zeichen werden normalerweise in der Standard '?' ANSI-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="814ca-128">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="814ca-129">Bestimmte Unicode-Zeichen werden in gefährlicher Zeichen, z. B. der umgekehrte Schrägstrich konvertiert "\\'-Zeichen, die versehentlich einen Pfad ändern können.</span><span class="sxs-lookup"><span data-stu-id="814ca-129">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="814ca-130">Durch Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Feld `true`, können Sie das Vorhandensein von einem nicht zuzuordnenden Zeichen an den Aufrufer darauf hinweisen, durch Auslösen einer Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="814ca-130">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="814ca-131">Sie können nicht die Standardwerte, die durch Ändern der <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> und <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Felder, wenn einem verwalteten Array, dessen Elemente ANSI-Zeichen oder LPSTRs sind an eine nicht verwaltete sichere Array übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="814ca-131">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="814ca-132">Zuordnung mit ähnlichen Zeichen ist immer aktiviert und wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="814ca-132">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="814ca-133">Denken Sie daran, dass diese Kombination Ihrer Sicherheitsmodell gefährden kann.</span><span class="sxs-lookup"><span data-stu-id="814ca-133">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-134">In einigen Fällen Visual Basic-Entwickler verwenden die <xref:System.Runtime.InteropServices.DllImportAttribute>, statt die `Declare` -Anweisung, um eine DLL-Funktion in verwaltetem Code zu definieren.</span><span class="sxs-lookup"><span data-stu-id="814ca-134">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="814ca-135">Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> Feld ist ein solcher Fall.</span><span class="sxs-lookup"><span data-stu-id="814ca-135">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is one of those cases.</span></span> <span data-ttu-id="814ca-136">Das folgende Beispiel zeigt, wie Sie die strengste Anforderung anwenden Zeichen Zuordnung Sicherheit auf einer Plattform aufrufen Methodendefinitionen ANSI-Zeichensatz angeben, deaktivieren die besten Seite der Zuordnung und eine Ausnahme auszulösen, auf nicht zugeordnete Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="814ca-136">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" />
        <related type="Article" href="http://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a">
          <span data-ttu-id="814ca-137">Interop-Marshalling</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-137">Interop Marshaling</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CallingConvention CallingConvention;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CallingConvention CallingConvention" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public CallingConvention As CallingConvention " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CallingConvention CallingConvention;" />
      <MemberSignature Language="F#" Value="val mutable CallingConvention : System.Runtime.InteropServices.CallingConvention" Usage="System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CallingConvention</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-138">Gibt die Aufrufkonvention eines Einstiegspunkts an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-138">Indicates the calling convention of an entry point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-139">Sie legen dieses Feld in eines der <xref:System.Runtime.InteropServices.CallingConvention> Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="814ca-139">You set this field to one of the <xref:System.Runtime.InteropServices.CallingConvention> enumeration members.</span></span> <span data-ttu-id="814ca-140">Der Standardwert für die <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> Feld <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, die wiederum standardmäßig <xref:System.Runtime.InteropServices.CallingConvention.StdCall> Konvention.</span><span class="sxs-lookup"><span data-stu-id="814ca-140">The default value for the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, which in turn defaults to <xref:System.Runtime.InteropServices.CallingConvention.StdCall> convention.</span></span>  
  
 <span data-ttu-id="814ca-141">Weitere Informationen finden Sie in der Aufrufkonvention in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="814ca-141">For more information, see Calling Convention in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-142">In einigen Fällen Visual Basic-Entwickler verwenden die <xref:System.Runtime.InteropServices.DllImportAttribute>, statt die `Declare` -Anweisung, um eine DLL-Funktion in verwaltetem Code zu definieren.</span><span class="sxs-lookup"><span data-stu-id="814ca-142">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="814ca-143">Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> Feld ist ein solcher Fall.</span><span class="sxs-lookup"><span data-stu-id="814ca-143">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is one of those cases.</span></span>  
  
 <span data-ttu-id="814ca-144">System.Runtime.InteropServices.DllImportAttribute#1</span><span class="sxs-lookup"><span data-stu-id="814ca-144">System.Runtime.InteropServices.DllImportAttribute#1</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CallingConvention" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberSignature Language="F#" Value="val mutable CharSet : System.Runtime.InteropServices.CharSet" Usage="System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-145">Gibt an, wie Zeichenfolgenparameter an die Methode gemarshallt werden, und steuert die Namenszerlegung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-145">Indicates how to marshal string parameters to the method and controls name mangling.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-146">Verwenden Sie dieses Feld mit einem Member mit dem <xref:System.Runtime.InteropServices.CharSet> Enumeration, die das Marshalling-Verhalten der String-Parameter angeben und die Einstiegspunktfunktion mit dem Namen aufgerufen werden soll (der exakte Name oder einen Namen mit "A" oder "W" enden) angeben.</span><span class="sxs-lookup"><span data-stu-id="814ca-146">Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with "A" or "W").</span></span> <span data-ttu-id="814ca-147">Ist das Standardelement für die Enumeration für c# und Visual Basic `CharSet.Ansi` und ist das Standardelement für die Enumeration für C++ `CharSet.None`, dies entspricht dem `CharSet.Ansi`.</span><span class="sxs-lookup"><span data-stu-id="814ca-147">The default enumeration member for C# and Visual Basic is `CharSet.Ansi` and the default enumeration member for C++ is `CharSet.None`, which is equivalent to `CharSet.Ansi`.</span></span> <span data-ttu-id="814ca-148">In Visual Basic, die Sie verwenden die `Declare` -Anweisung zum Angeben der `CharSet` Feld.</span><span class="sxs-lookup"><span data-stu-id="814ca-148">In Visual Basic, you use the `Declare` statement to specify the `CharSet` field.</span></span>  
  
 <span data-ttu-id="814ca-149">Die <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> Feld beeinflusst das Verhalten der `CharSet` Feld bei der Bestimmung der Namen des Einstiegspunkts aufrufen.</span><span class="sxs-lookup"><span data-stu-id="814ca-149">The <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field influences the behavior of the `CharSet` field in determining which entry-point name to invoke.</span></span> <span data-ttu-id="814ca-150">Eine ausführliche Beschreibung und Beispiele für das Marshallen von Zeichenfolgen und namensübereinstimmung zugeordnete Verhalten der `CharSet` Feld, finden Sie unter [angeben eines Zeichensatzes](~/docs/framework/interop/specifying-a-character-set.md).</span><span class="sxs-lookup"><span data-stu-id="814ca-150">For a detailed description and examples of the string marshaling and name matching behavior associated with the `CharSet` field, see [Specifying a Character Set](~/docs/framework/interop/specifying-a-character-set.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-151">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Runtime.InteropServices.DllImportAttribute> Attribut zum Importieren der Win32- `MessageBox` Funktion.</span><span class="sxs-lookup"><span data-stu-id="814ca-151">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="814ca-152">Im Codebeispiel ruft dann die importierte-Methode.</span><span class="sxs-lookup"><span data-stu-id="814ca-152">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public string EntryPoint;" />
      <MemberSignature Language="ILAsm" Value=".field public string EntryPoint" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public EntryPoint As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EntryPoint;" />
      <MemberSignature Language="F#" Value="val mutable EntryPoint : string" Usage="System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-153">Gibt den Namen oder die Ordnungszahl des aufzurufenden DLL-Einstiegspunkts an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-153">Indicates the name or ordinal of the DLL entry point to be called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-154">Sie können den Namen des Einstiegspunkts angeben, indem eine Zeichenfolge, der angibt, der des Namens der DLL, die den Einstiegspunkt enthält bereitstellen, oder Sie können den Einstiegspunkt identifizieren, nach seiner Ordinalzahl.</span><span class="sxs-lookup"><span data-stu-id="814ca-154">You can specify the entry-point name by supplying a string indicating the name of the DLL containing the entry point, or you can identify the entry point by its ordinal.</span></span> <span data-ttu-id="814ca-155">Ordnungszahlen werden das #-Zeichen, z. B. #1 vorangestellt.</span><span class="sxs-lookup"><span data-stu-id="814ca-155">Ordinals are prefixed with the # sign, for example, #1.</span></span> <span data-ttu-id="814ca-156">Wenn Sie dieses Feld weglassen, verwendet die common Language Runtime den Namen der.NET mit markierten Methode der <xref:System.Runtime.InteropServices.DllImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="814ca-156">If you omit this field, the common language runtime uses the name of the.NET method marked with the <xref:System.Runtime.InteropServices.DllImportAttribute>.</span></span>  
  
 <span data-ttu-id="814ca-157">Weitere Informationen finden Sie unter [Identifizieren von Funktionen in DLLs](~/docs/framework/interop/identifying-functions-in-dlls.md).</span><span class="sxs-lookup"><span data-stu-id="814ca-157">For additional information, see [Identifying Functions in DLLs](~/docs/framework/interop/identifying-functions-in-dlls.md).</span></span> <span data-ttu-id="814ca-158">Beispiele zur Verwendung der <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> Feld, finden Sie unter [angeben eines Einstiegspunktes](~/docs/framework/interop/specifying-an-entry-point.md).</span><span class="sxs-lookup"><span data-stu-id="814ca-158">For examples showing how to use the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> field, see [Specifying an Entry Point](~/docs/framework/interop/specifying-an-entry-point.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-159">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Runtime.InteropServices.DllImportAttribute> Attribut zum Importieren der Win32- `MessageBox` Funktion.</span><span class="sxs-lookup"><span data-stu-id="814ca-159">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="814ca-160">Das Codebeispiel verwendet die <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> -Eigenschaft an die Funktion zum Importieren und ändert sich der Name, der dann `MyNewMessageBoxMethod`.</span><span class="sxs-lookup"><span data-stu-id="814ca-160">The code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> property to specify the function to import and then changes the name to `MyNewMessageBoxMethod`.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ExactSpelling">
      <MemberSignature Language="C#" Value="public bool ExactSpelling;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ExactSpelling" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberSignature Language="VB.NET" Value="Public ExactSpelling As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ExactSpelling;" />
      <MemberSignature Language="F#" Value="val mutable ExactSpelling : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-161">Steuert, ob das <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />-Feld die Common Language Runtime anweist, eine nicht verwaltete DLL nach anderen Einstiegspunktnamen als dem angegebenen zu durchsuchen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-161">Controls whether the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-162">Wenn `false`, Einstiegspunktname, die mit dem Buchstaben A wird aufgerufen, bei der <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> Feld ist auf festgelegt `CharSet.Ansi`, und den Namen des Einstiegspunkts, mit dem Buchstaben W angefügt wird aufgerufen, bei der <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> Feld ist auf festgelegt die `CharSet.Unicode`.</span><span class="sxs-lookup"><span data-stu-id="814ca-162">If `false`, the entry point name appended with the letter A is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to `CharSet.Ansi`, and the entry-point name appended with the letter W is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to the `CharSet.Unicode`.</span></span> <span data-ttu-id="814ca-163">Verwaltete Compiler in der Regel legen Sie dieses Feld.</span><span class="sxs-lookup"><span data-stu-id="814ca-163">Typically, managed compilers set this field.</span></span>  
  
 <span data-ttu-id="814ca-164">Die folgende Tabelle zeigt die Beziehung zwischen der <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> und <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> Felder, die basierend auf Standardwerte, die durch die Programmiersprache auferlegt.</span><span class="sxs-lookup"><span data-stu-id="814ca-164">The following table shows the relationship between the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> and <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> fields, based on default values imposed by the programming language.</span></span> <span data-ttu-id="814ca-165">Sie können die Standardeinstellung überschreiben, aber Sie können mit Vorsicht tun.</span><span class="sxs-lookup"><span data-stu-id="814ca-165">You can override the default setting, but do so with caution.</span></span>  
  
|<span data-ttu-id="814ca-166">Sprache</span><span class="sxs-lookup"><span data-stu-id="814ca-166">Language</span></span>|<span data-ttu-id="814ca-167">ANSI</span><span class="sxs-lookup"><span data-stu-id="814ca-167">ANSI</span></span>|<span data-ttu-id="814ca-168">Unicode</span><span class="sxs-lookup"><span data-stu-id="814ca-168">Unicode</span></span>|<span data-ttu-id="814ca-169">Auto</span><span class="sxs-lookup"><span data-stu-id="814ca-169">Auto</span></span>|  
|--------------|----------|-------------|----------|  
|<span data-ttu-id="814ca-170">Visual Basic</span><span class="sxs-lookup"><span data-stu-id="814ca-170">Visual Basic</span></span>|<span data-ttu-id="814ca-171">ExactSpelling: = True</span><span class="sxs-lookup"><span data-stu-id="814ca-171">ExactSpelling:=True</span></span>|<span data-ttu-id="814ca-172">ExactSpelling: = True</span><span class="sxs-lookup"><span data-stu-id="814ca-172">ExactSpelling:=True</span></span>|<span data-ttu-id="814ca-173">ExactSpelling: = "false"</span><span class="sxs-lookup"><span data-stu-id="814ca-173">ExactSpelling:=False</span></span>|  
|<span data-ttu-id="814ca-174">C#</span><span class="sxs-lookup"><span data-stu-id="814ca-174">C#</span></span>|<span data-ttu-id="814ca-175">ExactSpelling = "false"</span><span class="sxs-lookup"><span data-stu-id="814ca-175">ExactSpelling=false</span></span>|<span data-ttu-id="814ca-176">ExactSpelling = "false"</span><span class="sxs-lookup"><span data-stu-id="814ca-176">ExactSpelling=false</span></span>|<span data-ttu-id="814ca-177">ExactSpelling = "false"</span><span class="sxs-lookup"><span data-stu-id="814ca-177">ExactSpelling=false</span></span>|  
|<span data-ttu-id="814ca-178">C++</span><span class="sxs-lookup"><span data-stu-id="814ca-178">C++</span></span>|<span data-ttu-id="814ca-179">ExactSpelling = "false"</span><span class="sxs-lookup"><span data-stu-id="814ca-179">ExactSpelling=false</span></span>|<span data-ttu-id="814ca-180">ExactSpelling = "false"</span><span class="sxs-lookup"><span data-stu-id="814ca-180">ExactSpelling=false</span></span>|<span data-ttu-id="814ca-181">ExactSpelling = "false"</span><span class="sxs-lookup"><span data-stu-id="814ca-181">ExactSpelling=false</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="814ca-182">In einigen Fällen Visual Basic-Entwickler verwenden die <xref:System.Runtime.InteropServices.DllImportAttribute>, anstatt die `Declare` -Anweisung, um eine DLL-Funktion in verwaltetem Code zu definieren.</span><span class="sxs-lookup"><span data-stu-id="814ca-182">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="814ca-183">Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> Feld ist ein solcher Fall.</span><span class="sxs-lookup"><span data-stu-id="814ca-183">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveSig">
      <MemberSignature Language="C#" Value="public bool PreserveSig;" />
      <MemberSignature Language="ILAsm" Value=".field public bool PreserveSig" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberSignature Language="VB.NET" Value="Public PreserveSig As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool PreserveSig;" />
      <MemberSignature Language="F#" Value="val mutable PreserveSig : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-184">Gibt an, ob nicht verwaltete Methoden, die über <see langword="HRESULT" />-Rückgabewerte oder <see langword="retval" />-Rückgabewerte verfügen, direkt übersetzt werden oder ob <see langword="HRESULT" />-Rückgabewerte oder <see langword="retval" />-Rückgabewerte automatisch in Ausnahmen konvertiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-184">Indicates whether unmanaged methods that have <see langword="HRESULT" /> or <see langword="retval" /> return values are directly translated or whether <see langword="HRESULT" /> or <see langword="retval" /> return values are automatically converted to exceptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-185">Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Feld `true` , direkt Umsetzen der nicht verwaltete Signaturen mit `HRESULT` oder `retval` Werte; legen Sie ihn auf `false` automatisch konvertieren `HRESULT` oder `retval` Werte für Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="814ca-185">Set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `true` to directly translate unmanaged signatures with `HRESULT` or `retval` values; set it to `false` to automatically convert `HRESULT` or `retval` values to exceptions.</span></span> <span data-ttu-id="814ca-186">In der Standardeinstellung die <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Feld `true`.</span><span class="sxs-lookup"><span data-stu-id="814ca-186">By default, the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is `true`.</span></span>  
  
 <span data-ttu-id="814ca-187">Wenn `true`, die resultierende Methodensignatur gibt einen ganzzahligen-Wert, der enthält die `HRESULT` Wert.</span><span class="sxs-lookup"><span data-stu-id="814ca-187">When `true`, the resulting method signature returns an integer value that contains the `HRESULT` value.</span></span>  <span data-ttu-id="814ca-188">In diesem Fall müssen manuell den Rückgabewert zu überprüfen und entsprechend reagieren in Ihrer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="814ca-188">In this case, you must manually inspect the return value and respond accordingly in your application.</span></span>  
  
 <span data-ttu-id="814ca-189">Beim Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Feld `false`, die resultierende Methodensignatur enthält einen void-Rückgabetyp anstelle einer ganzen Zahl (`HRESULT`) Typ zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="814ca-189">When you set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `false`, the resulting method signature contains a void return type instead of an integer (`HRESULT`) return type.</span></span>  <span data-ttu-id="814ca-190">Wenn die nicht verwaltete Methode erzeugt eine `HRESULT`, ignoriert die Laufzeit automatisch einen Rückgabewert von `S_OK` (oder 0) und löst keine Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="814ca-190">When the unmanaged method produces an `HRESULT`, the runtime automatically ignores a return value of `S_OK` (or 0) and does not throw an exception.</span></span>  <span data-ttu-id="814ca-191">Für `HRESULT`s außer `S_OK`, löst die Laufzeit automatisch eine Ausnahme, die die entspricht der `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="814ca-191">For `HRESULT`s other than `S_OK`, the runtime automatically throws an exception that corresponds to the `HRESULT`.</span></span>  <span data-ttu-id="814ca-192">Beachten Sie, dass die <xref:System.Runtime.InteropServices.DllImportAttribute> Attribut führt nur die Konvertierung in den Methoden, die Zurückgeben einer `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="814ca-192">Note that the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute only performs this conversion to methods that return an `HRESULT`.</span></span>  
  
 <span data-ttu-id="814ca-193">Sie können ggf. so ändern Sie die Verhalten von der standardmäßigen Fehlerberichtsfunktion `HRESULT`s, um Ausnahmen in Fällen, in denen Ausnahmen der Windows-Fehlerberichterstattung Struktur Ihrer Anwendung besser gerecht.</span><span class="sxs-lookup"><span data-stu-id="814ca-193">You might decide to change the default error reporting behavior from `HRESULT`s to exceptions in cases where exceptions better fit the error reporting structure of your application.</span></span>  
  
 <span data-ttu-id="814ca-194">Dieses Feld ist ähnlich wie die <xref:System.Runtime.InteropServices.PreserveSigAttribute>; jedoch im Gegensatz zu den <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Feld den Standardwert für das Attribut ist `false`.</span><span class="sxs-lookup"><span data-stu-id="814ca-194">This field is similar to the <xref:System.Runtime.InteropServices.PreserveSigAttribute>; however, in contrast to the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field, the default value for the attribute is `false`.</span></span>  
  
 <span data-ttu-id="814ca-195">In einigen Fällen Visual Basic-Entwickler verwenden die <xref:System.Runtime.InteropServices.DllImportAttribute>, anstatt die `Declare` -Anweisung, um eine DLL-Funktion in verwaltetem Code zu definieren.</span><span class="sxs-lookup"><span data-stu-id="814ca-195">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="814ca-196">Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Feld ist ein solcher Fall.</span><span class="sxs-lookup"><span data-stu-id="814ca-196">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is one of those cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-197">Im folgenden Codebeispiel wird die <xref:System.Runtime.InteropServices.DllImportAttribute> So importieren Sie die nicht verwaltete `SHAutoComplete` -Funktion einmal mit der <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Feld festgelegt, um `true` und anschließend mit der <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Feld festgelegt, um `false`.</span><span class="sxs-lookup"><span data-stu-id="814ca-197">The following code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute> to import the unmanaged `SHAutoComplete` function once with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `true` and again with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `false`.</span></span>  <span data-ttu-id="814ca-198">Bewirkt, dass in diesem Codebeispiel wird die `SHAutoComplete` Funktion, die keine Fehler mit einer Ausnahme nur einmal generiert und ein `HRESULT` nächsten.</span><span class="sxs-lookup"><span data-stu-id="814ca-198">This code example causes the `SHAutoComplete` function to generate any errors with an exception one time and an `HRESULT` the next.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetLastError">
      <MemberSignature Language="C#" Value="public bool SetLastError;" />
      <MemberSignature Language="ILAsm" Value=".field public bool SetLastError" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberSignature Language="VB.NET" Value="Public SetLastError As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool SetLastError;" />
      <MemberSignature Language="F#" Value="val mutable SetLastError : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-199">Gibt an, ob der Aufgerufene vor dem Zurückgeben aus der attributierten Methode die Win32-API <see langword="SetLastError" /> aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-199">Indicates whether the callee calls the <see langword="SetLastError" /> Win32 API function before returning from the attributed method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-200">`true` um anzugeben, dass der aufgerufene aufruft, `SetLastError`ist, andernfalls `false`.</span><span class="sxs-lookup"><span data-stu-id="814ca-200">`true` to indicate that the callee will call `SetLastError`; otherwise, `false`.</span></span> <span data-ttu-id="814ca-201">Der Standardwert ist `false`.</span><span class="sxs-lookup"><span data-stu-id="814ca-201">The default is `false`.</span></span>  
  
 <span data-ttu-id="814ca-202">Ruft die Laufzeit-Marshaller `GetLastError` und speichert Sie zwischen den zurückgegebenen Wert mit der sie verhindern, dass Sie durch andere API-Aufrufe überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="814ca-202">The runtime marshaler calls `GetLastError` and caches the value returned to prevent it from being overwritten by other API calls.</span></span> <span data-ttu-id="814ca-203">Sie können den Fehlercode abrufen, durch den Aufruf <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ca-203">You can retrieve the error code by calling <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-204">In einigen Fällen Visual Basic-Entwickler verwenden die <xref:System.Runtime.InteropServices.DllImportAttribute>, anstatt die `Declare` -Anweisung, um eine DLL-Funktion in verwaltetem Code zu definieren.</span><span class="sxs-lookup"><span data-stu-id="814ca-204">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="814ca-205">Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> Feld ist ein solcher Fall.</span><span class="sxs-lookup"><span data-stu-id="814ca-205">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      </Docs>
    </Member>
    <Member MemberName="ThrowOnUnmappableChar">
      <MemberSignature Language="C#" Value="public bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ThrowOnUnmappableChar" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberSignature Language="VB.NET" Value="Public ThrowOnUnmappableChar As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="F#" Value="val mutable ThrowOnUnmappableChar : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-206">Aktiviert bzw. deaktiviert das Auslösen einer Ausnahme bei einem nicht zuzuordnenden Unicode-Zeichen, das in das ANSI-Zeichen „?“ konvertiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-206">Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI "?" character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-207">`true` um anzugeben, dass jedes Mal eine Ausnahme ausgelöst wird, wenn der interop-Marshaller ein nicht zuzuordnendes Zeichen konvertiert. `false` an, dass die <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Feld ist deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="814ca-207">`true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character; `false` to indicate that the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is disabled.</span></span> <span data-ttu-id="814ca-208">Dieses Feld ist `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="814ca-208">This field is `false` by default.</span></span>  
  
 <span data-ttu-id="814ca-209">Die common Language Runtime konvertiert wird, in die ANSI-Zeichen, die alle Unicode-Zeichen verwalteten, die an eine nicht verwaltete Methode ausführen unter Windows 98 oder Windows Me enthalten.</span><span class="sxs-lookup"><span data-stu-id="814ca-209">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="814ca-210">Zuordnung mit ähnlichen Zeichen ermöglicht den Interop-Marshaller, eine schließen-Zeichen angeben, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="814ca-210">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="814ca-211">Der Marshaller konvertiert z. B. copyright Unicode-Zeichen "c" für nicht verwaltete Methoden, die ANSI-Zeichen akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="814ca-211">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="814ca-212">Einige Zeichen ist keine optimale Darstellung; Diese Zeichen werden nicht zuzuordnenden bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="814ca-212">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="814ca-213">Nicht zuzuordnenden Zeichen werden normalerweise in der Standard '?' ANSI-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="814ca-213">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="814ca-214">Bestimmte Unicode-Zeichen werden in gefährlicher Zeichen, z. B. der umgekehrte Schrägstrich konvertiert "\\'-Zeichen, die versehentlich einen Pfad ändern können.</span><span class="sxs-lookup"><span data-stu-id="814ca-214">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="814ca-215">Durch Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Feld `true`, können Sie das Vorhandensein von einem nicht zuzuordnenden Zeichen an den Aufrufer darauf hinweisen, durch Auslösen einer Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="814ca-215">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="814ca-216">Sie können nicht die Standardwerte, die durch Ändern der <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> und <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Felder, wenn einem verwalteten Array, dessen Elemente ANSI-Zeichen oder LPSTRs sind an eine nicht verwaltete sichere Array übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="814ca-216">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="814ca-217">Zuordnung mit ähnlichen Zeichen ist immer aktiviert und wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="814ca-217">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="814ca-218">Denken Sie daran, dass diese Kombination Ihrer Sicherheitsmodell gefährden kann.</span><span class="sxs-lookup"><span data-stu-id="814ca-218">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ca-219">In einigen Fällen Visual Basic-Entwickler verwenden die <xref:System.Runtime.InteropServices.DllImportAttribute> zum Definieren einer DLL-Funktion in verwaltetem Code, anstatt die `Declare` Anweisung.</span><span class="sxs-lookup"><span data-stu-id="814ca-219">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute> to define a DLL function in managed code, instead of using the `Declare` statement.</span></span> <span data-ttu-id="814ca-220">Festlegen der <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Feld ist ein solcher Fall.</span><span class="sxs-lookup"><span data-stu-id="814ca-220">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is one of those cases.</span></span> <span data-ttu-id="814ca-221">Das folgende Beispiel zeigt, wie Sie die strengste Anforderung anwenden Zeichen Zuordnung Sicherheit auf einer Plattform aufrufen Methodendefinitionen ANSI-Zeichensatz angeben, deaktivieren die besten Seite der Zuordnung und eine Ausnahme auszulösen, auf nicht zugeordnete Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="814ca-221">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
        <related type="Article" href="http://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a">
          <span data-ttu-id="814ca-222">Interop-Marshalling</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-222">Interop Marshaling</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ca-223">Ruft den Namen der DLL-Datei ab, die den Einstiegspunkt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-223">Gets the name of the DLL file that contains the entry point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ca-224">Der Name der DLL-Datei, die den Einstiegspunkt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ca-224">The name of the DLL file that contains the entry point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ca-225">Sie können einen vollständigen oder relativen Pfad angeben.</span><span class="sxs-lookup"><span data-stu-id="814ca-225">You can provide a full or relative path.</span></span> <span data-ttu-id="814ca-226">Wenn Sie keinen Pfad angeben, muss die DLL im aktuellen Pfad zur Laufzeit sein, wenn andere Weise die DLL geladen wird.</span><span class="sxs-lookup"><span data-stu-id="814ca-226">If you provide no path, the DLL must be in the current path at run time, unless the DLL is loaded by some other means.</span></span> <span data-ttu-id="814ca-227">Denken Sie jedoch, dass mit einem vollständig qualifizierten Pfad Ungenauigkeit führen kann, wenn die DLL verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="814ca-227">Be aware, however, that using a fully qualified path can introduce inaccuracy if the DLL is moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>