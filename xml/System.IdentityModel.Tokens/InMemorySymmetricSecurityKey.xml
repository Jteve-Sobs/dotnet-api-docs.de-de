<Type Name="InMemorySymmetricSecurityKey" FullName="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cedc51e0954ebaf8ac99b479271552f4eb768737" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70343458" /></Metadata><TypeSignature Language="C#" Value="public class InMemorySymmetricSecurityKey : System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemorySymmetricSecurityKey extends System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemorySymmetricSecurityKey&#xA;Inherits SymmetricSecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemorySymmetricSecurityKey : System::IdentityModel::Tokens::SymmetricSecurityKey" />
  <TypeSignature Language="F#" Value="type InMemorySymmetricSecurityKey = class&#xA;    inherit SymmetricSecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SymmetricSecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Schlüssel dar, die mithilfe symmetrischer Algorithmen generiert wurden und nur im RAM (Random Access Memory) des lokalen Computers gespeichert werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel wird diese Klasse nur von der Infrastruktur verwendet, um XML mithilfe eines symmetrischen Schlüssels umzuwandeln.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] symmetricKey);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] symmetricKey) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (symmetricKey As Byte())" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ symmetricKey);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey symmetricKey" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] key);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ key);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey key" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="symmetricKey" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="symmetricKey">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</param>
        <param name="key">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />-Klasse unter Verwendung des angegebenen symmetrischen Schlüssels.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="symmetricKey" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="symmetricKey" /> hat die Länge 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] symmetricKey, bool cloneBuffer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] symmetricKey, bool cloneBuffer) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (symmetricKey As Byte(), cloneBuffer As Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ symmetricKey, bool cloneBuffer);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] * bool -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey (symmetricKey, cloneBuffer)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] key, bool clone);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, bool clone) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), clone As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ key, bool clone);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] * bool -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey (key, clone)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="symmetricKey" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clone" Type="System.Boolean" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="symmetricKey">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</param>
        <param name="key">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</param>
        <param name="cloneBuffer"><see langword="true" />, um den an den <paramref name="symmetricKey" />-Parameter übergebenen Array zu klonen, andernfalls <see langword="false" />.</param>
        <param name="clone"><see langword="true" />, um den an den <paramref name="key" />-Parameter übergebenen Array zu klonen, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />-Klasse unter Verwendung des angegebenen symmetrischen Schlüssels und eines Werts, der angibt, ob die Binärdaten geklont werden müssen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="symmetricKey" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="symmetricKey" /> hat die Länge 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.DecryptKey : string * byte[] -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus, der verwendet wurde, um den Schlüssel zu verschlüsseln.</param>
        <param name="keyData">Ein <see cref="T:System.Byte" />-Array, das den verschlüsselten Schlüssel enthält.</param>
        <summary>Entschlüsselt den angegebenen verschlüsselten Schlüssel.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das den entschlüsselten Schlüssel enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die statischen Felder der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse, um den Algorithmus anzugeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.EncryptKey : string * byte[] -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus zum Verschlüsseln des Schlüssels.</param>
        <param name="keyData">Ein <see cref="T:System.Byte" />-Array, das den Schlüssel enthält.</param>
        <summary>Verschlüsselt den angegebenen Schlüssel.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das den verschlüsselten Schlüssel enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die statischen Felder der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse, um den Algorithmus anzugeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateDerivedKey">
      <MemberSignature Language="C#" Value="public override byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GenerateDerivedKey(string algorithm, unsigned int8[] label, unsigned int8[] nonce, int32 derivedKeyLength, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateDerivedKey (algorithm As String, label As Byte(), nonce As Byte(), derivedKeyLength As Integer, offset As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GenerateDerivedKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ label, cli::array &lt;System::Byte&gt; ^ nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="F#" Value="override this.GenerateDerivedKey : string * byte[] * byte[] * int * int -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.GenerateDerivedKey (algorithm, label, nonce, derivedKeyLength, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="label" Type="System.Byte[]" />
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="derivedKeyLength" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="algorithm">Ein URI, der den kryptografischen Algorithmus darstellt, der zum Generieren des abgeleiteten Schlüssels verwendet werden soll.</param>
        <param name="label">Ein <see cref="T:System.Byte" />-Array, das den Bezeichnungsparameter für den kryptografischen Algorithmus enthält.</param>
        <param name="nonce">Ein <see cref="T:System.Byte" />-Array, das die Nonce enthält, die zur Erstellung eines abgeleiteten Schlüssels verwendet wird.</param>
        <param name="derivedKeyLength">Die Größe des abgeleiteten Schlüssels.</param>
        <param name="offset">Die Position, an der sich der abgeleitete Schlüssel im Bytearray befindet, der aus dieser Methode zurückgegeben wird.</param>
        <summary>Generiert mit dem angegebenen kryptografischen Algorithmus und den Parametern für den aktuellen Schlüssel einen abgeleiteten Schlüssel.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das den abgeleiteten Schlüssel enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Angeben eines P-SHA1 als kryptografischen Algorithmus das <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>-Feld.  

 Aufgrund von Problemen durch Konflikte mit SHA1 wird von Microsoft ein Sicherheitsmodell empfohlen, das mindestens auf SHA256 basiert.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Der folgende Algorithmus wird unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionTransform">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform GetDecryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ GetDecryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="override this.GetDecryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="inMemorySymmetricSecurityKey.GetDecryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Ein kryptografischer Algorithmus, der Verschlüsselungstext entschlüsselt, z. B. verschlüsseltes XML.</param>
        <param name="iv">Ein <see cref="T:System.Byte" />-Array, das den Initialisierungsvektor (<see langword="IV" />) für den angegebenen Algorithmus enthält.</param>
        <summary>Ruft eine Umwandlung ab, die den Verschlüsselungstext mithilfe des angegebenen kryptografischen Algorithmus entschlüsselt.</summary>
        <returns>Eine <see cref="T:System.Security.Cryptography.ICryptoTransform" />, die die Entschlüsselungstransformation darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Felder, die Entschlüsselungsalgorithmen in der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse darstellen, um den Algorithmus anzugeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionTransform">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform GetEncryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ GetEncryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="override this.GetEncryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="inMemorySymmetricSecurityKey.GetEncryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Ein kryptografischer Algorithmus, der XML verschlüsselt.</param>
        <param name="iv">Ein <see cref="T:System.Byte" />-Array, das den Initialisierungsvektor (<see langword="IV" />) für den angegebenen Algorithmus enthält.</param>
        <summary>Ruft eine Umwandlung ab, die XML mit dem angegebenen kryptografischen Algorithmus verschlüsselt.</summary>
        <returns>Eine <see cref="T:System.Security.Cryptography.ICryptoTransform" />, die die Verschlüsselungstransformation darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Felder, die Verschlüsselungsalgorithmen in der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse darstellen, um den Algorithmus anzugeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIVSize">
      <MemberSignature Language="C#" Value="public override int GetIVSize (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetIVSize(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIVSize (algorithm As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetIVSize(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetIVSize : string -&gt; int" Usage="inMemorySymmetricSecurityKey.GetIVSize algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus zum Abrufen der Größe des Initialisierungsvektors (<see langword="IV" />).</param>
        <summary>Ruft die Größe des Initialisierungsvektors (<see langword="IV" />), der für den angegebenen kryptografischen Algorithmus erforderlich ist, in Bits ab.</summary>
        <returns>Die Größe des Initialisierungsvektors (<see langword="IV" />) in Bits, der für den im <paramref name="algorithm" />-Parameter angegebenen kryptografischen Algorithmus erforderlich ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Felder, die Verschlüsselungsalgorithmen in der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse darstellen, um den Algorithmus anzugeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedHashAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetKeyedHashAlgorithm (algorithm As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::KeyedHashAlgorithm ^ GetKeyedHashAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetKeyedHashAlgorithm : string -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="inMemorySymmetricSecurityKey.GetKeyedHashAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der schlüsselgebundene Hashalgorithmus, von dem eine Instanz abgerufen wird.</param>
        <summary>Ruft eine Instanz des angegebenen schlüsselgebundenen Hashalgorithmus ab.</summary>
        <returns>Ein <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, der den schlüsselgebundenen Hashalgorithmus darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Der folgende Algorithmus wird unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSymmetricAlgorithm (algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::SymmetricAlgorithm ^ GetSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetSymmetricAlgorithm : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="inMemorySymmetricSecurityKey.GetSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der symmetrische Algorithmus, von dem eine Instanz abgerufen werden soll.</param>
        <summary>Ruft eine Instanz des angegebenen symmetrischen Algorithmus ab.</summary>
        <returns>Ein <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />, der den symmetrischen Algorithmus darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="algorithm" /> wird nicht unterstützt. Die folgenden Algorithmen werden unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricKey">
      <MemberSignature Language="C#" Value="public override byte[] GetSymmetricKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetSymmetricKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSymmetricKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetSymmetricKey();" />
      <MemberSignature Language="F#" Value="override this.GetSymmetricKey : unit -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.GetSymmetricKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Byte ab, die den symmetrischen Schlüssel darstellen.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsAsymmetricAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus asymmetrische Schlüssel verwendet.</summary>
        <returns><see langword="true" />, wenn der angegebene Algorithmus asymmetrische Schlüssel verwendet, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSupportedAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus von dieser Klasse unterstützt wird.</summary>
        <returns><see langword="true" />, wenn der angegebene Algorithmus von dieser Klasse unterstützt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die symmetrischen Algorithmen, die von dieser Klasse unterstützt werden, sind die durch die folgenden Felder dargestellten Algorithmen:  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSymmetricAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus symmetrische Schlüssel verwendet.</summary>
        <returns><see langword="true" />, wenn der angegebene Algorithmus symmetrische Schlüssel verwendet, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des Schlüssels in Bits ab.</summary>
        <value>Die Größe des Schlüssels in Bits.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
