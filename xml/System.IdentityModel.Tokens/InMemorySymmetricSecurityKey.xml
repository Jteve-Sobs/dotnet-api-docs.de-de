<Type Name="InMemorySymmetricSecurityKey" FullName="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc34841a6e9db67974298c8a94e77b04f08dfe17" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48653666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InMemorySymmetricSecurityKey : System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemorySymmetricSecurityKey extends System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemorySymmetricSecurityKey&#xA;Inherits SymmetricSecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemorySymmetricSecurityKey : System::IdentityModel::Tokens::SymmetricSecurityKey" />
  <TypeSignature Language="F#" Value="type InMemorySymmetricSecurityKey = class&#xA;    inherit SymmetricSecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SymmetricSecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="36596-101">Stellt die Schlüssel dar, die mithilfe symmetrischer Algorithmen generiert wurden und nur im RAM (Random Access Memory) des lokalen Computers gespeichert werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36596-101">Represents keys that are generated using symmetric algorithms and are only stored in the local computer's random access memory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-102">In der Regel wird diese Klasse nur von der Infrastruktur verwendet, um XML mithilfe eines symmetrischen Schlüssels umzuwandeln.</span><span class="sxs-lookup"><span data-stu-id="36596-102">Typically, this class is only used by the infrastructure to transform XML using a symmetric key.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36596-103">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] symmetricKey);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] symmetricKey) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (symmetricKey As Byte())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ symmetricKey);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] key);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ key);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="symmetricKey" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="key" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="symmetricKey">
          <span data-ttu-id="36596-104">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-104">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="36596-105">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-105">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-106">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />-Klasse unter Verwendung des angegebenen symmetrischen Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36596-107">
            <paramref name="symmetricKey" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-107">
              <paramref name="symmetricKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36596-108">
            <paramref name="symmetricKey" /> hat die Länge 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-108">
              <paramref name="symmetricKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] symmetricKey, bool cloneBuffer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] symmetricKey, bool cloneBuffer) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (symmetricKey As Byte(), cloneBuffer As Boolean)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ symmetricKey, bool cloneBuffer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] key, bool clone);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, bool clone) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), clone As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ key, bool clone);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] * bool -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey (key, clone)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="symmetricKey" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="key" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="clone" Type="System.Boolean" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="symmetricKey">
          <span data-ttu-id="36596-109">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-109">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="36596-110">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-110">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span>
          </span>
        </param>
        <param name="cloneBuffer">
          <span data-ttu-id="36596-111">
            <see langword="true" />, um den an den <paramref name="symmetricKey" />-Parameter übergebenen Array zu klonen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-111">
              <see langword="true" /> to clone the array passed into the <paramref name="symmetricKey" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="clone">
          <span data-ttu-id="36596-112">
            <see langword="true" />, um den an den <paramref name="key" />-Parameter übergebenen Array zu klonen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-112">
              <see langword="true" /> to clone the array passed into the <paramref name="key" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-113">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />-Klasse unter Verwendung des angegebenen symmetrischen Schlüssels und eines Werts, der angibt, ob die Binärdaten geklont werden müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-113">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key and a value that indicates whether the binary data must be cloned.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36596-114">
            <paramref name="symmetricKey" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-114">
              <paramref name="symmetricKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36596-115">
            <paramref name="symmetricKey" /> hat die Länge 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-115">
              <paramref name="symmetricKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.DecryptKey : string * byte[] -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-116">Der kryptografische Algorithmus, der verwendet wurde, um den Schlüssel zu verschlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-116">The cryptographic algorithm that was used to encrypt the key.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="36596-117">Ein <see cref="T:System.Byte" />-Array, das den verschlüsselten Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-117">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-118">Entschlüsselt den angegebenen verschlüsselten Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-118">Decrypts the specified encrypted key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-119">Ein <see cref="T:System.Byte" />-Array, das den entschlüsselten Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-119">An array of <see cref="T:System.Byte" /> that contains the decrypted key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-120">Verwenden Sie die statischen Felder der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse, um den Algorithmus anzugeben.</span><span class="sxs-lookup"><span data-stu-id="36596-120">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-121">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-121">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-122">Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-122">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.EncryptKey : string * byte[] -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-123">Der kryptografische Algorithmus zum Verschlüsseln des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-123">The cryptographic algorithm to encrypt the key with.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="36596-124">Ein <see cref="T:System.Byte" />-Array, das den Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-124">An array of <see cref="T:System.Byte" /> that contains the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-125">Verschlüsselt den angegebenen Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-125">Encrypts the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-126">Ein <see cref="T:System.Byte" />-Array, das den verschlüsselten Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-126">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-127">Verwenden Sie die statischen Felder der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse, um den Algorithmus anzugeben.</span><span class="sxs-lookup"><span data-stu-id="36596-127">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-128">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-128">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-129">Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-129">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateDerivedKey">
      <MemberSignature Language="C#" Value="public override byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GenerateDerivedKey(string algorithm, unsigned int8[] label, unsigned int8[] nonce, int32 derivedKeyLength, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateDerivedKey (algorithm As String, label As Byte(), nonce As Byte(), derivedKeyLength As Integer, offset As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GenerateDerivedKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ label, cli::array &lt;System::Byte&gt; ^ nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="F#" Value="override this.GenerateDerivedKey : string * byte[] * byte[] * int * int -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.GenerateDerivedKey (algorithm, label, nonce, derivedKeyLength, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="label" Type="System.Byte[]" />
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="derivedKeyLength" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-130">Ein URI, der den kryptografischen Algorithmus darstellt, der zum Generieren des abgeleiteten Schlüssels verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-130">A URI that represents the cryptographic algorithm to use to generate the derived key.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="36596-131">Ein <see cref="T:System.Byte" />-Array, das den Bezeichnungsparameter für den kryptografischen Algorithmus enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-131">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</span>
          </span>
        </param>
        <param name="nonce">
          <span data-ttu-id="36596-132">Ein <see cref="T:System.Byte" />-Array, das die Nonce enthält, die zur Erstellung eines abgeleiteten Schlüssels verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-132">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</span>
          </span>
        </param>
        <param name="derivedKeyLength">
          <span data-ttu-id="36596-133">Die Größe des abgeleiteten Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-133">The size of the derived key.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="36596-134">Die Position, an der sich der abgeleitete Schlüssel im Bytearray befindet, der aus dieser Methode zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-134">The position at which the derived key is located in the byte array that is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-135">Generiert mit dem angegebenen kryptografischen Algorithmus und den Parametern für den aktuellen Schlüssel einen abgeleiteten Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-135">Generates a derived key using the specified cryptographic algorithm and parameters for the current key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-136">Ein <see cref="T:System.Byte" />-Array, das den abgeleiteten Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-136">An array of <see cref="T:System.Byte" /> that contains the derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-137">Verwenden Sie zum Angeben eines P-SHA1 als kryptografischen Algorithmus das <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>-Feld.</span><span class="sxs-lookup"><span data-stu-id="36596-137">To specify P-SHA1 as the cryptographic algorithm, use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-138">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-138">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-139">Der folgende Algorithmus wird unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-139">The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionTransform">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform GetDecryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ GetDecryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="override this.GetDecryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="inMemorySymmetricSecurityKey.GetDecryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-140">Ein kryptografischer Algorithmus, der Verschlüsselungstext entschlüsselt, z.&amp;#160;B. verschlüsseltes XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-140">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</span>
          </span>
        </param>
        <param name="iv">
          <span data-ttu-id="36596-141">Ein <see cref="T:System.Byte" />-Array, das den Initialisierungsvektor (<see langword="IV" />) für den angegebenen Algorithmus enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-141">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-142">Ruft eine Umwandlung ab, die den Verschlüsselungstext mithilfe des angegebenen kryptografischen Algorithmus entschlüsselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-142">Gets a transform that decrypts cipher text using the specified cryptographic algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-143">Eine <see cref="T:System.Security.Cryptography.ICryptoTransform" />, die die Entschlüsselungstransformation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-143">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-144">Verwenden Sie die Felder, die Entschlüsselungsalgorithmen in der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse darstellen, um den Algorithmus anzugeben.</span><span class="sxs-lookup"><span data-stu-id="36596-144">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-145">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-145">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-146">Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-146">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionTransform">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform GetEncryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ GetEncryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="override this.GetEncryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="inMemorySymmetricSecurityKey.GetEncryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-147">Ein kryptografischer Algorithmus, der XML verschlüsselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-147">A cryptographic algorithm that encrypts XML.</span>
          </span>
        </param>
        <param name="iv">
          <span data-ttu-id="36596-148">Ein <see cref="T:System.Byte" />-Array, das den Initialisierungsvektor (<see langword="IV" />) für den angegebenen Algorithmus enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-148">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-149">Ruft eine Transformation ab, die XML mit dem angegebenen kryptografischen Algorithmus verschlüsselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-149">Gets a transform that encrypts XML using the specified cryptographic algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-150">Eine <see cref="T:System.Security.Cryptography.ICryptoTransform" />, die die Verschlüsselungstransformation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-150">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-151">Verwenden Sie die Felder, die Verschlüsselungsalgorithmen in der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse darstellen, um den Algorithmus anzugeben.</span><span class="sxs-lookup"><span data-stu-id="36596-151">Use the fields that represent encryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-152">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-152">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-153">Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-153">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIVSize">
      <MemberSignature Language="C#" Value="public override int GetIVSize (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetIVSize(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIVSize (algorithm As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetIVSize(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetIVSize : string -&gt; int" Usage="inMemorySymmetricSecurityKey.GetIVSize algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-154">Der kryptografische Algorithmus zum Abrufen der Größe des Initialisierungsvektors (<see langword="IV" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-154">The cryptographic algorithm to get the size of the initialization vector (<see langword="IV" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-155">Ruft die Größe des Initialisierungsvektors (<see langword="IV" />), der für den angegebenen kryptografischen Algorithmus erforderlich ist, in Bits ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-155">Gets the size, in bits, of the initialization vector (<see langword="IV" />) that is required for the specified cryptographic algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-156">Die Größe des Initialisierungsvektors (<see langword="IV" />) in Bits, der für den im <paramref name="algorithm" />-Parameter angegebenen kryptografischen Algorithmus erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-156">The size, in bits, of the initialization vector (<see langword="IV" />) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-157">Verwenden Sie die Felder, die Verschlüsselungsalgorithmen in der <xref:System.IdentityModel.Tokens.SecurityAlgorithms>-Klasse darstellen, um den Algorithmus anzugeben.</span><span class="sxs-lookup"><span data-stu-id="36596-157">Use the fields that represent encryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-158">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-158">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-159">Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-159">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedHashAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetKeyedHashAlgorithm (algorithm As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::KeyedHashAlgorithm ^ GetKeyedHashAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetKeyedHashAlgorithm : string -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="inMemorySymmetricSecurityKey.GetKeyedHashAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-160">Der schlüsselgebundene Hashalgorithmus, von dem eine Instanz abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-160">The keyed hash algorithm to get an instance of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-161">Ruft eine Instanz des angegebenen schlüsselgebundenen Hashalgorithmus ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-161">Gets an instance of the specified keyed hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-162">Ein <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, der den schlüsselgebundenen Hashalgorithmus darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-162">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-163">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-163">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-164">Der folgende Algorithmus wird unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-164">The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSymmetricAlgorithm (algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::SymmetricAlgorithm ^ GetSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetSymmetricAlgorithm : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="inMemorySymmetricSecurityKey.GetSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-165">Der symmetrische Algorithmus, von dem eine Instanz abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-165">The symmetric algorithm to get an instance of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-166">Ruft eine Instanz des angegebenen symmetrischen Algorithmus ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-166">Gets an instance of the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-167">Ein <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />, der den symmetrischen Algorithmus darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-167">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36596-168">
            <paramref name="algorithm" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-168">
              <paramref name="algorithm" /> is not supported.</span>
          </span>
          <span data-ttu-id="36596-169">Die folgenden Algorithmen werden unterstützt: <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-169">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />,  <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricKey">
      <MemberSignature Language="C#" Value="public override byte[] GetSymmetricKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetSymmetricKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSymmetricKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetSymmetricKey();" />
      <MemberSignature Language="F#" Value="override this.GetSymmetricKey : unit -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.GetSymmetricKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36596-170">Ruft die Byte ab, die den symmetrischen Schlüssel darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-170">Gets the bytes that represent the symmetric key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-171">Ein <see cref="T:System.Byte" />-Array, das den symmetrischen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-171">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsAsymmetricAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-172">Der kryptografische Algorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-172">The cryptographic algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-173">Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus asymmetrische Schlüssel verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-173">Gets a value that indicates whether the specified algorithm uses asymmetric keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-174">
            <see langword="true" />, wenn der angegebene Algorithmus asymmetrische Schlüssel verwendet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-174">
              <see langword="true" /> when the specified algorithm uses asymmetric keys; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSupportedAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-175">Der kryptografische Algorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-175">The cryptographic algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-176">Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus von dieser Klasse unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-176">Gets a value that indicates whether the specified algorithm is supported by this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-177">
            <see langword="true" />, wenn der angegebene Algorithmus von dieser Klasse unterstützt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-177">
              <see langword="true" /> when the specified algorithm is supported by this class; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36596-178">Die symmetrischen Algorithmen, die von dieser Klasse unterstützt werden, sind die durch die folgenden Felder dargestellten Algorithmen:</span><span class="sxs-lookup"><span data-stu-id="36596-178">The symmetric algorithms that are supported by this class are the algorithms represented by the following fields:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSymmetricAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36596-179">Der kryptografische Algorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-179">The cryptographic algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36596-180">Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus symmetrische Schlüssel verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-180">Gets a value that indicates whether the specified algorithm uses symmetric keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36596-181">
            <see langword="true" />, wenn der angegebene Algorithmus symmetrische Schlüssel verwendet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-181">
              <see langword="true" /> when the specified algorithm uses symmetric keys; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36596-182">Ruft die Größe des Schlüssels in Bits ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-182">Gets the size, in bits, of the key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36596-183">Die Größe des Schlüssels in Bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36596-183">The size, in bits, of the key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>