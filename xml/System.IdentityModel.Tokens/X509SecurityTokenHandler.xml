<Type Name="X509SecurityTokenHandler" FullName="System.IdentityModel.Tokens.X509SecurityTokenHandler">
  <TypeSignature Language="C#" Value="public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="86346-101">Stellt einen Sicherheitstokenhandler dar, der Token des Typs <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="86346-101">Represents a security token handler that processes tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span> <span data-ttu-id="86346-102">Standardmäßig führt der Handler Kettenvertrauenswürdigkeitsvalidierung des X.509-Zertifikats aus.</span><span class="sxs-lookup"><span data-stu-id="86346-102">By default, the handler will perform chain-trust validation of the X.509 certificate.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="86346-103">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="86346-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86346-104">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />-Klasse mit Standardwerten.</span><span class="sxs-lookup"><span data-stu-id="86346-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86346-105">Die <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> -Eigenschaftensatz auf `false` und <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> Validierungssteuerelement als Standard-Zertifikats-Validierungssteuerelement verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="86346-105">The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (bool mapToWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool mapToWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapToWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(bool mapToWindows);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapToWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mapToWindows">
          <span data-ttu-id="86346-106"><see langword="true" />, wenn das Zertifikat einem Windows-Konto zugeordnet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-106"><see langword="true" /> if the certificate should be mapped to a Windows account; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="86346-107">Legt die <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />-Eigenschaft fest.</span><span class="sxs-lookup"><span data-stu-id="86346-107">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> property.</span></span></param>
        <summary><span data-ttu-id="86346-108">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />-Klasse mithilfe eines Werts, der angibt, ob das Zertifikat einem Windows-Konto zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="86346-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using a value that indicates whether the certificate should be mapped to a Windows account.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86346-109">Die <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> Validierungssteuerelement als Standard-Zertifikats-Validierungssteuerelement verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="86346-109">The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator certificateValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateValidator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(System::IdentityModel::Selectors::X509CertificateValidator ^ certificateValidator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateValidator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="certificateValidator"><span data-ttu-id="86346-110">Das zu verwendende Zertifikat-Validierungssteuerelement.</span><span class="sxs-lookup"><span data-stu-id="86346-110">The certificate validator to use.</span></span> <span data-ttu-id="86346-111">Legt die <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />-Eigenschaft fest.</span><span class="sxs-lookup"><span data-stu-id="86346-111">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> property.</span></span></param>
        <summary><span data-ttu-id="86346-112">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />-Klasse unter Verwendung des angegebenen Zertifikats-Validierungssteuerelements.</span><span class="sxs-lookup"><span data-stu-id="86346-112">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using the specified certificate validator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86346-113">Die <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>-Eigenschaft ist auf `false` festgelegt.</span><span class="sxs-lookup"><span data-stu-id="86346-113">The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool mapToWindows, class System.IdentityModel.Selectors.X509CertificateValidator certificateValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapToWindows As Boolean, certificateValidator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(bool mapToWindows, System::IdentityModel::Selectors::X509CertificateValidator ^ certificateValidator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapToWindows" Type="System.Boolean" />
        <Parameter Name="certificateValidator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="mapToWindows">
          <span data-ttu-id="86346-114"><see langword="true" />, wenn das Zertifikat einem Windows-Konto zugeordnet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-114"><see langword="true" /> if the certificate should be mapped to a Windows account; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="86346-115">Legt die <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />-Eigenschaft fest.</span><span class="sxs-lookup"><span data-stu-id="86346-115">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> property.</span></span></param>
        <param name="certificateValidator"><span data-ttu-id="86346-116">Das zu verwendende Zertifikat-Validierungssteuerelement.</span><span class="sxs-lookup"><span data-stu-id="86346-116">The certificate validator to use.</span></span> <span data-ttu-id="86346-117">Legt die <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />-Eigenschaft fest.</span><span class="sxs-lookup"><span data-stu-id="86346-117">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> property.</span></span></param>
        <summary><span data-ttu-id="86346-118">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />-Klasse mithilfe eines Werts, der angibt, ob das Zertifikat einem Windows-Konto und dem Validierungssteuerelement für die Anmeldeinformationen zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="86346-118">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="86346-119">Ein XML-Reader, positioniert am Anfangselement der Schlüsselbezeichnerklausel.</span><span class="sxs-lookup"><span data-stu-id="86346-119">An XML reader positioned at the start element of the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="86346-120">Gibt einen Wert zurück, der angibt, ob der angegebene Reader auf ein <see langword="&lt;ds:X509Data&gt;" />-Element verweist.</span><span class="sxs-lookup"><span data-stu-id="86346-120">Returns a value that indicates whether the specified reader is referring to an <see langword="&lt;ds:X509Data&gt;" /> element.</span></span></summary>
        <returns>
          <span data-ttu-id="86346-121"><see langword="true" />, wenn der Reader auf ein <see langword="&lt;ds:X509Data&gt;" />-Element verweist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-121"><see langword="true" /> if the reader is referring to an <see langword="&lt;ds:X509Data&gt;" /> element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-122"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-122"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="86346-123">Ein Reader, der auf das Token-XML zeigt.</span><span class="sxs-lookup"><span data-stu-id="86346-123">A reader pointing to the token XML.</span></span></param>
        <summary><span data-ttu-id="86346-124">Gibt einen Wert zurück, der angibt, ob der Reader auf ein X.509-Sicherheitstoken zeigt, wie in der WS-Sicherheitsspezifikation definiert.</span><span class="sxs-lookup"><span data-stu-id="86346-124">Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.</span></span></summary>
        <returns>
          <span data-ttu-id="86346-125"><see langword="true" />, wenn der Reader auf ein X.509-Sicherheitstoken verweist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-125"><see langword="true" /> if the reader is pointing to an X.509 security token; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-126"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-126"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86346-127">Ruft einen Wert ab, der angibt, ob der Handler die Validierung von Token des Typs <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="86346-127">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></summary>
        <value>
          <span data-ttu-id="86346-128"><see langword="true" />, wenn der Handler die Validierung von Token des Typs <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> unterstützt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-128"><see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="86346-129">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="86346-129">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="86346-130">Die zu serialisierende Schlüsselbezeichnerklausel.</span><span class="sxs-lookup"><span data-stu-id="86346-130">The key identifier clause to be serialized.</span></span></param>
        <summary><span data-ttu-id="86346-131">Gibt einen Wert zurück, der angibt, ob die angegebene Schlüsselbezeichnerklausel von diesem Handler serialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="86346-131">Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</span></span></summary>
        <returns>
          <span data-ttu-id="86346-132"><see langword="true" />, wenn die <paramref name="securityKeyIdentifierClause" /> unterstützt wird und wenn die <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />-Eigenschaft auf <see langword="true" /> festgelegt ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-132"><see langword="true" /> if the <paramref name="securityKeyIdentifierClause" /> is supported and if the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> property is set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86346-133">Die unterstützten Typen sind:</span><span class="sxs-lookup"><span data-stu-id="86346-133">The supported key identifier clause types are:</span></span>  
  
1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-134"><paramref name="securityKeyIdentifierClause" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-134"><paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86346-135">Ruft einen Wert ab, der angibt, ob dieser Handler Token des Typs <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> schreiben kann.</span><span class="sxs-lookup"><span data-stu-id="86346-135">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></summary>
        <value>
          <span data-ttu-id="86346-136"><see langword="true" />, wenn der Handler Token des Typs <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> schreiben kann; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-136"><see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="86346-137">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="86346-137">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86346-138">Übernimmt oder bestimmt den <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />, der von der aktuellen Instanz verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="86346-138">Gets or sets the <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that is used by the current instance.</span></span></summary>
        <value><span data-ttu-id="86346-139">Die X.509-Zertifikatvalidierungssteuerelement, das von der aktuellen Instanz verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="86346-139">The X.509 certificate validator that is used by the current instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86346-140">Ruft den X.509-Sicherheitstokentyp ab, der im WS-Sicherheits-X.509-Token-Profil definiert ist.</span><span class="sxs-lookup"><span data-stu-id="86346-140">Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.</span></span></summary>
        <returns><span data-ttu-id="86346-141">Der URI des X.509-Tokentyps.</span><span class="sxs-lookup"><span data-stu-id="86346-141">The X.509 token type URI.</span></span> <span data-ttu-id="86346-142">Der standardmäßige Werts der <see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="86346-142">By default, the value of the <see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements"><span data-ttu-id="86346-143">Die XML-Elemente, die die benutzerdefinierte Konfiguration enthalten.</span><span class="sxs-lookup"><span data-stu-id="86346-143">The XML elements that contain the custom configuration.</span></span></param>
        <summary><span data-ttu-id="86346-144">Lädt eine benutzerdefinierte Konfiguration aus XML.</span><span class="sxs-lookup"><span data-stu-id="86346-144">Loads custom configuration from XML.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-145"><paramref name="customConfigElements" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-145"><paramref name="customConfigElements" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="86346-146">Die angegebene benutzerdefinierte Konfiguration ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="86346-146">The custom configuration specified is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapToWindows">
      <MemberSignature Language="C#" Value="public bool MapToWindows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapToWindows" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />
      <MemberSignature Language="VB.NET" Value="Public Property MapToWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapToWindows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86346-147">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das überprüfende Token zu einem Windows-Konto zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="86346-147">Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.</span></span></summary>
        <value>
          <span data-ttu-id="86346-148"><see langword="true" />, wenn das überprüfende Token zu einem Windows-Konto zugeordnet werden soll; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-148"><see langword="true" /> if the validating token should be mapped to a Windows account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="86346-149">Der XML-Reader, der auf die Schlüsselbezeichnerklausel verweist.</span><span class="sxs-lookup"><span data-stu-id="86346-149">The XML reader referencing the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="86346-150">Deserialisiert eine Schlüsselbezeichnerklausel, auf die vom angegebenen XML-Reader verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="86346-150">Deserializes a key identifier clause referenced by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="86346-151">Die Schlüsselbezeichnerklausel, die von der XML deserialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="86346-151">The key identifier clause that was deserialized from the XML.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-152"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-152"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="86346-153">Ein XML-Reader, der auf ein X.509-Sicherheitstoken zeigt.</span><span class="sxs-lookup"><span data-stu-id="86346-153">An XML reader that is pointing to an X.509 security token.</span></span></param>
        <summary><span data-ttu-id="86346-154">Deserialisiert das X.509-Sicherheitstoken, auf das vom angegebenen XML-Reader verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="86346-154">Deserializes the X.509 security token referenced by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="86346-155">Das aus XML deserialisierte Sicherheitstoken.</span><span class="sxs-lookup"><span data-stu-id="86346-155">The security token deserialized from the XML.</span></span> <span data-ttu-id="86346-156">Eine Instanz von <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="86346-156">An instance of <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-157"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-157"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="86346-158"><paramref name="reader" /> zeigt nicht auf ein gültiges X.509-Sicherheitstoken, wie im WS-Security X.509 Token Profile definiert.</span><span class="sxs-lookup"><span data-stu-id="86346-158"><paramref name="reader" /> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile.</span></span> <span data-ttu-id="86346-159">Oder der angegebene encodingType entspricht nicht Base64 oder HexBinary.</span><span class="sxs-lookup"><span data-stu-id="86346-159">Or the encodingType specified is other than Base64 or HexBinary.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86346-160">Ruft <see cref="T:System.Type" /> der Token ab, die dieser Handler verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="86346-160">Gets the <see cref="T:System.Type" /> of the tokens that this handler processes.</span></span></summary>
        <value><span data-ttu-id="86346-161">Standardmäßig der Typ der <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="86346-161">By default, the type of the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="86346-162">Das zu validierende Token.</span><span class="sxs-lookup"><span data-stu-id="86346-162">The token to be validated.</span></span></param>
        <summary><span data-ttu-id="86346-163">Überprüft das angegebene X.509-Sicherheitstoken.</span><span class="sxs-lookup"><span data-stu-id="86346-163">Validates the specified X.509 security token.</span></span></summary>
        <returns><span data-ttu-id="86346-164">Die Identitäten im Token.</span><span class="sxs-lookup"><span data-stu-id="86346-164">The identities contained in the token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86346-165"><paramref name="token" /> lässt sich nicht aus <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> zuweisen.</span><span class="sxs-lookup"><span data-stu-id="86346-165"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-166"><paramref name="token" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-166"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="86346-167">Die <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />-Eigenschaft ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-167">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="86346-168">- oder - </span><span class="sxs-lookup"><span data-stu-id="86346-168">-or-</span></span>  
  
 <span data-ttu-id="86346-169">Es gibt keine konfigurierte Ausstellernamensregistrierung (<see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />).</span><span class="sxs-lookup"><span data-stu-id="86346-169">There is no issuer name registry (<see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />) configured.</span></span> <span data-ttu-id="86346-170">(Die <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" />-Eigenschaft von <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />, auf die von der <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />-Eigenschaft verwiesen wird, ist <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="86346-170">(The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> property of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> referenced by the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.)</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException"><span data-ttu-id="86346-171">Der aktuelle <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> konnte das Zertifikat im Token nicht überprüfen.</span><span class="sxs-lookup"><span data-stu-id="86346-171">The current <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> was unable to validate the certificate in the token.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="86346-172">Die aktuelle <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> gab <see langword="null" /> zurück bei dem Versuch, den Aussteller des Zertifikats im Token zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="86346-172">The current <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> returned <see langword="null" /> when trying to resolve the issuer of the certificate in the token.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="86346-173">Der XML-Writer, mit dem die Schlüsselbezeichnerklausel serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="86346-173">The XML writer to which the key identifier clause should be serialized.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="86346-174">Die zu serialisierende Schlüsselbezeichnerklausel.</span><span class="sxs-lookup"><span data-stu-id="86346-174">The key identifier clause to serialize.</span></span></param>
        <summary><span data-ttu-id="86346-175">Serialisiert die angegebene Schlüsselbezeichnerklausel in den XML-Writer.</span><span class="sxs-lookup"><span data-stu-id="86346-175">Serializes the specified key identifier clause to the XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-176"><paramref name="securityKeyIdentifierClause" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-176"><paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="86346-177">- oder - </span><span class="sxs-lookup"><span data-stu-id="86346-177">-or-</span></span>  
  
 <span data-ttu-id="86346-178"><paramref name="writer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-178"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="86346-179">Die <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />-Eigenschaft ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-179">The <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="86346-180">Der XML-Writer, in dem der Token serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="86346-180">The XML writer to which the token should be serialized.</span></span></param>
        <param name="token"><span data-ttu-id="86346-181">Das zu serialisierende X.509-Sicherheitstoken.</span><span class="sxs-lookup"><span data-stu-id="86346-181">The X.509 security token to serialize.</span></span> <span data-ttu-id="86346-182">Eine Instanz von <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="86346-182">An instance of <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="86346-183">Seialisiert das angegebene X.509-Sicherheitstoken in den angegebenen XML-Writer.</span><span class="sxs-lookup"><span data-stu-id="86346-183">Serializes the specified X.509 security token to the specified XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86346-184"><paramref name="token" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-184"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="86346-185">- oder - </span><span class="sxs-lookup"><span data-stu-id="86346-185">-or-</span></span>  
  
 <span data-ttu-id="86346-186"><paramref name="writer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86346-186"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86346-187"><paramref name="token" /> lässt sich nicht aus <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> zuweisen.</span><span class="sxs-lookup"><span data-stu-id="86346-187"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlDSigDefinedClauseTypes">
      <MemberSignature Language="C#" Value="public bool WriteXmlDSigDefinedClauseTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteXmlDSigDefinedClauseTypes" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteXmlDSigDefinedClauseTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteXmlDSigDefinedClauseTypes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86346-188">Ruft den Wert ab, der angibt, ob XmlDsig-definierte Klauseltypen bevorzugt werden, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="86346-188">Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.</span></span></summary>
        <value>
          <span data-ttu-id="86346-189"><see langword="true" />, wenn XmlDsig-definierte Klauseltypen bevorzugt werden; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86346-189"><see langword="true" /> if XmlDsig-defined clause types are preferred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86346-190">Unterstützt benutzerdefinierte XmlDSig <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> Typen sind:</span><span class="sxs-lookup"><span data-stu-id="86346-190">Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:</span></span>  
  
-   <span data-ttu-id="86346-191">X509IssuerSerial</span><span class="sxs-lookup"><span data-stu-id="86346-191">X509IssuerSerial</span></span>  
  
-   <span data-ttu-id="86346-192">X509SKI</span><span class="sxs-lookup"><span data-stu-id="86346-192">X509SKI</span></span>  
  
-   <span data-ttu-id="86346-193">X509Certificate</span><span class="sxs-lookup"><span data-stu-id="86346-193">X509Certificate</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X509NTAuthChainTrustValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property X509NTAuthChainTrustValidator As X509NTAuthChainTrustValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ X509NTAuthChainTrustValidator { System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ get(); void set(System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.X509NTAuthChainTrustValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86346-194">Ruft die <see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /> ab oder legt diese fest, welche von der aktuellen Instanz während der Zertifikatsvalidierung verwendet wird, wenn das eingehende X.509-Zertifikat einem Windows-Konto zugeordnet wird.</span><span class="sxs-lookup"><span data-stu-id="86346-194">Gets or sets the <see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.</span></span></summary>
        <value><span data-ttu-id="86346-195">Ein X.509-Zertifikatvalidierer, der ein bestimmtes X.509-Zertifikat überprüft und verifiziert, ob das Zertifikat einem Windows-Konto zugeordnet werden kann und ob die Zertifikatskette vertrauenswürdig ist.</span><span class="sxs-lookup"><span data-stu-id="86346-195">An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>