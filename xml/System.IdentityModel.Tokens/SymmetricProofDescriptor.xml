<Type Name="SymmetricProofDescriptor" FullName="System.IdentityModel.Tokens.SymmetricProofDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ffe999e82c07080d3a3d05a07ffe07550a5204a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419004" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymmetricProofDescriptor extends System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class SymmetricProofDescriptor&#xA;Inherits ProofDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricProofDescriptor : System::IdentityModel::Tokens::ProofDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.ProofDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e5d11-101">Diese Klasse kann zum Ausgeben des auf einem symmetrischen Schlüssel basierenden Tokens verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5d11-101">This class can be used for issuing the symmetric key based token.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5d11-102">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="e5d11-103">Der zu verwendende <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-103">The <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-104">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />-Klasse mit der angegebenen Anmeldeinformationen für Verschlüsselung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified encrypting credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-105">Verwenden Sie diesen Konstruktor, wenn Sie möchten, dass dem STS, um die Verwendung der angegebenen <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span><span class="sxs-lookup"><span data-stu-id="e5d11-105">Use this constructor if you want the STS to use the specified <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(cli::array &lt;System::Byte&gt; ^ key, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e5d11-106">Der symmetrische Schlüssel, der innerhalb des ausgestelltes Tokens verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-106">The symmetric key that is used inside the issued token.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="e5d11-107">Die Anmeldeinformationen zur Schlüsselcodierung für die vertrauende Seite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-107">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-108">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />-Klasse mit dem angegebenen Schlüsselmaterial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified key material.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-109">Verwenden Sie diesen Konstruktor, wenn Sie dem STS, um die angegebenen gefülltes Bytearray verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="e5d11-109">Use this constructor if you want the STS to use the specified key bytes.</span></span> <span data-ttu-id="e5d11-110">Dies geschieht, wenn der Client die Entropie sendet und den STS nur, die als Schlüssel für das ausgestellte Token verwenden würden.</span><span class="sxs-lookup"><span data-stu-id="e5d11-110">This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5d11-111">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-111">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="e5d11-112">Die Größe des symmetrischen Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-112">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="e5d11-113">Die Anmeldeinformationen zur Schlüsselcodierung für das Ziel der Anforderung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-113">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-114">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />-Klasse mit einem selbsterzeugten Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-115">Verwenden Sie diesen Konstruktor, wenn dem STS, um den Schlüssel mithilfe eines Zufallszahlengenerators automatisch generiert und in das Prüftoken als binäre ein geheimer Schlüssel gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e5d11-115">Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="e5d11-116">Die Größe des symmetrischen Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-116">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="e5d11-117">Die Anmeldeinformationen zur Schlüsselcodierung für das Ziel der Anforderung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-117">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="e5d11-118">Die Anmeldeinformationen zur Schlüsselcodierung für den Anfordernden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-118">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-119">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />-Klasse mit einem selbsterzeugten Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-119">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-120">Verwenden Sie diesen Konstruktor, wenn Sie möchten dem STS, um den Schlüssel automatisch generieren und senden es in das Prüftoken als verschlüsselten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="e5d11-120">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="e5d11-121">Zwei Fälle können die Verwendung dieses Konstruktors abgedeckt werden:</span><span class="sxs-lookup"><span data-stu-id="e5d11-121">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="e5d11-122">Der Client sendet die Entropie, aber der Server wird abgelehnt.</span><span class="sxs-lookup"><span data-stu-id="e5d11-122">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="e5d11-123">Der Client sendet keine die Entropie, damit der Entropie des Servers verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e5d11-123">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e5d11-124">
            <paramref name="keySizeInBits" /> ist kleiner gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-124">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="e5d11-125">Die Größe des symmetrischen Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-125">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="e5d11-126">Die Anmeldeinformationen zur Schlüsselcodierung für das Ziel der Anforderung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-126">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="e5d11-127">Die Verschlüsselungs-Anmeldeinformationen für den Anfordernden, die verwendet werden, um die Entropie oder das Prüftoken zu verschlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-127">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="e5d11-128">Die Entropie des Anfordernden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-128">The requestor's entropy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-129">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />-Klasse für die Verwendung zum Senden der kombinierten Entropie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-129">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-130">Verwenden Sie diesen Konstruktor, wenn Sie eine kombinierte Entropie senden möchten.</span><span class="sxs-lookup"><span data-stu-id="e5d11-130">Use this constructor if you want to send a combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5d11-131">
            <paramref name="sourceEntropy" /> ist <see langword="null" /> oder eine leeres Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-131">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e5d11-132">
            <paramref name="keySize" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-132">
              <paramref name="keySize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, System::String ^ encryptWith);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="e5d11-133">Die Größe des symmetrischen Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-133">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="e5d11-134">Die Anmeldeinformationen zur Schlüsselcodierung für die vertrauende Seite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-134">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="e5d11-135">Die Anmeldeinformationen zur Schlüsselcodierung für den Anfordernden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-135">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="e5d11-136">Der Algorithmus (URI), der im <see langword="&lt;EncryptWith&gt;" />-Element des RST angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-136">The algorithm (URI) specified in the <see langword="&lt;EncryptWith&gt;" /> element of the RST.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-137">Verwenden Sie diesen Konstruktor, damit STS automatisch einen Schlüssel generiert und diesen in den Prüftoken als verschlüsselten Schlüssel sendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-137">Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</span>
          </span>
          <span data-ttu-id="e5d11-138">An dieser Stelle werden zwei Fälle abgedeckt: 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-138">Two cases are covered here 1.</span>
          </span>
          <span data-ttu-id="e5d11-139">Der Client sendet die Entropie, aber der Server lehnt sie ab. 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-139">client sends the entropy, but server rejects it 2.</span>
          </span>
          <span data-ttu-id="e5d11-140">Der Client hat keine Entropie gesendet. Verwenden Sie aus diesem Grund die Entropie des Servers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-140">client did not send a entropy, so just use server's entropy</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-141">Wenn `encryptWith` -DES-Algorithmus ist der Schlüssel ist garantiert keine schwachen DES-Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="e5d11-141">If `encryptWith` is a DES algorithm, the key is guaranteed not to be a weak DES key.</span></span>  
  
 <span data-ttu-id="e5d11-142">Verwenden Sie diesen Konstruktor, wenn Sie möchten dem STS, um den Schlüssel automatisch generieren und senden es in das Prüftoken als verschlüsselten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="e5d11-142">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="e5d11-143">Zwei Fälle können die Verwendung dieses Konstruktors abgedeckt werden:</span><span class="sxs-lookup"><span data-stu-id="e5d11-143">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="e5d11-144">Der Client sendet die Entropie, aber der Server wird abgelehnt.</span><span class="sxs-lookup"><span data-stu-id="e5d11-144">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="e5d11-145">Der Client sendet keine die Entropie, damit der Entropie des Servers verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e5d11-145">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e5d11-146">
            <paramref name="keySizeInBits" /> ist kleiner gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-146">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte(), encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy, System::String ^ encryptWith);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="e5d11-147">Die Größe des symmetrischen Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-147">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="e5d11-148">Die Verschlüsselungs-Anmeldeinformationen für die vertrauende Seite, die verwendet werden, um die Schlüssel in der SecurityKeyIdentifier-Eigenschaft zu verschlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-148">The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="e5d11-149">Die Verschlüsselungs-Anmeldeinformationen für den Anfordernden, die verwendet werden, um die Entropie oder das Prüftoken zu verschlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-149">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="e5d11-150">Die Entropie des Anfordernden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-150">The requestor's entropy.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="e5d11-151">Der URI des Algorithmus, der zum Verschlüsseln des Prüfschlüssels verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-151">The URI of the algorithm to use to encrypt the proof key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-152">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />-Klasse für die Verwendung zum Senden der kombinierten Entropie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-152">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-153">Verwenden Sie diesen Konstruktor, um kombinierten Entropie zu senden.</span><span class="sxs-lookup"><span data-stu-id="e5d11-153">Use this constructor to send combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e5d11-154">
            <paramref name="keySizeInBits" /> ist kleiner gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-154">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5d11-155">
            <paramref name="sourceEntropy" /> ist <see langword="null" /> oder eine leeres Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-155">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyTo(class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyTo (response As RequestSecurityTokenResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyTo(System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ response);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
      </Parameters>
      <Docs>
        <param name="response">
          <span data-ttu-id="e5d11-156">Das RSTR, auf das der Nachweisbeschreibung angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-156">The RSTR to which to apply the proof descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d11-157">Ändert den angegebenen RSTR auf der Grundlage der Einstellungen in diesem Proof-Deskriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-157">Modifies the specified RSTR based on the settings in this proof descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d11-158">Legt fest, die entsprechenden Elemente, z. B. das angeforderte Prüftoken innerhalb der RSTR, je nachdem welche in der Proof Deskriptor-Instanz ist.</span><span class="sxs-lookup"><span data-stu-id="e5d11-158">Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5d11-159">
            <paramref name="response" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-159">
              <paramref name="response" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyBytes">
      <MemberSignature Language="C#" Value="public byte[] GetKeyBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetKeyBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetKeyBytes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5d11-160">Ruft das Schlüsselmaterial ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-160">Gets the key material.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d11-161">Ein Bytearray mit dem Schlüsselmaterial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-161">A byte array that contains the key material.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetSourceEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetSourceEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSourceEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetSourceEntropy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5d11-162">Ruft die Quellentropie in einfachen Bytes ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-162">Gets the source entropy in plain bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d11-163">Ein Bytearray, das die Entropiequelle enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-163">A byte array that contains the source entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetTargetEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetTargetEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTargetEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetTargetEntropy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5d11-164">Ruft die Zieltropie in einfachen Bytes ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-164">Gets the target entropy in plain bytes</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d11-165">Ein Bytearray, das das Entropieziel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-165">A byte array that contains the target entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyIdentifier">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ KeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d11-166">Ruft den Schlüsselbezeichner ab, der innerhalb des ausgestellten Tokens verwendet werden kann, um den Schlüssel zu definieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-166">Gets the key identifier that can be used inside the issued token to define the key.</span>
          </span>
          <span data-ttu-id="e5d11-167">Dies ist normalerweise der binäre geheime Schlüssel oder der verschlüsselte Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-167">It is usually the binary secret or the encrypted key;</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d11-168">Der Schlüsselbezeichner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-168">The key identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestorEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RequestorEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ RequestorEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d11-169">Ruft die verschlüsselnden Anmeldeinformationen des Anfordernden ab, die verwendet werden, um das angeforderte Prüftoken oder die Entropie in der Antwort zu verschlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-169">Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d11-170">Die Verschlüsselungsanmeldeinformationen des Anfordernden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-170">The requestor’s encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TargetEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ TargetEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d11-171">Ruft die die Verschlüsselungsanmeldeinformationen der vertrauenden Seite ab, die verwendet werden, um das angeforderte Sicherheitstoken in der Antwort zu verschlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-171">Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d11-172">Die abhängige Partei, die Anmeldeinformationen verschlüsselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d11-172">The relying party encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>