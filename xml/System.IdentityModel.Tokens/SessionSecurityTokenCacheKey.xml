<Type Name="SessionSecurityTokenCacheKey" FullName="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27af84463c2df1351e3c5f760efee2d9f56dc71e" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="72407336" /></Metadata><TypeSignature Language="C#" Value="public class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenCacheKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenCacheKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt den Schlüssel für einen Eintrag in einen <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Zwischenspeichern von <xref:System.IdentityModel.Tokens.SessionSecurityToken> müssen zwei Indizes angegeben werden. Eine ist die durch die-Eigenschaft dargestellte Kontext-ID, die <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> in allen Sitzungs Token eindeutig ist. Die andere ist die Schlüsselgenerierung, die durch die-Eigenschaft dargestellt wird <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> , die innerhalb eines Sitzungs Tokens eindeutig ist. Wenn ein Sitzungs Token ausgestellt wird, verfügt es nur über eine Kontext-ID. Wenn das Sitzungs Token erneuert wird, wird die Schlüsselgenerierung hinzugefügt. Nach der Verlängerung ist das erneuerte Sitzungs Token über die Kontext-ID und die Schlüsselgenerierung eindeutig identifizierbar.  
  
 Objekte des Typs <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> werden als Indizes für den Sitzungs Token-Cache verwendet. Für einen Index wird immer eine gültige <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A> Eigenschaft angegeben, aber die- <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> Eigenschaft ist möglicherweise `null` , abhängig davon, ob das Token erneuert wurde. Es ist auch eine optionale vorhanden <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A> , die den Endpunkt bereitstellt, für den das Token festgelegt ist.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenCacheKey (string endpointId, System.Xml.UniqueId contextId, System.Xml.UniqueId keyGeneration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointId, class System.Xml.UniqueId contextId, class System.Xml.UniqueId keyGeneration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpointId As String, contextId As UniqueId, keyGeneration As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenCacheKey(System::String ^ endpointId, System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ keyGeneration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenCacheKey : string * System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenCacheKey (endpointId, contextId, keyGeneration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="keyGeneration" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="endpointId">Die Endpunkt ID, zu der der Cacheeintrag ausgewertet wird. Dies sollte der Wert der <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />-Eigenschaft des gecachten Tokens sein.</param>
        <param name="contextId">Die Kontext-ID des Cacheeintrags. Dies sollte der Wert der <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />-Eigenschaft des gecachten Tokens sein.</param>
        <param name="keyGeneration">Die Schlüsselgenerierung des Cacheeintrags. Dies sollte der Wert der <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />-Eigenschaft des gecachten Tokens sein. Dieser Wert ist nur verfügbar, wenn das Token erneuert wird. Es handelt sich um <see langword="null" />, wenn ein neues Token zwischengespeichert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Kontext-ID für den Cacheschlüssel ab.</summary>
        <value>Die Kontext-ID für den Cacheschlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies entspricht der- <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> Eigenschaft des zwischengespeicherten Tokens.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Endpunkt-ID ab, zu der dieser Cacheeintrag ausgewertet wird.</summary>
        <value>Die Endpunkt ID, zu der dieser Cacheeintrag ausgewertet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies entspricht der- <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> Eigenschaft des zwischengespeicherten Tokens.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sessionSecurityTokenCacheKey.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Der mit der aktuellen Instanz zu vergleichende Cacheschlüssel. Sollte von <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" /> zuweisbar sein.</param>
        <summary>Ermittelt, ob das angegebene Objekt mit dem aktuellen Cacheschlüssel identisch ist.</summary>
        <returns><see langword="true" />, wenn das angegebene Objekt dasselbe ist wie der aktuelle Cacheschlüssel, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn den <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> Wert `true` hat, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> wird die-Eigenschaft nicht im Vergleich verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sessionSecurityTokenCacheKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Hashcode für den aktuelle Cacheschlüssel zurück.</summary>
        <returns>Der Hashcode für die aktuelle Cacheschlüssel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn den <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> Wert `true` hat, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> wird die-Eigenschaft beim Erzeugen des Hashcodes nicht verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreKeyGeneration">
      <MemberSignature Language="C#" Value="public bool IgnoreKeyGeneration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreKeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreKeyGeneration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreKeyGeneration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreKeyGeneration : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Schlüsselgenerierung bei einem Indexvergleich ignoriert werden kann.</summary>
        <value><see langword="true" />, um die Schlüsselgenerierung zu ignorieren; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wirkt sich auf die Art und Weise aus, wie die <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> -Eigenschaft von den folgenden Methoden und Operatoren behandelt wird: <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A> , <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A> , <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A> , <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schlüsselgenerierung für den Cacheschlüssel ab.</summary>
        <value>Die Schlüsselgenerierung für den Cacheschlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies entspricht der- <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> Eigenschaft des zwischengespeicherten Tokens.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As SessionSecurityTokenCacheKey, second As SessionSecurityTokenCacheKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ first, System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ second);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.IdentityModel.Tokens.SessionSecurityTokenCacheKey * System.IdentityModel.Tokens.SessionSecurityTokenCacheKey -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <Parameter Name="second" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="first">Der erste zu vergleichende Cacheschlüssel.</param>
        <param name="second">Der zweite zu vergleichende Cacheschlüssel.</param>
        <summary>Implementiert den Gleichheitsoperator für die <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />-Klasse.</summary>
        <returns><see langword="true" />, wenn die Cacheschlüssel gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn den <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> Wert `true` hat, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> wird die-Eigenschaft nicht im Vergleich verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As SessionSecurityTokenCacheKey, second As SessionSecurityTokenCacheKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ first, System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ second);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.IdentityModel.Tokens.SessionSecurityTokenCacheKey * System.IdentityModel.Tokens.SessionSecurityTokenCacheKey -&gt; bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <Parameter Name="second" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="first">Der erste zu vergleichende Cacheschlüssel.</param>
        <param name="second">Der zweite zu vergleichende Cacheschlüssel.</param>
        <summary>Implementiert den Gleichheitsoperator für die <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />-Klasse.</summary>
        <returns><see langword="true" />, wenn die Cacheschlüssel nicht gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn den <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> Wert `true` hat, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> wird die-Eigenschaft nicht im Vergleich verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sessionSecurityTokenCacheKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überschreibt <see cref="M:System.Object.ToString" />, um einen eindeutigen Bezeichner bereitzustellen.</summary>
        <returns>Der Schlüssel im Zeichenfolgenformat</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn den <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> Wert `true` hat, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> wird die-Eigenschaft nicht verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
