<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryKeyIdentifierClause.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456716050179e8240c0d1d35263e629f2352794a258.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">716050179e8240c0d1d35263e629f2352794a258</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Represents a base class for key identifier clauses that are based upon binary data.</source>
          <target state="translated">Stellt eine Basisklasse für Schlüsselbezeichnerklauseln dar, die auf Binärdaten basieren.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">In der Regel ist es nicht erforderlich, die <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> zu verwenden, es sei denn, es wird ein benutzerdefinierter Sicherheitstokendienst erstellt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">Wenn ein Sicherheitstokendienst ein Sicherheitstoken zurückgibt, enthält das ausgegebene Sicherheitstoken Verweise auf angefügte und nicht angefügte Sicherheitstoken.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</source>
          <target state="translated">Angefügte Verweise beziehen sich auf Sicherheitstoken, die im Sicherheitsheader einer SOAP-Nachricht enthalten sind, während sich nicht angefügte Verweise auf Sicherheitstoken beziehen, die nicht im Sicherheitsheader der SOAP-Nachricht enthalten sind.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">Diese Verweise bestätigen in der Regel die Echtheit des ausgegebenen Sicherheitstokens.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>The key identifier clause type.</source>
          <target state="translated">Der Typ der Schlüsselbezeichnerklausel.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Legt den Wert der <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph>-Eigenschaft fest.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clone the array passed into the <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parameter; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um den an den <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept>-Parameter übergebenen Array zu klonen; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph>-Klasse unter Verwendung des angegebenen Schlüsselklauseltyps und eines Werts, der angibt, ob die Binärdaten geklont werden müssen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> hat die Länge 0 (null).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>The key identifier clause type.</source>
          <target state="translated">Der Typ der Schlüsselbezeichnerklausel.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Legt den Wert der <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph>-Eigenschaft fest.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the binary data that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method.</source>
          <target state="translated">Legt die Binärdaten fest, die von der <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph>-Methode zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clone the array passed into the <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parameter; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um den an den <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept>-Parameter übergebenen Array zu klonen; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that was used to create a derived key.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, das die Nonce enthält, die zur Erstellung eines abgeleiteten Schlüssels verwendet wurde.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> method.</source>
          <target state="translated">Legt den Wert fest, der von der <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph>-Methode zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">Die Größe des abgeleiteten Schlüssels.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> property.</source>
          <target state="translated">Legt den Wert der <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph>-Eigenschaft fest.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph>-Klasse unter Verwendung des angegebenen Schlüsselklauseltyps, der Binärdaten, eines Werts, der angibt, ob die Binärdaten geklont werden müssen, einer Nonce und der Schlüssellänge.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.</source>
          <target state="translated">Wenn die <ph id="ph1">`derivationNonce`</ph> und die <ph id="ph2">`derivationLength`</ph>-Parameter angegeben werden, wird der implizierte abgeleitete Schlüssel verwendet, anstatt den direkten Sicherheitsschlüssel des Tokens zu verwenden.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Regardless of the value passed into the <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the <ph id="ph3">`identificationData`</ph> parameter.</source>
          <target state="translated">Unabhängig vom Wert, der an den <ph id="ph1">`cloneBuffer`</ph>-Parameter übergeben wird, gibt die <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph>-Methode immer einen Klon des Arrays zurück, der an den <ph id="ph3">`identificationData`</ph>-Parameter übergeben wurde.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> hat die Länge 0 (null).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Ruft die Binärdaten ab, die den Schlüsselbezeichner darstellen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>Regardless of the value passed into the constructor's <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph3">`identificationData`</ph> parameter.</source>
          <target state="translated">Unabhängig vom Wert, der an den <ph id="ph1">`cloneBuffer`</ph>-Parameter des Konstruktors übergeben wird, gibt die <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph>-Methode immer einen Klon des Arrays zurück, der an den <ph id="ph3">`identificationData`</ph>-Parameter des Konstruktors übergeben wurde.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Ruft die Binärdaten ab, die den Schlüsselbezeichner darstellen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>The array returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph> method is a clone of the constructor's <ph id="ph2">`identificationData`</ph> parameter when the value passed into the <ph id="ph3">`cloneBuffer`</ph> is <ph id="ph4">`true`</ph>; otherwise it is same array.</source>
          <target state="translated">Der Array, der durch die <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph>-Methode zurückgegeben wurde, ist ein Klon des <ph id="ph2">`identificationData`</ph>-Parameters des Konstruktors, wenn der an den <ph id="ph3">`cloneBuffer`</ph> übergebene Wert <ph id="ph4">`true`</ph> ist, ansonsten ist der Array identisch.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph2">`identificationData`</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph>-Methode gibt immer einen Klon des Arrays zurück, der an den <ph id="ph2">`identificationData`</ph>-Parameter des Konstruktors übergeben wurde.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Returns a value that indicates whether the key identifier for this instance matches the specified object.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob der Schlüsselbezeichner für diese Instanz mit dem angegebenen Objekt übereinstimmt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, mit dem verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</source>
          <target state="translated">Gibt einen Wert zurück, der anzeigt, ob die Binärdaten der aktuellen Instanz mit den angegebenen Binärdaten übereinstimmen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="data" /&gt;</ph> is equivalent to the binary data returned by the <ph id="ph3">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die <ph id="ph2">&lt;paramref name="data" /&gt;</ph> zu den von der <ph id="ph3">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph>-Methode zurückgegebenen Binärdaten äquivalent ist; andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, mit dem verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>The index in the array at which the comparison starts.</source>
          <target state="translated">Der Index im Array, ab dem der Vergleich gestartet wird.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</source>
          <target state="translated">Gibt einen Wert zurück, der anzeigt, ob die Binärdaten der aktuellen Instanz mit den angegebenen Binärdaten am angegebenen Offset übereinstimmen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary data in the <ph id="ph2">&lt;paramref name="data" /&gt;</ph> parameter starting at the index specified in the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parameter is equivalent to the binary data returned by the <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method (starting at index zero); otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Binärdaten im <ph id="ph2">&lt;paramref name="data" /&gt;</ph>-Parameter, die bei dem im <ph id="ph3">&lt;paramref name="offset" /&gt;</ph>-Parameter angegebenen Index beginnen, mit den Binärdaten übereinstimmen, die durch die <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph>-Methode (die beim Index 0 (null) beginnt) zurückgegeben werden; andernfalls <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob der Schlüsselbezeichner für diese Instanz mit der angegebenen Schlüsselbezeichnerklausel übereinstimmt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is of type <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> and the binary data returned by the <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method is identical for the <ph id="ph5">&lt;paramref name="keyIdentifierClause" /&gt;</ph> parameter and the current instance; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, falls die <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> ist und die von der <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph>-Methode zurückgegebenen Binärdaten mit dem <ph id="ph5">&lt;paramref name="keyIdentifierClause" /&gt;</ph>-Parameter und der aktuellen Instanz übereinstimmen, andernfalls <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>