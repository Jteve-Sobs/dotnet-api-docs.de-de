<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="698670494d510916b922e88a119093c8c15bf740" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36480114" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="47003-101">Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />, das Sicherheitstoken vom Typ <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> verarbeitet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47003-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-102">Die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Klasse serialisiert, deserialisiert und Sitzungstoken überprüft.</span><span class="sxs-lookup"><span data-stu-id="47003-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="47003-103">Sitzungstoken sind Token vom Typ <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="47003-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="47003-104">Die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Klasse serialisiert die Token in und aus Cookie-Format.</span><span class="sxs-lookup"><span data-stu-id="47003-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="47003-105">Standardmäßig serialisiert die Klasse Token in WS-Secure Conversation Feb2005 oder WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` Elemente.</span><span class="sxs-lookup"><span data-stu-id="47003-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="47003-106">Sitzungstoken werden verwendet, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) und die <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) zum Speichern von Informationen zu einer Sitzung werden in erster Linie die <xref:System.Security.Claims.ClaimsPrincipal> des authentifizierten Benutzers und die Start- und Ablaufdatum Sitzungsdauer zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="47003-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="47003-107">In passiven Szenarien der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> Aufrufe der <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) aus der authentifizierungspipeline ein Sitzungstokens aus dem Erstellen der <xref:System.Security.Claims.ClaimsPrincipal> , der den authentifizierten Benutzer darstellt.</span><span class="sxs-lookup"><span data-stu-id="47003-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="47003-108">SAM verwendet die konfigurierte <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> für die Erstellung der Token und zum Serialisieren in ein Cookie (und zum Deserialisieren des Tokens aus einem Cookie bei nachfolgenden Anforderungen).</span><span class="sxs-lookup"><span data-stu-id="47003-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="47003-109">SAM verwendet eine Instanz eines seiner konfigurierten <xref:System.IdentityModel.Services.CookieHandler> Klasse, die das Cookie in der HTTP-Antwort schreiben.</span><span class="sxs-lookup"><span data-stu-id="47003-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="47003-110">Dieses Cookie wird an den Client zurückgegeben, und der Client kann bei nachfolgenden Anforderungen darstellen, das Cookie, anstatt einen Roundtrip an dem Identitätsanbieter zum erneut Abrufen eines Sicherheitstokens an.</span><span class="sxs-lookup"><span data-stu-id="47003-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="47003-111">Weitere Informationen über die Funktionsweise von Sitzungen mit WIF finden Sie unter [WIF-Sitzungsverwaltung](~/docs/framework/security/wif-session-management.md).</span><span class="sxs-lookup"><span data-stu-id="47003-111">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47003-112">Die \<SecurityTokenHandlers > Konfigurationselement kann verwendet werden, an eine <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> , besitzt die Verantwortung für das Sichern der Anwendung Sitzungen.</span><span class="sxs-lookup"><span data-stu-id="47003-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application’s sessions.</span></span> <span data-ttu-id="47003-113">Entwickler sollten Vorsicht verwenden, wenn Sie diese Konfigurationseinstellung ändern wie ein falsch konfigurierter System Anwendung Gefährdung führen kann.</span><span class="sxs-lookup"><span data-stu-id="47003-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="47003-114">Z. B. Angeben eines abgeleiteten Links "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> und übergeben eine leere Auflistung von Transformationen (CookieTransform) an den Basistext hätte die Identität des Benutzers in ein Cookie, die nicht geschützt wurde, das serialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="47003-114">For example, specifying a derived  HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="47003-115">Dies kann ein Angreifer die Identität aus diesem Grund ändern und Zugriffsberechtigungen ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="47003-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="47003-116">Wenn das Sitzungstoken im Verweis-Modus, d. h. seine <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> Eigenschaft ist `true`, die Sitzung Tokenhandler serialisiert nur die Eigenschaften des Sitzungstokens, die erforderlich sind, um die Zugriffsschlüssel in die <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span><span class="sxs-lookup"><span data-stu-id="47003-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="47003-117">Im Standardfall der <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> Klasse wird verwendet, um Cacheschlüssel darstellen, und der Tokenhandler schreibt die <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> und <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> Eigenschaften des Tokens.</span><span class="sxs-lookup"><span data-stu-id="47003-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="47003-118">Wenn das Sitzungstoken nicht im Verweis-Modus, d. h. die <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> Eigenschaft ist `false`, zusätzlich zu den Eigenschaften, die bereits erwähnte, ruft der Handler dann, die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> Methode ein Bytearray, aus dem Token und den Speicher serialisiert die der Ergebniswert in das Cookie auch.</span><span class="sxs-lookup"><span data-stu-id="47003-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="47003-119">Weitere Informationen dazu, wie das Token serialisiert wird, finden Sie unter der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="47003-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="47003-120">Die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> Eigenschaft ruft die Liste der Transformationen, die die Sitzung angewendet werden, der token in der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="47003-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="47003-121">Leiten Sie alle Transformationen von der <xref:System.IdentityModel.CookieTransform> Klasse.</span><span class="sxs-lookup"><span data-stu-id="47003-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="47003-122">Im Standardfall der <xref:System.IdentityModel.DeflateCookieTransform> und die <xref:System.IdentityModel.ProtectedDataCookieTransform> angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="47003-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="47003-123">Die <xref:System.IdentityModel.ProtectedDataCookieTransform> Data Protection API (DPAPI) verwendet, um die Cookie-Informationen zu schützen.</span><span class="sxs-lookup"><span data-stu-id="47003-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="47003-124">DPAPI verwendet einen Schlüssel, der speziell für den Computer ist auf dem der Schutz-Algorithmen ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="47003-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="47003-125">Aus diesem Grund ist der Standard-Sitzung-Tokenhandler nicht können in der Webfarm-Szenarien verwendet werden, da in einem solchen Szenario Token, die auf einem Computer geschrieben möglicherweise auf einem anderen Computer gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="47003-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="47003-126">Sie können viele Strategien verwenden, um dieses Problem zu umgehen.</span><span class="sxs-lookup"><span data-stu-id="47003-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="47003-127">Sie haben unter anderem folgende Möglichkeiten:</span><span class="sxs-lookup"><span data-stu-id="47003-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="47003-128">Ersetzen Sie die standardmäßige <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> mit der <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span><span class="sxs-lookup"><span data-stu-id="47003-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="47003-129">Die <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> ermöglicht Ihnen die Angabe von Signierung und Verschlüsselung von Schlüsseln unter ASP.NET `<machineKey>` Element in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="47003-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="47003-130">Geben Sie einen Handler für das <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> Ereignis in die Datei global.asax.cs und Ersetzen Sie die standardsitzung token Handler mit einer Instanz von <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> , besitzt eine Liste der Transformationen, enthält die <xref:System.IdentityModel.RsaSignatureCookieTransform> und <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span><span class="sxs-lookup"><span data-stu-id="47003-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="47003-131">Sie können die neue Instanz erstellen, durch den Aufruf eines Konstruktors, der eine Liste der Transformationen akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="47003-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="47003-132">Leiten Sie eine benutzerdefinierte Transformation aus der <xref:System.IdentityModel.CookieTransform> Basisklasse und verwenden Sie die oben genannten Methode zur Einbindung in die Liste der Transformationen angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="47003-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="47003-133">Leiten Sie eine benutzerdefinierte Tokenhandler aus <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> und einen eigenen Cachingmechanismus implementieren.</span><span class="sxs-lookup"><span data-stu-id="47003-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="47003-134">Weitere Informationen zur Verwendung von Sitzungen in der Webfarm-Szenarien finden Sie unter [WIF und Webfarmen](~/docs/framework/security/wif-and-web-farms.md).</span><span class="sxs-lookup"><span data-stu-id="47003-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="47003-135">Die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> ist in der standardauflistung Tokenhandler; enthalten jedoch, Sie können es mit einer benutzerdefinierten-Sitzung Tokenhandler durch Ersetzen zunächst eine [ &lt;entfernen&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) Element unter den [ &lt;SecurityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) Element So entfernen Sie die Standard-Handler aus der Auflistung und dann fügen Sie Ihrer benutzerdefinierten token Handler mit der [ &lt;hinzufügen&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) Element.</span><span class="sxs-lookup"><span data-stu-id="47003-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element.</span></span> <span data-ttu-id="47003-136">Standardmäßig können Sie die Standardlebensdauer von token angeben, indem Sie z. B. die [ &lt;auf "sessiontokenrequirement"&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) Element unter den `<add>` Element.</span><span class="sxs-lookup"><span data-stu-id="47003-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element.</span></span> <span data-ttu-id="47003-137">Sie können einen benutzerdefinierten token Handler auszuführenden benutzerdefinierte Konfigurationselemente unter Entwerfen der `<add>` Element durch Überschreiben der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> Methode, um die Logik zum Verarbeiten bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="47003-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47003-138">Das folgende XML zeigt, wie mit einer Instanz von der Standardeinstellung Sitzung Sicherheit Tokenhandler in einer Auflistung Tokenhandler ersetzt die <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> -Klasse in der Konfiguration.</span><span class="sxs-lookup"><span data-stu-id="47003-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47003-139">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-139">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47003-140">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />-Klasse, die die Standardcookietransformationen und Tokenlebensdauer verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-141">Die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> Eigenschaften werden initialisiert, um <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span><span class="sxs-lookup"><span data-stu-id="47003-141">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler transforms" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="47003-142">Die Transformationen, die beim Codieren oder Decodieren des Cookies angewendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-142">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="47003-143">Legt die <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />-Eigenschaft fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-143">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-144">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />-Klasse, die die angegebenen Cookietransformationen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-144">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-145">Die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>-Eigenschaft wird mit <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> initialisiert.</span><span class="sxs-lookup"><span data-stu-id="47003-145">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-146">
            <paramref name="transforms" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-146">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler (transforms, tokenLifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="47003-147">Die Transformationen, die beim Codieren oder Decodieren des Cookies angewendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-147">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="47003-148">Legt die <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />-Eigenschaft fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-148">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <param name="tokenLifetime">
          <span data-ttu-id="47003-149">Die standardmäßige Lebensdauer für ein Token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-149">The default lifetime for a token.</span>
          </span>
          <span data-ttu-id="47003-150">Legt die <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />-Eigenschaft fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-150">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-151">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />-Klasse, die die angegebenen Cookietransformationen und Tokenlebensdauer verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-152">
            <paramref name="transforms" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-152">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-153">
            <paramref name="tokenLifetime" /> ist kleiner oder gleich <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-153">
              <paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberSignature Language="F#" Value="abstract member ApplyTransforms : byte[] * bool -&gt; byte[]&#xA;override this.ApplyTransforms : byte[] * bool -&gt; byte[]" Usage="sessionSecurityTokenHandler.ApplyTransforms (cookie, outbound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="47003-154">Der Cookie, der transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-154">The cookie that will be transformed.</span>
          </span>
        </param>
        <param name="outbound">
          <span data-ttu-id="47003-155">
            <see langword="true" />, wenn das Cookie verschlüsselt werden soll; <see langword="false" />, wenn das Cookie decodiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-155">
              <see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-156">Wendet die von der <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />-Eigenschaft angegebene Transformation auf das angegebene Cookie an, um es entweder zu codieren oder zu decodieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-156">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-157">Das codierte oder decodierte Cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-157">The encoded or decoded cookie.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-158">Wenn einen Cookie Codierung transformiert werden angewendet, in der Reihenfolge, in der sie erscheinen in, der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="47003-158">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="47003-159">Wenn Sie einen Cookie zu decodieren, werden sie in umgekehrter Reihenfolge angewendet.</span><span class="sxs-lookup"><span data-stu-id="47003-159">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="47003-160">Wird aufgerufen, aus der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> Methoden zum Codieren und Decodieren die Cookie-Informationen.</span><span class="sxs-lookup"><span data-stu-id="47003-160">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-161">Die <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />-Eigenschaft ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-161">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="sessionSecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="47003-162">Der <see cref="T:System.Xml.XmlReader" /> über das eingehende <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-162">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
          <span data-ttu-id="47003-163">Der Reader sollte an einem <see langword="&lt;wsc:SecurityContextToken&gt;" />-Element positioniert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-163">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-164">Gibt einen Wert zurück, der angibt, ob der Reader auf einem <see langword="&lt;wsc:SecurityContextToken&gt;" />-Element positioniert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-164">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-165">
            <see langword="true" />, wenn der Reader auf ein <see langword="&lt;wsc:SecurityContextToken&gt;" />-Element zeigt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-165">
              <see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-166">
            <paramref name="reader" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-166">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-167">Ruft einen Wert ab, der angibt, ob der Handler die Validierung von Token des Typs <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-167">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-168">
            <see langword="true" />, wenn der Handler die Validierung von Token des Typs <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> unterstützt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-168">
              <see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="47003-169">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-169">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-170">Ruft einen Wert ab, der angibt, ob dieser Handler Token des Typs <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> schreiben kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-170">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-171">
            <see langword="true" />, wenn der Handler Token des Typs <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> schreiben kann; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-171">
              <see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="47003-172">Immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-172">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieElementName : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-173">Ruft den Namen für das Cookie-Element ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-173">Gets the name for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-174">Der Name für das Cookie-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-174">The name for the cookie element.</span>
          </span>
          <span data-ttu-id="47003-175">Der Standardname für das Element ist "Cookie".</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-175">The default element name is "Cookie".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-176">Diese Eigenschaft wird verwendet, der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> Methoden, um das Element zu bestimmen, unter denen das codierte token Material geschrieben oder gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="47003-176">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieNamespace : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-177">Ruft den Namespace für das Cookie-Element ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-177">Gets the namespace for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-178">Der Namespace für das Cookie-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-178">The namespace for the cookie element.</span>
          </span>
          <span data-ttu-id="47003-179">Der Standardnamespace ist "http://schemas.microsoft.com/ws/2006/05/security".</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-179">The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-180">Diese Eigenschaft wird verwendet, der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> Methoden, um den Namespace des Elements zu bestimmen, unter denen das codierte token Material geschrieben oder gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="47003-180">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken&#xA;override this.CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="sessionSecurityTokenHandler.CreateSessionSecurityToken (principal, context, endpointId, validFrom, validTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="47003-181">Der Anspruchs-Prinzipal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-181">The claims principal.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="47003-182">Eine aufruferdefinierte Kontextzeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-182">A caller-defined context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="47003-183">Der Bezeichner des Endpunkts, mit dem das Token beschränkt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-183">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="47003-184">Der Zeitpunkt, zu dem das Token gültig wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-184">The time instant at which the token becomes valid.</span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="47003-185">Der Zeitpunkt, nachdem das Token nicht mehr gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-185">The time instant after which the token is no longer valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-186">Erstellt ein <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> auf der Grundlage des angegebenen Anspruchsprinzipals und dem Zeitraum, während dessen das Token gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-186">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-187">Das Sitzungssicherheitstoken, das erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-187">The session security token that was created.</span>
          </span>
          <span data-ttu-id="47003-188">Die Eigenschaften auf dem neuen Sitzungstoken werden entsprechend den angegebenen Parametern festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-188">The properties on the new session token are set according to the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-189">
            <paramref name="principal" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-189">
              <paramref name="principal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-190">Die <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />-Eigenschaft ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-190">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="47003-191">Der Tokendeskriptor, von dem das Token erstellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-191">The token descriptor from which to create the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-192">Erstellt ein Sicherheitstoken auf Grundlage des angegebenen Token-Deskriptors.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-192">Creates a security token based on the specified token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-193">Das Sicherheitstoken, das erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-193">The security token that was created.</span>
          </span>
          <span data-ttu-id="47003-194">Dies ist eine Instanz von <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-194">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-195">Erstellt und gibt ein sitzungssicherheitstoken mithilfe der folgenden Eigenschaften im token Deskriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, und <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="47003-195">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="47003-196">Wenn die <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> festgelegt `true` auf der Tokenhandler Konfiguration gemäß der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> -Eigenschaft, die bootstrap-Kontext wird erstellt, aus der <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> Eigenschaft und in das Sitzungstoken gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="47003-196">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-197">
            <paramref name="tokenDescriptor" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-197">
              <paramref name="tokenDescriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-198">Die <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />-Eigenschaft ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-198">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultCookieTransforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-199">Eine schreibgeschützte Auflistung, die die Liste der standardmäßigen Transformationen enthält, die auf Cookies angewendet werden, <see cref="T:System.IdentityModel.DeflateCookieTransform" /> und <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-199">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-200">Eine Konstante, die die standardmäßige Lebensdauer für Cookies angibt, zehn Stunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-200">A constant that specifies the default lifetime for cookies, ten hours.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-201">Ruft die standardmäßige Lebensdauer des Tokens ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-201">Gets the default token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-202">Die standardmäßige Lebensdauer des Tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-202">The default token lifetime.</span>
          </span>
          <span data-ttu-id="47003-203">Immer <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-203">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="sessionSecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47003-204">Ruft die Tokentyp-URIs für die Tokentypen ab, die von diesem Handler verarbeitet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-204">Gets the token type URIs for the token types that can be processed by this handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-205">Die Tokentypbezeichner-URIs für die Tokentypen, die von diesem Handler verarbeitet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-205">The token type identifier URIs for token types that can be processed by this handler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-206">Der folgende Typ-URIs werden unterstützt: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation","http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", und "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span><span class="sxs-lookup"><span data-stu-id="47003-206">The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="sessionSecurityTokenHandler.LoadCustomConfiguration customConfigElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements">
          <span data-ttu-id="47003-207">Die benutzerdefinierten Konfigurationselemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-207">The custom configuration elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-208">Lädt eine benutzerdefinierte Konfiguration aus XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-208">Loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-209">Wird von der Konfigurationsinfrastruktur zum Initialisieren der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Instanz.</span><span class="sxs-lookup"><span data-stu-id="47003-209">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="47003-210">Initialisiert die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> Eigenschaft aus der `lifetime` Attribut von der [ &lt;auf "sessiontokenrequirement"&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) Element in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="47003-210">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-211">
            <paramref name="customConfigElements" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-211">
              <paramref name="customConfigElements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-212">Die durch <paramref name="customConfigElements" /> angegebene Konfiguration ist nicht gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-212">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span>
          </span>
          <span data-ttu-id="47003-213">Beispielsweise enthält sie kein <see langword="&lt;sessionTokenRequirement&gt;" />-Element, sie enthält mehr als ein Element <see langword="&lt;sessionTokenRequirement&gt;" />, ein gültiger Wert <see cref="T:System.TimeSpan" /> kann nicht vom <see langword="lifetime" />-Attribut gelesen werden, oder das <see langword="lifetime" />-Attribut gibt einen Wert an, der kleiner als <see cref="F:System.TimeSpan.Zero" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-213">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47003-214">Liest <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-214">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-215">Die standardmäßige Implementierung Deserialisieren des Tokens aus einem WS-Secure Conversation Feb2005 oder WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` Element.</span><span class="sxs-lookup"><span data-stu-id="47003-215">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="47003-216">Der <see cref="T:System.Xml.XmlReader" /> über das eingehende <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-216">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-217">Liest das <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />-mithilfe des angegebenen XML-Readers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-217">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-218">Das Sitzungssicherheitstoken, das gelesen wurde, eine Instanz von <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-218">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-219">Der Reader muss auf einen WS-Secure Conversation Feb2005 oder einer WS-Secure Conversation 1.3 positioniert werden `<wsc:SecurityContextToken>` Element.</span><span class="sxs-lookup"><span data-stu-id="47003-219">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="47003-220">Ruft die standardmäßige Implementierung der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> Methode, die ein standardtokenresolver verwenden.</span><span class="sxs-lookup"><span data-stu-id="47003-220">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-221">
            <paramref name="reader" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-221">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="47003-222">Der Reader ist nicht auf <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> positioniert, oder <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> kann nicht gelesen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-222">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : byte[] * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (token, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="47003-223">Der Stream von Bytes, der das Token enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-223">The stream of bytes that contains the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="47003-224">Der zu verwendende Tokenresolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-224">The token resolver to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-225">Liest <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> aus einem Bytestream unter Verwendung des angegebenen Tokenresolvers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-225">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-226">Das gelesene <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-226">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-227">Die Standardimplementierung erstellt einen <xref:System.Xml.XmlDictionaryReader> über das Token und ruft die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="47003-227">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="47003-228">Der <see cref="T:System.Xml.XmlReader" /> über das eingehende <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-228">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="47003-229">Ein <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, das verwendet werden kann, um das <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> aufzulösen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-230">Liest das <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> mithilfe des angegebenen XML-Readers und des Tokenresolvers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-231">Das Sitzungssicherheitstoken, das gelesen wurde, eine Instanz von <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-231">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-232">Der Reader muss auf einen WS-Secure Conversation Feb2005 oder einer WS-Secure Conversation 1.3 positioniert werden `<wsc:SecurityContextToken>` Element.</span><span class="sxs-lookup"><span data-stu-id="47003-232">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="47003-233">Wenn das token Material zwischengespeichert wird, wird Sie aus den Tokencache, die eine Instanz gelesen von der <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> Klasse.</span><span class="sxs-lookup"><span data-stu-id="47003-233">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="47003-234">Andernfalls wird das token Material lesen, aus dem untergeordneten Element von der `<wsc:SecurityContextToken>` Element, das angegeben wird die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> Eigenschaften und die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> Methode wird aufgerufen, um Cookies zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="47003-234">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="47003-235">Weitere Informationen zu wie Sitzungstoken in serialisiert werden eine `<SecurityContextToken` Element finden Sie unter der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="47003-235">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-236">
            <paramref name="reader" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-236">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47003-237">Oder:  <paramref name="tokenResolver" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-237">-or-  <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="47003-238">Der Reader ist nicht auf <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> positioniert, oder <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> kann nicht gelesen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-238">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="member this.SetTransforms : seq&lt;System.IdentityModel.CookieTransform&gt; -&gt; unit" Usage="sessionSecurityTokenHandler.SetTransforms transforms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="47003-239">Die zu verwendendenTransforamtionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-239">The transforms to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-240">Legt Transformationen fest, die für Cookies angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-240">Sets the transforms that will be applied to cookies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-241">Legt die Liste der Transformationen, die zurückgegeben werden, indem Sie die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="47003-241">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="47003-242">Transformationen werden in der Reihenfolge angewendet werden, in denen sie in der Liste, die beim Codieren eines Cookies und in umgekehrter Reihenfolge angezeigt, wenn einen Cookie zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="47003-242">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="47003-243">Wenn die `transforms` Parameter ist `null`, wird eine Ausnahme ausgelöst werden, aus der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> Methode, wenn sie zum Codieren und Decodieren von Cookies aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="47003-243">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-244">Übernimmt oder bestimmt die Tokenlebenszeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-244">Gets or sets the token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-245">Die Lebensdauer des Tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-245">The token lifetime.</span>
          </span>
          <span data-ttu-id="47003-246">Der Standardwert ist <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-246">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-247">Standardmäßig Wenn die [ &lt;auf "sessiontokenrequirement"&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) Element in der Konfigurationsdatei angegeben ist die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> -Eigenschaft wird auf den Wert des initialisiert die `lifetime` Attribut, nach der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="47003-247">By default, if the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47003-248">Es wurde versucht, eine Zeitspanne kleiner oder gleich Null festzulegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-248">An attempt to set a time span that is less than or equal to zero occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-249">Ruft den Tokentyp ab, den dieser Handler verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-249">Gets the type of the tokens that this handler processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-250">Die <see cref="T:System.Type" /> von <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-250">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47003-251">Ruft Transformationen ab, die auf das Cookie angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-251">Gets the transforms that will be applied to the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47003-252">Die Liste der Transformationen, die auf das Cookie angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-252">The list of transforms that will be applied to the cookie.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-253">Transformationen werden angewendet, der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="47003-253">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit&#xA;override this.ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.ValidateSession securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="47003-254">Das zu überprüfende Token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-254">The token to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-255">Bestimmt, ob die Sitzung, die dem angegebenen Token zugeordnet ist, weiterhin gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-255">Determines whether the session associated with the specified token is still valid.</span>
          </span>
          <span data-ttu-id="47003-256">Gültigkeit wird bestimmt, indem die <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> und <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />-Eigenschaften des angegebenen Token überprüft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-256">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span>
          </span>
          <span data-ttu-id="47003-257">Eine Ausnahme wird ausgelöst, wenn die Sitzung nicht mehr gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-257">An exception is thrown if the session is no longer valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-258">Das Token ist ungültig wenn seine <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> Eigenschaftensatz wird auf einen Wert an, die bei einem späteren Zeitpunkt als <xref:System.DateTime.UtcNow%2A>, oder, wenn seine <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> Eigenschaftensatz wird auf einen Wert, der auftritt, vor <xref:System.DateTime.UtcNow%2A>.</span><span class="sxs-lookup"><span data-stu-id="47003-258">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="47003-259">Wird aufgerufen, aus der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> Methoden, um die Sitzung zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="47003-259">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-260">
            <paramref name="securityToken" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-260">
              <paramref name="securityToken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-261">Die <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />-Eigenschaft ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-261">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
          <span data-ttu-id="47003-262">Die <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />-Eigenschaft des Tokens ist älter als <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-262">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
          <span data-ttu-id="47003-263">Die <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />-Eigenschaft des Tokens ist jünger als <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-263">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47003-264">Überprüft ein Token und gibt seine Forderungen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-264">Validates a token and returns its claims.</span>
          </span>
        </summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="47003-265">Das zu validierende Token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-265">The token to be validated.</span>
          </span>
          <span data-ttu-id="47003-266">Muss von <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> zuweisbar sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-266">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-267">Überprüft das angegebene Token und gibt seine Ansprüche zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-267">Validates the specified token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-268">Die im Token enthaltenen Identitäten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-268">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-269">Ruft die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> Methode, um das Token zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="47003-269">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-270">
            <paramref name="token" />
            <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-270">
              <paramref name="token" />
              <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-271">
            <paramref name="token" /> lässt sich nicht aus <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> zuweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-271">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SessionSecurityToken * string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken (token, endpointId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="47003-272">Das zu validierende Token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-272">The token to be validated.</span>
          </span>
          <span data-ttu-id="47003-273">Muss von <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> zuweisbar sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-273">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="47003-274">Der Bezeichner des Endpunkts, mit dem das Token beschränkt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-274">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-275">Überprüft das angegebene Sitzungstoken und gibt seine Forderungen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-275">Validates the specified session token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-276">Die im Token enthaltenen Identitäten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-276">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-277">Überprüft, um sicherzustellen, dass das angegebene Token ist für die angegebene Endpunkt-ID begrenzt, und wenn dies der Fall ist, ruft der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> Methode; andernfalls löst eine <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span><span class="sxs-lookup"><span data-stu-id="47003-277">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="47003-278">Session-Token, die über eine <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> Eigenschaft `null` oder leere gelten als globaler Bereichsdefinition erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="47003-278">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="47003-279">Dies stellt ein potenzielles Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="47003-279">This presents a potential security risk.</span></span> <span data-ttu-id="47003-280">Aus diesem Grund Sie sollten sicherstellen, dass die <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> Eigenschaftensatz in Ihrer Sitzungstoken.</span><span class="sxs-lookup"><span data-stu-id="47003-280">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-281">
            <paramref name="token" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-281">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47003-282">Oder:  <paramref name="endpointId" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-282">-or-  <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-283">
            <paramref name="token" /> lässt sich nicht aus <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> zuweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-283">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="47003-284">Die <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />-Eigenschaft des angegebenen Token ist nicht <see langword="null" /> oder leer und ihr Wert unterscheidet sich von dem, der vom <paramref name="endpointId" />-Parameter angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-284">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47003-285">Serialisiert ein Token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-285">Serializes a token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-286">Die standardmäßige Implementierung serialisiert das Token in einem WS-Secure Conversation Feb2005 oder WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` Element.</span><span class="sxs-lookup"><span data-stu-id="47003-286">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.IdentityModel.Tokens.SessionSecurityToken -&gt; byte[]" Usage="sessionSecurityTokenHandler.WriteToken sessionToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="47003-287">Das zu schreibende Token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-287">The token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-288">Serialisiert das angegebene Token in ein Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-288">Serializes the specified token into a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47003-289">Ein codiertes Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-289">An encoded byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-290">Serialisiert das angegebene Token erstellen und XML-Writer über eine <xref:System.IO.MemoryStream> und das Ergebnis der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="47003-290">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="47003-291">Finden Sie diese Überladung für weitere Details.</span><span class="sxs-lookup"><span data-stu-id="47003-291">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-292">
            <paramref name="sessiontoken" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-292">
              <paramref name="sessiontoken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="47003-293">Der XML-Writer, mit dem der Token serialisiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-293">The XML writer with which to serialize the token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="47003-294">Das zu serialisierende Token</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-294">The token to serialize.</span>
          </span>
          <span data-ttu-id="47003-295">Eine Instanz von <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-295">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47003-296">Serialisiert den angegebenen Token mit dem angegebenen XML-Writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-296">Serializes the specified token by using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47003-297">Die standardmäßige Implementierung serialisiert das angegebene Token als WS-Secure Conversation Feb2005 oder WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` -Element, abhängig vom Wert der <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="47003-297">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="47003-298">Die <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> Eigenschaft serialisiert wird, als die `Id` Attribut.</span><span class="sxs-lookup"><span data-stu-id="47003-298">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="47003-299">Die <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> Eigenschaft serialisiert wird, als die `<Identifier>` untergeordnetes Element.</span><span class="sxs-lookup"><span data-stu-id="47003-299">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="47003-300">Wenn dies nicht der `null` der <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> Eigenschaft serialisiert wird, als ein `<Instance>` Element.</span><span class="sxs-lookup"><span data-stu-id="47003-300">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="47003-301">Schließlich, wenn die <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> Eigenschaft ist `false`, binäres Array übergeben werden das gesamte Token serialisiert die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> Methode codiert werden.</span><span class="sxs-lookup"><span data-stu-id="47003-301">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="47003-302">Das codierte Token wird dann als base64-codierten Wert geschrieben, mit dem Element und den Namespace, die gemäß der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> und <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="47003-302">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="47003-303">Wenn die <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> Eigenschaft ist `true`, das Token nicht serialisiert.</span><span class="sxs-lookup"><span data-stu-id="47003-303">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47003-304">
            <paramref name="writer" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-304">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47003-305">Oder:  <paramref name="token" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-305">-or-  <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47003-306">
            <paramref name="token" /> lässt sich nicht aus <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> zuweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-306">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
          <span data-ttu-id="47003-307">Oder:  <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> des Tokens gibt eine Version von WS-Secure Conversation an, die nicht vom Handler unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47003-307">-or-  The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>