<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5854e-101">Die abstrakte Basisklasse für Sicherheitstokenhandler.</span><span class="sxs-lookup"><span data-stu-id="5854e-101">The abstract base class for security token handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-102">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler> Klasse ist die Basisklasse, die von der die gesamte Sicherheit Tokenhandler abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="5854e-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="5854e-103">Sicherheit-Tokenhandler ist verantwortlich für:</span><span class="sxs-lookup"><span data-stu-id="5854e-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="5854e-104">Validierung der Sicherheitstoken (<xref:System.IdentityModel.Tokens.SecurityToken>) des Typs, es dient zum Verarbeiten und Verpacken, die die Ansprüche im Token in enthaltenen, ein <xref:System.Security.Claims.ClaimsIdentity> Objekt.</span><span class="sxs-lookup"><span data-stu-id="5854e-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="5854e-105">Serialisieren und Deserialisieren von Sicherheitstoken des Typs ist es für die Verarbeitung konzipiert.</span><span class="sxs-lookup"><span data-stu-id="5854e-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="5854e-106">Serialisieren und Deserialisieren von schlüsselbezeichnerklauseln (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) mit Verweisen auf Token des Typs in und aus verarbeiten soll `<wsse:SecurityTokenReference>` Elemente.</span><span class="sxs-lookup"><span data-stu-id="5854e-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="5854e-107">Erstellen von Sicherheitstokens von einem <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> Implementierungen von übergebenes Objekt der <xref:System.IdentityModel.SecurityTokenService> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="5854e-108">Erstellen von schlüsselbezeichnerklauseln aus einem Sicherheitstoken für Implementierungen von der <xref:System.IdentityModel.SecurityTokenService> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="5854e-109">Windows Identity Foundation (WIF) enthält die folgenden Sicherheitstokenhandler ausgegeben:</span><span class="sxs-lookup"><span data-stu-id="5854e-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="5854e-110">Die meisten dieser Klassen verfügbar machen, zusätzliche Elemente, die Funktionalität zu implementieren, die speziell für die Verarbeitung der Token ist für die Klasse entworfen wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="5854e-111">In vielen Fällen ist es möglicherweise besser, leiten Sie von einer dieser Klassen anstatt direkt aus der <xref:System.IdentityModel.Tokens.SecurityTokenHandler> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="5854e-112">Sicherheit-Tokenhandler kann hinzugefügt oder entfernt aus einer Auflistung Tokenhandler durch Angabe der [ &lt;hinzufügen&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;entfernen&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), oder [ &lt;deaktivieren&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) Elemente unter dem [ &lt;SecurityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) Element in einer Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="5854e-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="5854e-113">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> Objekt, das die Konfigurationseinstellungen für die Handlerauflistung enthält durch zugegriffen werden kann die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> -Eigenschaft und die Ereignishandler-Auflistung, die der Tokenhandler Mitglied ist möglich, die von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5854e-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="5854e-114">Sie können außer Kraft setzen die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> Methode, um benutzerdefinierte Konfigurationselemente zu verarbeiten, die der Handler verwendet.</span><span class="sxs-lookup"><span data-stu-id="5854e-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="5854e-115">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler> Klasse macht mehrere Eigenschaften und Methoden.</span><span class="sxs-lookup"><span data-stu-id="5854e-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="5854e-116">Abhängig von den Funktionen, den Sie implementieren möchten, können Sie einige oder alle diese Member überschreiben.</span><span class="sxs-lookup"><span data-stu-id="5854e-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="5854e-117">Müssen Sie überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> Eigenschaft und die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> Methode, um die WIF-Infrastruktur mit Informationen über den Typ des Sicherheitstokens bereitzustellen, die Ihre Klasse ist für die Verarbeitung konzipiert.</span><span class="sxs-lookup"><span data-stu-id="5854e-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="5854e-118">Validierung, Serialisierung und Deserialisierung Funktionalität wird bereitgestellt, über die Eigenschaften oder Methoden, die angeben, ob der Handler ausführen kann eine bestimmte Funktion, die zusammen mit der Methode oder die Methoden, die die Funktionalität zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="5854e-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="5854e-119">Die folgende Liste-Paaren, die Eigenschaften oder Methoden, die Funktionen mit den Methoden angeben, die diese Funktionalität zu implementieren:</span><span class="sxs-lookup"><span data-stu-id="5854e-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="5854e-120">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> Eigenschaft und die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode: überprüft ein Token, und verpackt die Ansprüche im Token in einer <xref:System.Security.Claims.ClaimsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="5854e-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="5854e-121">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> Eigenschaft und die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> Methoden: Token-Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="5854e-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="5854e-122">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> Methoden und die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> Methoden: Deserialisierung-Token.</span><span class="sxs-lookup"><span data-stu-id="5854e-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="5854e-123">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> Methode und die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> Methode: Deserialisieren von schlüsselbezeichnerklauseln.</span><span class="sxs-lookup"><span data-stu-id="5854e-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="5854e-124">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> Methode und die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> Methode: Serialisieren von schlüsselbezeichnerklauseln.</span><span class="sxs-lookup"><span data-stu-id="5854e-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="5854e-125">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> und <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> Methoden werden aufgerufen, aus der Pipeline in Implementierungen von der <xref:System.IdentityModel.SecurityTokenService> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="5854e-126">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> Methode wird aufgerufen, durch die WIF-Infrastruktur, um zu bestimmen, ob das angegebene Token bereits empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="5854e-127">Standardmäßig gibt diese Methode `false`, was bedeutet, dass das Token noch nicht empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="5854e-128">Sie können die Methode überschreiben und Logik zum Erkennen von wiedergegebenen Tokens bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-129">Die Codebeispiele in allen der <xref:System.IdentityModel.Tokens.SecurityTokenHandler> Themen stammen aus den `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-130">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-131">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="5854e-132">Das folgende XML zeigt, wie den SWT-Tokenhandler der Tokenhandler-Auflistung hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5854e-133">Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />-Klasse zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="5854e-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="5854e-134">Ein XML-Reader, beim Start-Element positioniert.</span><span class="sxs-lookup"><span data-stu-id="5854e-134">An XML reader positioned at the start element.</span></span> <span data-ttu-id="5854e-135">Der Reader sollte durch diese Methode nicht erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="5854e-135">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="5854e-136">Gibt einen Wert zurück, der angibt, ob das XML-Element, auf das aus dem angegebenen XML-Reader verwiesen wird, eine Schlüsselbezeichnerklausel ist, die von dieser Instanz deserialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="5854e-137"><see langword="true" />, wenn die <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />-Methode das Element lesen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-137"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5854e-138">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-138">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-139">Gibt die standardmäßige Implementierung `false` um anzugeben, dass die schlüsselbezeichnerklausel nicht gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="5854e-140">Eine abgeleitete Klasse überprüft das Element, dem der Reader auf bezieht, um festzustellen, ob die Instanz eine schlüsselbezeichnerklausel deserialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="5854e-141">Dies erfolgt normalerweise durch einen Aufruf der <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> Methode mit der entsprechenden und der Namespace-Zeichenfolgen angegeben.</span><span class="sxs-lookup"><span data-stu-id="5854e-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="5854e-142">Wenn Sie außer Kraft setzen <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, müssen Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> Methode, um die Logik zum Deserialisieren der schlüsselbezeichnerklausel bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5854e-143">Gibt einen Wert zurück, der angibt, ob das angegebene Token als Token des Typs deserialisiert werden kann, der von dieser Instanz verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="5854e-144">Die zu lesende Tokenzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="5854e-144">The token string to read.</span></span></param>
        <summary><span data-ttu-id="5854e-145">Gibt einen Wert zurück, der angibt, ob die angegebene Zeichenfolge als Token des Typs deserialisiert werden kann, der von dieser Instanz verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="5854e-146"><see langword="true" />, wenn die <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />-Methode das Element lesen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-146"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5854e-147">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-147">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-148">Die Standardimplementierung gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="5854e-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="5854e-149">Wenn Sie diese Methode überschreiben, müssen Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> Methode, um die Logik zum Deserialisieren des Tokens bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="5854e-150">Ein XML-Reader, bei einem Start-Element positioniert.</span><span class="sxs-lookup"><span data-stu-id="5854e-150">An XML reader positioned at a start element.</span></span> <span data-ttu-id="5854e-151">Der Reader sollte durch diese Methode nicht erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="5854e-151">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="5854e-152">Gibt einen Wert zurück, der angibt, ob das XML-Element, auf das aus dem angegebenen XML-Reader verwiesen wird, als Token des Typs gelesen werden kann, der von dieser Instanz verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="5854e-153"><see langword="true" />, wenn die <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />-Methode das Element lesen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-153"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5854e-154">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-154">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-155">Die Standardimplementierung gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="5854e-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="5854e-156">Eine abgeleitete Klasse überprüft das Element, dem der Reader auf bezieht, um festzustellen, ob ein Sicherheitstoken von die Instanz deserialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="5854e-157">Dies erfolgt normalerweise durch einen Aufruf der <xref:System.Xml.XmlReader.IsStartElement%2A> Methode mit der entsprechenden und der Namespace-Zeichenfolgen angegeben.</span><span class="sxs-lookup"><span data-stu-id="5854e-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="5854e-158">Wenn Sie außer Kraft setzen <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, müssen Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> Methode oder die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> Methode, um die Logik zum Deserialisieren der schlüsselbezeichnerklausel bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-159">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> Methode, um zu bestimmen, ob ein Token von einem Handler gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="5854e-160">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-161">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-162">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5854e-163">Ruft einen Wert ab, der angibt, ob der Handler die Validierung von Sicherheitstoken unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5854e-163">Gets a value that indicates whether the handler supports validation of security tokens.</span></span></summary>
        <value>
          <span data-ttu-id="5854e-164"><see langword="true" />, wenn die Klasse zum Überprüfen von Sicherheitstoken in der Lage ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-164"><see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5854e-165">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-166">Zum Implementieren von Überprüfung in einer abgeleiteten Klasse außer Kraft setzen diese Eigenschaft zurückgegeben `true` und überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode, um die Validierungslogik zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="5854e-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-167">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> Eigenschaft, um anzugeben, dass ein benutzerdefinierter Handler Token überprüfen kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="5854e-168">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-169">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-170">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="5854e-171">Die zu überprüfende Schlüsselbezeichnerklausel.</span><span class="sxs-lookup"><span data-stu-id="5854e-171">The key identifier clause to be checked.</span></span></param>
        <summary><span data-ttu-id="5854e-172">Gibt einen Wert zurück, der angibt, ob die angegebene Schlüsselbezeichnerklausel von dieser Instanz serialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="5854e-173"><see langword="true" />, wenn die angegebene Schlüsselbezeichnerklausel serialisiert kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-173"><see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5854e-174">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-174">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-175">Die Standardimplementierung gibt immer `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="5854e-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="5854e-176">Wenn Sie außer Kraft setzen <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, müssen Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> Methode, um die Logik zum Serialisieren der schlüsselbezeichnerklausel bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5854e-177">Ruft einen Wert ab, der angibt, ob der Handler Sicherheitstoken serialisieren kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-177">Gets a value that indicates whether the handler can serialize security tokens.</span></span></summary>
        <value>
          <span data-ttu-id="5854e-178"><see langword="true" />, wenn die Klasse zum Serialisieren von Token in der Lage ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-178"><see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span></span> <span data-ttu-id="5854e-179">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-179">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-180">Zum Implementieren der Serialisierung in einer abgeleiteten Klasse außer Kraft setzen diese Eigenschaft zurückgeben `true` und überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> Methoden, die die Serialisierungslogik implementiert.</span><span class="sxs-lookup"><span data-stu-id="5854e-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-181">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> Eigenschaft, um anzugeben, dass ein benutzerdefinierter Handler Token serialisieren kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="5854e-182">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-183">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-184">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5854e-185">Ruft das <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />-Objekt ab, das die Konfiguration für die aktuelle Instanz bereitstellt, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="5854e-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span></span></summary>
        <value><span data-ttu-id="5854e-186">Das Konfigurationsobjekt für die aktuelle Instanz.</span><span class="sxs-lookup"><span data-stu-id="5854e-186">The configuration object for the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-187">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> Eigenschaftensatz wird in der Regel von der Konfigurationsinfrastruktur aus der [ &lt;SecurityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) Element in der Konfigurationsdatei, während die Anwendung gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="5854e-188">In abgeleiteten Klassen, die Sie verwenden die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> Eigenschaft, um auf Konfigurationseinstellungen zuzugreifen, z. B. der ausstellernamenregistration zur Verwendung in der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> -Methode zugegriffen werden kann, aus der <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> Eigenschaft des Konfigurationsobjekts.</span><span class="sxs-lookup"><span data-stu-id="5854e-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5854e-189">Ruft die Token Handler-Sammlung ab, die die aktuelle Instanz beinhaltet.</span><span class="sxs-lookup"><span data-stu-id="5854e-189">Gets the token handler collection that contains the current instance.</span></span></summary>
        <value><span data-ttu-id="5854e-190">Die Tokenhandlerauflistung, die die aktuelle Instanz enthält.</span><span class="sxs-lookup"><span data-stu-id="5854e-190">The token handler collection that contains the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-191">Wenn der Tokenhandler hinzugefügt wird, um eine <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> -Instanz, die diese Eigenschaft wird automatisch festgelegt.</span><span class="sxs-lookup"><span data-stu-id="5854e-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="5854e-192">Das Token, für das der Verweis erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5854e-192">The token for which the reference is to be created.</span></span></param>
        <param name="attached">
          <span data-ttu-id="5854e-193"><see langword="true" />, wenn ein angefügter Verweis erstellt werden soll; <see langword="false" />, wenn ein nicht angefügter Verweis erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5854e-193"><see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span></span></param>
        <summary><span data-ttu-id="5854e-194">Erstellt bei Überschreibung in einer abgeleiteten Klasse den Sicherheitstokenverweis für die von dieser Klasse verarbeiteten Token.</span><span class="sxs-lookup"><span data-stu-id="5854e-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span></span> <span data-ttu-id="5854e-195">Diese Methode wird in der Regel von einem Sicherheitstokendienst (STS) aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="5854e-195">This method is typically called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="5854e-196">Eine Schlüsselbezeichnerklausel, die auf das angegebene Token verweist.</span><span class="sxs-lookup"><span data-stu-id="5854e-196">A key identifier clause that references the specified token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-197">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-198">Abgeleitete Klassen überschreiben diese Methode, um eine schlüsselbezeichnerklausel zurückgeben (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>), die verwendet werden kann, zum Erstellen einer `<wsse:SecurityTokenReference>` -Element für das angegebene Token.</span><span class="sxs-lookup"><span data-stu-id="5854e-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="5854e-199">Aufgerufen von Implementierungen der <xref:System.IdentityModel.SecurityTokenService> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="5854e-200">In der Regel eine <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> muss nicht nur verwendet werden, wenn ein benutzerdefinierter Sicherheitstokendienst erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="5854e-201">Wenn ein Sicherheitstokendienst ein Sicherheitstoken zurückgibt, enthält das ausgegebene Sicherheitstoken Verweise auf angefügte und nicht angefügte Sicherheitstoken.</span><span class="sxs-lookup"><span data-stu-id="5854e-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="5854e-202">Die angefügten Verweise beziehen sich auf Sicherheitstoken, die im Sicherheitsheader einer SOAP-Nachricht enthalten sind, und nicht angehängte Verweise beziehen sich auf Sicherheitstoken, die nicht im Sicherheitsheader einer SOAP-Nachricht enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="5854e-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="5854e-203">Diese Verweise bestätigen in der Regel die Echtheit des ausgegebenen Sicherheitstokens.</span><span class="sxs-lookup"><span data-stu-id="5854e-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-204">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> Methode, um eine schlüsselbezeichnerklausel aus dem angegebenen Token zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="5854e-205">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-206">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-207">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="5854e-208">Der Sicherheitstokendeskriptor, von dem das Token erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5854e-208">The security token descriptor from which the token is to be created.</span></span> <span data-ttu-id="5854e-209">Eigenschaften des Tokensdeskriptors werden festgelegt, bevor diese Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-209">Properties of the token descriptor are set before this method is called.</span></span></param>
        <summary><span data-ttu-id="5854e-210">Erstellt, wenn in einer abgeleiteten Klasse überschrieben, ein Sicherheitstoken mithilfe der angegebenen Tokenbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="5854e-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span></span> <span data-ttu-id="5854e-211">Diese Methode wird von einem Sicherheitstokendienst (STS) aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="5854e-211">This method is called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="5854e-212">Ein Sicherheitstoken, das mit den Eigenschaften des Tokensdeskriptors übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="5854e-212">A security token that matches the properties of the token descriptor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-213">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-214">Aufgerufen von Implementierungen der <xref:System.IdentityModel.SecurityTokenService> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-215">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> Methode zum Erstellen und ein Token von einem token Deskriptor zurück.</span><span class="sxs-lookup"><span data-stu-id="5854e-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="5854e-216">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-217">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-218">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="5854e-219">Das auf Wiedergabe zu überprüfende Token.</span><span class="sxs-lookup"><span data-stu-id="5854e-219">The token to check for replay.</span></span></param>
        <summary><span data-ttu-id="5854e-220">Löst beim Überschreiben in einer abgeleiteten Klasse eine Ausnahme aus, wenn das angegebene Token als wiedergegeben erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-221">Bei der Standardimplementierung wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="5854e-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="5854e-222">Abgeleitete Klassen sollten Auslösen einer <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> , wenn das Token wurde bereits verwendet.</span><span class="sxs-lookup"><span data-stu-id="5854e-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="5854e-223">Windows Identity Foundation (WIF) bietet die <xref:System.IdentityModel.Tokens.TokenReplayCache> Klasse, die von der Wiedergabe Caches abgeleitet werden können und die [ &lt;TokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) Konfigurationselement, das verwendet werden kann, so konfigurieren Sie die Wiedergeben von Tokenhandler in einer Anwendung verwendeten Cache; allerdings die genaue Implementierung der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> Methode wird bis zu der Designer der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5854e-224">Gibt bei Überschreibung in einer abgeleiteten Klasse den Satz von URIs zurück, die in Anforderungen verwendet werden, um einen Token des Typs zu identifizieren, der von dieser Klasse verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="5854e-225">Der Gruppe der URIs, die den Tokentyp identifizieren, den dieser Handler unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5854e-225">The set of URIs that identify the token type that this handler supports.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-226">Die <xref:System.Type> des Tokens, die von der aktuellen Instanz verarbeitet erfolgt über die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5854e-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="5854e-227">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> Methode gibt den Satz der zulässigen Bezeichner, die verwendet werden kann, in Nachrichten zum Verweisen auf den Typ des Sicherheitstokens.</span><span class="sxs-lookup"><span data-stu-id="5854e-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="5854e-228">Z. B. der URI-Wert verwendet, der `<wst:TokenType>` Element unter der `<wst:RequestSecurityToken>` Element um eine bestimmte Art von Token anzufordern (dargestellt durch die <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> Eigenschaft im Objektmodell).</span><span class="sxs-lookup"><span data-stu-id="5854e-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-229">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> Methode, um den Typ des Sicherheitstokens Bezeichner für ein benutzerdefiniertes Token zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="5854e-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="5854e-230">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-231">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-232">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="5854e-233">Das Konfigurations-XML-Element.</span><span class="sxs-lookup"><span data-stu-id="5854e-233">The configuration XML elements.</span></span> <span data-ttu-id="5854e-234">Jeder Knoten in der Liste ist vom Typ <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="5854e-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="5854e-235">Lädt beim Überschreiben in einer abgeleiteten Klasse die benutzerdefinierte Konfiguration aus XML ab.</span><span class="sxs-lookup"><span data-stu-id="5854e-235">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-236">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> Methode wird von der Konfigurationsinfrastruktur aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="5854e-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="5854e-237">Wenn diese Methode aufgerufen wird, die `nodelist` enthält die Elemente der obersten Ebene untergeordnetes Element von der Tokenhandler [ &lt;hinzufügen&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) Element aus der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="5854e-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler’s [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="5854e-238">Jede dieser kann wiederum enthalten Attribute oder untergeordnete Elemente abhängig von dem Konfigurationsschema, das Sie für die abgeleitete Klasse zu definieren.</span><span class="sxs-lookup"><span data-stu-id="5854e-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="5854e-239">Die Standardimplementierung löst eine <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="5854e-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="5854e-240">Überschreiben Sie diese Methode in der abgeleiteten Klasse Initialisierung von Ihrem Sicherheitstokenhandler aus einer Konfigurationsdatei zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="5854e-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="5854e-241">Ein XML-Reader, positioniert am XML-Startelement, das in in die Schlüsselbezeichnerklausel zu deserialisieren ist.</span><span class="sxs-lookup"><span data-stu-id="5854e-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="5854e-242">Deserialisiert bei Überschreibung in einer abgeleiteten Klasse das XML, auf das durch den angegebenen XML-Reader verwiesen wird, in eine Schlüsselbezeichnerklausel, die auf ein Token verweist, das von der abgeleiteten Klasse verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="5854e-243">Die Schlüsselbezeichnerklausel, die von der XML deserialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-243">The key identifier clause that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-244">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-245">Überschreiben Sie diese Methode, um die Logik, um eine schlüsselbezeichnerklausel aus XML deserialisiert bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="5854e-246">Wenn Sie diese Methode überschreiben, sollten Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="5854e-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5854e-247">Deserialisiert bei Überschreibung in einer abgeleiteten Klasse das angegebene XML in ein Token des Typs, der von der abgeleiteten Klasse verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="5854e-248">Die zu deserialisierende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="5854e-248">The string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="5854e-249">Deserialisiert bei Überschreibung in einer abgeleiteten Klasse die angegebene Zeichenfolge in ein Token des Typs, der von der abgeleiteten Klasse verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="5854e-250">Der Sicherheitstoken, der von der angegebenen Zeichenfolge deserialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-250">The security token that was deserialized from the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="5854e-251">Beim Aufrufen dieser Methode mit nicht vertrauenswürdigen Daten stellt ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="5854e-251">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="5854e-252">Rufen Sie diese Methode nur mit vertrauenswürdigen Daten.</span><span class="sxs-lookup"><span data-stu-id="5854e-252">Call this method only with trusted data.</span></span> <span data-ttu-id="5854e-253">Weitere Informationen finden Sie unter [Datenvalidierung](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="5854e-253">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="5854e-254">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-254">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-255">Überschreiben Sie diese Methode, um die Funktionalität bereit, die ein Sicherheitstoken aus einer Zeichenfolge deserialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5854e-255">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="5854e-256">Wenn Sie, diese Methode überschreiben, sollten Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="5854e-256">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="5854e-257">Ein XML-Reader, der am Start-Element des Tokens positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="5854e-257">An XML reader positioned at the start element of the token.</span></span></param>
        <summary><span data-ttu-id="5854e-258">Deserialisiert bei Überschreibung in einer abgeleiteten Klasse das XML, auf das durch den angegebenen XML-Reader verwiesen wird, in ein Token des Typs, der von der abgeleiteten Klasse verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-258">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="5854e-259">Das Sicherheitstoken, das aus der XML deserialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-259">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="5854e-260">Beim Aufrufen dieser Methode mit nicht vertrauenswürdigen Daten stellt ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="5854e-260">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="5854e-261">Rufen Sie diese Methode nur mit vertrauenswürdigen Daten.</span><span class="sxs-lookup"><span data-stu-id="5854e-261">Call this method only with trusted data.</span></span> <span data-ttu-id="5854e-262">Weitere Informationen finden Sie unter [Datenvalidierung](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="5854e-262">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="5854e-263">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-263">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-264">Überschreiben Sie diese Methode, um die Logik, um ein Sicherheitstoken aus XML deserialisiert bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-264">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="5854e-265">Wenn Sie diese Methode überschreiben, sollten Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="5854e-265">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5854e-266">In der Regel in abgeleiteten Klassen, wenn die Methode das Token aus dem referenzierten XML deserialisiert werden kann löst sie eine <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="5854e-266">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-267">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> Methode, um ein benutzerdefiniertes Token aus dem angegebenen XML-Reader zu lesen.</span><span class="sxs-lookup"><span data-stu-id="5854e-267">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="5854e-268">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-268">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-269">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-269">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-270">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-270">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="5854e-271">Ein XML-Reader, der am Start-Element des Tokens positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="5854e-271">An XML reader positioned at the start element of the token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="5854e-272">Ein Tokenresolver, der die Out-of-Band und zwischengespeicherten Token enthält.</span><span class="sxs-lookup"><span data-stu-id="5854e-272">A token resolver that contains out-of-band and cached tokens.</span></span></param>
        <summary><span data-ttu-id="5854e-273">Deserialisiert bei Überschreibung in einer abgeleiteten Klasse das XML, auf das durch den angegebenen XML-Reader verwiesen wird, in ein Token des Typs, der von dieser Klasse unter Verwendung des angegebenen Tokenresolvers verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-273">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span></span></summary>
        <returns><span data-ttu-id="5854e-274">Das Sicherheitstoken, das aus der XML deserialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-274">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="5854e-275">Beim Aufrufen dieser Methode mit nicht vertrauenswürdigen Daten stellt ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="5854e-275">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="5854e-276">Rufen Sie diese Methode nur mit vertrauenswürdigen Daten.</span><span class="sxs-lookup"><span data-stu-id="5854e-276">Call this method only with trusted data.</span></span> <span data-ttu-id="5854e-277">Weitere Informationen finden Sie unter [Datenvalidierung](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="5854e-277">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="5854e-278">Die standardmäßige Implementierung ignoriert die `tokenResolver` Parameter und den Aufruf an die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="5854e-278">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5854e-279">Überschreiben Sie diese Methode, um die Logik, um ein Sicherheitstoken aus XML deserialisiert bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-279">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="5854e-280">Wenn Sie diese Methode überschreiben, sollten Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="5854e-280">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5854e-281">In der Regel in abgeleiteten Klassen, wenn die Methode das Token aus dem referenzierten XML deserialisiert werden kann löst sie eine <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="5854e-281">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5854e-282">Ruft bei Überschreibung in einer abgeleiteten Klasse den Typ des Sicherheitstoken ab, der von dieser Instanz verarbeitetet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-282">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span></span></summary>
        <value><span data-ttu-id="5854e-283">Der Typ des Sicherheitstoken, das von dieser Instanz verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-283">The type of the security token that is processed by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-284">Sie müssen diese Eigenschaft in abgeleiteten Klassen überschreiben und Zurückgeben der <xref:System.Type> des Sicherheitstokens (<xref:System.IdentityModel.Tokens.SecurityToken>), die von der abgeleiteten Klasse verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-284">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-285">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> -Eigenschaft zum Zurückgeben der <xref:System.Type> von die Sicherheitstoken, die von einem benutzerdefinierten Handler verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="5854e-285">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="5854e-286">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-286">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-287">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-287">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-288">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-288">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="5854e-289">Das Sicherheitstoken, das überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-289">The security token that is being validated.</span></span></param>
        <param name="errorMessage"><span data-ttu-id="5854e-290">Die in die Ablaufverfolgung zu schreibende Meldung.</span><span class="sxs-lookup"><span data-stu-id="5854e-290">The message to write to the trace.</span></span></param>
        <summary><span data-ttu-id="5854e-291">Verfolgt das Fehlerereignis während der Validierung von Sicherheitstoken, wenn die Ablaufverfolgung aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="5854e-291">Traces the failure event during the validation of security tokens when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-292">Diese Methode sollte aufgerufen werden, aus der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode, die bei einem Überprüfungsfehler des Tokens.</span><span class="sxs-lookup"><span data-stu-id="5854e-292">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="5854e-293">Das Token, das überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-293">The token that was validated.</span></span></param>
        <summary><span data-ttu-id="5854e-294">Verfolgt die erfolgreiche Validierung des Sicherheitstokenereignisses, wenn die Ablaufverfolgung aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="5854e-294">Traces the successful validation of security tokens event when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-295">Diese Methode sollte aufgerufen werden, aus der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> -Methode auf, nachdem das Token erfolgreich validiert wurde.</span><span class="sxs-lookup"><span data-stu-id="5854e-295">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="5854e-296">Das zu validierende Token.</span><span class="sxs-lookup"><span data-stu-id="5854e-296">The token to validate.</span></span></param>
        <summary><span data-ttu-id="5854e-297">Validiert beim Überschreiben in einer abgeleiteten Klasse das angegebene Sicherheitstoken.</span><span class="sxs-lookup"><span data-stu-id="5854e-297">When overridden in a derived class, validates the specified security token.</span></span> <span data-ttu-id="5854e-298">Das Token muss von dem von der abgeleiteten Klasse verarbeiteten Typ sein.</span><span class="sxs-lookup"><span data-stu-id="5854e-298">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="5854e-299">Die Identitäten im Token.</span><span class="sxs-lookup"><span data-stu-id="5854e-299">The identities contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-300">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-300">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-301">Die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode wird von der Infrastruktur, um zu überprüfen, und extrahieren die Ansprüche aus dem deserialisierten Sicherheitstoken aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="5854e-301">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="5854e-302">Diese Ansprüche werden zurückgegeben, in der Auflistung der <xref:System.Security.Claims.ClaimsIdentity> Objekte, die von der Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="5854e-302">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="5854e-303">Im Normalfall enthält diese Auflistung eine einzelne Identität.</span><span class="sxs-lookup"><span data-stu-id="5854e-303">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="5854e-304">Validierung enthält in abgeleiteten Klassen in der Regel überprüft das beabsichtigte Zielgruppe, die im Token für die Zielgruppe, die im angegebenen URIs angegeben die <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> Eigenschaft des Konfigurationsobjekts Tokenhandler angegeben wird, auf die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5854e-304">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="5854e-305">Diese URIs werden in der Regel legen Sie in der Konfigurationsdatei unter der [ &lt;AudienceUris&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) Element.</span><span class="sxs-lookup"><span data-stu-id="5854e-305">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="5854e-306">Wenn die Zielgruppe kann nicht überprüft werden, eine <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> Ausnahme ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="5854e-306">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="5854e-307">Beim Verarbeiten von Token wird der Aussteller in der Regel durch Übergeben des ausstellertokens eines überprüft die <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> Methoden für die <xref:System.IdentityModel.Tokens.IssuerNameRegistry> -Objekt, das für den Handler über konfiguriert ist die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5854e-307">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="5854e-308">Der ausstellernamenregistration wird in der Regel über konfiguriert die [ &lt;IssuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) Element in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="5854e-308">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="5854e-309">Die <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> gibt den Namen des Ausstellers zurück.</span><span class="sxs-lookup"><span data-stu-id="5854e-309">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="5854e-310">Dieser Name sollte zum Festlegen der <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> Eigenschaft im Token enthaltenen Ansprüche.</span><span class="sxs-lookup"><span data-stu-id="5854e-310">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="5854e-311">Wenn der ausstellernamenregistration keinen Eintrag für die ausstellertokens <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="5854e-311">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="5854e-312">In diesem Fall eine <xref:System.IdentityModel.Tokens.SecurityTokenException> wird in der Regel in abgeleiteten Klassen ausgelöst, aber dieses Verhalten ist bis zu der Designer der-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5854e-312">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-313">Der folgende Code zeigt eine Überschreibung der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode nach einem Security token Handler, der simple webtoken (SWT) verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="5854e-313">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="5854e-314">Der Code stammt aus dem `CustomToken` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-314">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="5854e-315">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-315">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="5854e-316">Der folgende code zeigt `CreateClaims` -Methode, die aufgerufen wird, von der Überschreibung von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode im vorherigen Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-316">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="5854e-317">Diese Methode gibt ein <xref:System.Security.Claims.ClaimsIdentity> -Objekt, das aus der Ansprüche im Token erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-317">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="5854e-318">Der Code stammt aus dem `CustomToken` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-318">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="5854e-319">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-319">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="5854e-320">Der folgende code zeigt `ValidateSignature` -Methode, die aufgerufen wird, von der Überschreibung von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode im simple Web token Handler.</span><span class="sxs-lookup"><span data-stu-id="5854e-320">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="5854e-321">Diese Methode überprüft die Signatur im Token mit den konfigurierten <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="5854e-321">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="5854e-322">Der Code stammt aus dem `CustomToken` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-322">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="5854e-323">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-323">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="5854e-324">Der folgende code zeigt `ValidateAudience` -Methode, die aufgerufen wird, von der Überschreibung von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode im simple Web token Handler.</span><span class="sxs-lookup"><span data-stu-id="5854e-324">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="5854e-325">Diese Methode überprüft, ob die Zielgruppe enthalten, die im Token für die Zielgruppe URIs, die in der Konfiguration angegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="5854e-325">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="5854e-326">Der Code stammt aus dem `CustomToken` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-326">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="5854e-327">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-327">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="5854e-328">Der XML-Writer.</span><span class="sxs-lookup"><span data-stu-id="5854e-328">The XML writer.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="5854e-329">Die zu serialisierende Schlüsselbezeichnerklausel.</span><span class="sxs-lookup"><span data-stu-id="5854e-329">The key identifier clause to serialize.</span></span></param>
        <summary><span data-ttu-id="5854e-330">Serialisiert beim Überschreiben in einer abgeleiteten Klasse die angegebene Schlüsselbezeichnerklausel in XML.</span><span class="sxs-lookup"><span data-stu-id="5854e-330">When overridden in a derived class, serializes the specified key identifier clause to XML.</span></span> <span data-ttu-id="5854e-331">Die Schlüsselbezeichnerklausel muss einen Typ besitzen, der von der abgeleiteten Klasse unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="5854e-331">The key identifier clause must be of the type supported by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-332">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-333">Überschreiben Sie diese Methode, um die Logik, um eine schlüsselbezeichnerklausel zu XML-Serialisierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-333">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="5854e-334">Wenn Sie diese Methode überschreiben, sollten Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="5854e-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5854e-335">Serialisiert bei Überschreibung in einer abgeleiteten Klasse das angegebene Sicherheitstoken.</span><span class="sxs-lookup"><span data-stu-id="5854e-335">When overridden in a derived class, serializes the specified security token.</span></span> <span data-ttu-id="5854e-336">Das Token muss von dem von der abgeleiteten Klasse verarbeiteten Typ sein.</span><span class="sxs-lookup"><span data-stu-id="5854e-336">The token must be of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="5854e-337">Das zu serialisierende Token</span><span class="sxs-lookup"><span data-stu-id="5854e-337">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="5854e-338">Serialisiert bei Überschreibung in einer abgeleiteten Klasse das angegebene Sicherheitstoken in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="5854e-338">When overridden in a derived class, serializes the specified security token to a string.</span></span> <span data-ttu-id="5854e-339">Das Token muss von dem von der abgeleiteten Klasse verarbeiteten Typ sein.</span><span class="sxs-lookup"><span data-stu-id="5854e-339">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="5854e-340">Der serialisierte Token.</span><span class="sxs-lookup"><span data-stu-id="5854e-340">The serialized token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-341">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-341">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-342">Überschreiben Sie diese Methode, um die Logik, um ein Sicherheitstoken für XML-Serialisierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-342">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="5854e-343">Wenn Sie diese Methode überschreiben, sollten Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5854e-343">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="5854e-344">Der XML-Writer.</span><span class="sxs-lookup"><span data-stu-id="5854e-344">The XML writer.</span></span></param>
        <param name="token"><span data-ttu-id="5854e-345">Das zu serialisierende Token</span><span class="sxs-lookup"><span data-stu-id="5854e-345">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="5854e-346">Serialisiert beim Überschreiben in einer abgeleiteten Klasse das angegebene Sicherheitstoken in XML.</span><span class="sxs-lookup"><span data-stu-id="5854e-346">When overridden in a derived class, serializes the specified security token to XML.</span></span> <span data-ttu-id="5854e-347">Das Token muss von dem von der abgeleiteten Klasse verarbeiteten Typ sein.</span><span class="sxs-lookup"><span data-stu-id="5854e-347">The token must be of the type processed by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5854e-348">Standardmäßig löst diese Methode eine <xref:System.NotImplementedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="5854e-348">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="5854e-349">Überschreiben Sie diese Methode, um die Logik, um ein Sicherheitstoken für XML-Serialisierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="5854e-349">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="5854e-350">Wenn Sie diese Methode überschreiben, sollten Sie auch überschreiben die <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5854e-350">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5854e-351">Der folgende Code veranschaulicht das Überschreiben der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> Methode, um ein benutzerdefiniertes Token zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="5854e-351">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="5854e-352">Der Code stammt aus dem `Custom Token` Beispiel.</span><span class="sxs-lookup"><span data-stu-id="5854e-352">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="5854e-353">Dieses Beispiel stellt benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="5854e-353">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="5854e-354">Weitere Informationen in diesem Beispiel und weitere Beispiele für WIF und wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="5854e-354">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>