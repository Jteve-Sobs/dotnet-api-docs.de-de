<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="070472854d29491b27b0a083f2a6e1c3b78df6f1" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73387458" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse dar, die verwendet wird, um alle Sicherheitstoken zu implementieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie ein Sicherheitstoken, um Authentifizierungsinformationen bereitzustellen oder eine Meldung zu schützen.  
  
 Ein Sicherheits Token kann verwendet werden, um Authentifizierungs Anmelde Informationen, kryptografieschlüsselmaterial oder im Falle eines von einem Sicherheitstokendienst (Security Token Service, STS) ausgestellten Sicherheits Tokens, eine Sammlung von Ansprüchen zu einem Betreff, bereitzustellen. Alle Sicherheits Token werden von der <xref:System.IdentityModel.Tokens.SecurityToken>-Klasse abgeleitet.  
  
 Ab .NET 4,5 ist Windows Identity Foundation (WIF) vollständig in den .NET Framework integriert, und die von WIF bereitgestellten Klassen sind die bevorzugte Methode für die Behandlung von Sicherheits Token in Ihrem Code. In WIF werden Sicherheits Token in und aus Ihrer XML-Darstellung serialisiert und deserialisiert und mithilfe von Klassen überprüft, die von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler> Basisklasse abgeleitet werden. Wenn Sie ein Token überprüfen, müssen Sie nicht nur sicherstellen, dass das Token gültig ist, sondern auch eine <xref:System.Security.Claims.ClaimsIdentity> Instanz aus dem Token zurückgeben, die für Authentifizierungs-und Autorisierungs Entscheidungen verwendet werden kann. Der <xref:System.Security.Claims.ClaimsIdentity> wird von der-Implementierung des tokenhandlers der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A>-Methode aus den Ansprüchen im Token sowie von Ansprüchen erstellt, die für den Tokentyp selbst intrinsisch sind.  
  
 WIF bietet Unterstützung für die folgenden Arten von Sicherheits Token:  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: stellt ein Sicherheits Token dar, das auf einer SAML 2,0-Assertion basiert. Dieser Tokentyp wird in der Regel von einem Sicherheitstokendienst als Antwort auf eine WS-Trust-oder WS-Verbund-Sicherheitstokenanforderung (RST) ausgegeben.  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>: stellt ein Sicherheits Token dar, das auf einer SAML 1,1-Assertion basiert. Dieser Tokentyp wird in der Regel von einem Sicherheitstokendienst als Antwort auf eine WS-Trust-oder WS-Verbund-Sicherheitstokenanforderung (RST) ausgegeben.  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> und <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: stellt ein Sicherheits Token dar, das auf einem Kerberos-Ticket basiert, das in einer SOAP-Nachricht empfangen oder gesendet wird.  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: stellt ein Sicherheits Token dar, das auf einem Schlüssel basiert, der mit dem RSA-Algorithmus erstellt wird.  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: stellt ein Sicherheits Token dar, das Informationen über eine Sitzung enthält.  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: stellt ein Sicherheits Token dar, das auf einem Benutzernamen und einem Kennwort basiert.  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: stellt ein Sicherheits Token dar, das auf der Identität einer Windows-Domäne oder eines Benutzerkontos basiert.  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: stellt ein Sicherheits Token dar, das auf einem X. 509-Zertifikat basiert.  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: stellt ein Sicherheits Token dar, das auf einem X. 509-Zertifikat basiert, das einem Windows-Domänen Benutzerkonto oder einem lokalen Benutzerkonto zugeordnet ist.  
  
 Zwei weitere sicherheitstokenklassen, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> und <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, können verwendet werden, um allgemeine Fälle zu behandeln.  
  
 Groß sprachige Sicherheits Token werden in drei Hauptkategorien unterteilt:  
  
-   Token, die kryptografieschlüsselmaterial enthalten oder referenzieren. Beispielsweise werden die Typen <xref:System.IdentityModel.Tokens.RsaSecurityToken> und <xref:System.IdentityModel.Tokens.X509SecurityToken> häufig zu diesem Zweck verwendet.  
  
-   Token, die Anmelde Informationen für Benutzer darstellen, die bereits authentifiziert wurden. Beispielsweise werden die <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>und, bei einem Benutzer, der mit einem Zertifikat authentifiziert wurde, die <xref:System.IdentityModel.Tokens.X509SecurityToken> Typen.  
  
-   Token, die von einem Sicherheitstokendienst (STS) als Antwort auf eine Sicherheitstokenanforderung ausgegeben werden, entweder mithilfe des WS-Trust-oder WS-Federation-Protokolls. Diese werden in der Regel in einem `wst:RequestSecurityTokenResponse` XML-Fragment zurückgegeben. Die <xref:System.IdentityModel.Tokens.Saml2SecurityToken>-und <xref:System.IdentityModel.Tokens.SamlSecurityToken> Typen werden meistens zur Darstellung dieser Token verwendet.  
  
 Ein spezieller Tokentyp, der <xref:System.IdentityModel.Tokens.SessionSecurityToken>, enthält Informationen, die erforderlich sind, um einen Prinzipal zu erstellen, wenn Sitzungen in aktiven oder passiven Szenarien verwendet werden.  
  
 Zum Hinzufügen von Funktionalität zu vorhandenen Tokentypen können Sie vom jeweiligen Typ und dem zugehörigen Tokenhandler ableiten, um alle neuen Elemente zu unterstützen, die Sie dem Token hinzufügen. Um Unterstützung für neue Tokentypen hinzuzufügen, können Sie direkt von der <xref:System.IdentityModel.Tokens.SecurityToken> Klasse ableiten. Wenn Sie dies tun, müssen Sie auch eine tokenhandlerklasse erstellen, indem Sie von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler>-Klasse ableiten. Abhängig davon, wie das Token verwendet werden soll, müssen Sie möglicherweise auch einen benutzerdefinierten tokenresolver erstellen, indem Sie von der <xref:System.IdentityModel.Tokens.IssuerTokenResolver>-Klasse sowie von einem oder mehreren benutzerdefinierten schlüsselbezeichnertypen ableiten, indem Sie von der <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>-Klasse ableiten.  
  
   
  
## Examples  
 Die in den <xref:System.IdentityModel.Tokens.SecurityToken> Themen verwendeten Codebeispiele stammen aus dem `Custom Token` Beispiel. Dieses Beispiel stellt benutzerdefinierte Klassen bereit, die die Verarbeitung von Simple Web Tokens (Swap) ermöglichen. Sie enthält eine Implementierung einer `SimpleWebToken`-Klasse und einer `SimpleWebTokenHandler`-Klasse sowie andere Klassen, die Swap-Token unterstützen. Informationen zu diesem Beispiel und anderen Beispielen, die für WIF verfügbar sind, und Informationen dazu, wo Sie heruntergeladen werden, finden Sie unter [Beispiel Index für WIF-Code](~/docs/framework/security/wif-code-sample-index.md) Der folgende Code zeigt die Implementierung der `SimpleWebToken`-Klasse. Diese Klasse erweitert <xref:System.IdentityModel.Tokens.SecurityToken>.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Sie müssen die Eigenschaften <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />und <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> überschreiben. Die Methoden <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />und <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> unterstützen alle Schlüssel Bezeichner des Typs <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />. Sie müssen diese Methoden überschreiben, um andere schlüsselbezeichnertypen in der abgeleiteten Klasse zu unterstützen.</para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.IdentityModel.Tokens.SecurityToken" />-Klasse zu initialisieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />-Objekt, das den zu erstellenden Schlüsselbezeichner angibt.</typeparam>
        <summary>Ruft einen Wert ab, der angibt, ob dieses Sicherheitstoken den angegebenen Schlüsselbezeichner erstellen kann.</summary>
        <returns><see langword="true" />, wenn <paramref name="T" /> vom Typ <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>-Methode, um zu bestimmen, ob ein Sicherheitstoken einen bestimmten Schlüsselbezeichner erstellen kann. Rufen Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>-Methode zum Erstellen des Schlüsselbezeichners auf.  
  
 Die Standard Implementierung unterstützt Schlüsselbezeichnerklauseln vom Typ <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />-Objekt, das den zu erstellenden Schlüsselbezeichner angibt.</typeparam>
        <summary>Erstellt die angegebene Schlüsselbezeichnerklausel.</summary>
        <returns>Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, der eine Schlüsselbezeichnerklausel für das Sicherheitstoken ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>-Methode, um zu bestimmen, ob ein Sicherheitstoken einen bestimmten Schlüsselbezeichner erstellen kann. Rufen Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>-Methode zum Erstellen des Schlüsselbezeichners auf.  
  
 Die Standard Implementierung unterstützt Schlüsselbezeichnerklauseln vom Typ <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. Wenn keine Schlüsselbezeichnerklausel vom Typ <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> erstellt werden kann, wird eine <xref:System.NotSupportedException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen eindeutigen Bezeichner des Sicherheitstokens ab.</summary>
        <value>Der eindeutige Bezeichner des Sicherheitstokens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Sicherheitstoken in XML serialisiert wird, wird das `Id`-Attribut für das Sicherheitstoken in der Regel auf den Wert der <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>-Eigenschaft festgelegt.  
  
   
  
## Examples  
 Die in den <xref:System.IdentityModel.Tokens.SecurityToken> Themen verwendeten Codebeispiele stammen aus dem `Custom Token` Beispiel. Dieses Beispiel stellt benutzerdefinierte Klassen bereit, die die Verarbeitung von Simple Web Tokens (Swap) ermöglichen. Sie enthält eine Implementierung einer `SimpleWebToken`-Klasse und einer `SimpleWebTokenHandler`-Klasse sowie andere Klassen, die Swap-Token unterstützen. Informationen zu diesem Beispiel und anderen Beispielen, die für WIF verfügbar sind, und Informationen dazu, wo Sie heruntergeladen werden, finden Sie unter [Beispiel Index für WIF-Code](~/docs/framework/security/wif-code-sample-index.md) Der folgende Code zeigt die Überschreibung der <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>-Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie müssen die <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />-Eigenschaft überschreiben.</para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> für einen Vergleich mit dieser Instanz.</param>
        <param name="skiClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> für einen Vergleich mit dieser Instanz.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der Schlüsselbezeichner für diese Instanz auf den angegebenen Schlüsselbezeichner aufgelöst werden kann.</summary>
        <returns><see langword="true" />, wenn <paramref name="keyIdentifierClause" /> ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> ist und über den gleichen Bezeichner wie die <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />-Eigenschaft verfügt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standard Implementierung unterstützt Schlüsselbezeichnerklauseln vom Typ <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, für den der Schlüssel abgerufen werden soll.</param>
        <param name="skiClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, für den der Schlüssel abgerufen werden soll.</param>
        <summary>Ruft den Schlüssel für die angegebene Schlüsselbezeichnerklausel ab.</summary>
        <returns>Ein <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, das den Schlüssel darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A>-Methode ruft den <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> ab, um zunächst zu bestimmen, ob der angegebene Schlüsselbezeichner mit dieser Instanz übereinstimmt.  
  
 Die Standard Implementierung gibt das erste Element der <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> Auflistung zurück, wenn die Auflistung nicht leer ist, und wenn <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> `true`zurückgibt. Andernfalls wird `null`zurückgegeben.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> erben und die <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />-Methode implementieren und <paramref name="keyIdentifierClause" /> nicht aufgelöst werden kann, geben Sie <see langword="null" /> zurück. Eine Ausnahme sollte nicht von der <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />-Methode ausgelöst werden.</para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dem Sicherheitstoken zugeordneten kryptografischen Schlüssel ab.</summary>
        <value>Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt des <see cref="T:System.IdentityModel.Tokens.SecurityKey" />-Typs, das den Schlüsselsatz enthält, der dem Sicherheitstoken zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A>-Eigenschaft, um die Kryptografieschlüssel für dieses Sicherheits Token festzulegen, um Token oder eine SOAP-Nachricht zu schützen. Die Schlüssel können unter anderem zum digitalen Signieren oder Verschlüsseln von Token oder SOAP-Nachrichten verwendet werden.  
  
   
  
## Examples  
 Die in den <xref:System.IdentityModel.Tokens.SecurityToken> Themen verwendeten Codebeispiele stammen aus dem `Custom Token` Beispiel. Dieses Beispiel stellt benutzerdefinierte Klassen bereit, die die Verarbeitung von Simple Web Tokens (Swap) ermöglichen. Sie enthält eine Implementierung einer `SimpleWebToken`-Klasse und einer `SimpleWebTokenHandler`-Klasse sowie andere Klassen, die Swap-Token unterstützen. Informationen zu diesem Beispiel und anderen Beispielen, die für WIF verfügbar sind, und Informationen dazu, wo Sie heruntergeladen werden, finden Sie unter [Beispiel Index für WIF-Code](~/docs/framework/security/wif-code-sample-index.md) Der folgende Code zeigt die Überschreibung der <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>-Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie müssen die <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />-Eigenschaft überschreiben.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den ersten Zeitpunkt ab, zu dem dieses Sicherheitstoken gültig ist.</summary>
        <value>Ein <see cref="T:System.DateTime" />-Objekt, das den Zeitpunkt darstellt, zu dem dieses Sicherheitstoken frühestens gültig ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bestimmen Sie mithilfe der <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und der <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft den Zeitraum, in dem ein <xref:System.IdentityModel.Tokens.SecurityToken>-Token gültig ist. Die <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und die <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft stellen den ersten bzw. den letzten Zeitpunkt dar, zu dem das Sicherheitstoken gültig ist.  
  
   
  
## Examples  
 Die in den <xref:System.IdentityModel.Tokens.SecurityToken> Themen verwendeten Codebeispiele stammen aus dem `Custom Token` Beispiel. Dieses Beispiel stellt benutzerdefinierte Klassen bereit, die die Verarbeitung von Simple Web Tokens (Swap) ermöglichen. Sie enthält eine Implementierung einer `SimpleWebToken`-Klasse und einer `SimpleWebTokenHandler`-Klasse sowie andere Klassen, die Swap-Token unterstützen. Informationen zu diesem Beispiel und anderen Beispielen, die für WIF verfügbar sind, und Informationen dazu, wo Sie heruntergeladen werden, finden Sie unter [Beispiel Index für WIF-Code](~/docs/framework/security/wif-code-sample-index.md) Der folgende Code zeigt die Überschreibung der <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie müssen die <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />-Eigenschaft überschreiben.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den spätest möglichen Zeitpunkt ab, zu dem dieses Sicherheitstoken gültig ist.</summary>
        <value>Ein <see cref="T:System.DateTime" />, der den Zeitpunkt darstellt, zu dem dieses Sicherheitstoken letztmalig gültig ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bestimmen Sie mithilfe der <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und der <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft den Zeitraum, in dem ein <xref:System.IdentityModel.Tokens.SecurityToken>-Token gültig ist. Die <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und die <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft stellen den ersten bzw. den letzten Zeitpunkt dar, zu dem das Sicherheitstoken gültig ist.  
  
   
  
## Examples  
 Die in den <xref:System.IdentityModel.Tokens.SecurityToken> Themen verwendeten Codebeispiele stammen aus dem `Custom Token` Beispiel. Dieses Beispiel stellt benutzerdefinierte Klassen bereit, die die Verarbeitung von Simple Web Tokens (Swap) ermöglichen. Sie enthält eine Implementierung einer `SimpleWebToken`-Klasse und einer `SimpleWebTokenHandler`-Klasse sowie andere Klassen, die Swap-Token unterstützen. Informationen zu diesem Beispiel und anderen Beispielen, die für WIF verfügbar sind, und Informationen dazu, wo Sie heruntergeladen werden, finden Sie unter [Beispiel Index für WIF-Code](~/docs/framework/security/wif-code-sample-index.md) Der folgende Code zeigt die Überschreibung der <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie müssen die <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />-Eigenschaft überschreiben.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
