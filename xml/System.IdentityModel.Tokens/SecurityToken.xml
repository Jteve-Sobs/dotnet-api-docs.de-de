<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67881ad20a428df0b74bdede54027b38fd235e07" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58456912" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse dar, die verwendet wird, um alle Sicherheitstoken zu implementieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie ein Sicherheitstoken, um Authentifizierungsinformationen bereitzustellen oder eine Meldung zu schützen.  
  
 Ein Sicherheitstoken oder verwendet werden kann, geben Sie Anmeldeinformationen für die Authentifizierung kryptografische Schlüsseldaten, bei der ein Sicherheitstoken ausgestellt, von einem Sicherheitstokendienst (STS), eine Sammlung von Ansprüchen zu einem Thema. Leiten Sie alle Sicherheitstoken von der <xref:System.IdentityModel.Tokens.SecurityToken> Klasse.  
  
 Ab .NET 4.5, Windows Identity Foundation (WIF) wurde vollständig in .NET Framework integriert und die Klassen, die von WIF verfügbar gemacht werden, sind die bevorzugte Methode zur Behandlung von Sicherheitstoken in Ihrem Code. Sicherheitstoken werden in WIF wird serialisiert und deserialisiert und aus ihren XML-Darstellung und sind überprüft mithilfe von Klassen, die von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler> Basisklasse. Überprüfen eines Tokens umfasst nicht nur sicherstellen, dass das Token gültig ist, aber auch Zurückgeben einer <xref:System.Security.Claims.ClaimsIdentity> Instanz aus dem Token, die zum treffen von Entscheidungen für Authentifizierung und Autorisierung verwendet werden kann. Die <xref:System.Security.Claims.ClaimsIdentity> erstellt wird, durch die tokenvalidierungslogik des Handlers-Implementierung von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Methode aus den Ansprüchen im Token als auch über die Ansprüche, die für das Token systemintern sind Typ selbst enthalten.  
  
 Im Lieferumfang von WIF ist Unterstützung für die folgenden Typen von Sicherheitstoken:  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Stellt ein Sicherheitstoken, das auf einer SAML 2.0-Assertion basiert. Dieser Tokentyp wird in der Regel von einem Security token Service als Reaktion auf einer WS-Trust oder WS-Verbund sicherheitstokenanforderung (RST) ausgegeben.  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Stellt ein Sicherheitstoken, das auf einer SAML 1.1-Assertion basiert. Dieser Tokentyp wird in der Regel von einem Security token Service als Reaktion auf einer WS-Trust oder WS-Verbund sicherheitstokenanforderung (RST) ausgegeben.  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> und <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Stellt ein Sicherheitstoken, das auf einem Kerberos-Ticket basiert, die in einer SOAP-Nachricht gesendet oder empfangen wird  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Stellt ein Sicherheitstoken dar, das auf einem Schlüssel basiert, der mit dem RSA-Algorithmus erstellt wird.  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Stellt ein Sicherheitstoken, das Informationen zu einer Sitzung enthält.  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Stellt ein Sicherheitstoken, die basierend auf Benutzername und Kennwort dar.  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Stellt ein Sicherheitstoken dar, das auf der ID einer Windows-Domäne oder eines Benutzerkontos basiert.  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Stellt ein Sicherheitstoken, die auf ein x. 509-Zertifikat basiert.  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Stellt ein Sicherheitstoken, das auf einem x. 509-Zertifikat basiert, das einen Windows-Domänenbenutzer oder lokalen Benutzerkonto zugeordnet ist.  
  
 Zwei weitere token Sicherheitsklassen, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> und <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, kann verwendet werden, können Sie allgemeine Fälle zu behandeln.  
  
 Im allgemeinen Sicherheit, die Token in drei Hauptkategorien gliedern:  
  
-   Token, die enthalten oder verweisen kryptografische Schlüssel Material. Zum Beispiel die <xref:System.IdentityModel.Tokens.RsaSecurityToken> und <xref:System.IdentityModel.Tokens.X509SecurityToken> Typen werden häufig für diesen Zweck verwendet.  
  
-   Token, die Anmeldeinformationen für Benutzer dar, die bereits authentifiziert wurden. Z. B. die <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, im Fall von einem Benutzer mit einem Zertifikat authentifiziert die <xref:System.IdentityModel.Tokens.X509SecurityToken> Typen.  
  
-   Token, die als Reaktion auf eine sicherheitstokenanforderung mithilfe der WS-Trust oder WS-Verbund-Protokoll von einem Sicherheitstokendienst (STS) ausgestellt werden. Diese werden in der Regel zurückgegeben, einem `wst:RequestSecurityTokenResponse` XML-Fragment. Die <xref:System.IdentityModel.Tokens.Saml2SecurityToken> und <xref:System.IdentityModel.Tokens.SamlSecurityToken> Typen werden meist verwendet, um diese Token darzustellen.  
  
 Eine spezielle Tokentyp, den <xref:System.IdentityModel.Tokens.SessionSecurityToken>, enthält Informationen, um einen Prinzipal neu zu erstellen, bei Verwendung von Sitzungen in aktiven oder passiven Szenarien erforderlich sind.  
  
 Zum Hinzufügen von Funktionalität zu vorhandenen Tokentypen können Sie Ableiten aus der spezifische Typ und der zugehörige token Handler, um alle neuen Elemente zu unterstützen, die das Token hinzugefügt. Zum Hinzufügen der Unterstützung für neue Typen von Sicherheitstoken, die Sie direkt von ableiten können die <xref:System.IdentityModel.Tokens.SecurityToken> Klasse. Wenn Sie dies tun, müssen Sie auch eine token-Handler-Klasse zu erstellen, durch Ableiten von der <xref:System.IdentityModel.Tokens.SecurityTokenHandler> Klasse. Abhängig davon wie Ihr Token ist, verwendet werden soll, müssen Sie möglicherweise auch einen benutzerdefinierten Sicherheitstoken-Resolver zu erstellen, durch Ableiten von der <xref:System.IdentityModel.Tokens.IssuerTokenResolver> Klasse durch Ableiten von auch als ein oder mehrere benutzerdefinierte Typen den <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> Klasse.  
  
   
  
## Examples  
 Die Codebeispiele, die in verwendet werden die <xref:System.IdentityModel.Tokens.SecurityToken> Themen stammen aus der `Custom Token` Beispiel. Dieses Beispiel enthält die benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen. Es beinhaltet die Implementierung einer `SimpleWebToken` Klasse und ein `SimpleWebTokenHandler` -Klasse als auch andere Klassen, die SWT-Token zu unterstützen. Weitere Informationen in diesem Beispiel und andere Beispiele sind für WIF und wo Sie sie herunterladen, finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md). Der folgende Code zeigt die Implementierung der `SimpleWebToken` Klasse. Diese Klasse erweitert <xref:System.IdentityModel.Tokens.SecurityToken>.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Müssen Sie überschreiben die <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, und <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> Eigenschaften. Die <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, und <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> Schlüsselbezeichner des Typs eine Unterstützung für alle Methoden <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />. Sie müssen diese Methoden zur Unterstützung von anderen Schlüssel-ID-Typen in der abgeleiteten Klasse überschreiben.</para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.IdentityModel.Tokens.SecurityToken" />-Klasse zu initialisieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />-Objekt, das den zu erstellenden Schlüsselbezeichner angibt.</typeparam>
        <summary>Ruft einen Wert ab, der angibt, ob dieses Sicherheitstoken den angegebenen Schlüsselbezeichner erstellen kann.</summary>
        <returns><see langword="true" />, wenn <paramref name="T" /> vom Typ <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>-Methode, um zu bestimmen, ob ein Sicherheitstoken einen bestimmten Schlüsselbezeichner erstellen kann. Rufen Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>-Methode zum Erstellen des Schlüsselbezeichners auf.  
  
 Die Standardimplementierung unterstützt die schlüsselbezeichnerklausel des Typs <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />-Objekt, das den zu erstellenden Schlüsselbezeichner angibt.</typeparam>
        <summary>Erstellt die angegebene Schlüsselbezeichnerklausel.</summary>
        <returns>Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, der eine Schlüsselbezeichnerklausel für das Sicherheitstoken ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A>-Methode, um zu bestimmen, ob ein Sicherheitstoken einen bestimmten Schlüsselbezeichner erstellen kann. Rufen Sie die <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>-Methode zum Erstellen des Schlüsselbezeichners auf.  
  
 Die Standardimplementierung unterstützt die schlüsselbezeichnerklausel des Typs <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. Wenn eine schlüsselbezeichnerklausel des Typs <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> kann nicht erstellt werden, eine <xref:System.NotSupportedException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen eindeutigen Bezeichner für das Sicherheitstoken ab.</summary>
        <value>Der eindeutige Bezeichner des Sicherheitstokens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Sicherheitstoken in XML serialisiert wird, wird das `Id`-Attribut für das Sicherheitstoken in der Regel auf den Wert der <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>-Eigenschaft festgelegt.  
  
   
  
## Examples  
 Die Codebeispiele, die in verwendet werden die <xref:System.IdentityModel.Tokens.SecurityToken> Themen stammen aus der `Custom Token` Beispiel. Dieses Beispiel enthält die benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen. Es beinhaltet die Implementierung einer `SimpleWebToken` Klasse und ein `SimpleWebTokenHandler` -Klasse als auch andere Klassen, die SWT-Token zu unterstützen. Weitere Informationen in diesem Beispiel und andere Beispiele sind für WIF und wo Sie sie herunterladen, finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md). Der folgende Code zeigt die Überschreibung der der <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Müssen Sie überschreiben die <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> Eigenschaft.</para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, um einen Vergleich mit dieser Instanz durchzuführen.</param>
        <param name="skiClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, um einen Vergleich mit dieser Instanz durchzuführen.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der Schlüsselbezeichner für diese Instanz auf den angegebenen Schlüsselbezeichner aufgelöst werden kann.</summary>
        <returns><see langword="true" />, wenn <paramref name="keyIdentifierClause" /> ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> ist und über den gleichen Bezeichner wie die <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />-Eigenschaft verfügt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung unterstützt die schlüsselbezeichnerklausel des Typs <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, für den der Schlüssel abgerufen werden soll.</param>
        <param name="skiClause">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, für den der Schlüssel abgerufen werden soll.</param>
        <summary>Ruft den Schlüssel für die angegebene Schlüsselbezeichnerklausel ab.</summary>
        <returns>Ein <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, das den Schlüssel darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A>-Methode ruft den <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> ab, um zunächst zu bestimmen, ob der angegebene Schlüsselbezeichner mit dieser Instanz übereinstimmt.  
  
 Die Standardimplementierung gibt das erste Element von der <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> Auflistung, wenn die Auflistung nicht leer ist und <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> gibt `true`ist, andernfalls gibt `null`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> erben und die <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />-Methode implementieren und <paramref name="keyIdentifierClause" /> nicht aufgelöst werden kann, geben Sie <see langword="null" /> zurück. Eine Ausnahme sollte nicht von der <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />-Methode ausgelöst werden.</para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dem Sicherheitstoken zugeordneten kryptografischen Schlüssel ab.</summary>
        <value>Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt des <see cref="T:System.IdentityModel.Tokens.SecurityKey" />-Typs, das den Schlüsselsatz enthält, der dem Sicherheitstoken zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> Eigenschaft, um die kryptografischen Schlüssel für dieses Sicherheitstoken zum Schützen von Token oder über eine SOAP-Nachricht festzulegen. Der Schlüssel dient unter anderem digital zu signieren oder verschlüsseln Token oder der SOAP-Nachrichten.  
  
   
  
## Examples  
 Die Codebeispiele, die in verwendet werden die <xref:System.IdentityModel.Tokens.SecurityToken> Themen stammen aus der `Custom Token` Beispiel. Dieses Beispiel enthält die benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen. Es beinhaltet die Implementierung einer `SimpleWebToken` Klasse und ein `SimpleWebTokenHandler` -Klasse als auch andere Klassen, die SWT-Token zu unterstützen. Weitere Informationen in diesem Beispiel und andere Beispiele sind für WIF und wo Sie sie herunterladen, finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md). Der folgende Code zeigt die Überschreibung der der <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Müssen Sie überschreiben die <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> Eigenschaft.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den frühesten Zeitpunkt ab, zu dem dieses Sicherheitstoken gültig ist.</summary>
        <value>Ein <see cref="T:System.DateTime" />, der den Zeitpunkt darstellt, zu dem dieses Sicherheitstoken zuerst gültig ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bestimmen Sie mithilfe der <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und der <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft den Zeitraum, in dem ein <xref:System.IdentityModel.Tokens.SecurityToken>-Token gültig ist. Die <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und die <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft stellen den ersten bzw. den letzten Zeitpunkt dar, zu dem das Sicherheitstoken gültig ist.  
  
   
  
## Examples  
 Die Codebeispiele, die in verwendet werden die <xref:System.IdentityModel.Tokens.SecurityToken> Themen stammen aus der `Custom Token` Beispiel. Dieses Beispiel enthält die benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen. Es beinhaltet die Implementierung einer `SimpleWebToken` Klasse und ein `SimpleWebTokenHandler` -Klasse als auch andere Klassen, die SWT-Token zu unterstützen. Weitere Informationen in diesem Beispiel und andere Beispiele sind für WIF und wo Sie sie herunterladen, finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md). Der folgende Code zeigt die Überschreibung der der <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Müssen Sie überschreiben die <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> Eigenschaft.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den spätest möglichen Zeitpunkt ab, zu dem dieses Sicherheitstoken gültig ist.</summary>
        <value>Ein <see cref="T:System.DateTime" />, der den Zeitpunkt darstellt, zu dem dieses Sicherheitstoken letztmalig gültig ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bestimmen Sie mithilfe der <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und der <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft den Zeitraum, in dem ein <xref:System.IdentityModel.Tokens.SecurityToken>-Token gültig ist. Die <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>-Eigenschaft und die <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>-Eigenschaft stellen den ersten bzw. den letzten Zeitpunkt dar, zu dem das Sicherheitstoken gültig ist.  
  
   
  
## Examples  
 Die Codebeispiele, die in verwendet werden die <xref:System.IdentityModel.Tokens.SecurityToken> Themen stammen aus der `Custom Token` Beispiel. Dieses Beispiel enthält die benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) zu ermöglichen. Es beinhaltet die Implementierung einer `SimpleWebToken` Klasse und ein `SimpleWebTokenHandler` -Klasse als auch andere Klassen, die SWT-Token zu unterstützen. Weitere Informationen in diesem Beispiel und andere Beispiele sind für WIF und wo Sie sie herunterladen, finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md). Der folgende Code zeigt die Überschreibung der der <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> Eigenschaft.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Müssen Sie überschreiben die <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> Eigenschaft.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>