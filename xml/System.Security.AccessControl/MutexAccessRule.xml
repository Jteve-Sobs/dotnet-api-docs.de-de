<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MutexAccessRule.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc2ddbf08b7af564d2bf172f4e59ea676b3a8afe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc2ddbf08b7af564d2bf172f4e59ea676b3a8afe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Represents a set of access rights allowed or denied for a user or group.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>This class cannot be inherited.</source>
          
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> Klasse wird zu einem Satz von Klassen, die die .NET Framework bietet für die Verwaltung von Windows-zugriffssteuerungssicherheit auf System benannte Mutexe bezeichnet.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>For an overview of these classes, and their relationship to the underlying Windows access control structures, see <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>.</source>
          <target state="translated">Einen Überblick über diese Klassen und deren Beziehungen zu den zugrunde liegenden Windows Zugriffssteuerungsstrukturen finden Sie unter <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Windows access control security is meaningful only for named system mutexes.</source>
          <target state="translated">Windows-zugriffssteuerungssicherheit ist nur für benannte Systemmutexe sinnvoll.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>If a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object represents a local mutex, access control is irrelevant.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> -Objekt stellt einen lokalen Mutex dar, die Zugriffssteuerung ist irrelevant.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>To get a list of the rules currently applied to a named mutex, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, and then use its <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> method to obtain a collection of <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects.</source>
          <target state="translated">Verwenden Sie zum Abrufen einer Liste der Regeln, die derzeit auf einen benannten Mutex angewendet der <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode zum Abrufen einer <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> -Objekts und anschließendes Verwenden der <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> Methode zum Abrufen einer Auflistung von <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> Objekte zuordnen nicht eins zu eins Zugriffssteuerungseinträge in der zugrunde liegenden besitzverwalteten Zugriffssteuerungsliste (DACL).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>When you get the set of all access rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.</source>
          <target state="translated">Wenn Sie den Satz von alle Zugriffsregeln für einen Mutex abrufen, enthält der Satz die minimale Anzahl von Regeln, die derzeit erforderlich, um alle Zugriffssteuerungseinträge.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The underlying access control entries change as you apply and remove rules.</source>
          <target state="translated">Die zugrunde liegenden Zugriffssteuerungseinträge ändern, da Sie Regeln anwenden oder entfernen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The information in rules is merged if possible, to maintain the smallest number of access control entries.</source>
          <target state="translated">Die in Regeln nach Möglichkeit zusammengeführt, um die kleinste Anzahl von Zugriffssteuerungseinträgen zu gewährleisten.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</source>
          <target state="translated">Daher beim Lesen der aktuellen Liste der Regeln es sieht möglicherweise nicht genau wie die Liste aller Regeln, die Sie hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Use <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects to specify access rights to allow or deny to a user or group.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> Objekte über die Zugriffsrechte für das zulassen oder verweigern einem Benutzer oder Gruppe angeben.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> object always represents either allowed access or denied access, never both.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> -Objekt immer stellt der Zugriff erlaubt oder verweigert den Zugriff auf niemals beide.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>To apply a rule to a named system mutex, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Verwenden Sie zum Anwenden einer Regelsatzes auf einen benannten Systemmutex der <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode zum Abrufen der <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Modify the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object by using its methods to add the rule, and then use the <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach the security object.</source>
          <target state="translated">Ändern der <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> -Objekt mithilfe seiner Methoden zum Hinzufügen der Regelnamens, und klicken Sie dann die <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode, um das Sicherheitsobjekt erneut anzufügen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object do not affect the access levels of the named mutex until you call the <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named mutex.</source>
          <target state="translated">Änderungen an einer <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> Objekt haben keinen Einfluss auf die Zugriffsebenen der benannte Mutex erst nach dem Aufruf der <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode, um das geänderte Sicherheitsobjekt auf den benannten Mutex zuzuweisen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> -Objekte sind unveränderlich.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Security for a mutex is modified using the methods of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> class to add or remove rules; as you do this, the underlying access control entries are modified.</source>
          <target state="translated">Sicherheit für ein Mutex wird geändert, mit den Methoden der der <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> Klasse zum Hinzufügen oder Entfernen von Regeln, wie in diesem Fall werden die zugrunde liegenden Zugriffssteuerungseinträge geändert.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Sicherheit auf Synchronisierungsobjekte ist Windows 98 oder Windows Millennium Edition nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The following code example demonstrates the creation and use of <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Erstellung und Verwendung von <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und zeigt das resultierende Paar von Regeln.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Anschließend können Sie neue Rechte für den aktuellen Benutzer und das Ergebnis wird angezeigt, dass der neuen Rechte mit dem vorhandenen zusammengeführt werden <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The user or group the rule applies to.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Must be of type <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> or a type such as <ph id="ph2">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph3">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To wait on a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method), a user must have <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Warten auf eine <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (durch Aufrufen der <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> oder <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> Methode), Benutzer benötigen <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph> Zugriff.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To release the mutex, by calling the <ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph> method, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Das Mutex durch Aufrufen von Freigeben der <ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph> -Methode, die Benutzer benötigen <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph> Zugriff.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The name of the user or group the rule applies to.</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To wait on a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method), a user must have <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Warten auf eine <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (durch Aufrufen der <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> oder <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> Methode), Benutzer benötigen <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph> Zugriff.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To release the mutex, by calling the <ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph> methods, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Das Mutex durch Aufrufen von Freigeben der <ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph> Methoden, die Benutzer benötigen <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph> Zugriff.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>This constructor is equivalent to creating an <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object, by passing <ph id="ph2">`identity`</ph> to the <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, and passing the newly created <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructor.</source>
          <target state="translated">Dieser Konstruktor entspricht dem Erstellen eine <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> -Objekts und durch übergeben <ph id="ph2">`identity`</ph> auf die <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> -Konstruktor übergeben und die neu erstellte <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> -Objekt an die <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The following code example demonstrates the use of this constructor to create <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Konstruktors zum Erstellen <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und zeigt das resultierende Paar von Regeln.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Anschließend können Sie neue Rechte für den aktuellen Benutzer und das Ergebnis wird angezeigt, dass der neuen Rechte mit dem vorhandenen zusammengeführt werden <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is a zero-length string.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is longer than 512 characters.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>Gets the rights allowed or denied by the access rule.</source>
          
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values indicating the rights allowed or denied by the access rule.</source>
          <target state="translated">Eine bitweise Kombination von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> Werte, der angibt, die Rechte durch zugelassen oder verweigert die Zugriffsregel aus.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> -Objekte sind unveränderlich.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>You can create a new access rule representing a different user, different rights, or a different <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, but you cannot modify an existing access rule.</source>
          <target state="translated">Sie können eine neue Zugriffsregel darstellt, ein anderer Benutzer, unterschiedliche Rechte oder ein anderes erstellen <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, aber eine vorhandene Access-Regel kann nicht geändert werden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A&gt;</ph> property to display the rights in the set of rules contained in a <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A&gt;</ph> Eigenschaft, um die Berechtigungen angezeigt werden, in den Satz von Regeln einer <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und zeigt das resultierende Paar von Regeln.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Anschließend können Sie neue Rechte für den aktuellen Benutzer und das Ergebnis wird angezeigt, dass der neuen Rechte mit dem vorhandenen zusammengeführt werden <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>