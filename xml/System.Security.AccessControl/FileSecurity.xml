<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dde3f41dd83993f35478b51061977d9328da16de" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52376059" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type FileSecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Zugriffssteuerung und die Überwachungssicherheit für eine Datei dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSecurity> Klasse gibt an, die Zugriffsrechte für eine Systemdatei und wie Zugriffsversuche überwacht werden.  Diese Klasse stellt Zugriff und Überwachungsrichtlinie als eine Reihe von Regeln dar. Jede Regel für den Anwendungszugriff durch dargestellt wird ein <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt, und jede Überwachungsregel durch dargestellt eine <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt.  
  
 Die <xref:System.Security.AccessControl.FileSecurity> Klasse ist eine Abstraktion der zugrunde liegenden Microsoft Windows Security Dateisystem. In diesem System ist jede Datei eine discretionary Access Control List, Zugriffssteuerungsliste (DACL), die steuert, Zugriff auf die Datei, und eine System-Zugriffssteuerungsliste (SACL), versucht die Access-Steuerelement an, die überwacht werden.  Die <xref:System.Security.AccessControl.FileSystemAccessRule> und <xref:System.Security.AccessControl.FileSystemAuditRule> Klassen, sind Abstraktionen die Zugriffssteuerungseinträge (ACEs), die DACLs und SACLs zu bilden.  
  
 Die <xref:System.Security.AccessControl.FileSecurity> Klasse verbirgt viele der Details von DACLs und SACLs; Sie müssen sich nicht um ACE Sortierung oder null-DACLS kümmern.  
  
 Verwenden der <xref:System.Security.AccessControl.FileSecurity> Klasse abrufen, hinzufügen oder ändern die Zugriffsregeln, die DACL und einer SACL einer Datei darstellen.  
  
 Verwenden, um neue oder geänderte Zugriffs- oder Überwachungsregeln in eine Datei, die <xref:System.IO.FileInfo.SetAccessControl%2A> Methode. Mit der <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode können Zugriffs- oder Überwachungsregeln aus einer vorhandenen Datei abgerufen werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity> Klasse hinzufügen und entfernen Sie dann einen Zugriffssteuerungseintrag für die Zugriffssteuerungsliste (ACL) aus einer Datei.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSecurity" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSecurity" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor zum Erstellen eines leeren <xref:System.Security.AccessControl.FileSecurity> -Objekt, das nicht auf eine vorhandene Datei basiert.  Sie können dann füllen Sie das Objekt mit Informationen zur Zugriffssteuerung und weisen sie eine Datei.  
  
 Sie können Zugriff hinzufügen oder Überwachungsregeln für die <xref:System.Security.AccessControl.FileSecurity> -Objekt unter Verwendung der <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> Methode. Entfernen Sie den Zugriff oder Überwachungsregeln, die mit der <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> Methode.  
  
 Verwenden, um neue oder geänderte Zugriffs- oder Überwachungsregeln in eine Datei, die <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Verwenden Sie zum Abrufen der Zugriff oder Überwachungsregeln aus einer vorhandenen Datei, die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows 2000 oder höher.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="new System.Security.AccessControl.FileSecurity (fileName, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Speicherort einer Datei, aus der ein <see cref="T:System.Security.AccessControl.FileSecurity" />-Objekt erstellt wird.</param>
        <param name="includeSections">Einer der <see cref="T:System.Security.AccessControl.AccessControlSections" />-Werte, der den Typ der abzurufenden Informationen zur Zugriffssteuerungsliste angibt.</param>
        <summary>Initialisiert mithilfe der angegebenen Werte der <see cref="T:System.Security.AccessControl.FileSecurity" />-Enumeration eine neue Instanz der <see cref="T:System.Security.AccessControl.AccessControlSections" />-Klasse aus einer angegebenen Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor ruft die Access Control-Informationen für die angegebene Datei ab und erstellt dann eine <xref:System.Security.AccessControl.FileSecurity> Objekt, das die Informationen kapselt.  Sie können dann überprüfen, hinzufügen oder löschen die Informationen über Steuerelement für die angegebene Datei.  
  
 Sie können Zugriff hinzufügen oder Überwachungsregeln für die <xref:System.Security.AccessControl.FileSecurity> -Objekt unter Verwendung der <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> Methode. Entfernen Sie den Zugriff oder Überwachungsregeln, die mit der <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> Methode.  
  
 Verwenden, um neue oder geänderte Zugriffs- oder Überwachungsregeln in eine Datei, die <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Verwenden Sie zum Abrufen der Zugriff oder Überwachungsregeln aus einer vorhandenen Datei, die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="fileName" />-Parameter ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die im <paramref name="fileName" />-Parameter angegebene Datei wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="path" /> weist ein ungültiges Format auf.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows 2000 oder höher.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">Das aktuelle Systemkonto verfügt nicht über Administratorrechte.</exception>
        <exception cref="T:System.SystemException">Die Datei wurde nicht gefunden.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der <paramref name="fileName" />-Parameter hat eine schreibgeschützte Datei angegeben.  
  
- oder -  
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  
  
- oder -  
Der <paramref name="fileName" />-Parameter hat ein Verzeichnis angegeben.  
  
- oder -  
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">für die Berechtigung zum Zugriff auf die Datei, die gemäß der <paramref name="name" /> Parameter. Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Sicherheitsaktion: bei Bedarf</permission>
        <block subset="none" type="usage"><para>Die <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> -Konstruktor erfordert das aktuelle Konto über Administratorrechte verfügen. Erstellen Sie eine neue Instanz der dem <see cref="T:System.Security.AccessControl.FileSecurity" /> -Klasse für eine bestimmte Datei, die mit einem Konto an, die nicht über Administratorrechte verfügen, verwenden Sie die <see cref="M:System.IO.FileStream.GetAccessControl" /> Methode.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>