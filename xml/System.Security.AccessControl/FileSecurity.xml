<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73d0c275fa23a58059ceec37a0ea565821b4480d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70556841" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type FileSecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Zugriffssteuerung und die Überwachungssicherheit für eine Datei dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSecurity> -Klasse gibt die Zugriffsrechte für eine Systemdatei an und erläutert, wie Zugriffsversuche überwacht werden.  Diese Klasse stellt Zugriffs-und Überwachungsrechte als Regelsatz dar. Jede Zugriffs Regel wird durch ein <xref:System.Security.AccessControl.FileSystemAccessRule> -Objekt dargestellt, während jede Überwachungs Regel durch ein <xref:System.Security.AccessControl.FileSystemAuditRule> -Objekt dargestellt wird.  
  
 Die <xref:System.Security.AccessControl.FileSecurity> -Klasse ist eine Abstraktion des zugrunde liegenden Microsoft Windows-Datei Sicherheitssystems. In diesem System verfügt jede Datei über eine freigegebene Zugriffs Steuerungs Liste (DACL), die den Zugriff auf die Datei steuert, und eine System Zugriffs Steuerungs Liste (SACL), die die überwachten Zugriffs Steuerungs Versuche angibt.  Die <xref:System.Security.AccessControl.FileSystemAccessRule> Klassen <xref:System.Security.AccessControl.FileSystemAuditRule> und sind Abstraktionen der Zugriffs Steuerungs Einträge (ACEs), die DACLs und SACLs umfassen.  
  
 Die <xref:System.Security.AccessControl.FileSecurity> -Klasse verbirgt viele der Details von DACLs und SACLs. Sie müssen sich keine Gedanken über die ACE-Reihenfolge oder null-DACLs machen.  
  
 Verwenden Sie <xref:System.Security.AccessControl.FileSecurity> die-Klasse, um die Zugriffsregeln, die die DACL und die SACL einer Datei darstellen, abzurufen, hinzuzufügen oder zu ändern.  
  
 Verwenden Sie die <xref:System.IO.FileInfo.SetAccessControl%2A> -Methode, um neue oder geänderte Zugriffs-oder Überwachungsregeln in einer Datei beizubehalten. Mit der <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode können Zugriffs- oder Überwachungsregeln aus einer vorhandenen Datei abgerufen werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity> -Klasse zum Hinzufügen und anschließenden Entfernen eines Zugriffs Steuerungs Listen-Eintrags aus einer Datei verwendet.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSecurity" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSecurity" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, wenn Sie ein leeres <xref:System.Security.AccessControl.FileSecurity> Objekt erstellen möchten, das nicht auf einer vorhandenen Datei basiert.  Anschließend können Sie das-Objekt mit Zugriffs Steuerungsinformationen auffüllen und es auf eine Datei anwenden.  
  
 Sie können dem <xref:System.Security.AccessControl.FileSecurity> -Objekt mithilfe der <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> -Methode Zugriffs-und Überwachungsregeln hinzufügen. Mithilfe der <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> -Methode können Sie Zugriffs-und Überwachungsregeln entfernen.  
  
 Verwenden Sie die-Methode oder <xref:System.IO.File.SetAccessControl%2A> <xref:System.IO.FileInfo.SetAccessControl%2A> die-Methode, um neue oder geänderte Zugriffs-oder Überwachungsregeln in einer Datei beizubehalten.  Verwenden Sie die-Methode oder <xref:System.IO.File.GetAccessControl%2A> <xref:System.IO.FileInfo.GetAccessControl%2A> die-Methode, um Zugriffs-und Überwachungsregeln aus einer vorhandenen Datei abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows 2000 oder höher.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="new System.Security.AccessControl.FileSecurity (fileName, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Speicherort einer Datei, aus der ein <see cref="T:System.Security.AccessControl.FileSecurity" />-Objekt erstellt wird.</param>
        <param name="includeSections">Einer der <see cref="T:System.Security.AccessControl.AccessControlSections" />-Werte, der den Typ der abzurufenden Informationen zur Zugriffssteuerungsliste angibt.</param>
        <summary>Initialisiert mithilfe der angegebenen Werte der <see cref="T:System.Security.AccessControl.FileSecurity" />-Enumeration eine neue Instanz der <see cref="T:System.Security.AccessControl.AccessControlSections" />-Klasse aus einer angegebenen Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor ruft die Zugriffs Steuerungsinformationen für die angegebene Datei ab und erstellt dann ein <xref:System.Security.AccessControl.FileSecurity> -Objekt, das diese Informationen kapselt.  Sie können dann die Zugriffs Steuerungsinformationen für die angegebene Datei überprüfen, hinzufügen oder löschen.  
  
 Sie können dem <xref:System.Security.AccessControl.FileSecurity> -Objekt mithilfe der <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> -Methode Zugriffs-und Überwachungsregeln hinzufügen. Mithilfe der <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> -Methode können Sie Zugriffs-und Überwachungsregeln entfernen.  
  
 Verwenden Sie die-Methode oder <xref:System.IO.File.SetAccessControl%2A> <xref:System.IO.FileInfo.SetAccessControl%2A> die-Methode, um neue oder geänderte Zugriffs-oder Überwachungsregeln in einer Datei beizubehalten.  Verwenden Sie die-Methode oder <xref:System.IO.File.GetAccessControl%2A> <xref:System.IO.FileInfo.GetAccessControl%2A> die-Methode, um Zugriffs-und Überwachungsregeln aus einer vorhandenen Datei abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="fileName" />-Parameter ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die im <paramref name="fileName" />-Parameter angegebene Datei wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="path" /> weist ein ungültiges Format auf.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows 2000 oder höher.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">Dem aktuellen Systemkonto sind keine Administratorrechte zugewiesen.</exception>
        <exception cref="T:System.SystemException">Die Datei wurde nicht gefunden.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der <paramref name="fileName" />-Parameter hat eine schreibgeschützte Datei angegeben.  
  
- oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  
  
- oder - 
Der <paramref name="fileName" />-Parameter hat ein Verzeichnis angegeben.  
  
- oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">für die Berechtigung, auf die durch den <paramref name="name" /> -Parameter angegebene Datei zuzugreifen. Zugehörige Enumerationen <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> :,<see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Sicherheitsaktion: Nachfrage</permission>
        <block subset="none" type="usage"><para>Der <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> Konstruktor erfordert, dass das aktuelle Konto über Administratorrechte verfügt. Verwenden Sie die <see cref="M:System.IO.FileStream.GetAccessControl" /> -Methode, um <see cref="T:System.Security.AccessControl.FileSecurity" /> eine neue Instanz der-Klasse für eine bestimmte Datei mit einem Konto zu erstellen, das nicht über Administratorrechte verfügt.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
