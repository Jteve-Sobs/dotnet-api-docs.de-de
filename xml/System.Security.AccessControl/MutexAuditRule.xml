<Type Name="MutexAuditRule" FullName="System.Security.AccessControl.MutexAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="24663a27a2fd28da09977627f0c2460edb2a16fb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37625941" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type MutexAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of access rights to be audited for a user or group. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.MutexAuditRule> Klasse ist einer der einen Satz von Klassen, die .NET Framework bietet, für die Verwaltung von Windows-zugriffssteuerungssicherheit für benannte Systemmutexe. Einen Überblick über diese Klassen und deren Beziehungen zu den zugrunde liegenden Windows Zugriffssteuerungsstrukturen, finden Sie unter <xref:System.Security.AccessControl.MutexSecurity>.  
  
> [!NOTE]
>  Windows-zugriffssteuerungssicherheit ist sinnvoll, nur für benannte Systemmutexe. Wenn eine <xref:System.Threading.Mutex> -Objekt stellt einen lokalen Mutex dar, die Zugriffssteuerung ist irrelevant.  
  
 Verwenden Sie zum Abrufen einer Liste der derzeit auf einen benannten Mutex angewendet Überwachungsregeln der <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> -Methode zum Abrufen einer <xref:System.Security.AccessControl.MutexSecurity> Objekt aus, und klicken Sie dann verwenden die <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> Methode zum Abrufen einer Auflistung von <xref:System.Security.AccessControl.MutexAuditRule> Objekte.  
  
 <xref:System.Security.AccessControl.MutexAuditRule> Objekte werden nicht mit Zugriffssteuerungseinträgen in der zugrunde liegenden discretionary Access Control List (DACL) 1: 1 zugeordnet. Wenn Sie die Gruppe erhalten alle Überwachungsregeln für einen Mutex, die Gruppe enthält die minimale Anzahl von Regeln, die derzeit zur alle Zugriffssteuerungseinträge erforderlich.  
  
> [!NOTE]
>  Die zugrunde liegenden Zugriffssteuerungseinträge ändern, wie Sie Regeln anwenden oder entfernen. Wenn möglich, wird die Informationen in den Regeln zusammengeführt, um die kleinste Anzahl von Einträgen zu gewährleisten. Daher, wenn Sie die aktuelle Liste der Regeln lesen, es sieht möglicherweise nicht genau wie die Liste aller Regeln, die Sie hinzugefügt haben.  
  
 Verwendung <xref:System.Security.AccessControl.MutexAuditRule> Objekte an die Zugriffsrechte für einen Benutzer oder eine Gruppe überwacht werden müssen. Verwenden Sie zum Anwenden einer Regelsatzes auf einen benannten Systemmutex der <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> -Methode zum Abrufen der <xref:System.Security.AccessControl.MutexSecurity> Objekt. Ändern der <xref:System.Security.AccessControl.MutexSecurity> -Objekt mithilfe seiner Methoden auf die Regel hinzuzufügen, und verwenden Sie dann die <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> Methode, um das Sicherheitsobjekt erneut anzufügen.  
  
> [!IMPORTANT]
>  Änderungen an einer <xref:System.Security.AccessControl.MutexSecurity> Objekt haben keine Auswirkungen auf die Zugriffsebenen der benannte Mutex bis zum Aufruf der <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> Methode, um das geänderte Sicherheitsobjekt auf den benannten Mutex zuzuweisen.  
  
 <xref:System.Security.AccessControl.MutexAuditRule> -Objekte sind unveränderlich. Sicherheit für ein Mutex wird geändert, die mithilfe der Methoden der der <xref:System.Security.AccessControl.MutexSecurity> -Klasse zum Hinzufügen oder entfernen, wie Sie dies tun, werden die zugrunde liegenden Zugriffssteuerungseinträge geändert.  
  
> [!NOTE]
>  Sicherheit auf Synchronisierungsobjekte ist für Windows 98 oder Windows Millennium Edition nicht unterstützt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.MutexAuditRule" Usage="new System.Security.AccessControl.MutexAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the kinds of access to audit.</param>
        <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAuditRule" /> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Erstellen einer <xref:System.Security.Principal.NTAccount> -Objekt aus einer Zeichenfolge, die einen Benutzer- oder Gruppennamen ein darstellt, verwenden Sie die <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="flags" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="eventRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be translated to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the access rights affected by the audit rule.</summary>
        <value>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" /> Werte, die die von der Überwachungsregel betroffenen Rechte angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule> -Objekte sind unveränderlich. Sie können eine neue Überwachungsregel darstellt, ein anderer Benutzer, unterschiedliche Rechte oder eine andere Kombination von erstellen <xref:System.Security.AccessControl.AuditFlags> Flags, aber Sie können nicht geändert werden eine vorhandene Überwachungsregel.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>