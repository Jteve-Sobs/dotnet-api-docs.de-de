<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e21886a4b45b688e728a3a9ad6e34ea05f5007e4" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78833439" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="Microsoft.Win32.Registry.AccessControl" FromVersion="4.0.3.0" To="Microsoft.Win32.Registry" ToVersion="4.1.1.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
    <TypeForwarding From="Microsoft.Win32.Registry.AccessControl" FromVersion="4.0.4.0" To="Microsoft.Win32.Registry" ToVersion="4.1.2.0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0" />
    <TypeForwarding From="Microsoft.Win32.Registry.AccessControl" FromVersion="4.0.5.0" To="Microsoft.Win32.Registry" ToVersion="4.1.3.0" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Reihe von Zugriffsrechten eines Benutzers oder einer Gruppe dar, die überwacht werden soll. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.RegistryAuditRule>-Klasse gehört zu einer Reihe von Klassen, die die-.NET Framework zur Verwaltung der Windows-Zugriffs Steuerungs Sicherheit für Registrierungsschlüssel bereitstellt. Eine Übersicht über diese Klassen und ihre Beziehungen zu den zugrunde liegenden Windows-Zugriffs Steuerungsstrukturen finden Sie unter <xref:System.Security.AccessControl.RegistrySecurity>.  
  
> [!NOTE]
>  Die Windows-Zugriffs Steuerungs Sicherheit kann nur auf Registrierungsschlüssel angewendet werden. Sie kann nicht auf einzelne Schlüssel-Wert-Paare angewendet werden, die in einem Schlüssel gespeichert sind.  
  
 Verwenden Sie zum Abrufen einer Liste der zurzeit auf einen Registrierungsschlüssel angewendeten Überwachungsregeln die <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>-Methode, um ein <xref:System.Security.AccessControl.RegistrySecurity> Objekt abzurufen, und verwenden Sie dann die <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>-Methode, um eine Auflistung von <xref:System.Security.AccessControl.RegistryAuditRule> Objekten abzurufen.  
  
 <xref:System.Security.AccessControl.RegistryAuditRule> Objekte ordnen Sie der Zugriffs Steuerungs Liste (DACL) nicht eins zu eins zu. Wenn Sie den Satz aller Überwachungsregeln für einen Registrierungsschlüssel abrufen, enthält die Gruppe die Mindestanzahl von Regeln, die derzeit erforderlich sind, um alle Zugriffs Steuerungs Einträge auszudrücken.  
  
> [!NOTE]
>  Die zugrunde liegenden Zugriffs Steuerungs Einträge ändern sich, wenn Sie Regeln anwenden und entfernen. Die Informationen in den Regeln werden nach Möglichkeit zusammengeführt, um die kleinste Anzahl von Zugriffs Steuerungs Einträgen beizubehalten. Wenn Sie also die aktuelle Liste der Regeln lesen, sieht Sie möglicherweise nicht genau wie die Liste aller von Ihnen hinzugefügten Regeln aus.  
  
 Verwenden Sie <xref:System.Security.AccessControl.RegistryAuditRule> Objekte, um die Zugriffsrechte anzugeben, die für einen Benutzer oder eine Gruppe überwacht werden sollen. Um eine Regel auf einen Registrierungsschlüssel anzuwenden, verwenden Sie die <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>-Methode, um das <xref:System.Security.AccessControl.RegistrySecurity>-Objekt zu erhalten. Ändern Sie das <xref:System.Security.AccessControl.RegistrySecurity> Objekt, indem Sie die zugehörigen Methoden zum Hinzufügen der Regel verwenden, und verwenden Sie dann die <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>-Methode, um das Sicherheits Objekt erneut anzufügen.  
  
> [!IMPORTANT]
>  Änderungen, die Sie an einem <xref:System.Security.AccessControl.RegistrySecurity> Objekt vornehmen, wirken sich nicht auf die Zugriffsebenen des Registrierungsschlüssels aus, bis Sie die <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>-Methode aufrufen, um das geänderte Sicherheits Objekt dem Registrierungsschlüssel zuzuweisen.  
  
 <xref:System.Security.AccessControl.RegistryAuditRule> Objekte sind unveränderlich. Die Sicherheit für einen Registrierungsschlüssel wird mithilfe der Methoden der <xref:System.Security.AccessControl.RegistrySecurity>-Klasse geändert, um Regeln hinzuzufügen oder zu entfernen. Dabei werden die zugrunde liegenden Zugriffs Steuerungs Einträge geändert.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.RegistryAuditRule" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, registryRights As RegistryRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
        <param name="registryRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.RegistryRights" />-Werten, die die Art der zu überwachenden Zugriffe angibt.</param>
        <param name="inheritanceFlags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Werten, die angeben, ob die Überwachungsregel für Unterschlüssel des aktuellen Schlüssels gilt.</param>
        <param name="propagationFlags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.PropagationFlags" />-Werten, die Auswirkungen auf die Weitergabe einer geerbten Überwachungsregel an Unterschlüssel des aktuellen Schlüssels hat.</param>
        <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angibt, ob Erfolgs- oder Fehlerüberwachung oder beides stattfinden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.RegistryAuditRule" />-Klasse. Dabei wird der Benutzer bzw. die Gruppe angegeben, der bzw. die überwacht werden soll sowie die Rechte, die überwacht werden sollen. Außerdem wird angegeben, ob Vererbung berücksichtigt werden soll und ob Erfolge, Fehler oder beides überwacht werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Registrierungsschlüssel sind Container, sodass das einzige Vererbungs Flag, das für Registrierungsschlüssel sinnvoll ist, das <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>-Flag ist. Wenn dieses Flag nicht angegeben wird, werden die Weitergabeflags ignoriert, und nur die unmittelbare Taste ist betroffen. Wenn das-Flag vorhanden ist, wird die Regel weitergegeben, wie in der folgenden Tabelle dargestellt. In der Tabelle wird davon ausgegangen, dass es sich um untergeordnete Unterschlüssel und untergeordnete Unterschlüssel-GS handelt. Das heißt, der Pfad für den Unterschlüssel für den untergeordneten untergeordneten Schlüssel lautet S\CS\GS.  
  
|Propagierungs Flags|S|CS|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|X|X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|X|X||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X||  
  
 Das Muster für den Unterschlüssel für den zweiten untergeordneten Schlüssel regelt alle Unterschlüssel, die im Unterschlüssel für den untergeordneten untergeordneten Schlüssel  
  
 Wenn z. b. das <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>-Flag für `inheritanceFlags` angegeben wird und das <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagierungs Kennzeichen für `propagationFlags`angegeben ist, gilt diese Regel nicht für den unmittelbaren Unterschlüssel, sondern für alle unmittelbar untergeordneten Unterschlüssel und für alle untergeordneten Schlüssel, die Sie enthalten.  
  
> [!NOTE]
>  Sie können zwar das <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>-Flag für `inheritanceFlags`angeben, es gibt aber keinen Punkt. Für den Zweck der Zugriffs Steuerung sind die Name-Wert-Paare in einem Unterschlüssel keine separaten Objekte. Die Zugriffsrechte für Name/Wert-Paare werden durch die Rechte des unter Schlüssels gesteuert. Da es sich bei allen unter Schlüsseln um Container handelt (d. h., Sie können andere Unterschlüssel enthalten), werden Sie von der <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>-Flag nicht beeinträchtigt. Wenn Sie das <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>-Flag angeben, wird die Wartung von Regeln unnötig erschwert, da es die normale Kombination von kompatiblen Regeln beeinträchtigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="flags" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="inheritanceFlags" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="propagationFlags" /> gibt einen ungültigen Wert an.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="registryRights" /> ist 0 (null).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, registryRights As RegistryRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Der Name des Benutzers oder der Gruppe, für den bzw. die die Regel gilt.</param>
        <param name="registryRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.RegistryRights" />-Werten, die die Art der zu überwachenden Zugriffe angibt.</param>
        <param name="inheritanceFlags">Eine Kombination von <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Flags, die angibt, ob die Überwachungsregel für Unterschlüssel des aktuellen Schlüssels gilt.</param>
        <param name="propagationFlags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.PropagationFlags" />-Flags, die angibt, ob die Überwachungsregel an Unterschlüssel des aktuellen Schlüssels weitergegeben wird.</param>
        <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angibt, ob Erfolgs- oder Fehlerüberwachung oder beides stattfinden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.RegistryAuditRule" />-Klasse. Dabei wird der Name des Benutzers bzw. der Gruppe angegeben, der bzw. die überwacht werden soll. Außerdem wird angegeben, ob Vererbung berücksichtigt werden soll und ob Erfolge, Fehler oder beides überwacht werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Registrierungsschlüssel sind Container, sodass das einzige Vererbungs Flag, das für Registrierungsschlüssel sinnvoll ist, das <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>-Flag ist. Wenn dieses Flag nicht angegeben wird, werden die Weitergabeflags ignoriert, und nur die unmittelbare Taste ist betroffen. Wenn das-Flag vorhanden ist, wird die Regel weitergegeben, wie in der folgenden Tabelle dargestellt. In der Tabelle wird davon ausgegangen, dass es sich um untergeordnete Unterschlüssel und untergeordnete Unterschlüssel-GS handelt. Das heißt, der Pfad für den Unterschlüssel für den untergeordneten untergeordneten Schlüssel lautet S\CS\GS.  
  
|Propagierungs Flags|S|CS|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|X|X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|X|X||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X||  
  
 Das Muster für den Unterschlüssel für den zweiten untergeordneten Schlüssel regelt alle Unterschlüssel, die im Unterschlüssel für den untergeordneten untergeordneten Schlüssel  
  
 Wenn z. b. das <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>-Flag für `inheritanceFlags` angegeben wird und das <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagierungs Kennzeichen für `propagationFlags`angegeben ist, gilt diese Regel nicht für den unmittelbaren Unterschlüssel, sondern für alle unmittelbar untergeordneten Unterschlüssel und für alle untergeordneten Schlüssel, die Sie enthalten.  
  
> [!NOTE]
>  Sie können zwar das <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>-Flag für `inheritanceFlags`angeben, es gibt aber keinen Punkt. Für den Zweck der Zugriffs Steuerung sind die Name-Wert-Paare in einem Unterschlüssel keine separaten Objekte. Die Zugriffsrechte für Name/Wert-Paare werden durch die Rechte des unter Schlüssels gesteuert. Da es sich bei allen unter Schlüsseln um Container handelt (d. h., Sie können andere Unterschlüssel enthalten), werden Sie von der <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>-Flag nicht beeinträchtigt. Wenn Sie das <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>-Flag angeben, wird die Wartung von Regeln unnötig erschwert, da es die normale Kombination von kompatiblen Regeln beeinträchtigt.  
  
 Dieser Konstruktor entspricht dem Erstellen eines <xref:System.Security.Principal.NTAccount> Objekts, indem er `identity` an den <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>-Konstruktor übergibt und das neu erstellte <xref:System.Security.Principal.NTAccount> Objekt an den <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29>-Konstruktor übergibt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="flags" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="inheritanceFlags" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="propagationFlags" /> gibt einen ungültigen Wert an.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="registryRights" /> ist 0 (null).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="identity" /> ist eine Zeichenfolge mit der Länge 0 (null).  
  
- oder - 
 <paramref name="identity" /> ist länger als 512 Zeichen.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von der Überwachungsregel betroffenen Zugriffsrechte ab.</summary>
        <value>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.RegistryRights" />-Werten, die die von der Überwachungsregel betroffenen Rechte angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule> Objekte sind unveränderlich. Sie können eine neue Überwachungs Regel erstellen, die einen anderen Benutzer, andere Rechte oder eine andere Kombination aus <xref:System.Security.AccessControl.AuditFlags> Flags darstellt, aber Sie können eine vorhandene Überwachungs Regel nicht ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
