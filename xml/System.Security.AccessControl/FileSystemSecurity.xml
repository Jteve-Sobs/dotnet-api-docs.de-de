<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54cc7e7155d6489aed8bc8132962d577f1707973" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75081686" /></Metadata><TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Zugriffssteuerung und die Überwachungssicherheit für eine Datei oder ein Verzeichnis dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity>-Klasse ist die Basisklasse für die Klassen <xref:System.Security.AccessControl.FileSecurity> und <xref:System.Security.AccessControl.DirectorySecurity>.  Diese Klassen stellen alle Zugriffsrechte für eine Systemdatei oder ein Verzeichnis dar und definieren, wie Zugriffsversuche überwacht werden.  
  
 Die <xref:System.Security.AccessControl.FileSystemSecurity>-Klasse stellt Zugriffs-und Überwachungsrechte als Regelsatz dar. Jede Zugriffs Regel wird durch ein <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt dargestellt, während jede Überwachungs Regel durch ein <xref:System.Security.AccessControl.FileSystemAuditRule>-Objekt dargestellt wird.  
  
 Die <xref:System.Security.AccessControl.FileSystemSecurity>-Klasse ist eine Abstraktion des zugrunde liegenden Microsoft Windows-Datei Sicherheitssystems. In diesem System verfügt jede Datei bzw. jedes Verzeichnis über eine freigegebene Zugriffs Steuerungs Liste (DACL), die den Zugriff auf die Datei oder das Verzeichnis steuert, sowie eine System Zugriffs Steuerungs Liste (SACL), die die überwachten Zugriffs Steuerungs Versuche angibt.  Die Klassen <xref:System.Security.AccessControl.FileSystemAccessRule> und <xref:System.Security.AccessControl.FileSystemAuditRule> sind Abstraktionen von Zugriffs Steuerungs Einträgen (ACEs), die DACLs und SACLs umfassen.  
  
 Die <xref:System.Security.AccessControl.FileSystemSecurity>-Klasse verbirgt viele der Details von DACLs und SACLs. Sie müssen sich keine Gedanken über die ACE-Reihenfolge oder null-DACLs machen.  
  
 Wenn Sie neue oder geänderte Zugriffs Steuerungs Listen-Informationen in einer Datei speichern möchten, verwenden Sie die <xref:System.IO.File.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode.  Verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode, um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A>-oder <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die Methode <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity>-Klasse zum Hinzufügen und anschließenden Entfernen eines Zugriffs Steuerungs Listen-Eintrags aus einer Datei verwendet.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Enumeration ab, mit deren Hilfe die <see cref="T:System.Security.AccessControl.FileSystemSecurity" />-Klasse Zugriffsrechte darstellt.</summary>
        <value>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.FileSystemRights" />-Enumeration darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von der <xref:System.Security.AccessControl.FileSystemSecurity>-Klasse abgeleitet werden, überschreiben die <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A>-Eigenschaft und geben den Typ zurück, den Sie zum Darstellen von Zugriffsrechten Wenn Sie mit Arrays oder Auflistungen arbeiten, die mehrere Typen von Sicherheits Objekten enthalten, verwenden Sie diese Eigenschaft, um den korrekten Enumerationstyp zu bestimmen, der für jedes Sicherheits Objekt verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Ein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt, das ein Benutzerkonto darstellt.</param>
        <param name="accessMask">Eine ganze Zahl, die einen Zugriffstyp angibt.</param>
        <param name="isInherited"><see langword="true" />, wenn die Zugriffsregel geerbt wurde, andernfalls <see langword="false" />.</param>
        <param name="inheritanceFlags">Einer der <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Werte, der angibt, wie Zugriffsmasken an untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Einer der <see cref="T:System.Security.AccessControl.PropagationFlags" />-Werte, der angibt, wie ACEs an untergeordnete Objekte weitergegeben werden.</param>
        <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, der angibt, ob der Zugriff zulässig ist oder verweigert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse, die eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung darstellt.</summary>
        <returns>Ein neues <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die empfohlene Vorgehensweise zum Erstellen von Zugriffs Steuerungs Regeln ist die Verwendung der Konstruktoren der <xref:System.Security.AccessControl.FileSystemAccessRule>-Klasse.  
  
 Der Rückgabetyp der <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> Methode ist die Basisklasse, <xref:System.Security.AccessControl.AccessRule>, aber der Rückgabewert kann sicher in die abgeleitete Klasse umgewandelt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Parameter <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> und <paramref name="type" /> geben einen ungültigen Wert an.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identityReference" />-Parameter ist <see langword="null" />.  
  
- oder - 
Der <paramref name="accessMask" />-Parameter ist 0 (null).</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="identityReference" />-Parameter ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Enumeration ab, mit deren Hilfe die <see cref="T:System.Security.AccessControl.FileSystemSecurity" />-Klasse Zugriffsregeln darstellt.</summary>
        <value>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von der <xref:System.Security.AccessControl.FileSystemSecurity> Klasse abgeleitet werden, überschreiben die <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A>-Eigenschaft und geben den Typ zurück, den Sie zum Darstellen von Zugriffsregeln verwenden Wenn Sie mit Arrays oder Auflistungen arbeiten, die mehrere Typen von Sicherheits Objekten enthalten, verwenden Sie diese Eigenschaft, um den korrekten Zugriffs Regeltyp zu bestimmen, der für jedes Sicherheits Objekt verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die einer Datei oder einem Verzeichnis hinzugefügt werden soll.</param>
        <summary>Fügt der aktuellen Datei bzw. dem aktuellen Verzeichnis die angegebene ACL-Berechtigung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>-Methode fügt der Liste der Regeln, die in einem <xref:System.Security.AccessControl.FileSystemSecurity>-Objekt enthalten sind, eine neue Regel hinzu.  
  
 Wenn eine Zugriffs Steuerungs Liste (Access Control List, ACL) für die angegebene Regel bereits vorhanden ist, wird die Regel von der <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> Methode trotzdem hinzugefügt, mit einer Ausnahme: ein <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt, das mit dem <xref:System.Security.AccessControl.AccessControlType.Deny>-Enumerationswert erstellt wurde, ersetzt ein mit dem <xref:System.Security.AccessControl.AccessControlType.Allow> Enumerationswert erstelltes Objekt  
  
 Um neue oder geänderte ACL-Informationen in einer Datei beizubehalten, verwenden Sie die <xref:System.IO.File.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode.  Verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode, um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A>-oder <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die Methode <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 Wenn Sie eine Zugriffs Regel hinzufügen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag festzulegen, wird das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag automatisch Ihrer Regel hinzugefügt.  Wenn Sie die Regel später entfernen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag anzugeben, wird das Flag automatisch entfernt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity>-Klasse zum Hinzufügen und anschließenden Entfernen eines Zugriffs Steuerungs Listen-Eintrags aus einer Datei verwendet.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die einer Datei oder einem Verzeichnis hinzugefügt werden soll.</param>
        <summary>Fügt der aktuellen Datei bzw. dem aktuellen Verzeichnis die angegebene Überwachungsregel hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>-Methode fügt der Liste der Regeln, die in einem <xref:System.Security.AccessControl.FileSystemSecurity>-Objekt enthalten sind, eine neue Überwachungs Regel hinzu.  
  
 Wenn eine Überwachungs Regel für die angegebene Regel bereits vorhanden ist, wird die Regel von der <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> Methode weiterhin hinzugefügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>-Methode verwendet, um einer Datei eine Überwachungs Regel hinzuzufügen und die-<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>-Methode zu verwenden, um die Überwachungs Regel aus der Datei zu entfernen.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Ein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt, das ein Benutzerkonto darstellt.</param>
        <param name="accessMask">Eine ganze Zahl, die einen Zugriffstyp angibt.</param>
        <param name="isInherited"><see langword="true" />, wenn die Zugriffsregel geerbt wurde, andernfalls <see langword="false" />.</param>
        <param name="inheritanceFlags">Einer der <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Werte, der angibt, wie Zugriffsmasken an untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Einer der <see cref="T:System.Security.AccessControl.PropagationFlags" />-Werte, der angibt, wie ACEs an untergeordnete Objekte weitergegeben werden.</param>
        <param name="flags">Einer der <see cref="T:System.Security.AccessControl.AuditFlags" />-Werte, der den Typ der auszuführenden Überwachung angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Klasse, die die angegebene Überwachungsregel für den angegebenen Benutzer darstellt.</summary>
        <returns>Ein neues <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das die angegebene Überwachungsregel für den angegebenen Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die empfohlene Vorgehensweise zum Erstellen von Überwachungsregeln ist die Verwendung der Konstruktoren der <xref:System.Security.AccessControl.FileSystemAuditRule>-Klasse.  
  
 Der Rückgabetyp der <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> Methode ist die Basisklasse, <xref:System.Security.AccessControl.AuditRule>, aber der Rückgabewert kann sicher in die abgeleitete Klasse umgewandelt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaften <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> und <paramref name="flags" /> geben einen ungültigen Wert an.</exception>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="identityReference" />-Eigenschaft ist <see langword="null" />.  
  
- oder - 
Der Wert der <paramref name="accessMask" />-Eigenschaft ist 0 (null).</exception>
        <exception cref="T:System.ArgumentException">Die <paramref name="identityReference" />-Eigenschaft ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.FileSystemSecurity" />-Klasse Überwachungsregeln darstellt.</summary>
        <value>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Klasse darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von der <xref:System.Security.AccessControl.FileSystemSecurity> Klasse abgeleitet werden, überschreiben die <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A>-Eigenschaft und geben den Typ zurück, den Sie zur Darstellung von Überwachungs rechten verwenden Wenn Sie mit Arrays oder Auflistungen arbeiten, die mehrere Typen von Sicherheits Objekten enthalten, verwenden Sie diese Eigenschaft, um den richtigen Überwachungs Regeltyp zu bestimmen, der für jedes Sicherheits Objekt verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die aus einer Datei oder einem Verzeichnis entfernt werden soll.</param>
        <summary>Entfernt alle entsprechenden Allow- oder Deny-ACL-Berechtigungen aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <returns><see langword="true" />, wenn die Zugriffsregel entfernt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>-Methode entfernt entweder alle übereinstimmenden <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriffsregeln oder alle übereinstimmenden <xref:System.Security.AccessControl.AccessControlType.Allow> Zugriffsregeln aus dem aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Sie können mit dieser Methode beispielsweise alle <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriffsregeln für einen Benutzer entfernen, indem Sie ein <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt übergeben, das mit dem <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, dem <xref:System.Security.AccessControl.FileSystemRights.Read> Wert und einem Benutzerkonto erstellt wurde.  Wenn Sie dies tun, entfernt die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>-Methode alle Verweigerungs Regeln, die den <xref:System.Security.AccessControl.FileSystemRights.Read> Wert oder den <xref:System.Security.AccessControl.FileSystemRights.Write> Wert angeben.  
  
 Wenn Sie neue oder geänderte Zugriffs Steuerungs Listen-Informationen in einer Datei speichern möchten, verwenden Sie die <xref:System.IO.File.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode.  Verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode, um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A>-oder <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die Methode <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 Wenn Sie eine Zugriffs Regel hinzufügen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag festzulegen, wird das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag automatisch Ihrer Regel hinzugefügt.  Wenn Sie die Regel später entfernen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag anzugeben, wird das Flag automatisch entfernt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity>-Klasse zum Hinzufügen und anschließenden Entfernen eines Zugriffs Steuerungs Listen-Eintrags aus einer Datei verwendet.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das einen Benutzer angibt, dessen ACL-Berechtigungen aus einer Datei oder einem Verzeichnis entfernt werden sollen.</param>
        <summary>Entfernt alle ACL-Berechtigungen für den angegebenen Benutzer aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A>-Methode entfernt alle Zugriffs Steuerungs Listen-Berechtigungen für den angegebenen Benutzer.  Die-Methode ignoriert alle Werte im <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt mit Ausnahme des Benutzerkontos.  
  
 Um neue oder geänderte ACL-Informationen in einer Datei beizubehalten, verwenden Sie die <xref:System.IO.File.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode.  Verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode, um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A>-oder <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die Methode <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 Wenn Sie eine Zugriffs Regel hinzufügen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag festzulegen, wird das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag automatisch Ihrer Regel hinzugefügt.  Wenn Sie die Regel später entfernen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag anzugeben, wird das Flag automatisch entfernt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das einen Benutzer angibt, dessen ACL-Berechtigungen aus einer Datei oder einem Verzeichnis entfernt werden sollen.</param>
        <summary>Entfernt eine einzelne entsprechende Allow- oder Deny-ACL-Berechtigung zum Gewähren oder Verweigern aus der aktuellen Datei bzw. dem Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A>-Methode entfernt die angegebene <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriffs Regel oder die angegebene übereinstimmende <xref:System.Security.AccessControl.AccessControlType.Allow> Zugriffs Regel aus dem aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Beispielsweise können Sie mit dieser Methode eine angegebene <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriffs Regel für einen Benutzer entfernen, indem Sie ein <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt übergeben, das mit dem <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, dem <xref:System.Security.AccessControl.FileSystemRights.Read> Wert und einem Benutzerkonto erstellt wurde.  Wenn Sie dies tun, entfernt die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A>-Methode nur die Ablehnungs Regel, die den <xref:System.Security.AccessControl.FileSystemRights.Read> Wert angibt.  Ablehnungs Regeln, die den <xref:System.Security.AccessControl.FileSystemRights.Write> Wert angeben, werden nicht entfernt.  
  
 Wenn Sie neue oder geänderte Zugriffs Steuerungs Listen-Informationen in einer Datei speichern möchten, verwenden Sie die <xref:System.IO.File.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode.  Verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode, um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A>-oder <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die Methode <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 Wenn Sie eine Zugriffs Regel hinzufügen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag festzulegen, wird das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag automatisch Ihrer Regel hinzugefügt.  Wenn Sie die Regel später entfernen, ohne das <xref:System.Security.AccessControl.FileSystemRights.Synchronize>-Flag anzugeben, wird das Flag automatisch entfernt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die aus einer Datei oder einem Verzeichnis entfernt werden soll.</param>
        <summary>Entfernt alle entsprechenden Allow- oder Deny-Überwachungsregeln aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <returns><see langword="true" />, wenn die Überwachungsregel entfernt wurde, andernfalls <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>-Methode entfernt entweder alle übereinstimmenden <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachungsregeln oder alle übereinstimmenden <xref:System.Security.AccessControl.AccessControlType.Allow> Überwachungsregeln aus dem aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Mit dieser Methode können Sie beispielsweise alle <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachungsregeln für einen Benutzer entfernen, indem Sie ein <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt übergeben, das mit dem <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, dem <xref:System.Security.AccessControl.AuditFlags.Failure> Wert und einem Benutzerkonto erstellt wurde.  Wenn Sie dies tun, entfernt die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>-Methode alle Verweigerungs Regeln, die den <xref:System.Security.AccessControl.AuditFlags.Failure> Wert oder den <xref:System.Security.AccessControl.AuditFlags.Success> Wert angeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>-Methode verwendet, um einer Datei eine Überwachungs Regel hinzuzufügen und die-<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>-Methode zu verwenden, um die Überwachungs Regel aus der Datei zu entfernen.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das einen Benutzer angibt, dessen Überwachungsregeln aus einer Datei oder einem Verzeichnis entfernt werden sollen.</param>
        <summary>Entfernt alle Überwachungsregeln für den angegebenen Benutzer aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A>-Methode entfernt alle Überwachungsregeln für den angegebenen Benutzer.  Sie ignoriert alle Werte im <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt mit Ausnahme des Benutzerkontos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die aus einer Datei oder einem Verzeichnis entfernt werden soll.</param>
        <summary>Entfernt eine einzelne entsprechende Allow- oder Deny-Überwachungsregel aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A>-Methode entfernt die angegebene übereinstimmende <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachungs Regel oder die angegebene übereinstimmende <xref:System.Security.AccessControl.AccessControlType.Allow> Überwachungs Regel aus dem aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Beispielsweise können Sie mit dieser Methode eine angegebene <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachungs Regel für einen Benutzer entfernen, indem Sie ein <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt übergeben, das mit dem <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, dem <xref:System.Security.AccessControl.AuditFlags.Failure> Wert und einem Benutzerkonto erstellt wurde.  Wenn Sie dies tun, entfernt die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A>-Methode nur eine Ablehnungs Regel, die den <xref:System.Security.AccessControl.AuditFlags.Failure> Wert angibt.  Ablehnungs Regeln, die den <xref:System.Security.AccessControl.AuditFlags.Success> Wert angeben, werden nicht entfernt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die einer Datei oder einem Verzeichnis hinzugefügt werden soll.</param>
        <summary>Fügt der aktuellen Datei bzw. dem aktuellen Verzeichnis die angegebene ACL-Berechtigung hinzu und entfernt alle entsprechenden ACL-Berechtigungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>-Methode fügt die angegebene ACL-Regel hinzu oder überschreibt alle identischen ACL-Regeln, die mit dem `rule`-Parameter übereinstimmen.  Wenn der `rule`-Parameter z. b. einen <xref:System.Security.AccessControl.FileSystemRights.Read> Wert angibt und die <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>-Methode eine identische ACL-Regel findet, die den <xref:System.Security.AccessControl.FileSystemRights.Read> Wert angibt, wird die identische Regel überschrieben.  Wenn die <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>-Methode eine identische ACL-Regel findet, die den <xref:System.Security.AccessControl.FileSystemRights.Write> Wert angibt, wird auch die identische Regel überschrieben.  
  
 Um neue oder geänderte ACL-Informationen in einer Datei beizubehalten, verwenden Sie die <xref:System.IO.File.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode.  Verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode, um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A>-oder <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die Methode <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die für eine Datei oder ein Verzeichnis festgelegt werden soll.</param>
        <summary>Legt die angegebene ACL-Berechtigung für die aktuelle Datei bzw. das aktuelle Verzeichnis fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>-Methode fügt die angegebene ACL-Regel hinzu oder überschreibt alle identischen ACL-Regeln, die mit dem <xref:System.Security.AccessControl.FileSystemRights> Wert des `rule`-Parameters übereinstimmen.  Wenn der `rule`-Parameter z. b. einen <xref:System.Security.AccessControl.FileSystemRights.Read> Wert angibt und die <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>-Methode eine identische ACL-Regel findet, die den <xref:System.Security.AccessControl.FileSystemRights.Read> Wert angibt, wird die identische Regel überschrieben.  Wenn die <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>-Methode eine identische ACL-Regel findet, die den <xref:System.Security.AccessControl.FileSystemRights.Write> Wert angibt, wird die identische Regel nicht überschrieben.  
  
 Um neue oder geänderte ACL-Informationen in einer Datei beizubehalten, verwenden Sie die <xref:System.IO.File.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode.  Verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A>-oder <xref:System.IO.FileInfo.SetAccessControl%2A>-Methode, um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A>-oder <xref:System.IO.FileInfo.GetAccessControl%2A>-Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die Methode <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die für eine Datei oder ein Verzeichnis festgelegt werden soll.</param>
        <summary>Legt die angegebene Überwachungsregel für die aktuelle Datei bzw. das aktuelle Verzeichnis fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>-Methode fügt die angegebene Überwachungs Regel hinzu oder überschreibt alle identischen Überwachungsregeln, die mit dem <xref:System.Security.AccessControl.FileSystemRights> Wert des `rule`-Parameters übereinstimmen.  Wenn der `rule`-Parameter z. b. einen <xref:System.Security.AccessControl.FileSystemRights.Read> Wert angibt und die <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>-Methode eine identische Überwachungs Regel findet, die den <xref:System.Security.AccessControl.FileSystemRights.Read> Wert angibt, wird die identische Regel überschrieben.  Wenn die <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>-Methode eine identische Überwachungs Regel findet, die den <xref:System.Security.AccessControl.FileSystemRights.Write> Wert angibt, wird die identische Regel nicht überschrieben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
