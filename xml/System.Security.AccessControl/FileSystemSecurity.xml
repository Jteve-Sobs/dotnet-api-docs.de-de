<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ed70231f637f02824c4e79226b8f2d17770a738" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46680809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Zugriffssteuerung und die Überwachungssicherheit für eine Datei oder ein Verzeichnis dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity> -Klasse ist die Basisklasse für die <xref:System.Security.AccessControl.FileSecurity> und <xref:System.Security.AccessControl.DirectorySecurity> Klassen.  Diese Klassen alle Auswirkungen auf die Zugriffsrechte für eine Systemdatei oder ein Verzeichnis darstellen, und definieren, wie Zugriffsversuche überwacht werden.  
  
 Die <xref:System.Security.AccessControl.FileSystemSecurity> Klasse stellt Zugriffs- und Überwachungsregeln Rechte als ein Satz von Regeln dar. Jede Regel für den Anwendungszugriff durch dargestellt wird ein <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt, und jede Überwachungsregel durch dargestellt eine <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt.  
  
 Die <xref:System.Security.AccessControl.FileSystemSecurity> Klasse ist eine Abstraktion der zugrunde liegenden Microsoft Windows Security Dateisystem. In diesem System verwendet jede Datei oder das Verzeichnis verfügt über eine discretionary Access Control List, Zugriffssteuerungsliste (DACL), mit denen der Zugriff auf die Datei oder Verzeichnis gesteuert, und eine System-Zugriffssteuerungsliste (SACL), versucht die Access-Steuerelement an, die überwacht werden.  Die <xref:System.Security.AccessControl.FileSystemAccessRule> und <xref:System.Security.AccessControl.FileSystemAuditRule> Klassen, sind Abstraktionen der Zugriffssteuerungseinträge (ACEs), die DACLs und SACLs zu bilden.  
  
 Die <xref:System.Security.AccessControl.FileSystemSecurity> Klasse verbirgt viele Details von DACLs und SACLs; Sie müssen sich nicht um ACE Sortierung oder null-DACLS kümmern.  
  
 Behalten Sie neue oder geänderte Zugriffssteuerungsliste (ACL) Informationen in eine Datei mithilfe der <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten, verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity> Klasse hinzufügen und entfernen Sie dann einen Zugriffssteuerungseintrag für die Zugriffssteuerungsliste (ACL) aus einer Datei.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Enumeration ab, mit deren Hilfe die <see cref="T:System.Security.AccessControl.FileSystemSecurity" />-Klasse Zugriffsrechte darstellt.</summary>
        <value>Ein <see cref="T:System.Type" /> Objekt darstellt. die <see cref="T:System.Security.AccessControl.FileSystemRights" /> Enumeration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Klassen die <xref:System.Security.AccessControl.FileSystemSecurity> Klasse außer Kraft setzen der <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> Eigenschaft und die Rückgabewerte der Typ, die sie verwenden, um Zugriffsrechte darstellt. Bei der Arbeit mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Enumerationstyp mit einzelnen Sicherheitsobjekts verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Ein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt, das ein Benutzerkonto darstellt.</param>
        <param name="accessMask">Eine ganze Zahl, die einen Zugriffstyp angibt.</param>
        <param name="isInherited">
          <see langword="true" />, wenn die Zugriffsregel geerbt wurde, andernfalls <see langword="false" />.</param>
        <param name="inheritanceFlags">Einer der <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Werte, der angibt, wie Zugriffsmasken an untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Einer der <see cref="T:System.Security.AccessControl.PropagationFlags" />-Werte, der angibt, wie ACEs an untergeordnete Objekte weitergegeben werden.</param>
        <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, der angibt, ob der Zugriff zulässig ist oder verweigert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse, die eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung darstellt.</summary>
        <returns>Ein neues <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die empfohlene Methode zum Erstellen von Zugriffssteuerungsregeln wird mithilfe der Konstruktoren, der die <xref:System.Security.AccessControl.FileSystemAccessRule> Klasse.  
  
 Der Rückgabetyp der <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> Methode ist die Basisklasse, <xref:System.Security.AccessControl.AccessRule>, aber der Rückgabewert kann problemlos in die abgeleitete Klasse umgewandelt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Parameter <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> und <paramref name="type" /> geben einen ungültigen Wert an.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identityReference" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="accessMask" />-Parameter ist 0 (null).</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="identityReference" />-Parameter ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Enumeration ab, mit deren Hilfe die <see cref="T:System.Security.AccessControl.FileSystemSecurity" />-Klasse Zugriffsregeln darstellt.</summary>
        <value>Ein <see cref="T:System.Type" /> Objekt darstellt. die <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Klassen die <xref:System.Security.AccessControl.FileSystemSecurity> Klasse außer Kraft setzen der <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> Eigenschaft und die Rückgabewerte der Typ, die sie verwenden, um Zugriffsregeln darstellt. Bei der Arbeit mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, die richtige Zugriffsregeltyp mit einzelnen Sicherheitsobjekts verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die einer Datei oder einem Verzeichnis hinzugefügt werden soll.</param>
        <summary>Fügt der aktuellen Datei bzw. dem aktuellen Verzeichnis die angegebene ACL-Berechtigung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> Methode fügt eine neue Regel, um die Liste der Regeln, die innerhalb einer <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  
  
 Wenn bereits eine Zugriffssteuerungsliste (ACL) für die angegebene Regel vorhanden ist der <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> Methode wird die Regel mit einer Ausnahme weiterhin hinzufügen: eine <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt erstellt, mit der <xref:System.Security.AccessControl.AccessControlType.Deny> Enumerationswert ersetzt ein Objekt, das mit der erstellt<xref:System.Security.AccessControl.AccessControlType.Allow> Enumerationswert.  
  
 Behalten Sie neue oder geänderte ACL-Informationen in eine Datei mithilfe der <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten, verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A> Methode.  
  
 Beim Hinzufügen einer Zugriffsregel festlegen, ohne die <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag automatisch für Ihre Regel hinzugefügt werden.  Wenn Sie die Regel später ohne Angabe von Entfernen der <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das Flag wird automatisch entfernt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity> Klasse hinzufügen und entfernen Sie dann einen Zugriffssteuerungseintrag für die Zugriffssteuerungsliste (ACL) aus einer Datei.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die einer Datei oder einem Verzeichnis hinzugefügt werden soll.</param>
        <summary>Fügt der aktuellen Datei bzw. dem aktuellen Verzeichnis die angegebene Überwachungsregel hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> -Methode fügt eine neue Überwachungsregel, um die Liste der enthaltenen Regeln ein <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  
  
 Wenn Sie eine Überwachungsregel für die angegebene Regel bereits vorhanden ist die <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> Methode wird immer noch die Regel hinzuzufügen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> Methode, um eine Überwachungsregel hinzugefügt, in eine Datei und verwendet die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> Methode, um die Überwachungsregel aus der Datei zu entfernen.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Ein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt, das ein Benutzerkonto darstellt.</param>
        <param name="accessMask">Eine ganze Zahl, die einen Zugriffstyp angibt.</param>
        <param name="isInherited">
          <see langword="true" />, wenn die Zugriffsregel geerbt wurde, andernfalls <see langword="false" />.</param>
        <param name="inheritanceFlags">Einer der <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Werte, der angibt, wie Zugriffsmasken an untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Einer der <see cref="T:System.Security.AccessControl.PropagationFlags" />-Werte, der angibt, wie ACEs an untergeordnete Objekte weitergegeben werden.</param>
        <param name="flags">Einer der <see cref="T:System.Security.AccessControl.AuditFlags" />-Werte, der den Typ der auszuführenden Überwachung angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Klasse, die die angegebene Überwachungsregel für den angegebenen Benutzer darstellt.</summary>
        <returns>Ein neues <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das die angegebene Überwachungsregel für den angegebenen Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die empfohlene Methode zum Erstellen von Überwachungsregeln ist die Verwendung von den Konstruktoren der <xref:System.Security.AccessControl.FileSystemAuditRule> Klasse.  
  
 Der Rückgabetyp der <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> Methode ist die Basisklasse, <xref:System.Security.AccessControl.AuditRule>, aber der Rückgabewert kann problemlos in die abgeleitete Klasse umgewandelt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaften <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> und <paramref name="flags" /> geben einen ungültigen Wert an.</exception>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="identityReference" />-Eigenschaft ist <see langword="null" />.  
  
- oder -  
Der Wert der <paramref name="accessMask" />-Eigenschaft ist 0 (null).</exception>
        <exception cref="T:System.ArgumentException">Die <paramref name="identityReference" />-Eigenschaft ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.FileSystemSecurity" />-Klasse Überwachungsregeln darstellt.</summary>
        <value>Ein <see cref="T:System.Type" /> Objekt darstellt. die <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Klassen die <xref:System.Security.AccessControl.FileSystemSecurity> Klasse außer Kraft setzen der <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> -Eigenschaft, und geben den Typ, die sie verwenden, um die Überwachung für die Darstellung zurück. Bei der Arbeit mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Audit Regeltyp mit einzelnen Sicherheitsobjekts verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die aus einer Datei oder einem Verzeichnis entfernt werden soll.</param>
        <summary>Entfernt alle entsprechenden Allow- oder Deny-ACL-Berechtigungen aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <returns>
          <see langword="true" />, wenn die Zugriffsregel entfernt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> -Methode entfernt alle entsprechenden <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriffsregeln bzw. alle entsprechenden <xref:System.Security.AccessControl.AccessControlType.Allow> Zugriffsregeln aus der aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Beispielsweise können Sie diese Methode verwenden, so entfernen Sie alle <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriffsregeln für einen Benutzer durch übergeben eine <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt erstellt, mit der <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, der <xref:System.Security.AccessControl.FileSystemRights.Read> Wert und ein Benutzerkonto.  Wenn Sie dies tun, die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> -Methode entfernt alle verweigern-Regeln, die angeben, die <xref:System.Security.AccessControl.FileSystemRights.Read> Wert oder die <xref:System.Security.AccessControl.FileSystemRights.Write> Wert.  
  
 Behalten Sie neue oder geänderte Zugriffssteuerungsliste (ACL) Informationen in eine Datei mithilfe der <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten, verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A> Methode.  
  
 Beim Hinzufügen einer Zugriffsregel festlegen, ohne die <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag automatisch für Ihre Regel hinzugefügt werden.  Wenn Sie die Regel später ohne Angabe von Entfernen der <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das Flag wird automatisch entfernt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity> Klasse hinzufügen und entfernen Sie dann einen Zugriffssteuerungseintrag für die Zugriffssteuerungsliste (ACL) aus einer Datei.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das einen Benutzer angibt, dessen ACL-Berechtigungen aus einer Datei oder einem Verzeichnis entfernt werden sollen.</param>
        <summary>Entfernt alle ACL-Berechtigungen für den angegebenen Benutzer aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> -Methode entfernt alle Berechtigungen Access Control List (ACL) für den angegebenen Benutzer.  Die Methode ignoriert alle Werte in der <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt, mit Ausnahme des Benutzerkontos.  
  
 Behalten Sie neue oder geänderte ACL-Informationen in eine Datei mithilfe der <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten, verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A> Methode.  
  
 Beim Hinzufügen einer Zugriffsregel festlegen, ohne die <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag automatisch für Ihre Regel hinzugefügt werden.  Wenn Sie die Regel später ohne Angabe von Entfernen der <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das Flag wird automatisch entfernt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das einen Benutzer angibt, dessen ACL-Berechtigungen aus einer Datei oder einem Verzeichnis entfernt werden sollen.</param>
        <summary>Entfernt eine einzelne entsprechende Allow- oder Deny-ACL-Berechtigung zum Gewähren oder Verweigern aus der aktuellen Datei bzw. dem Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> Methode entfernt das angegebene <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriff auf die Regel oder die angegebene entsprechende <xref:System.Security.AccessControl.AccessControlType.Allow> Zugriffsregel aus der aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Z. B. können Sie diese Methode verwenden, entfernen Sie eine angegebene <xref:System.Security.AccessControl.AccessControlType.Deny> Zugriffsregel für einen Benutzer durch Übergeben einer <xref:System.Security.AccessControl.FileSystemAccessRule> Objekt erstellt, mit der <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, der <xref:System.Security.AccessControl.FileSystemRights.Read> Wert und ein Benutzerkonto.  Wenn Sie dies tun, die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> Methode entfernt nur die Deny-Regel, der angibt, die <xref:System.Security.AccessControl.FileSystemRights.Read> Wert.  Es entfernt nicht die Deny-Regeln, die angeben, die <xref:System.Security.AccessControl.FileSystemRights.Write> Wert.  
  
 Behalten Sie neue oder geänderte Zugriffssteuerungsliste (ACL) Informationen in eine Datei mithilfe der <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten, verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A> Methode.  
  
 Beim Hinzufügen einer Zugriffsregel festlegen, ohne die <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag automatisch für Ihre Regel hinzugefügt werden.  Wenn Sie die Regel später ohne Angabe von Entfernen der <xref:System.Security.AccessControl.FileSystemRights.Synchronize> Flag, das Flag wird automatisch entfernt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die aus einer Datei oder einem Verzeichnis entfernt werden soll.</param>
        <summary>Entfernt alle entsprechenden Allow- oder Deny-Überwachungsregeln aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <returns>
          <see langword="true" />, wenn die Überwachungsregel entfernt wurde, andernfalls <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> -Methode entfernt alle entsprechenden <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachungsregeln bzw. alle entsprechenden <xref:System.Security.AccessControl.AccessControlType.Allow> Überwachungsregeln aus der aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Beispielsweise können Sie diese Methode verwenden, so entfernen Sie alle <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachungsregeln für einen Benutzer durch übergeben eine <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt erstellt, mit der <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, der <xref:System.Security.AccessControl.AuditFlags.Failure> Wert und ein Benutzerkonto.  Wenn Sie dies tun, die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> -Methode entfernt alle verweigern-Regeln, die angeben, die <xref:System.Security.AccessControl.AuditFlags.Failure> Wert oder die <xref:System.Security.AccessControl.AuditFlags.Success> Wert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> Methode, um eine Überwachungsregel hinzugefügt, in eine Datei und verwendet die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> Methode, um die Überwachungsregel aus der Datei zu entfernen.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das einen Benutzer angibt, dessen Überwachungsregeln aus einer Datei oder einem Verzeichnis entfernt werden sollen.</param>
        <summary>Entfernt alle Überwachungsregeln für den angegebenen Benutzer aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> Methode entfernt alle Überwachungsregeln für den angegebenen Benutzer.  Es ignoriert alle Werte in der <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt, mit Ausnahme des Benutzerkontos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die aus einer Datei oder einem Verzeichnis entfernt werden soll.</param>
        <summary>Entfernt eine einzelne entsprechende Allow- oder Deny-Überwachungsregel aus der aktuellen Datei bzw. dem aktuellen Verzeichnis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> Methode entfernt die angegebene entsprechende <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachung, Regel oder die angegebene entsprechende <xref:System.Security.AccessControl.AccessControlType.Allow> Überwachungsregel aus der aktuellen <xref:System.Security.AccessControl.FileSystemSecurity> Objekt.  Z. B. können Sie diese Methode verwenden, entfernen Sie eine angegebene <xref:System.Security.AccessControl.AccessControlType.Deny> Überwachungsregel für einen Benutzer durch Übergeben einer <xref:System.Security.AccessControl.FileSystemAuditRule> Objekt erstellt, mit der <xref:System.Security.AccessControl.AccessControlType.Deny> Wert, der <xref:System.Security.AccessControl.AuditFlags.Failure> Wert und ein Benutzerkonto.  Wenn Sie dies tun, die <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> Methode entfernt nur eine Deny-Regel, der angibt, die <xref:System.Security.AccessControl.AuditFlags.Failure> Wert.  Es entfernt nicht die Deny-Regeln, die angeben, die <xref:System.Security.AccessControl.AuditFlags.Success> Wert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die einer Datei oder einem Verzeichnis hinzugefügt werden soll.</param>
        <summary>Fügt der aktuellen Datei bzw. dem aktuellen Verzeichnis die angegebene ACL-Berechtigung hinzu und entfernt alle entsprechenden ACL-Berechtigungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> Methode fügt die angegebene Regel Zugriffssteuerungsliste (ACL), oder überschreibt alle identischen ACL-Regeln, die entsprechen den `rule` Parameter.  Z. B. wenn die `rule` Parameter gibt an, eine <xref:System.Security.AccessControl.FileSystemRights.Read> Wert und die <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> Methode sucht nach einer identischen ACL-Regel, der angibt, die <xref:System.Security.AccessControl.FileSystemRights.Read> Wert, der identische Regel wird überschrieben werden.  Wenn die <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> Methode sucht nach einer identischen ACL-Regel, der angibt, die <xref:System.Security.AccessControl.FileSystemRights.Write> Wert, der identische Regel wird auch überschrieben werden.  
  
 Behalten Sie neue oder geänderte ACL-Informationen in eine Datei mithilfe der <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten, verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt, das eine ACL-Berechtigung darstellt, die für eine Datei oder ein Verzeichnis festgelegt werden soll.</param>
        <summary>Legt die angegebene ACL-Berechtigung für die aktuelle Datei bzw. das aktuelle Verzeichnis fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> Methode fügt die angegebene Regel Zugriffssteuerungsliste (ACL), oder überschreibt alle identischen ACL-Regeln, die entsprechen der <xref:System.Security.AccessControl.FileSystemRights> Wert der `rule` Parameter.  Z. B. wenn die `rule` Parameter gibt an, eine <xref:System.Security.AccessControl.FileSystemRights.Read> Wert und die <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> Methode sucht nach einer identischen ACL-Regel, der angibt, die <xref:System.Security.AccessControl.FileSystemRights.Read> Wert, der identische Regel wird überschrieben werden.  Wenn die <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> Methode sucht nach einer identischen ACL-Regel, der angibt, die <xref:System.Security.AccessControl.FileSystemRights.Write> Wert, der identische Regel wird nicht überschrieben werden.  
  
 Behalten Sie neue oder geänderte ACL-Informationen in eine Datei mithilfe der <xref:System.IO.File.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  Um neue oder geänderte ACL-Informationen in einem Verzeichnis beizubehalten, verwenden Sie die <xref:System.IO.Directory.SetAccessControl%2A> oder <xref:System.IO.FileInfo.SetAccessControl%2A> Methode.  
  
 Um ACL-Informationen aus einer Datei abzurufen, verwenden Sie die <xref:System.IO.File.GetAccessControl%2A> oder <xref:System.IO.FileInfo.GetAccessControl%2A> Methode.  Um ACL-Informationen aus einem Verzeichnis abzurufen, verwenden Sie die <xref:System.IO.Directory.GetAccessControl%2A> oder <xref:System.IO.DirectoryInfo.GetAccessControl%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Ein <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />-Objekt, das eine Überwachungsregel darstellt, die für eine Datei oder ein Verzeichnis festgelegt werden soll.</param>
        <summary>Legt die angegebene Überwachungsregel für die aktuelle Datei bzw. das aktuelle Verzeichnis fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> Methode fügt die angegebene Überwachungsregel hinzu oder überschreibt alle identischen Überwachungsregeln, die mit übereinstimmen, der die <xref:System.Security.AccessControl.FileSystemRights> Wert der `rule` Parameter.  Z. B. wenn die `rule` Parameter gibt an, eine <xref:System.Security.AccessControl.FileSystemRights.Read> Wert und die <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> Methode findet eine identische Überwachungsregel, der angibt, die <xref:System.Security.AccessControl.FileSystemRights.Read> Wert, der identische Regel wird überschrieben werden.  Wenn die <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> Methode findet eine identische Überwachungsregel, der angibt, die <xref:System.Security.AccessControl.FileSystemRights.Write> Wert, der identische Regel wird nicht überschrieben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rule" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>