<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommonAcl.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57ccc40b3ca58bada3bf627f78c2d964a58042a8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ccc40b3ca58bada3bf627f78c2d964a58042a8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Represents an access control list (ACL) and is the base class for the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph> classes.</source>
          <target state="translated">Stellt eine Zugriffssteuerungsliste (ACL) dar und ist die Basisklasse für die <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph>-Klasse und die <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Certain combinations of inheritance and access mask flags are meaningless:</source>
          <target state="translated">Bestimmte Kombinationen von Vererbung und Zugriff Maske Flags sind ohne Bedeutung:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Any access control entry (ACE) with a zero-access mask is removed.</source>
          <target state="translated">Alle Zugriffssteuerungseintrag (ACE) mit einem NULL-Zugriffsmaske wird entfernt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Inherit-only ACEs inside object ACLs are removed.</source>
          <target state="translated">Nur erben ACEs im Objekt-ACLs werden entfernt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flags on all ACEs in leaf object ACLs are cleared.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph>, und <ph id="ph4">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> Flags für alle ACEs im Blatt-Objekt ACLs werden gelöscht.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>ACEs that have an <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph> flag in the absence of the <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag are meaningless; they are removed.</source>
          <target state="translated">ACEs mit einer <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph> Flag in Ermangelung der <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> oder <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> Flag sind bedeutungslos, werden entfernt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph> flag in the absence of the <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag can be removed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph> Flag in Ermangelung der <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> oder <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> Flag kann entfernt werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>ACEs that have an <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> in discretionary access control lists (DACLs) are removed.</source>
          <target state="translated">ACEs mit einer <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags&gt;</ph> Wert <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> oder <ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> discretionary Access Control Lists, (DACLs) werden entfernt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Any audit ACE that does not specify either <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> is removed.</source>
          <target state="translated">Alle audit ACE, der nicht entweder <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> oder <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> wird entfernt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>On DACLs, SystemAudit and SystemAlarm ACEs are removed.</source>
          <target state="translated">Auf DACLs zu speichern werden SystemAudit- und SystemAlarm-ACEs entfernt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.</source>
          <target state="translated">Auf dem Systemzugriffssteuerungslisten (SACLs) werden AccessAllowed und AccessDenied ACEs entfernt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Canonical order is maintained according to the following algorithm:</source>
          <target state="translated">Kanonischer Reihenfolge wird nach folgendem Algorithmus beibehalten:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.</source>
          <target state="translated">Explizite ACEs haben Vorrang vor geerbten Zugriffssteuerungseinträge; Diese Regel gilt für DACLs und SACLs.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access.</source>
          <target state="translated">In DACLs zu speichern, für die explizite ACEs haben Zugriffssteuerungseinträgen, die Zugriff verweigern Vorrang vor ACEs, den Zugriff ermöglichen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>For directory object ACLs, the nonobject ACEs come before object ACEs.</source>
          <target state="translated">Kommen für Verzeichnisobjekt ACLs die nicht-objektreservierungen ACEs vor ACEs.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>All common ACEs take precedence over noncommon ACEs.</source>
          <target state="translated">Alle allgemeinen ACEs haben Vorrang vor den anderen ACEs.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Inherited ACEs maintain their relative order after canonicity.</source>
          <target state="translated">Geerbte ACEs behalten ihre relative Position nach Kanonizität bei.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.</source>
          <target state="translated">Nicht erkannte und benutzerdefinierte ACEs sind in DACLs und SACLs nicht zulässig.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <ph id="ph1">&lt;xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.Security.Principal.SecurityIdentifier&gt;</ph> objects associated with the ACEs.</source>
          <target state="translated">Innerhalb zusammenhängender Bereiche (explizite AccessDenied und AccessAllowed-ACEs in DACLs, alle explizite ACEs SACLs), die ACEs sortiert werden die <ph id="ph1">&lt;xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A&gt;</ph> Methoden die <ph id="ph2">&lt;xref:System.Security.Principal.SecurityIdentifier&gt;</ph> ACEs zugeordneten Objekte.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Adjacent ACEs are combined, if appropriate.</source>
          <target state="translated">Benachbarte ACEs werden ggf. kombiniert.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>This reduces the size of the ACL without affecting the access control semantics it grants.</source>
          <target state="translated">Dies reduziert die Größe der ACL ohne Auswirkungen auf die Semantik der Access-Steuerelement, die Berechtigungen erteilt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.BinaryLength">
          <source>Gets the length, in bytes, of the binary representation of the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Länge der binären Darstellung des aktuellen <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekts (in Bytes) ab.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.BinaryLength">
          <source>This length should be used before marshaling the access control list (ACL) into a binary array by using the <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">Diese Länge muss verwendet werden, bevor die Zugriffssteuerungsliste (ACL) mithilfe der <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /&gt;</ph>-Methode in ein binäres Array gemarshallt wird.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.BinaryLength">
          <source>The length, in bytes, of the binary representation of the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">Die Länge der binären Darstellung des aktuellen <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekts (in Bytes).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Count">
          <source>Gets the number of access control entries (ACEs) in the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Anzahl der ACEs im aktuellen <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.Count">
          <source>The number of ACEs in the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">Die Anzahl der ACEs im aktuellen <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)">
          <source>The byte array into which the contents of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> is marshaled.</source>
          <target state="translated">Das Bytearray, in das der Inhalt von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> gemarshallt wird.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)">
          <source>The offset at which to start marshaling.</source>
          <target state="translated">Der Offset, bei dem das Marshallen begonnen werden soll.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)">
          <source>Marshals the contents of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object into the specified byte array beginning at the specified offset.</source>
          <target state="translated">Marshallt den Inhalt des <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekts in das angegebene Bytearray, wobei beim angegebenen Offset begonnen wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.IsCanonical">
          <source>Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">Ruft einen booleschen Wert ab, der angibt, ob sich die Zugriffssteuerungseinträge (ACEs) im aktuellen <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt in kanonischer Reihenfolge befinden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.IsCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ACEs in the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object are in canonical order; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn sich die ACEs im aktuellen <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt in kanonischer Reihenfolge befinden, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.IsContainer">
          <source>Sets whether the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a container.</source>
          <target state="translated">Legt fest, ob das <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt ein Container ist.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.IsContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a container.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das aktuelle <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt ein Container ist.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.IsDS">
          <source>Sets whether the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a directory object access control list (ACL).</source>
          <target state="translated">Legt fest, ob das aktuelle <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt eine Zugriffssteuerungsliste (ACL) für ein Verzeichnisobjekt ist.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.IsDS">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a directory object ACL.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das aktuelle <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt eine ACL für ein Verzeichnisobjekt ist.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> to get or set.</source>
          <target state="translated">Der nullbasierte Index von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph>, der abgerufen oder festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> at the specified index.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph>-Klasse am angegebenen Index ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> at the specified index.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> am angegebenen Index.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object to check for.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>-Objekt, für das eine Überprüfung erfolgen soll.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)">
          <source>Removes all access control entries (ACEs) contained by this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object that are associated with the specified <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated">Entfernt alle Zugriffssteuerungseinträge (ACEs) in diesem <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt, die dem angegebenen <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>-Objekt zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces">
          <source>Removes all inherited access control entries (ACEs) from this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">Entfernt alle geerbten Zugriffssteuerungseinträge (ACEs) aus diesem <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Revision">
          <source>Gets the revision level of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>.</source>
          <target state="translated">Ruft die Revisionsebene der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.Revision">
          <source>A byte value that specifies the revision level of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>.</source>
          <target state="translated">Ein Bytewert, der die Revisionsebene der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> angibt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>