<Type Name="SemaphoreSecurity" FullName="System.Security.AccessControl.SemaphoreSecurity">
  <TypeSignature Language="C#" Value="public sealed class SemaphoreSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreSecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4732-101">Stellt die Windows-Zugriffssteuerungssicherheit für ein benanntes Semaphor dar.</span><span class="sxs-lookup"><span data-stu-id="b4732-101">Represents the Windows access control security for a named semaphore.</span></span> <span data-ttu-id="b4732-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-103">Ein <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt gibt an, über Zugriffsrechte für ein benanntes Systemsemaphor und gibt außerdem an, wie Zugriffsversuche überwacht werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-103">A <xref:System.Security.AccessControl.SemaphoreSecurity> object specifies access rights for a named system semaphore, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="b4732-104">Über die Zugriffsrechte für das Semaphor werden als Regeln ausgedrückt, mit jeder Zugriffsregel durch eine <xref:System.Security.AccessControl.SemaphoreAccessRule> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-104">Access rights to the semaphore are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.SemaphoreAccessRule> object.</span></span> <span data-ttu-id="b4732-105">Jede Überwachungsregel wird dargestellt, indem ein <xref:System.Security.AccessControl.SemaphoreAuditRule> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.SemaphoreAuditRule> object.</span></span>  
  
 <span data-ttu-id="b4732-106">Dies spiegelt den zugrunde liegenden Windows-Sicherheitssystem, in dem jedes sicherungsfähige Objekt verfügt über höchstens einen besitzerverwaltete Zugriffssteuerungsliste (DACL), steuert den Zugriff auf gesicherte Objekt und darf höchstens eine Systemzugriffssteuerungsliste (SACL), der angibt, denen der Zugriff Versuche werden überwacht.</span><span class="sxs-lookup"><span data-stu-id="b4732-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="b4732-107">Die DACL und SACL sind Listen von Zugriffssteuerungseinträgen (ACE) sortiert, die Zugriff und die Überwachung für Benutzer und Gruppen angeben.</span><span class="sxs-lookup"><span data-stu-id="b4732-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="b4732-108">Ein <xref:System.Security.AccessControl.SemaphoreAccessRule> oder <xref:System.Security.AccessControl.SemaphoreAuditRule> Objekt möglicherweise mehr als ein ACE darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4732-108">A <xref:System.Security.AccessControl.SemaphoreAccessRule> or <xref:System.Security.AccessControl.SemaphoreAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-109">Ein <xref:System.Threading.Semaphore> Objekt kann ein lokales Semaphor oder ein benanntes Systemsemaphor darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4732-109">A <xref:System.Threading.Semaphore> object can represent a local semaphore or a named system semaphore.</span></span> <span data-ttu-id="b4732-110">Windows-zugriffssteuerungssicherheit ist nur für System benannte Semaphoren sinnvoll.</span><span class="sxs-lookup"><span data-stu-id="b4732-110">Windows access control security is meaningful only for named system semaphores.</span></span>  
  
 <span data-ttu-id="b4732-111">Die <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Security.AccessControl.SemaphoreAccessRule>, und <xref:System.Security.AccessControl.SemaphoreAuditRule> Klassen blenden die Implementierungsdetails von ACLs und ACEs.</span><span class="sxs-lookup"><span data-stu-id="b4732-111">The <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Security.AccessControl.SemaphoreAccessRule>, and <xref:System.Security.AccessControl.SemaphoreAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="b4732-112">Sie können damit siebzehn verschiedenen ACE-Typen und die Komplexität der ordnungsgemäßen Verwaltung der Vererbung und Weitergabe von Zugriffsrechten ignorieren.</span><span class="sxs-lookup"><span data-stu-id="b4732-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="b4732-113">Diese Objekte sind aber auch zu verhindern, dass die folgenden häufigen Zugriffssteuerungsfehler konzipiert:</span><span class="sxs-lookup"><span data-stu-id="b4732-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="b4732-114">Erstellen eine Sicherheitsbeschreibung mit einer null-DACL an.</span><span class="sxs-lookup"><span data-stu-id="b4732-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="b4732-115">Ein null-Verweis auf eine DACL ermöglicht allen Benutzern auf ein Objekt, das potenziell erstellen einen Denial-of-Service-Angriff Zugriffsregeln hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="b4732-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="b4732-116">Ein neues <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt beginnt immer mit einer leeren DACL, die für alle Benutzer der Zugriff verweigert wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-116">A new <xref:System.Security.AccessControl.SemaphoreSecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="b4732-117">Verletzung der die kanonische Reihenfolge der ACEs.</span><span class="sxs-lookup"><span data-stu-id="b4732-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="b4732-118">Wenn die ACE-Liste in die DACL nicht kanonische Reihenfolge gehalten wird, möglicherweise versehentlich auf Benutzer Zugriff auf das gesicherte Objekt gewährt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="b4732-119">Verweigerte Zugriffsrechte müssen z. B. immer vor zulässigen Zugriffsrechte aufgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="b4732-120"><xref:System.Security.AccessControl.SemaphoreSecurity> Objekte beibehalten die richtige Reihenfolge intern.</span><span class="sxs-lookup"><span data-stu-id="b4732-120"><xref:System.Security.AccessControl.SemaphoreSecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="b4732-121">Bearbeiten von Security Descriptor Flags, die nur Ressourcen-Manager-gesteuert werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4732-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="b4732-122">Das Erstellen ungültiger Kombinationen von ACE-Flags.</span><span class="sxs-lookup"><span data-stu-id="b4732-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="b4732-123">Bearbeiten von geerbten ACEs aus.</span><span class="sxs-lookup"><span data-stu-id="b4732-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="b4732-124">Vererbung und Weitergabe werden von den Ressourcen-Manager als Reaktion auf Änderungen behandelt, die Sie Zugriffs-und Überwachungsregeln vornehmen.</span><span class="sxs-lookup"><span data-stu-id="b4732-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="b4732-125">Einfügen von bedeutungslosen ACEs in ACLs aus.</span><span class="sxs-lookup"><span data-stu-id="b4732-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="b4732-126">Die nur Funktionen, die nicht durch die Sicherheitsobjekte .NET unterstützt werden gefährliche Aktivitäten, die von der Mehrheit der Anwendungsentwickler, z. B. die folgenden vermieden werden sollte:</span><span class="sxs-lookup"><span data-stu-id="b4732-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="b4732-127">Low-Level-Aufgaben, die normalerweise von den Ressourcen-Manager ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="b4732-128">Hinzufügen oder Entfernen von Zugriffssteuerungseinträgen Möglichkeiten, die die kanonische Reihenfolge nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="b4732-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="b4732-129">Zum Ändern der Windows-zugriffssteuerungssicherheit für ein benanntes Semaphor verwendet die <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> Methode zum Abrufen der <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-129">To modify Windows access control security for a named semaphore, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="b4732-130">Ändern Sie das Sicherheitsobjekt durch Hinzufügen und Entfernen von Regeln, und verwenden Sie dann die <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> -Methode erneut an.</span><span class="sxs-lookup"><span data-stu-id="b4732-130">Modify the security object by adding and removing rules, and then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4732-131">Änderungen an einer <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt haben keinen Einfluss auf die Zugriffsebenen der das benannte Semaphor erst nach dem Aufruf der <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> Methode, um das benannte Semaphor geänderte Sicherheitsobjekts zuweisen.</span><span class="sxs-lookup"><span data-stu-id="b4732-131">Changes you make to a <xref:System.Security.AccessControl.SemaphoreSecurity> object do not affect the access levels of the named semaphore until you call the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named semaphore.</span></span>  
  
 <span data-ttu-id="b4732-132">Um zugriffssteuerungssicherheit aus einem Semaphor in einen anderen kopieren möchten, verwenden die <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> Methode zum Abrufen einer <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt, das die Zugriffs- und Überwachungsrichtlinien Regeln für das erste Semaphor darstellt, verwenden Sie die <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> Methode oder einen Konstruktor, der eine akzeptiert<xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt, das zweite Semaphor diese Regeln zuweisen.</span><span class="sxs-lookup"><span data-stu-id="b4732-132">To copy access control security from one semaphore to another, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.SemaphoreSecurity> object representing the access and audit rules for the first semaphore, then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method, or a constructor that accepts a <xref:System.Security.AccessControl.SemaphoreSecurity> object, to assign those rules to the second semaphore.</span></span>  
  
 <span data-ttu-id="b4732-133">Benutzer mit einer Investition in Security Descriptor Definition Language (SDDL) können die <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> Methode, um die festgelegten Zugriffsregeln für ein benanntes Semaphor, und die <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> Methode, um eine Zeichenfolge abzurufen, die die Zugriffsregeln im SDDL-Format darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-133">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a named semaphore, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="b4732-134">Dies ist nicht für Neuentwicklungen empfohlen.</span><span class="sxs-lookup"><span data-stu-id="b4732-134">This is not recommended for new development.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-135">Sicherheit auf Synchronisierungsobjekte ist Windows 98 oder Windows Millennium Edition nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="b4732-135">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4732-136">Im folgenden Codebeispiel wird veranschaulicht, die Trennung zwischen <xref:System.Security.AccessControl.AccessControlType.Allow> Regeln und <xref:System.Security.AccessControl.AccessControlType.Deny> Regeln und die Kombination der Rechte auf kompatible Regeln anzeigt.</span><span class="sxs-lookup"><span data-stu-id="b4732-136">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="b4732-137">Das Beispiel erstellt eine <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und zeigt das resultierende Paar von Regeln.</span><span class="sxs-lookup"><span data-stu-id="b4732-137">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="b4732-138">Anschließend können Sie neue Rechte für den aktuellen Benutzer und das Ergebnis wird angezeigt, dass der neuen Rechte mit dem vorhandenen zusammengeführt werden <xref:System.Security.AccessControl.AccessControlType.Allow> Regel.</span><span class="sxs-lookup"><span data-stu-id="b4732-138">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-139">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-139">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4732-140">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> und <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4732-140">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.SemaphoreAccessRule" />
    <altmember cref="T:System.Security.AccessControl.SemaphoreAuditRule" />
    <altmember cref="T:System.Security.AccessControl.SemaphoreRights" />
    <altmember cref="M:System.Threading.Semaphore.GetAccessControl" />
    <altmember cref="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4732-141">Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4732-141">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4732-142">Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse mit Standardwerten.</span><span class="sxs-lookup"><span data-stu-id="b4732-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-143">Ein neues <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt beginnt immer mit einer leeren freigegebenen Zugriffssteuerungsliste (DACL), die für alle Benutzer der Zugriff verweigert wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-143">A new <xref:System.Security.AccessControl.SemaphoreSecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b4732-144">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="b4732-144">This class is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b4732-145">Der Name des Systemsemaphors, dessen Regeln für die Zugriffssteuerungssicherheit abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b4732-145">The name of the system semaphore whose access control security rules are to be retrieved.</span></span></param>
        <param name="includeSections"><span data-ttu-id="b4732-146">Eine Kombination von <see cref="T:System.Security.AccessControl.AccessControlSections" />-Flags, die die abzurufenden Abschnitte angeben.</span><span class="sxs-lookup"><span data-stu-id="b4732-146">A combination of <see cref="T:System.Security.AccessControl.AccessControlSections" /> flags specifying the sections to retrieve.</span></span></param>
        <summary><span data-ttu-id="b4732-147">Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse mit den angegebenen Abschnitten der Regeln für die Zugriffssteuerungssicherheit aus dem Systemsemaphor mit dem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="b4732-147">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with the specified sections of the access control security rules from the system semaphore with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-148">Mit diesem Konstruktor können Sie die zugriffssteuerungssicherheit für ein benanntes Systemsemaphor abrufen, ohne zuvor einen <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-148">This constructor allows you to obtain the access control security for a named system semaphore without first creating a <xref:System.Threading.Semaphore> object.</span></span>  
  
 <span data-ttu-id="b4732-149">Bei der Arbeit mit benannten Systemobjekte Vorsicht.</span><span class="sxs-lookup"><span data-stu-id="b4732-149">Caution must be exercised when working with named system objects.</span></span> <span data-ttu-id="b4732-150">Es ist ein Systemobjekt, das mit dem Namen `name` keine Semaphore ist, kann die Sicherheit der Steuerelement-Zugriff abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-150">If there is a system object named `name` that is not a semaphore, its control access security might be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b4732-151">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="b4732-151">This class is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4732-152">Ruft die Enumeration ab, mit deren Hilfe die <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse Zugriffsrechte darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-152">Gets the enumeration that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rights.</span></span></summary>
        <value><span data-ttu-id="b4732-153">Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Enumeration darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-153">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreRights" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-154">Abgeleitete Klassen die <xref:System.Security.AccessControl.ObjectSecurity> -Klasse überschreiben die <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> -Eigenschaft und der Rückgabewert den Typ, die sie verwenden, um die Darstellung von Zugriffsrechten.</span><span class="sxs-lookup"><span data-stu-id="b4732-154">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="b4732-155">Beim Arbeiten mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Enumerationstyp mit einzelnen Sicherheitsobjekts verwendet.</span><span class="sxs-lookup"><span data-stu-id="b4732-155">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="b4732-156">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</span><span class="sxs-lookup"><span data-stu-id="b4732-156">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="b4732-157">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, die die zu verweigernden oder zu gewährenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</span><span class="sxs-lookup"><span data-stu-id="b4732-157">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to allow or deny, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="b4732-158">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</span><span class="sxs-lookup"><span data-stu-id="b4732-158">Meaningless for named semaphores, because they have no hierarchy.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="b4732-159">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</span><span class="sxs-lookup"><span data-stu-id="b4732-159">Meaningless for named semaphores, because they have no hierarchy.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="b4732-160">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</span><span class="sxs-lookup"><span data-stu-id="b4732-160">Meaningless for named semaphores, because they have no hierarchy.</span></span></param>
        <param name="type"><span data-ttu-id="b4732-161">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-161">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="b4732-162">Erstellt eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung.</span><span class="sxs-lookup"><span data-stu-id="b4732-162">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span></span></summary>
        <returns><span data-ttu-id="b4732-163">Ein <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Objekt, das die angegebenen Rechte für den angegebenen Benutzer darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-163">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> object representing the specified rights for the specified user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-164">Die empfohlene Methode zum Erstellen von Zugriffssteuerungsregeln ist die Verwendung von den Konstruktoren für die <xref:System.Security.AccessControl.SemaphoreAccessRule> Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4732-164">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.SemaphoreAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-165">Obwohl Vererbung und Weitergabe Flags für benannte Semaphoren bedeutungslos sind, ist es weiterhin möglich, geben sie dies nicht empfohlen, die da es unnötig die Verwaltung der Regeln, z. B. etwas komplizierter macht durch die Kombination von Regeln stören Andernfalls würde, die kompatibel sein.</span><span class="sxs-lookup"><span data-stu-id="b4732-165">Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b4732-166">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="type" /> ist ein ungültiger Wert angegeben.</span><span class="sxs-lookup"><span data-stu-id="b4732-166"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-167"><paramref name="identityReference" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-167"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="b4732-168">- oder - </span><span class="sxs-lookup"><span data-stu-id="b4732-168">-or-</span></span>  
  
 <span data-ttu-id="b4732-169"><paramref name="accessMask" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="b4732-169"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b4732-170"><paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="b4732-170"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4732-171">Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse die Zugriffsregeln darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-171">Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rules.</span></span></summary>
        <value><span data-ttu-id="b4732-172">Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-172">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-173">Abgeleitete Klassen die <xref:System.Security.AccessControl.ObjectSecurity> -Klasse überschreiben die <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> Eigenschaft und die Rückgabewerte der Darstellung von Zugriffsregeln Typ.</span><span class="sxs-lookup"><span data-stu-id="b4732-173">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="b4732-174">Bei der Arbeit mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Zugriffsregeltyp mit einzelnen Sicherheitsobjekts verwendet.</span><span class="sxs-lookup"><span data-stu-id="b4732-174">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-175">Die hinzuzufügende Zugriffssteuerungsregel.</span><span class="sxs-lookup"><span data-stu-id="b4732-175">The access control rule to add.</span></span></param>
        <summary><span data-ttu-id="b4732-176">Sucht nach einer übereinstimmenden Regel, mit der die neue Regel zusammengeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="b4732-176">Searches for a matching rule with which the new rule can be merged.</span></span> <span data-ttu-id="b4732-177">Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b4732-177">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-178">Die <xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A> Methode sucht Regeln mit dem gleichen Benutzer oder die Gruppe und die gleiche <xref:System.Security.AccessControl.AccessControlType> als `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-178">The <xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="b4732-179">Wenn keiner gefunden werden, `rule` hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-179">If none are found, `rule` is added.</span></span> <span data-ttu-id="b4732-180">Wenn eine entsprechende Regel gefunden wird, wird die Rechte in `rule` mit einer vorhandenen Regel zusammengeführt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-180">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4732-181">Im folgenden Codebeispiel wird veranschaulicht, die Trennung zwischen <xref:System.Security.AccessControl.AccessControlType.Allow> Regeln und <xref:System.Security.AccessControl.AccessControlType.Deny> Regeln und die Kombination der Rechte auf kompatible Regeln anzeigt.</span><span class="sxs-lookup"><span data-stu-id="b4732-181">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="b4732-182">Das Beispiel erstellt eine <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und zeigt das resultierende Paar von Regeln.</span><span class="sxs-lookup"><span data-stu-id="b4732-182">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="b4732-183">Anschließend können Sie neue Rechte für den aktuellen Benutzer und das Ergebnis wird angezeigt, dass der neuen Rechte mit dem vorhandenen zusammengeführt werden <xref:System.Security.AccessControl.AccessControlType.Allow> Regel.</span><span class="sxs-lookup"><span data-stu-id="b4732-183">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-184">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-184">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4732-185">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> und <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4732-185">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-186"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-186"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-187">Die hinzuzufügende Überwachungsregel.</span><span class="sxs-lookup"><span data-stu-id="b4732-187">The audit rule to add.</span></span> <span data-ttu-id="b4732-188">Der von dieser Regel angegebene Benutzer bestimmt die Suche.</span><span class="sxs-lookup"><span data-stu-id="b4732-188">The user specified by this rule determines the search.</span></span></param>
        <summary><span data-ttu-id="b4732-189">Sucht nach einer Überwachungsregel, mit der die neue Regel zusammengeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="b4732-189">Searches for an audit rule with which the new rule can be merged.</span></span> <span data-ttu-id="b4732-190">Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b4732-190">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-191">Die <xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A> Methode sucht nach Regeln mit dem gleichen Benutzer oder Gruppe als `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-191">The <xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="b4732-192">Wenn keiner gefunden werden, `rule` hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-192">If none are found, `rule` is added.</span></span> <span data-ttu-id="b4732-193">Wenn eine entsprechende Regel gefunden wird, werden die Flags in `rule` in die vorhandene Regel zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="b4732-193">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="b4732-194">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</span><span class="sxs-lookup"><span data-stu-id="b4732-194">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="b4732-195">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, die die zu überwachenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</span><span class="sxs-lookup"><span data-stu-id="b4732-195">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to audit, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="b4732-196">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</span><span class="sxs-lookup"><span data-stu-id="b4732-196">Meaningless for named wait handles, because they have no hierarchy.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="b4732-197">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</span><span class="sxs-lookup"><span data-stu-id="b4732-197">Meaningless for named wait handles, because they have no hierarchy.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="b4732-198">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</span><span class="sxs-lookup"><span data-stu-id="b4732-198">Meaningless for named wait handles, because they have no hierarchy.</span></span></param>
        <param name="flags"><span data-ttu-id="b4732-199">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angeben, ob erfolgreiche Zugriffsversuche und/oder fehlgeschlagene Zugriffsversuche überwacht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b4732-199">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specify whether to audit successful access, failed access, or both.</span></span></param>
        <summary><span data-ttu-id="b4732-200">Erstellt eine neue Überwachungsregel, die den Benutzer angibt, auf den diese Regel angewendet wird, sowie die zu überwachenden Zugriffsrechte und das Ergebnis, das die Überwachungsregel auslöst.</span><span class="sxs-lookup"><span data-stu-id="b4732-200">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</span></span></summary>
        <returns><span data-ttu-id="b4732-201">Ein <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />-Objekt, das die angegebene Überwachungsregel für den angegebenen Benutzer darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-201">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> object representing the specified audit rule for the specified user.</span></span> <span data-ttu-id="b4732-202">Der Rückgabetyp der Methode entspricht der Basisklasse <see cref="T:System.Security.AccessControl.AuditRule" />, er kann jedoch problemlos in die abgeleitete Klasse umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-202">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-203">Die empfohlene Methode zum Erstellen von Überwachungsregeln ist die Verwendung von den Konstruktoren für die <xref:System.Security.AccessControl.SemaphoreAuditRule> Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4732-203">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.SemaphoreAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-204">Obwohl Vererbung und Weitergabe Flags für benannte Semaphoren bedeutungslos sind, ist es weiterhin möglich, anzugeben.</span><span class="sxs-lookup"><span data-stu-id="b4732-204">Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them.</span></span> <span data-ttu-id="b4732-205">Dies wird nicht empfohlen, da sie unnötig die Verwaltung der Regeln, z. B. kompliziert durch die Kombination von Regeln, die sonst kompatibel stören.</span><span class="sxs-lookup"><span data-stu-id="b4732-205">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b4732-206">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="flags" /> ist ein ungültiger Wert angegeben.</span><span class="sxs-lookup"><span data-stu-id="b4732-206"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-207"><paramref name="identityReference" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-207"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="b4732-208">- oder - </span><span class="sxs-lookup"><span data-stu-id="b4732-208">-or-</span></span>  
  
 <span data-ttu-id="b4732-209"><paramref name="accessMask" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="b4732-209"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b4732-210"><paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="b4732-210"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4732-211">Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse Überwachungsregeln darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-211">Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent audit rules.</span></span></summary>
        <value><span data-ttu-id="b4732-212">Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4732-212">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-213">Abgeleitete Klassen die <xref:System.Security.AccessControl.ObjectSecurity> -Klasse überschreiben die <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> -Eigenschaft und der Rückgabewert den Typ, die sie verwenden, um die Überwachung für die Darstellung.</span><span class="sxs-lookup"><span data-stu-id="b4732-213">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="b4732-214">Bei der Arbeit mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Audit Regeltyp mit einzelnen Sicherheitsobjekts verwendet.</span><span class="sxs-lookup"><span data-stu-id="b4732-214">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As SemaphoreAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-215">Eine <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss.</span><span class="sxs-lookup"><span data-stu-id="b4732-215">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="b4732-216">Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</span><span class="sxs-lookup"><span data-stu-id="b4732-216">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="b4732-217">Sucht nach einer Zugriffssteuerungsregel mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel sowie mit kompatiblen Vererbungs- und Weitergabeflags. Wenn eine solche Regel gefunden wird, werden die in der angegebenen Zugriffsregel enthaltenen Rechte daraus entfernt.</span><span class="sxs-lookup"><span data-stu-id="b4732-217">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span></span></summary>
        <returns>
          <span data-ttu-id="b4732-218"><see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-218"><see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-219">Die aktuelle <xref:System.Security.AccessControl.SemaphoreSecurity> wird für eine Regel mit demselben Benutzer und die gleiche durchsucht <xref:System.Security.AccessControl.AccessControlType> als Wert `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-219">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="b4732-220">Wenn keine solche Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="b4732-220">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b4732-221">Wenn Abgleichsregeln gefunden werden, werden ihre Kompatibilität und Vererbung-Flags für die Kompatibilität mit den Flags, die im angegebenen überprüft `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-221">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="b4732-222">Wenn keine kompatible Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="b4732-222">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b4732-223">Wenn eine Regel mit kompatiblen Flags gefunden wird, wird die Rechte in angegebenen `rule` werden aus der kompatiblen Regel entfernt und die Methode gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="b4732-223">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="b4732-224">Wenn `rule` gibt die Rechte, die nicht in der kompatiblen Regel enthalten sind, in Bezug auf diese Rechte wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4732-224">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="b4732-225">Wenn alle Rechte aus der kompatiblen Regel entfernt werden, wird die gesamte Regel aus dem aktuellen entfernt <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-225">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4732-226">Obwohl Sie die Vererbung und Weitergabe Flags für Zugriffsregeln Semaphore, angeben können, erstellen sie mit der <xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A> -Methode, dies wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="b4732-226">Although you can specify inheritance and propagation flags for semaphore access rules, by creating them with the <xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="b4732-227">Vererbung und Weitergabe haben keine Bedeutung für benannte Semaphoren, und sie machen die Wartung von Zugriffsregeln komplizierter.</span><span class="sxs-lookup"><span data-stu-id="b4732-227">Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of access rules more complicated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4732-228">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> -Methode zum Entfernen von Berechtigungen eine <xref:System.Security.AccessControl.AccessControlType.Allow> Regel einer <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-228">The following code example demonstrates the use of the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> method to remove rights from an <xref:System.Security.AccessControl.AccessControlType.Allow> rule in a <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="b4732-229">Darüber hinaus wird gezeigt, dass andere Rechte in `rule` werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b4732-229">It also shows that other rights in `rule` are ignored.</span></span>  
  
 <span data-ttu-id="b4732-230">Das Beispiel erstellt eine <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt und fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu.</span><span class="sxs-lookup"><span data-stu-id="b4732-230">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="b4732-231">Die Rechte gewährt: <xref:System.Security.AccessControl.SemaphoreRights.Modify>, <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions>, und <xref:System.Security.AccessControl.SemaphoreRights.Synchronize>.</span><span class="sxs-lookup"><span data-stu-id="b4732-231">The rights allowed include <xref:System.Security.AccessControl.SemaphoreRights.Modify>, <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions>, and <xref:System.Security.AccessControl.SemaphoreRights.Synchronize>.</span></span> <span data-ttu-id="b4732-232">Das Beispiel erstellt dann eine neue Regel für den aktuellen Benutzer einschließlich <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> und <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> Rechte, und mithilfe der Regel mit der <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> -Methode zum Entfernen <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> aus der <xref:System.Security.AccessControl.AccessControlType.Allow> -Regel in der <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-232">The example then creates a new rule for the current user, including <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> and <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> rights, and uses that rule with the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> method to remove <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> from the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="b4732-233">Die unnötige <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> mit der rechten Maustaste im `rule` wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b4732-233">The extraneous <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> right in `rule` is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-234">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-234">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4732-235">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> und <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4732-235">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-236"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-236"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-237">Eine <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4732-237">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span></span> <span data-ttu-id="b4732-238">Alle von dieser Regel angegebenen Rechte werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b4732-238">Any rights specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="b4732-239">Sucht nach allen Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und entfernt diese (falls vorhanden).</span><span class="sxs-lookup"><span data-stu-id="b4732-239">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-240">Die aktuelle <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt wird für Regeln mit demselben Benutzer und die gleiche durchsucht <xref:System.Security.AccessControl.AccessControlType> als Wert `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-240">The current <xref:System.Security.AccessControl.SemaphoreSecurity> object is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="b4732-241">Alle Rechte `rule` beim Ausführen dieser Suche werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b4732-241">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="b4732-242">Wenn keine übereinstimmenden Regeln gefunden werden, wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4732-242">If no matching rules are found, no action is taken.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4732-243">Das folgende Codebeispiel zeigt, dass die <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A> -Methode entfernt alle Regeln, die Benutzer zu entsprechen und <xref:System.Security.AccessControl.AccessControlType>, Rechte ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b4732-243">The following code example shows that the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights.</span></span>  
  
 <span data-ttu-id="b4732-244">Das Beispiel erstellt eine <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und führt dann zusätzliche Rechte in der <xref:System.Security.AccessControl.AccessControlType.Allow> Regel.</span><span class="sxs-lookup"><span data-stu-id="b4732-244">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span> <span data-ttu-id="b4732-245">Das Beispiel erstellt dann eine neue Regel, die ermöglicht es dem aktuellen Benutzer in Besitz zu nehmen, und entfernen Sie mithilfe der Regel die <xref:System.Security.AccessControl.AccessControlType.Allow> Regel aus der <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-245">The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <xref:System.Security.AccessControl.AccessControlType.Allow> rule from the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-246">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-246">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4732-247">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> und <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4732-247">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-248"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-248"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-249">Das zu entfernende <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Element.</span><span class="sxs-lookup"><span data-stu-id="b4732-249">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to remove.</span></span></param>
        <summary><span data-ttu-id="b4732-250">Sucht nach einer Zugriffssteuerungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</span><span class="sxs-lookup"><span data-stu-id="b4732-250">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-251">Die Regel entfernt wird, nur dann, wenn sie genau `rule` in alle Details, einschließlich der Flags.</span><span class="sxs-lookup"><span data-stu-id="b4732-251">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="b4732-252">Andere Regeln mit demselben Benutzer und <xref:System.Security.AccessControl.AccessControlType> sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="b4732-252">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4732-253">Eine Regel darstellt, eine oder mehrere zugrunde liegenden Zugriffssteuerungseinträge (ACE), und diese Einträge werden aufgeteilt oder nach Bedarf kombiniert werden, wenn Sie die Zugriffsregeln für die Sicherheit für einen Benutzer ändern.</span><span class="sxs-lookup"><span data-stu-id="b4732-253">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="b4732-254">Daher eine Regel ist nicht mehr vorhanden, in der bestimmten Form er hatte, als er hinzugefügt wurde, und klicken Sie in diesem Fall die <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> Methode nicht entfernen können.</span><span class="sxs-lookup"><span data-stu-id="b4732-254">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4732-255">Das folgende Codebeispiel zeigt, dass die <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> Methode erfordert eine genaue Übereinstimmung, um eine Regel zu entfernen und Regeln zum Zulassen und Verweigern von Berechtigungen sind unabhängig voneinander.</span><span class="sxs-lookup"><span data-stu-id="b4732-255">The following code example shows that the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</span></span>  
  
 <span data-ttu-id="b4732-256">Das Beispiel erstellt eine <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und führt dann zusätzliche Rechte in der <xref:System.Security.AccessControl.AccessControlType.Allow> Zugriffsregel.</span><span class="sxs-lookup"><span data-stu-id="b4732-256">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> access rule.</span></span> <span data-ttu-id="b4732-257">Im Beispiel übergibt dann die ursprüngliche <xref:System.Security.AccessControl.AccessControlType.Allow> -Regel an die <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> -Methode, und zeigt die Ergebnisse, die anzeigt, dass nichts gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-257">The example then passes the original <xref:System.Security.AccessControl.AccessControlType.Allow> rule to the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method, and displays the results, showing that nothing is deleted.</span></span> <span data-ttu-id="b4732-258">Im Beispiel wird dann eine Regel, die entspricht, erstellt der <xref:System.Security.AccessControl.AccessControlType.Allow> Regel "" die <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt und erfolgreich verwendet die <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> Methode, um die Regel zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="b4732-258">The example then constructs a rule that matches the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.SemaphoreSecurity> object, and successfully uses the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method to remove the rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-259">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-259">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4732-260">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> und <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4732-260">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-261"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-261"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As SemaphoreAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-262">Eine <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, die den zu suchenden Benutzer angibt, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss.</span><span class="sxs-lookup"><span data-stu-id="b4732-262">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="b4732-263">Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</span><span class="sxs-lookup"><span data-stu-id="b4732-263">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="b4732-264">Sucht nach einer Überwachungssteuerungsregel mit demselben Benutzer wie die angegebene Regel und mit kompatiblen Vererbungs- und Weitergabeflags; wenn eine solche Regel gefunden wird, werden die in der angegebenen Regel enthaltenen Rechte daraus entfernt.</span><span class="sxs-lookup"><span data-stu-id="b4732-264">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span></span></summary>
        <returns>
          <span data-ttu-id="b4732-265"><see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-265"><see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-266">Die aktuelle <xref:System.Security.AccessControl.SemaphoreSecurity> wird eine Überwachungsregel, die denselben Benutzer wie gesucht `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-266">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="b4732-267">Wenn keine solche Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="b4732-267">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b4732-268">Wenn Abgleichsregeln gefunden werden, werden ihre Kompatibilität und Vererbung-Flags für die Kompatibilität mit den Flags, die im angegebenen überprüft `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-268">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="b4732-269">Wenn keine kompatible Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="b4732-269">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b4732-270">Wenn eine Regel mit kompatiblen Flags gefunden wird, wird die Rechte in angegebenen `rule` werden aus der kompatiblen Regel entfernt und die Methode gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="b4732-270">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="b4732-271">Wenn `rule` gibt die Rechte, die nicht in der kompatiblen Regel enthalten sind, in Bezug auf diese Rechte wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4732-271">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="b4732-272">Wenn alle Rechte aus der kompatiblen Regel entfernt werden, wird die gesamte Regel aus dem aktuellen entfernt <xref:System.Security.AccessControl.SemaphoreSecurity> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-272">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4732-273">Obwohl Sie die Vererbung und Weitergabe Flags für Überwachungsregeln Semaphore, angeben können, erstellen sie mit der <xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A> -Methode, dies wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="b4732-273">Although you can specify inheritance and propagation flags for semaphore audit rules, by creating them with the <xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="b4732-274">Vererbung und Weitergabe haben keine Bedeutung für benannte Semaphoren, und sie machen die Pflege Überwachungsregeln komplizierter.</span><span class="sxs-lookup"><span data-stu-id="b4732-274">Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of audit rules more complicated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-275"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-275"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-276">Eine <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, die den zu suchenden Benutzer angibt.</span><span class="sxs-lookup"><span data-stu-id="b4732-276">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for.</span></span> <span data-ttu-id="b4732-277">Alle von dieser Regel angegebenen Rechte werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b4732-277">Any rights specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="b4732-278">Sucht alle Überwachungsregeln, die denselben Benutzer wie die angegebene Regel aufweisen, und entfernt sie, sofern sie gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="b4732-278">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-279">Die aktuelle <xref:System.Security.AccessControl.SemaphoreSecurity> wird gesucht Überwachungsregeln, die denselben Benutzer wie `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-279">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="b4732-280">Alle Rechte `rule` beim Ausführen dieser Suche werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b4732-280">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="b4732-281">Alle Abgleichsregeln werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="b4732-281">All matching rules are removed.</span></span> <span data-ttu-id="b4732-282">Wenn keine übereinstimmenden Regeln gefunden werden, wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4732-282">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-283"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-283"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-284">Das zu entfernende <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />-Element.</span><span class="sxs-lookup"><span data-stu-id="b4732-284">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to remove.</span></span></param>
        <summary><span data-ttu-id="b4732-285">Sucht nach einer Überwachungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</span><span class="sxs-lookup"><span data-stu-id="b4732-285">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-286">Die Regel entfernt wird, nur dann, wenn sie genau `rule` in alle Details, einschließlich der Flags.</span><span class="sxs-lookup"><span data-stu-id="b4732-286">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="b4732-287">Andere Überwachungsregeln für denselben Benutzer sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="b4732-287">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4732-288">Eine Regel darstellt, eine oder mehrere zugrunde liegenden Zugriffssteuerungseinträge (ACE), und diese Einträge werden aufgeteilt oder nach Bedarf kombiniert werden, wenn Sie die Überwachungssicherheitsregeln für einen Benutzer ändern.</span><span class="sxs-lookup"><span data-stu-id="b4732-288">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="b4732-289">Daher eine Regel ist nicht mehr vorhanden, in der bestimmten Form er hatte, als er hinzugefügt wurde, und klicken Sie in diesem Fall die <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A> Methode nicht entfernen können.</span><span class="sxs-lookup"><span data-stu-id="b4732-289">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-290"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-290"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-291">Das hinzuzufügende <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-291">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add.</span></span> <span data-ttu-id="b4732-292">Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b4732-292">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="b4732-293">Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig von <see cref="T:System.Security.AccessControl.AccessControlType" />, und fügt anschließend die angegebene Regel hinzu.</span><span class="sxs-lookup"><span data-stu-id="b4732-293">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-294">Wenn es keine Access-Regeln sind, deren Benutzer, die angegebene Regel übereinstimmt `rule` hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-294">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4732-295">Im folgenden Codebeispiel wird veranschaulicht wie die <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> Methode ersetzt alle Regeln für den übereinstimmenden Benutzer durch die Regel für die Übereinstimmung angegeben.</span><span class="sxs-lookup"><span data-stu-id="b4732-295">The following code example shows how the <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="b4732-296">Das Beispiel erstellt eine <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt und fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu.</span><span class="sxs-lookup"><span data-stu-id="b4732-296">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="b4732-297">Das Beispiel erstellt dann eine neue Regel, die der aktuelle Benutzer Vollzugriff, und mithilfe der <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> Methode, um sowohl die bestehenden Regeln mit der neuen Regel zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="b4732-297">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> method to replace both of the existing rules with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-298">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-298">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4732-299">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> und <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4732-299">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-300"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-300"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-301">Das hinzuzufügende <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-301">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add.</span></span> <span data-ttu-id="b4732-302">Der Benutzer und der <see cref="T:System.Security.AccessControl.AccessControlType" /> dieser Regel bestimmen die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b4732-302">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="b4732-303">Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und fügt anschließend die angegebene Regel hinzu.</span><span class="sxs-lookup"><span data-stu-id="b4732-303">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-304">Wenn die angegebene Regel hat <xref:System.Security.AccessControl.AccessControlType.Allow>, die Auswirkungen dieser Methode sind alle entfernen <xref:System.Security.AccessControl.AccessControlType.Allow> Regeln für den angegebenen Benutzer, die sie durch die angegebene Regel ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-304">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="b4732-305">Wenn die angegebene Regel hat <xref:System.Security.AccessControl.AccessControlType.Deny>, dass alle <xref:System.Security.AccessControl.AccessControlType.Deny> Regeln für den angegebenen Benutzer durch die angegebene Regel ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="b4732-305">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="b4732-306">Wenn es keine Regeln, deren Benutzer sind und <xref:System.Security.AccessControl.AccessControlType> entsprechen die angegebene Regel `rule` hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-306">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4732-307">Im folgenden Codebeispiel wird veranschaulicht wie die <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> -Methode entfernt alle Regeln, die sowohl mit den Benutzer entsprechen und die <xref:System.Security.AccessControl.AccessControlType> von `rule`, ersetzen sie mit `rule`.</span><span class="sxs-lookup"><span data-stu-id="b4732-307">The following code example shows how the <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, replacing them with `rule`.</span></span>  
  
 <span data-ttu-id="b4732-308">Das Beispiel erstellt eine <xref:System.Security.AccessControl.SemaphoreSecurity> -Objekt und fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu.</span><span class="sxs-lookup"><span data-stu-id="b4732-308">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="b4732-309">Das Beispiel erstellt dann eine neue Regel, die der aktuelle Benutzer Vollzugriff, und mithilfe der <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> Methode zum Ersetzen des vorhandenen Zulassungsregel mit der neuen Regel.</span><span class="sxs-lookup"><span data-stu-id="b4732-309">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> method to replace the existing Allow rule with the new rule.</span></span> <span data-ttu-id="b4732-310">Die Regel, die Zugriff ablehnt, wird nicht beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="b4732-310">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4732-311">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <xref:System.Threading.Semaphore> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4732-311">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4732-312">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> und <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4732-312">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-313"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-313"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b4732-314">Das hinzuzufügende <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-314">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to add.</span></span> <span data-ttu-id="b4732-315">Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b4732-315">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="b4732-316">Entfernt alle Überwachungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig vom <see cref="T:System.Security.AccessControl.AuditFlags" />-Wert, und fügt danach die angegebene Regel hinzu.</span><span class="sxs-lookup"><span data-stu-id="b4732-316">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4732-317">Wenn es keine Überwachungsregeln sind, deren Benutzer, die angegebene Regel übereinstimmt `rule` hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b4732-317">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4732-318"><paramref name="rule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4732-318"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>