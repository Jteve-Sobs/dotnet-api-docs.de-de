<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SemaphoreSecurity.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac584c547789bd5907b052331368ba36af03e2fe08f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84c547789bd5907b052331368ba36af03e2fe08f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Represents the Windows access control security for a named semaphore.</source>
          <target state="translated">Stellt die Windows-Zugriffssteuerungssicherheit für ein benanntes Semaphor dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object specifies access rights for a named system semaphore, and also specifies how access attempts are audited.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt gibt an, über Zugriffsrechte für ein benanntes Systemsemaphor und gibt außerdem an, wie Zugriffsversuche überwacht werden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Access rights to the semaphore are expressed as rules, with each access rule represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> object.</source>
          <target state="translated">Über die Zugriffsrechte für das Semaphor werden als Regeln ausgedrückt, mit jeder Zugriffsregel durch eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Each auditing rule is represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> object.</source>
          <target state="translated">Jede Überwachungsregel wird dargestellt, indem ein <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">Dies spiegelt den zugrunde liegenden Windows-Sicherheitssystem, in dem jedes sicherungsfähige Objekt verfügt über höchstens einen besitzerverwaltete Zugriffssteuerungsliste (DACL), steuert den Zugriff auf gesicherte Objekt und darf höchstens eine Systemzugriffssteuerungsliste (SACL), der angibt, denen der Zugriff Versuche werden überwacht.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">Die DACL und SACL sind Listen von Zugriffssteuerungseinträgen (ACE) sortiert, die Zugriff und die Überwachung für Benutzer und Gruppen angeben.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> object might represent more than one ACE.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> oder <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> Objekt möglicherweise mehr als ein ACE darstellen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object can represent a local semaphore or a named system semaphore.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt kann ein lokales Semaphor oder ein benanntes Systemsemaphor darstellen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Windows access control security is meaningful only for named system semaphores.</source>
          <target state="translated">Windows-zugriffssteuerungssicherheit ist nur für System benannte Semaphoren sinnvoll.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph>, und <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> Klassen blenden die Implementierungsdetails von ACLs und ACEs.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">Sie können damit siebzehn verschiedenen ACE-Typen und die Komplexität der ordnungsgemäßen Verwaltung der Vererbung und Weitergabe von Zugriffsrechten ignorieren.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>These objects are also designed to prevent the following common access control errors:</source>
          <target state="translated">Diese Objekte sind aber auch zu verhindern, dass die folgenden häufigen Zugriffssteuerungsfehler konzipiert:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Creating a security descriptor with a null DACL.</source>
          <target state="translated">Erstellen eine Sicherheitsbeschreibung mit einer null-DACL an.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">Ein null-Verweis auf eine DACL ermöglicht allen Benutzern auf ein Objekt, das potenziell erstellen einen Denial-of-Service-Angriff Zugriffsregeln hinzufügen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt beginnt immer mit einer leeren DACL, die für alle Benutzer der Zugriff verweigert wird.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Violating the canonical ordering of ACEs.</source>
          <target state="translated">Verletzung der die kanonische Reihenfolge der ACEs.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">Wenn die ACE-Liste in die DACL nicht kanonische Reihenfolge gehalten wird, möglicherweise versehentlich auf Benutzer Zugriff auf das gesicherte Objekt gewährt werden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">Verweigerte Zugriffsrechte müssen z. B. immer vor zulässigen Zugriffsrechte aufgeführt werden.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objects maintain the correct order internally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekte beibehalten die richtige Reihenfolge intern.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">Bearbeiten von Security Descriptor Flags, die nur Ressourcen-Manager-gesteuert werden soll.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Creating invalid combinations of ACE flags.</source>
          <target state="translated">Das Erstellen ungültiger Kombinationen von ACE-Flags.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Manipulating inherited ACEs.</source>
          <target state="translated">Bearbeiten von geerbten ACEs aus.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">Vererbung und Weitergabe werden von den Ressourcen-Manager als Reaktion auf Änderungen behandelt, die Sie Zugriffs-und Überwachungsregeln vornehmen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">Einfügen von bedeutungslosen ACEs in ACLs aus.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</source>
          <target state="translated">Die nur Funktionen, die nicht durch die Sicherheitsobjekte .NET unterstützt werden gefährliche Aktivitäten, die von der Mehrheit der Anwendungsentwickler, z. B. die folgenden vermieden werden sollte:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">Low-Level-Aufgaben, die normalerweise von den Ressourcen-Manager ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">Hinzufügen oder Entfernen von Zugriffssteuerungseinträgen Möglichkeiten, die die kanonische Reihenfolge nicht beibehalten.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>To modify Windows access control security for a named semaphore, use the <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Zum Ändern der Windows-zugriffssteuerungssicherheit für ein benanntes Semaphor verwendet die <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode zum Abrufen der <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Modify the security object by adding and removing rules, and then use the <ph id="ph1">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach it.</source>
          <target state="translated">Ändern Sie das Sicherheitsobjekt durch Hinzufügen und Entfernen von Regeln, und verwenden Sie dann die <ph id="ph1">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> -Methode erneut an.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object do not affect the access levels of the named semaphore until you call the <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named semaphore.</source>
          <target state="translated">Änderungen an einer <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt haben keinen Einfluss auf die Zugriffsebenen der das benannte Semaphor erst nach dem Aufruf der <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode, um das benannte Semaphor geänderte Sicherheitsobjekts zuweisen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>To copy access control security from one semaphore to another, use the <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object representing the access and audit rules for the first semaphore, then use the <ph id="ph3">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method, or a constructor that accepts a <ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, to assign those rules to the second semaphore.</source>
          <target state="translated">Um zugriffssteuerungssicherheit aus einem Semaphor in einen anderen kopieren möchten, verwenden die <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode zum Abrufen einer <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt, das die Zugriffs- und Überwachungsrichtlinien Regeln für das erste Semaphor darstellt, verwenden Sie die <ph id="ph3">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> Methode oder einen Konstruktor, der eine akzeptiert<ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt, das zweite Semaphor diese Regeln zuweisen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to set access rules for a named semaphore, and the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">Benutzer mit einer Investition in Security Descriptor Definition Language (SDDL) können die <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> Methode, um die festgelegten Zugriffsregeln für ein benanntes Semaphor, und die <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> Methode, um eine Zeichenfolge abzurufen, die die Zugriffsregeln im SDDL-Format darstellt.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>This is not recommended for new development.</source>
          <target state="translated">Dies ist nicht für Neuentwicklungen empfohlen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Sicherheit auf Synchronisierungsobjekte ist Windows 98 oder Windows Millennium Edition nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Trennung zwischen <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regeln und <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> Regeln und die Kombination der Rechte auf kompatible Regeln anzeigt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und zeigt das resultierende Paar von Regeln.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Anschließend können Sie neue Rechte für den aktuellen Benutzer und das Ergebnis wird angezeigt, dass der neuen Rechte mit dem vorhandenen zusammengeführt werden <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreSecurity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph> class with default values.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph>-Klasse mit Standardwerten.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt beginnt immer mit einer leeren freigegebenen Zugriffssteuerungsliste (DACL), die für alle Benutzer der Zugriff verweigert wird.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name of the system semaphore whose access control security rules are to be retrieved.</source>
          <target state="translated">Der Name des Systemsemaphors, dessen Regeln für die Zugriffssteuerungssicherheit abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>A combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> flags specifying the sections to retrieve.</source>
          <target state="translated">Eine Kombination von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph>-Flags, die die abzurufenden Abschnitte angeben.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph> class with the specified sections of the access control security rules from the system semaphore with the specified name.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph>-Klasse mit den angegebenen Abschnitten der Regeln für die Zugriffssteuerungssicherheit aus dem Systemsemaphor mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This constructor allows you to obtain the access control security for a named system semaphore without first creating a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">Mit diesem Konstruktor können Sie die zugriffssteuerungssicherheit für ein benanntes Systemsemaphor abrufen, ohne zuvor einen <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Caution must be exercised when working with named system objects.</source>
          <target state="translated">Bei der Arbeit mit benannten Systemobjekte Vorsicht.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If there is a system object named <ph id="ph1">`name`</ph> that is not a semaphore, its control access security might be retrieved.</source>
          <target state="translated">Es ist ein Systemobjekt, das mit dem Namen <ph id="ph1">`name`</ph> keine Semaphore ist, kann die Sicherheit der Steuerelement-Zugriff abgerufen werden.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
          <source>Gets the enumeration that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph> class uses to represent access rights.</source>
          <target state="translated">Ruft die Enumeration ab, mit deren Hilfe die <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph>-Klasse Zugriffsrechte darstellt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> enumeration.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, das die <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph>-Enumeration darstellt.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">Abgeleitete Klassen die <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> -Klasse überschreiben die <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> -Eigenschaft und der Rückgabewert den Typ, die sie verwenden, um die Darstellung von Zugriffsrechten.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">Beim Arbeiten mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Enumerationstyp mit einzelnen Sicherheitsobjekts verwendet.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values specifying the access rights to allow or deny, cast to an integer.</source>
          <target state="translated">Eine bitweise Kombination von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph>-Werten, die die zu verweigernden oder zu gewährenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named semaphores, because they have no hierarchy.</source>
          <target state="translated">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named semaphores, because they have no hierarchy.</source>
          <target state="translated">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named semaphores, because they have no hierarchy.</source>
          <target state="translated">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          <target state="translated">Erstellt eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> object representing the specified rights for the specified user.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>-Objekt, das die angegebenen Rechte für den angegebenen Benutzer darstellt.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The recommended way to create access control rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> class.</source>
          <target state="translated">Die empfohlene Methode zum Erstellen von Zugriffssteuerungsregeln ist die Verwendung von den Konstruktoren für die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">Obwohl Vererbung und Weitergabe Flags für benannte Semaphoren bedeutungslos sind, ist es weiterhin möglich, geben sie dies nicht empfohlen, die da es unnötig die Verwaltung der Regeln, z. B. etwas komplizierter macht durch die Kombination von Regeln stören Andernfalls würde, die kompatibel sein.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated">Für <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> oder <ph id="ph4">&lt;paramref name="type" /&gt;</ph> ist ein ungültiger Wert angegeben.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> ist 0 (null).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> ist weder vom Typ <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> noch von einem Typ wie etwa <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, der in den <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>-Typ konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph> class uses to represent access rules.</source>
          <target state="translated">Ruft den Typ ab, mit dessen Hilfe die <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph>-Klasse die Zugriffsregeln darstellt.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> class.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, das die <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>-Klasse darstellt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rules.</source>
          <target state="translated">Abgeleitete Klassen die <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> -Klasse überschreiben die <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> Eigenschaft und die Rückgabewerte der Darstellung von Zugriffsregeln Typ.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">Bei der Arbeit mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Zugriffsregeltyp mit einzelnen Sicherheitsobjekts verwendet.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The access control rule to add.</source>
          <target state="translated">Die hinzuzufügende Zugriffssteuerungsregel.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Searches for a matching rule with which the new rule can be merged.</source>
          <target state="translated">Sucht nach einer übereinstimmenden Regel, mit der die neue Regel zusammengeführt werden kann.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A&gt;</ph> method searches for rules with the same user or group and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A&gt;</ph> Methode sucht Regeln mit dem gleichen Benutzer oder die Gruppe und die gleiche <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> als <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Wenn keiner gefunden werden, <ph id="ph1">`rule`</ph> hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">Wenn eine entsprechende Regel gefunden wird, wird die Rechte in <ph id="ph1">`rule`</ph> mit einer vorhandenen Regel zusammengeführt werden.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Trennung zwischen <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regeln und <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> Regeln und die Kombination der Rechte auf kompatible Regeln anzeigt.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und zeigt das resultierende Paar von Regeln.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Anschließend können Sie neue Rechte für den aktuellen Benutzer und das Ergebnis wird angezeigt, dass der neuen Rechte mit dem vorhandenen zusammengeführt werden <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The audit rule to add.</source>
          <target state="translated">Die hinzuzufügende Überwachungsregel.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The user specified by this rule determines the search.</source>
          <target state="translated">Der von dieser Regel angegebene Benutzer bestimmt die Suche.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          <target state="translated">Sucht nach einer Überwachungsregel, mit der die neue Regel zusammengeführt werden kann.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A&gt;</ph> method searches for rules with the same user or group as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A&gt;</ph> Methode sucht nach Regeln mit dem gleichen Benutzer oder Gruppe als <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Wenn keiner gefunden werden, <ph id="ph1">`rule`</ph> hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">Wenn eine entsprechende Regel gefunden wird, werden die Flags in <ph id="ph1">`rule`</ph> in die vorhandene Regel zusammengeführt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values specifying the access rights to audit, cast to an integer.</source>
          <target state="translated">Eine bitweise Kombination von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph>-Werten, die die zu überwachenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specify whether to audit successful access, failed access, or both.</source>
          <target state="translated">Eine bitweise Kombination von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph>-Werten, die angeben, ob erfolgreiche Zugriffsversuche und/oder fehlgeschlagene Zugriffsversuche überwacht werden sollen.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</source>
          <target state="translated">Erstellt eine neue Überwachungsregel, die den Benutzer angibt, auf den diese Regel angewendet wird, sowie die zu überwachenden Zugriffsrechte und das Ergebnis, das die Überwachungsregel auslöst.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph> object representing the specified audit rule for the specified user.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph>-Objekt, das die angegebene Überwachungsregel für den angegebenen Benutzer darstellt.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The return type of the method is the base class, <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, but the return value can be cast safely to the derived class.</source>
          <target state="translated">Der Rückgabetyp der Methode entspricht der Basisklasse <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, er kann jedoch problemlos in die abgeleitete Klasse umgewandelt werden.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The recommended way to create audit rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> class.</source>
          <target state="translated">Die empfohlene Methode zum Erstellen von Überwachungsregeln ist die Verwendung von den Konstruktoren für die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAuditRule&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them.</source>
          <target state="translated">Obwohl Vererbung und Weitergabe Flags für benannte Semaphoren bedeutungslos sind, ist es weiterhin möglich, anzugeben.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">Dies wird nicht empfohlen, da sie unnötig die Verwaltung der Regeln, z. B. kompliziert durch die Kombination von Regeln, die sonst kompatibel stören.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated">Für <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> oder <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> ist ein ungültiger Wert angegeben.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> ist 0 (null).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> ist weder vom Typ <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> noch von einem Typ wie etwa <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, der in den <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>-Typ konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph> class uses to represent audit rules.</source>
          <target state="translated">Ruft den Typ ab, mit dessen Hilfe die <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreSecurity" /&gt;</ph>-Klasse Überwachungsregeln darstellt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph> class.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt, das die <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph>-Klasse darstellt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent audit rights.</source>
          <target state="translated">Abgeleitete Klassen die <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> -Klasse überschreiben die <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> -Eigenschaft und der Rückgabewert den Typ, die sie verwenden, um die Überwachung für die Darstellung.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">Bei der Arbeit mit Arrays oder Auflistungen, die mehrere Typen der Sicherheitsobjekte enthalten, verwenden Sie diese Eigenschaft, um zu bestimmen, den richtigen Audit Regeltyp mit einzelnen Sicherheitsobjekts verwendet.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>, die den Benutzer und den <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> angibt, nach denen gesucht werden soll, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Searches for an access control rule with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          <target state="translated">Sucht nach einer Zugriffssteuerungsregel mit demselben Benutzer und demselben <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (gewähren oder verweigern) wie die angegebene Regel sowie mit kompatiblen Vererbungs- und Weitergabeflags. Wenn eine solche Regel gefunden wird, werden die in der angegebenen Zugriffsregel enthaltenen Rechte daraus entfernt.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine kompatible Regel gefunden wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> is searched for a rule that has the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Die aktuelle <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> wird für eine Regel mit demselben Benutzer und die gleiche durchsucht <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> als Wert <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn keine solche Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">Wenn Abgleichsregeln gefunden werden, werden ihre Kompatibilität und Vererbung-Flags für die Kompatibilität mit den Flags, die im angegebenen überprüft <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn keine kompatible Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Wenn eine Regel mit kompatiblen Flags gefunden wird, wird die Rechte in angegebenen <ph id="ph1">`rule`</ph> werden aus der kompatiblen Regel entfernt und die Methode gibt <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Wenn <ph id="ph1">`rule`</ph> gibt die Rechte, die nicht in der kompatiblen Regel enthalten sind, in Bezug auf diese Rechte wird keine Aktion ausgeführt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Wenn alle Rechte aus der kompatiblen Regel entfernt werden, wird die gesamte Regel aus dem aktuellen entfernt <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Although you can specify inheritance and propagation flags for semaphore access rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">Obwohl Sie die Vererbung und Weitergabe Flags für Zugriffsregeln Semaphore, angeben können, erstellen sie mit der <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A&gt;</ph> -Methode, dies wird nicht empfohlen.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of access rules more complicated.</source>
          <target state="translated">Vererbung und Weitergabe haben keine Bedeutung für benannte Semaphoren, und sie machen die Wartung von Zugriffsregeln komplizierter.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A&gt;</ph> method to remove rights from an <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in a <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A&gt;</ph> -Methode zum Entfernen von Berechtigungen eine <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel einer <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>It also shows that other rights in <ph id="ph1">`rule`</ph> are ignored.</source>
          <target state="translated">Darüber hinaus wird gezeigt, dass andere Rechte in <ph id="ph1">`rule`</ph> werden ignoriert.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt und fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The rights allowed include <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize&gt;</ph>.</source>
          <target state="translated">Die Rechte gewährt: <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions&gt;</ph>, und <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example then creates a new rule for the current user, including <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership&gt;</ph> rights, and uses that rule with the <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A&gt;</ph> method to remove <ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions&gt;</ph> from the <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph6">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Das Beispiel erstellt dann eine neue Regel für den aktuellen Benutzer einschließlich <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions&gt;</ph> und <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership&gt;</ph> Rechte, und mithilfe der Regel mit der <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A&gt;</ph> -Methode zum Entfernen <ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions&gt;</ph> aus der <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> -Regel in der <ph id="ph6">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The extraneous <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership&gt;</ph> right in <ph id="ph2">`rule`</ph> is ignored.</source>
          <target state="translated">Die unnötige <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership&gt;</ph> mit der rechten Maustaste im <ph id="ph2">`rule`</ph> wird ignoriert.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>, die den Benutzer und den <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> angibt, nach denen gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">Alle von dieser Regel angegebenen Rechte werden ignoriert.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Searches for all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule and, if found, removes them.</source>
          <target state="translated">Sucht nach allen Zugriffssteuerungsregeln mit demselben Benutzer und demselben <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (gewähren oder verweigern) wie die angegebene Regel und entfernt diese (falls vorhanden).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object is searched for rules that have the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Die aktuelle <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt wird für Regeln mit demselben Benutzer und die gleiche durchsucht <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> als Wert <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Alle Rechte <ph id="ph1">`rule`</ph> beim Ausführen dieser Suche werden ignoriert.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Wenn keine übereinstimmenden Regeln gefunden werden, wird keine Aktion ausgeführt.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A&gt;</ph> method removes all rules that match user and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ignoring rights.</source>
          <target state="translated">Das folgende Codebeispiel zeigt, dass die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A&gt;</ph> -Methode entfernt alle Regeln, die Benutzer zu entsprechen und <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, Rechte ignoriert.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und führt dann zusätzliche Rechte in der <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule from the <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Das Beispiel erstellt dann eine neue Regel, die ermöglicht es dem aktuellen Benutzer in Besitz zu nehmen, und entfernen Sie mithilfe der Regel die <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel aus der <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> to remove.</source>
          <target state="translated">Das zu entfernende <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Sucht nach einer Zugriffssteuerungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">Die Regel entfernt wird, nur dann, wenn sie genau <ph id="ph1">`rule`</ph> in alle Details, einschließlich der Flags.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Other rules with the same user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> are not affected.</source>
          <target state="translated">Andere Regeln mit demselben Benutzer und <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> sind nicht betroffen.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">Eine Regel darstellt, eine oder mehrere zugrunde liegenden Zugriffssteuerungseinträge (ACE), und diese Einträge werden aufgeteilt oder nach Bedarf kombiniert werden, wenn Sie die Zugriffsregeln für die Sicherheit für einen Benutzer ändern.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Daher eine Regel ist nicht mehr vorhanden, in der bestimmten Form er hatte, als er hinzugefügt wurde, und klicken Sie in diesem Fall die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> Methode nicht entfernen können.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</source>
          <target state="translated">Das folgende Codebeispiel zeigt, dass die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> Methode erfordert eine genaue Übereinstimmung, um eine Regel zu entfernen und Regeln zum Zulassen und Verweigern von Berechtigungen sind unabhängig voneinander.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rule.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt, fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu und führt dann zusätzliche Rechte in der <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Zugriffsregel.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example then passes the original <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule to the <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method, and displays the results, showing that nothing is deleted.</source>
          <target state="translated">Im Beispiel übergibt dann die ursprüngliche <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> -Regel an die <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> -Methode, und zeigt die Ergebnisse, die anzeigt, dass nichts gelöscht wird.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example then constructs a rule that matches the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, and successfully uses the <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method to remove the rule.</source>
          <target state="translated">Im Beispiel wird dann eine Regel, die entspricht, erstellt der <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regel "" die <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt und erfolgreich verwendet die <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> Methode, um die Regel zu entfernen.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph>, die den zu suchenden Benutzer angibt, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          <target state="translated">Sucht nach einer Überwachungssteuerungsregel mit demselben Benutzer wie die angegebene Regel und mit kompatiblen Vererbungs- und Weitergabeflags; wenn eine solche Regel gefunden wird, werden die in der angegebenen Regel enthaltenen Rechte daraus entfernt.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine kompatible Regel gefunden wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> is searched for an audit rule that has the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Die aktuelle <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> wird eine Überwachungsregel, die denselben Benutzer wie gesucht <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn keine solche Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">Wenn Abgleichsregeln gefunden werden, werden ihre Kompatibilität und Vererbung-Flags für die Kompatibilität mit den Flags, die im angegebenen überprüft <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn keine kompatible Regel gefunden wird, wird keine Aktion ausgeführt, und die Methode gibt <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Wenn eine Regel mit kompatiblen Flags gefunden wird, wird die Rechte in angegebenen <ph id="ph1">`rule`</ph> werden aus der kompatiblen Regel entfernt und die Methode gibt <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Wenn <ph id="ph1">`rule`</ph> gibt die Rechte, die nicht in der kompatiblen Regel enthalten sind, in Bezug auf diese Rechte wird keine Aktion ausgeführt.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Wenn alle Rechte aus der kompatiblen Regel entfernt werden, wird die gesamte Regel aus dem aktuellen entfernt <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Although you can specify inheritance and propagation flags for semaphore audit rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">Obwohl Sie die Vererbung und Weitergabe Flags für Überwachungsregeln Semaphore, angeben können, erstellen sie mit der <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A&gt;</ph> -Methode, dies wird nicht empfohlen.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of audit rules more complicated.</source>
          <target state="translated">Vererbung und Weitergabe haben keine Bedeutung für benannte Semaphoren, und sie machen die Pflege Überwachungsregeln komplizierter.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph> that specifies the user to search for.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph>, die den zu suchenden Benutzer angibt.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">Alle von dieser Regel angegebenen Rechte werden ignoriert.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          <target state="translated">Sucht alle Überwachungsregeln, die denselben Benutzer wie die angegebene Regel aufweisen, und entfernt sie, sofern sie gefunden wurden.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> is searched for audit rules that have the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Die aktuelle <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> wird gesucht Überwachungsregeln, die denselben Benutzer wie <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Alle Rechte <ph id="ph1">`rule`</ph> beim Ausführen dieser Suche werden ignoriert.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>All matching rules are removed.</source>
          <target state="translated">Alle Abgleichsregeln werden entfernt.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Wenn keine übereinstimmenden Regeln gefunden werden, wird keine Aktion ausgeführt.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph> to remove.</source>
          <target state="translated">Das zu entfernende <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph>-Element.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Sucht nach einer Überwachungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">Die Regel entfernt wird, nur dann, wenn sie genau <ph id="ph1">`rule`</ph> in alle Details, einschließlich der Flags.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">Andere Überwachungsregeln für denselben Benutzer sind nicht betroffen.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">Eine Regel darstellt, eine oder mehrere zugrunde liegenden Zugriffssteuerungseinträge (ACE), und diese Einträge werden aufgeteilt oder nach Bedarf kombiniert werden, wenn Sie die Überwachungssicherheitsregeln für einen Benutzer ändern.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Daher eine Regel ist nicht mehr vorhanden, in der bestimmten Form er hatte, als er hinzugefügt wurde, und klicken Sie in diesem Fall die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> Methode nicht entfernen können.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, and then adds the specified rule.</source>
          <target state="translated">Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig von <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, und fügt anschließend die angegebene Regel hinzu.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Wenn es keine Access-Regeln sind, deren Benutzer, die angegebene Regel übereinstimmt <ph id="ph1">`rule`</ph> hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A&gt;</ph> method replaces all rules for the matching user with the rule specified for the match.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht wie die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A&gt;</ph> Methode ersetzt alle Regeln für den übereinstimmenden Benutzer durch die Regel für die Übereinstimmung angegeben.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt und fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A&gt;</ph> method to replace both of the existing rules with the new rule.</source>
          <target state="translated">Das Beispiel erstellt dann eine neue Regel, die der aktuelle Benutzer Vollzugriff, und mithilfe der <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A&gt;</ph> Methode, um sowohl die bestehenden Regeln mit der neuen Regel zu ersetzen.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> of this rule determine the rules to remove before this rule is added.</source>
          <target state="translated">Der Benutzer und der <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> dieser Regel bestimmen die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Removes all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          <target state="translated">Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer und demselben <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (gewähren oder verweigern) wie die angegebene Regel und fügt anschließend die angegebene Regel hinzu.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, the effect of this method is to remove all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">Wenn die angegebene Regel hat <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, die Auswirkungen dieser Methode sind alle entfernen <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> Regeln für den angegebenen Benutzer, die sie durch die angegebene Regel ersetzt werden.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">Wenn die angegebene Regel hat <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, dass alle <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> Regeln für den angegebenen Benutzer durch die angegebene Regel ersetzt werden.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>If there are no rules whose user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> match the specified rule, <ph id="ph2">`rule`</ph> is added.</source>
          <target state="translated">Wenn es keine Regeln, deren Benutzer sind und <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> entsprechen die angegebene Regel <ph id="ph2">`rule`</ph> hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A&gt;</ph> method removes all rules that match both the user and the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> of <ph id="ph3">`rule`</ph>, replacing them with <ph id="ph4">`rule`</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht wie die <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A&gt;</ph> -Methode entfernt alle Regeln, die sowohl mit den Benutzer entsprechen und die <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> von <ph id="ph3">`rule`</ph>, ersetzen sie mit <ph id="ph4">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">Das Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> -Objekt und fügt die Regeln, die zulassen und verweigern verschiedene Rechte für den aktuellen Benutzer hinzu.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A&gt;</ph> method to replace the existing Allow rule with the new rule.</source>
          <target state="translated">Das Beispiel erstellt dann eine neue Regel, die der aktuelle Benutzer Vollzugriff, und mithilfe der <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A&gt;</ph> Methode zum Ersetzen des vorhandenen Zulassungsregel mit der neuen Regel.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>The rule that denies access is not affected.</source>
          <target state="translated">Die Regel, die Zugriff ablehnt, wird nicht beeinflusst.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">In diesem Beispiel wird das Sicherheitsobjekt, nicht angefügt ein <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiele, die Sicherheitsobjekte angefügt werden, finden Sie <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph> to add.</source>
          <target state="translated">Das hinzuzufügende <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> value, and then adds the specified rule.</source>
          <target state="translated">Entfernt alle Überwachungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig vom <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph>-Wert, und fügt danach die angegebene Regel hinzu.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Wenn es keine Überwachungsregeln sind, deren Benutzer, die angegebene Regel übereinstimmt <ph id="ph1">`rule`</ph> hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>