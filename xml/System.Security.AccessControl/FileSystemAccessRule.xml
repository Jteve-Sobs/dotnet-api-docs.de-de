<Type Name="FileSystemAccessRule" FullName="System.Security.AccessControl.FileSystemAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e804bc14ede692213f16b0399a1bfc02a0fee72" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52382859" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystemAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSystemAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type FileSystemAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Abstaktion eines Zugriffssteuerungseintrags (Access Control Entry - ACE) dar, der Zugriffsregeln für eine Datei oder ein Verzeichnis darstellt. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemAccessRule> -Klasse stellt eine Abstraktion der zugrunde liegenden Zugriffssteuerungseintrags (ACE), der angibt, ein Benutzerkonto, vom Zugriffstyp (Lesen, schreiben und So weiter) bereitgestellt werden, und ob Sie zulassen oder verweigern, richtig.  Diese Klasse kann auch angeben, wie die Regeln für den Zugriff auf untergeordnete Objekte weitergegeben werden.  
  
 Verwenden der <xref:System.Security.AccessControl.FileSystemAccessRule> Klasse, um eine neue Zugriffsregel zu erstellen.  Sie können beibehalten, die Regel mit der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity> Klasse hinzufügen und entfernen Sie dann einen Zugriffssteuerungseintrag (ACE) aus einer Datei.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Ein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt, das einen Verweis auf ein Benutzerkonto kapselt.</param>
        <param name="fileSystemRights">Ein <see cref="T:System.Security.AccessControl.FileSystemRights" />-Wert, der die Art der der Zugriffsregel zugeordneten Operation angibt.</param>
        <param name="type">Ein <see cref="T:System.Security.AccessControl.AccessControlType" />-Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse mit einem Verweis auf ein Benutzerkonto, einem Wert, der die der Zugriffsregel zugeordnete Operation angibt, und einem Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Konstruktor können Sie eine Zugriffsregel erstellen, die Sie beibehalten können, mit der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Zugriffssteuerungsregeln definieren Konto Rechte, die bestimmen, welche Aktionen zulässig sind, oder auf Computern unter Microsoft Windows nicht zulässig.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="identity" />-Parameter ist kein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identity" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">An den <paramref name="type" />-Parameter wurde eine falsche Enumeration übergeben.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Der Name eines Benutzerkontos.</param>
        <param name="fileSystemRights">Ein <see cref="T:System.Security.AccessControl.FileSystemRights" />-Wert, der die Art der der Zugriffsregel zugeordneten Operation angibt.</param>
        <param name="type">Ein <see cref="T:System.Security.AccessControl.AccessControlType" />-Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse mit den Namen eines Benutzerkontos, einem Wert, der die der Zugriffsregel zugeordnete Operation angibt, und einem Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Konstruktor können Sie eine Zugriffsregel erstellen, die Sie beibehalten können, mit der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Zugriffssteuerungsregeln definieren Konto Rechte, die bestimmen, welche Aktionen zulässig sind, oder auf Computern unter Microsoft Windows nicht zulässig.  
  
 Die `identity` Parameter muss ein gültiges Konto auf dem lokalen Computer oder die Domäne identifizieren.  Die Zeichenfolge hat die Form, in dem `DOMAIN` ist der Name der einen gültigen Namen der Domänen- oder Computernamen und `account` ist der Name eines gültigen Benutzerkontos in einer Domäne oder den Computer: `DOMAIN\account`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Security.AccessControl.FileSecurity> Klasse hinzufügen und entfernen Sie dann einen Zugriffssteuerungseintrag (ACE) aus einer Datei.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identity" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">An den <paramref name="type" />-Parameter wurde eine falsche Enumeration übergeben.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Ein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt, das einen Verweis auf ein Benutzerkonto kapselt.</param>
        <param name="fileSystemRights">Ein <see cref="T:System.Security.AccessControl.FileSystemRights" />-Wert, der die Art der der Zugriffsregel zugeordneten Operation angibt.</param>
        <param name="inheritanceFlags">Ein <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Wert, der angibt, wie Zugriffsmasken an untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Ein <see cref="T:System.Security.AccessControl.PropagationFlags" />-Wert, der angibt, wie Zugriffssteuerungseinträge (ACEs) an untergeordnete Objekte weitergegeben werden.</param>
        <param name="type">Ein <see cref="T:System.Security.AccessControl.AccessControlType" />-Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse mit einem Verweis auf ein Benutzerkonto, einem Wert, der die der Zugriffsregel zugeordnete Operation angibt, einem Wert, der angibt, wie Rechte geerbt werden, einem Wert, der angibt, wie Rechte weitergegeben werden, und einem Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Konstruktor können Sie eine Zugriffsregel erstellen, die Sie beibehalten können, mit der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Zugriffssteuerungsregeln definieren Konto Rechte, die bestimmen, welche Aktionen zulässig sind, oder auf Computern unter Microsoft Windows nicht zulässig.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="identity" />-Parameter ist kein <see cref="T:System.Security.Principal.IdentityReference" />-Objekt.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identity" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">An den <paramref name="type" />-Parameter wurde eine falsche Enumeration übergeben.  
  
- oder -  
An den <paramref name="inheritanceFlags" />-Parameter wurde eine falsche Enumeration übergeben.  
  
- oder -  
An den <paramref name="propagationFlags" />-Parameter wurde eine falsche Enumeration übergeben.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Der Name eines Benutzerkontos.</param>
        <param name="fileSystemRights">Ein <see cref="T:System.Security.AccessControl.FileSystemRights" />-Wert, der die Art der der Zugriffsregel zugeordneten Operation angibt.</param>
        <param name="inheritanceFlags">Ein <see cref="T:System.Security.AccessControl.InheritanceFlags" />-Wert, der angibt, wie Zugriffsmasken an untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Ein <see cref="T:System.Security.AccessControl.PropagationFlags" />-Wert, der angibt, wie Zugriffssteuerungseinträge (ACEs) an untergeordnete Objekte weitergegeben werden.</param>
        <param name="type">Ein <see cref="T:System.Security.AccessControl.AccessControlType" />-Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Klasse mit dem Namen eines Benutzerkontos, einem Wert, der die der Zugriffsregel zugeordnete Operation angibt, einem Wert, der angibt, wie Rechte geerbt werden, einem Wert, der angibt, wie Rechte weitergegeben werden, und einem Wert, der angibt, ob die Operation zugelassen oder verweigert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Konstruktor können Sie eine Zugriffsregel erstellen, die Sie beibehalten können, mit der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Zugriffssteuerungsregeln definieren Konto Rechte, die bestimmen, welche Aktionen zulässig sind, oder auf Computern unter Microsoft Windows nicht zulässig.  
  
 Die `identity` Parameter muss ein gültiges Konto auf dem lokalen Computer oder die Domäne identifizieren.  Die Zeichenfolge hat die Form, in dem `DOMAIN` ist der Name der einen gültigen Namen der Domänen- oder Computernamen und `account` ist der Name eines gültigen Benutzerkontos in einer Domäne oder den Computer: `DOMAIN\account`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identity" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">An den <paramref name="type" />-Parameter wurde eine falsche Enumeration übergeben.  
  
- oder -  
An den <paramref name="inheritanceFlags" />-Parameter wurde eine falsche Enumeration übergeben.  
  
- oder -  
An den <paramref name="propagationFlags" />-Parameter wurde eine falsche Enumeration übergeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileSystemRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.FileSystemRights FileSystemRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemAccessRule.FileSystemRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSystemRights As FileSystemRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::FileSystemRights FileSystemRights { System::Security::AccessControl::FileSystemRights get(); };" />
      <MemberSignature Language="F#" Value="member this.FileSystemRights : System.Security.AccessControl.FileSystemRights" Usage="System.Security.AccessControl.FileSystemAccessRule.FileSystemRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSystemRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Security.AccessControl.FileSystemRights" />-Flags ab, die dem aktuellen <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt zugeordnet sind.</summary>
        <value>Die <see cref="T:System.Security.AccessControl.FileSystemRights" />-Flags, die dem aktuellen <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />-Objekt zugeordnet sind.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>