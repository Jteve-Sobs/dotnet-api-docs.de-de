<Type Name="EventWaitHandleAuditRule" FullName="System.Security.AccessControl.EventWaitHandleAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d33a6c80325bf8920524a6975bca0d9d4c437934" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86753701" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventWaitHandleAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Reihe von Zugriffsrechten eines Benutzers oder einer Gruppe dar, die überwacht werden soll. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der- <xref:System.Security.AccessControl.EventWaitHandleAuditRule> Klasse handelt es sich um einen Satz von Klassen, die der .NET Framework für die Verwaltung der Windows-Zugriffs Steuerungs Sicherheit für benannte Systemereignisse bereitstellt. Eine Übersicht über diese Klassen und ihre Beziehungen zu den zugrunde liegenden Windows-Zugriffs Steuerungsstrukturen finden Sie unter <xref:System.Security.AccessControl.EventWaitHandleSecurity> .  
  
> [!NOTE]
>  Die Windows-Zugriffs Steuerungs Sicherheit ist nur für benannte Systemereignisse sinnvoll. Wenn ein <xref:System.Threading.EventWaitHandle> Objekt ein lokales Ereignis darstellt, ist die Zugriffs Steuerung irrelevant.  
  
 Zum Abrufen einer Liste der zurzeit auf ein benanntes Ereignis angewendeten Überwachungsregeln verwenden Sie die <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> -Methode, um ein <xref:System.Security.AccessControl.EventWaitHandleSecurity> -Objekt abzurufen, und verwenden Sie dann die- <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> Methode, um eine Auflistung von- <xref:System.Security.AccessControl.EventWaitHandleAuditRule> Objekten abzurufen.  
  
 <xref:System.Security.AccessControl.EventWaitHandleAuditRule> Objekte ordnen nicht eins zu eins mit Zugriffs Steuerungs Einträgen in der zugrunde liegenden Zugriffs Steuerungs Liste (DACL) zu. Wenn Sie den Satz aller Überwachungsregeln für ein Ereignis abrufen, enthält die Gruppe die Mindestanzahl von Regeln, die derzeit erforderlich sind, um alle Zugriffs Steuerungs Einträge auszudrücken.  
  
> [!NOTE]
>  Die zugrunde liegenden Zugriffs Steuerungs Einträge ändern sich, wenn Sie Regeln anwenden und entfernen. Die Informationen in den Regeln werden nach Möglichkeit zusammengeführt, um die kleinste Anzahl von Zugriffs Steuerungs Einträgen beizubehalten. Wenn Sie also die aktuelle Liste der Regeln lesen, sieht Sie möglicherweise nicht genau wie die Liste aller von Ihnen hinzugefügten Regeln aus.  
  
 Verwenden <xref:System.Security.AccessControl.EventWaitHandleAuditRule> Sie-Objekte, um die Zugriffsrechte anzugeben, die für einen Benutzer oder eine Gruppe überwacht werden sollen. Um eine Regel auf ein benanntes System Ereignis anzuwenden, verwenden Sie die- <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> Methode, um das-Objekt zu erhalten <xref:System.Security.AccessControl.EventWaitHandleSecurity> . Ändern Sie das <xref:System.Security.AccessControl.EventWaitHandleSecurity> Objekt, indem Sie die zugehörigen Methoden zum Hinzufügen der Regel verwenden, und verwenden Sie dann die- <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> Methode, um das Sicherheits Objekt erneut anzufügen.  
  
> [!IMPORTANT]
>  Änderungen, die Sie an einem Objekt vornehmen, <xref:System.Security.AccessControl.EventWaitHandleSecurity> wirken sich nicht auf die Zugriffsebenen des benannten Ereignisses aus, bis Sie die- <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> Methode aufrufen, um dem benannten Ereignis das geänderte Sicherheits Objekt zuzuweisen.  
  
 <xref:System.Security.AccessControl.EventWaitHandleAuditRule> Objekte sind unveränderlich. Die Sicherheit für ein Ereignis wird mithilfe der Methoden der- <xref:System.Security.AccessControl.EventWaitHandleSecurity> Klasse geändert, um Regeln hinzuzufügen oder zu entfernen. in diesem Fall werden die zugrunde liegenden Zugriffs Steuerungs Einträge geändert.  
  
> [!NOTE]
>  Die Sicherheit von Synchronisierungs Objekten wird für Windows 98 oder Windows Millennium Edition nicht unterstützt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.EventWaitHandleAuditRule" Usage="new System.Security.AccessControl.EventWaitHandleAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
        <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, die die Art der zu überwachenden Zugriffe angibt.</param>
        <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angibt, ob Erfolgs- oder Fehlerüberwachung oder beides stattfinden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />-Klasse. Dabei werden der Benutzer bzw. die Gruppe angegeben sowie die Rechte, die überwacht werden sollen. Außerdem wird angegeben, ob Erfolge, Fehler oder beides überwacht werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den-Konstruktor, um ein <xref:System.Security.Principal.NTAccount> Objekt aus einer Zeichenfolge zu erstellen, die einen Benutzer-oder Gruppennamen darstellt <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="flags" /> gibt einen ungültigen Wert an.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="eventRights" /> ist 0 (null).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberSignature Language="F#" Value="member this.EventWaitHandleRights : System.Security.AccessControl.EventWaitHandleRights" Usage="System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von der Überwachungsregel betroffenen Zugriffsrechte ab.</summary>
        <value>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, die die von der Überwachungsregel betroffenen Rechte angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.EventWaitHandleAuditRule> Objekte sind unveränderlich. Sie können eine neue Überwachungs Regel erstellen, die einen anderen Benutzer, andere Rechte oder eine andere Kombination von <xref:System.Security.AccessControl.AuditFlags> Flags darstellt, aber Sie können eine vorhandene Überwachungs Regel nicht ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
