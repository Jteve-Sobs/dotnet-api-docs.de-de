<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30ed8e7c4e5ab99d6e4577e5d8441402a753c427" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37683790" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="17326-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="17326-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      </span>
      <span data-ttu-id="17326-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      <span class="sxs-lookup">
        <span data-stu-id="17326-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-103">Die <xref:System.Data.Common.DbDataAdapter> Klasse erbt von der <xref:System.Data.Common.DataAdapter> -Klasse und implementiert die <xref:System.Data.IDbDataAdapter> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="17326-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="17326-104">Dadurch wird eine Klasse implementieren eine **DataAdapter** für die Verwendung mit einer relationalen Datenbank konzipiert.</span><span class="sxs-lookup"><span data-stu-id="17326-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="17326-105">Eine Anwendung erstellt eine Instanz der keine der <xref:System.Data.Common.DbDataAdapter> -Klasse direkt, sondern erstellt eine Instanz einer Klasse, die von ihr erbt.</span><span class="sxs-lookup"><span data-stu-id="17326-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="17326-106">Klassen, die erben <xref:System.Data.Common.DbDataAdapter> müssen Sie die geerbten Member implementieren und definieren Sie in der Regel zusätzliche Member, um anbieterspezifische Funktionen hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="17326-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="17326-107">Z. B. die <xref:System.Data.Common.DbDataAdapter> -Klasse definiert die <xref:System.Data.IDbDataAdapter.SelectCommand%2A> -Eigenschaft, und die <xref:System.Data.Common.DbDataAdapter> -Klasse definiert die acht Überladungen von der <xref:System.Data.IDataAdapter.Fill%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="17326-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="17326-108">Im Gegenzug die <xref:System.Data.OleDb.OleDbDataAdapter> -Klasse erbt die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode, und definiert außerdem zwei zusätzliche Überladungen der <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> , die ein ADO-Recordset-Objekt als Parameter nehmen.</span><span class="sxs-lookup"><span data-stu-id="17326-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="17326-109">
        <para>Beim Erben von der <see cref="T:System.Data.Common.DbDataAdapter" /> -Klasse, es wird empfohlen, Sie die folgenden Konstruktoren implementieren: <list type="table"><listheader><term> Element </term><description> Beschreibung </description></listheader><item><term> *Prv*DataAdapter() </term><description> Initialisiert eine neue Instanz der dem * Prv * DataAdapter-Klasse.  </description></item><item><term> * Prv * DataAdapter (* Prv * Befehl * SelectCommand *) </term><description> Initialisiert eine neue Instanz der dem * Prv * DataAdapter-Klasse mit der angegebenen SQL-SELECT -Anweisung.  </description></item><item><term> * Prv * DataAdapter (Zeichenfolge * SelectCommandText *, String * SelectConnectionString *) </term><description> Initialisiert eine neue Instanz der dem * Prv * DataAdapter-Klasse mit einer SQL SELECT-Anweisung und eine Verbindungszeichenfolge.  </description></item><item><term> * Prv * DataAdapter (Zeichenfolge * SelectCommandText *, * Prv * Verbindung * SelectConnection *) </term><description> Initialisiert eine neue Instanz der dem * Prv * DataAdapter Klasse mit einer SQL-SELECT-Anweisung und eine * Prv * Verbindungsobjekt.  </description></item></list>  Zur Förderung der Konsistenz zwischen .NET Framework-Datenanbieter, sollten Sie die erbende Klasse in der Form Namen * Prv * DataAdapter, wobei * Prv * ist das einheitliche Präfix für alle Klassen in einem bestimmten .NET Framework Data Provider-Namespace. Beispielsweise ist "Sql" das Präfix der der <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> -Klasse im Namespace **System.Data.SqlClient**.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="17326-109">
          <para>When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> *Prv*DataAdapter()  </term><description> Initializes a new instance of the *Prv*DataAdapter class.  </description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.  </description></item></list>  To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17326-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17326-111">Initializes a new instance of a **DataAdapter** class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-111">Initializes a new instance of a **DataAdapter** class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-112">Beim Erstellen einer Instanz von <xref:System.Data.Common.DbDataAdapter>, die folgenden Eigenschaften mit Lese-/Schreibzugriff auf die folgenden anfänglichen Werte festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="17326-112">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="17326-113">Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="17326-113">Properties</span></span>|<span data-ttu-id="17326-114">Anfangswert</span><span class="sxs-lookup"><span data-stu-id="17326-114">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="17326-115">Ein neuer <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="17326-115">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="17326-116">Ein neuer <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="17326-116">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="17326-117">Ein neuer <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="17326-117">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="17326-118">Ein neuer <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="17326-118">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="17326-119">Sie können den Wert, der diese Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.</span><span class="sxs-lookup"><span data-stu-id="17326-119">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="17326-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-122">Diese Überladung von der <xref:System.Data.Common.DbDataAdapter> Konstruktor ist für die Verwendung durch einen .NET Framework-Datenanbieter entworfen, bei der Implementierung eines ähnlichen Konstruktors für die Verwendung in einem Klon.</span><span class="sxs-lookup"><span data-stu-id="17326-122">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="17326-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-126">In <xref:System.Data.Common.DbDataAdapter>, löst diese Methode <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17326-126">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="17326-127">Klassen, die von erben <xref:System.Data.Common.DbDataAdapter> überschreiben diese Methode, um die Batches unterstützen.</span><span class="sxs-lookup"><span data-stu-id="17326-127">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="17326-128">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-128">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-129">
            <para>Diese Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.  Wenn eine Klasse, die von erbt <see cref="T:System.Data.Common.DbDataAdapter" /> Batches unterstützt, überschreibt diese Klasse diese Methode, um die Benutzer einen Befehl zu einem Batch hinzufügen können.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-129">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17326-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-131">In <xref:System.Data.Common.DbDataAdapter>, löst diese Methode <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17326-131">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="17326-132">Klassen, die von erben <xref:System.Data.Common.DbDataAdapter> überschreiben diese Methode, um die Batches unterstützen.</span><span class="sxs-lookup"><span data-stu-id="17326-132">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="17326-133">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-133">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-134">
            <para>Diese Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.  Wenn eine Klasse, die von erbt <see cref="T:System.Data.Common.DbDataAdapter" /> Batches unterstützt, überschreibt diese Klasse diese Methode, um die Benutzer alle Befehle aus einem Batch entfernen können.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-134">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="17326-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="17326-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="17326-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="17326-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-141">
            <para>Beim Überschreiben von <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-141">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="17326-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="17326-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="17326-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="17326-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-148">
            <para>Beim Überschreiben von <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-148">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-150">"Table" lautet der Name ein, die die <xref:System.Data.Common.DataAdapter> -Objekt für tabellenzuordnungen.</span><span class="sxs-lookup"><span data-stu-id="17326-150">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="17326-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> ist, wenn eine Anwendung eine tabellenzuordnung mit fügt <xref:System.Data.Common.DbDataAdapter.Fill%2A>, jedoch nicht angegeben, wird eine <xref:System.Data.DataTable> Name.</span><span class="sxs-lookup"><span data-stu-id="17326-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-152">Gets or sets a command for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-152">Gets or sets a command for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-153">Ein <see cref="T:System.Data.IDbCommand" /> verwendet, während der <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> zum Löschen von Datensätzen in der Datenquelle für gelöschte Zeilen im DataSet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-153">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-154">Während der <xref:System.Data.Common.DbDataAdapter.Update%2A>, wenn diese Eigenschaft nicht festgelegt ist und Primärschlüsselinformationen befindet sich in der <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> wird automatisch generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-154">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-155">Das folgende Beispiel erstellt die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="17326-155">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="17326-156">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-156">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17326-158">Executes the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-158">Executes the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-159">The return value from the last command in the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-159">The return value from the last command in the batch.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-160">In <xref:System.Data.Common.DbDataAdapter>, löst diese Methode <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17326-160">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="17326-161">Klassen, die von erben <xref:System.Data.Common.DbDataAdapter> überschreiben diese Methode, um die Batches unterstützen.</span><span class="sxs-lookup"><span data-stu-id="17326-161">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-162">
            <para>Diese Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.  Wenn eine Klasse, die von erbt <see cref="T:System.Data.Common.DbDataAdapter" /> Batches unterstützt, überschreibt diese Klasse diese Methode, um Benutzer zu einen Batch ausgeführt werden können. Eine Implementierung dieser Methode kombiniert die Befehle in der Adapter in einem Batch und führt den Batch und gibt den Rückgabewert des Batches zurück.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-162">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17326-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="17326-167">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-167">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-168">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode ruft die Daten aus der Datenquelle, die mithilfe einer SELECT-Anweisung ab.</span><span class="sxs-lookup"><span data-stu-id="17326-168">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="17326-169">Die <xref:System.Data.IDbConnection> Objekt verknüpft ist, mit der select-Befehl muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-169">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-170">Wenn die <xref:System.Data.IDbConnection> wird geschlossen, bevor <xref:System.Data.Common.DbDataAdapter.Fill%2A> wird aufgerufen, wird geöffnet, um Daten abzurufen und dann geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-170">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="17326-171">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-171">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-172">Wenn ein Fehler oder eine Ausnahme beim Füllen der Datentabellen auftritt, bleiben vor dem Auftreten des Fehlers hinzugefügte Zeilen in den Datentabellen.</span><span class="sxs-lookup"><span data-stu-id="17326-172">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="17326-173">Der Rest der Vorgang wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="17326-173">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="17326-174">Wenn ein Befehl keine Zeilen zurückgibt, werden keine Tabellen hinzugefügt, um die <xref:System.Data.DataSet>, und es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-174">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="17326-175">Wenn die <xref:System.Data.Common.DbDataAdapter> Objekt trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1","*Columnname*2", " *Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-175">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-176">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-176">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="17326-177">Wenn die angegebene Abfrage mehrere Ergebnisse zurückgibt, wird das Resultset für jede Zeile, die Rückgabe der Abfrage in einer separaten Tabelle platziert.</span><span class="sxs-lookup"><span data-stu-id="17326-177">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="17326-178">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter).</span><span class="sxs-lookup"><span data-stu-id="17326-178">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="17326-179">Da keine Tabelle für eine Abfrage, die keine Zeilen zurückgibt erstellt wird, wenn Sie eine Insert-Abfrage, gefolgt von einer select-Abfrage verarbeiten, heißt die Tabelle, die für die select-Abfrage erstellt, da es die erste Tabelle erstellt wird "Table".</span><span class="sxs-lookup"><span data-stu-id="17326-179">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="17326-180">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-180">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-181">Wenn die SELECT-Anweisung zum Füllen der <xref:System.Data.DataSet> mehrere Ergebnisse zurückgibt, z. B. SQL-Anweisungen, wenn eines der Ergebnisse einen Fehler enthält, alle nachfolgenden Ergebnisse werden übersprungen und nicht hinzugefügt werden die <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-181">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="17326-182">Bei nachfolgenden Verwendung <xref:System.Data.Common.DbDataAdapter.Fill%2A> Aufrufe zum Aktualisieren des Inhalts der <xref:System.Data.DataSet>, müssen zwei Bedingungen erfüllt sein:</span><span class="sxs-lookup"><span data-stu-id="17326-182">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="17326-183">Die SQL-Anweisung sollte zunächst zum Auffüllen verwendet entsprechen den <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-183">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="17326-184">Die **Schlüssel** Spalteninformationen muss vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="17326-184">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="17326-185">Wenn ein Primärschlüssel vorhanden ist, alle doppelten Zeilen abgestimmt sind und nur einmal in der <xref:System.Data.DataTable> , entspricht die <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-185">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-186">Primärschlüsselinformationen kann festgelegt werden, entweder durch <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, durch Angabe der <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft der <xref:System.Data.DataTable>, oder durch Festlegen der <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Eigenschaft `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-186">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-187">Wenn vom `SelectCommand` die Ergebnisse eines OUTER JOIN zurückgegeben werden, wird vom `DataAdapter` kein <xref:System.Data.DataTable.PrimaryKey%2A>-Wert für die resultierende <xref:System.Data.DataTable> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-187">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-188">Sie müssen explizit definieren, dass den Primärschlüssel, um sicherzustellen, dass doppelte Zeilen ordnungsgemäß aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="17326-188">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="17326-189">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="17326-189">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-190">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-190">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-191">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-191">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="17326-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="17326-195">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-195">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-196">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode ruft Zeilen ab, aus der Datenquelle, die mithilfe der SELECT-Anweisung angegeben, die von einem zugeordneten <xref:System.Data.IDbDataAdapter.SelectCommand%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-196">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="17326-197">Das Verbindungsobjekt, das mit der SELECT-Anweisung verknüpft ist, muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-197">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-198">Wenn die Verbindung geschlossen wird, bevor Sie <xref:System.Data.Common.DbDataAdapter.Fill%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-198">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-199">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-199">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-200">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Vorgang dann fügt die Zeilen, in Ziel <xref:System.Data.DataTable> Objekte in der <xref:System.Data.DataSet>, wodurch die <xref:System.Data.DataTable> Objekte an, wenn sie nicht bereits vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="17326-200">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="17326-201">Beim Erstellen von <xref:System.Data.DataTable> Objekte, die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Vorgang wird normalerweise nur Spaltennamen-Metadaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-201">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="17326-202">Aber wenn die <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> -Eigenschaftensatz auf `AddWithKey`, entsprechenden primären Schlüsseln und Einschränkungen werden auch erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-202">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="17326-203">Wenn die <xref:System.Data.Common.DbDataAdapter> auf trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2", "*Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-203">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-204">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-204">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-205">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet> jedes Resultset in einer separaten Tabelle platziert wird.</span><span class="sxs-lookup"><span data-stu-id="17326-205">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="17326-206">Die Überladung von <xref:System.Data.Common.DbDataAdapter.Fill%2A> akzeptiert `DataTable` wie ein Parameter nur das erste Ergebnis abruft.</span><span class="sxs-lookup"><span data-stu-id="17326-206">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="17326-207">Verwenden Sie eine Überladung der <xref:System.Data.Common.DbDataAdapter.Fill%2A> akzeptiert `DataSet` als Parameter an mehrere Ergebnisse zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-207">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="17326-208">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-208">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-209">In solchen Situationen <xref:System.Data.Common.DbDataAdapter.Fill%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und erstellt eine neue Tabelle aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-209">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="17326-210">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-210">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="17326-211">Wenn <xref:System.Data.Common.DbDataAdapter.Fill%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-211">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-212">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-212">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-213">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-213">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-214">Sie können die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode mehrere Male auf der gleichen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-214">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-215">Wenn ein Primärschlüssel vorhanden ist, werden die eingehende Zeilen mit übereinstimmenden Zeilen zusammengeführt, die bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="17326-215">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="17326-216">Wenn kein Primärschlüssel vorhanden ist, werden eingehende Zeilen an angehängt der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-216">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-217">Wenn vom `SelectCommand` die Ergebnisse eines OUTER JOIN zurückgegeben werden, wird vom `DataAdapter` kein <xref:System.Data.DataTable.PrimaryKey%2A>-Wert für die resultierende <xref:System.Data.DataTable> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-217">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-218">Sie müssen explizit definieren, dass den Primärschlüssel, um sicherzustellen, dass doppelte Zeilen ordnungsgemäß aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="17326-218">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="17326-219">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="17326-219">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-220">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.Fill%2A> und <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für eine .NET Framework Anbieter abruft, die Schemainformationen für nur das erste Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="17326-220">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-221">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-221">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-222">
            <para>Diese Überladung von der <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-222">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="17326-224">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-224">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="17326-227">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-227">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-228">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode ruft die Daten aus der Datenquelle, die mithilfe einer SELECT-Anweisung ab.</span><span class="sxs-lookup"><span data-stu-id="17326-228">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="17326-229">Die <xref:System.Data.IDbConnection> Objekt verknüpft ist, mit der select-Befehl muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-229">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-230">Wenn die <xref:System.Data.IDbConnection> wird geschlossen, bevor <xref:System.Data.Common.DbDataAdapter.Fill%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-230">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-231">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-231">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-232">Wenn ein Befehl keine Zeilen zurückgibt, werden keine Tabellen hinzugefügt, um die <xref:System.Data.DataSet>, und es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-232">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="17326-233">Wenn die <xref:System.Data.Common.DbDataAdapter> Objekt trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "columnname1", "columnname2", "Spaltenname3" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-233">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="17326-234">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-234">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="17326-235">Wenn die angegebene Abfrage mehrere Ergebnisse zurückgibt, wird jedes Resultset in einer separaten Tabelle platziert.</span><span class="sxs-lookup"><span data-stu-id="17326-235">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-236">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter).</span><span class="sxs-lookup"><span data-stu-id="17326-236">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="17326-237">Da keine Tabelle für eine Abfrage, die keine Zeilen zurückgibt erstellt wurde würden Sie eine Insert-Abfrage, gefolgt von einer select-Abfrage zu verarbeiten, würde für die select-Abfrage erstellte Tabelle "Table", benannt werden, da es die erste Tabelle erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-237">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="17326-238">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-238">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-239">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-240">In solchen Situationen <xref:System.Data.Common.DbDataAdapter.Fill%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und erstellt eine neue Tabelle aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-240">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="17326-241">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-241">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="17326-242">Wenn <xref:System.Data.Common.DbDataAdapter.Fill%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-242">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-243">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-243">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-244">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-244">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-245">Wenn ein Fehler oder eine Ausnahme beim Füllen der Datentabellen auftritt, bleiben vor dem Auftreten des Fehlers hinzugefügte Zeilen in den Datentabellen.</span><span class="sxs-lookup"><span data-stu-id="17326-245">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="17326-246">Der Rest der Vorgang wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="17326-246">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="17326-247">Wenn die SELECT-Anweisung zum Füllen der <xref:System.Data.DataSet> mehrere Ergebnisse zurückgibt, wie z. B. ein Batch SQL-Anweisung, beachten Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="17326-247">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="17326-248">Wenn eines der Ergebnisse einen Fehler enthält, werden alle nachfolgenden Ergebnisse übersprungen und nicht hinzugefügt, die <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-248">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="17326-249">Bei nachfolgenden Verwendung <xref:System.Data.Common.DbDataAdapter.Fill%2A> Aufrufe zum Aktualisieren des Inhalts der <xref:System.Data.DataSet>, müssen zwei Bedingungen erfüllt sein:</span><span class="sxs-lookup"><span data-stu-id="17326-249">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="17326-250">Die SQL-Anweisung sollte zunächst zum Auffüllen verwendet entsprechen den <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-250">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="17326-251">Die **Schlüssel** Spalteninformationen muss vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="17326-251">The **Key** column information must be present.</span></span> <span data-ttu-id="17326-252">Wenn ein Primärschlüssel vorhanden ist, alle doppelten Zeilen abgestimmt sind und nur einmal in der <xref:System.Data.DataTable> , entspricht die <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-252">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-253">Primärschlüsselinformationen kann festgelegt werden, entweder durch <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, durch Angabe der <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft der <xref:System.Data.DataTable>, oder durch Festlegen der <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Eigenschaft `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-253">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-254">Wenn vom `SelectCommand` die Ergebnisse eines OUTER JOIN zurückgegeben werden, wird vom `DataAdapter` kein <xref:System.Data.DataTable.PrimaryKey%2A>-Wert für die resultierende <xref:System.Data.DataTable> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-254">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-255">Sie müssen explizit definieren, dass den Primärschlüssel, um sicherzustellen, dass doppelte Zeilen ordnungsgemäß aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="17326-255">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="17326-256">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="17326-256">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-257">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-257">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-258">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-258">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-259">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter>, zum Füllen einer <xref:System.Data.DataSet> mit Zeilen aus der Categories-Tabelle.</span><span class="sxs-lookup"><span data-stu-id="17326-259">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="17326-260">In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <xref:System.Data.OleDb.OleDbDataAdapter> und <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-260">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="17326-261">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-261">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-262">
            <para>Beim Überschreiben von <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-262">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="17326-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="17326-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="17326-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="17326-268">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-268">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-269">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode ruft Zeilen ab, aus der Datenquelle, die mithilfe der SELECT-Anweisung angegeben, die von einem zugeordneten <xref:System.Data.IDbDataAdapter.SelectCommand%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-269">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="17326-270">Das Verbindungsobjekt, das mit der SELECT-Anweisung verknüpft ist, muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-270">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-271">Wenn die Verbindung geschlossen wird, bevor Sie <xref:System.Data.Common.DbDataAdapter.Fill%2A> wird aufgerufen, wird geöffnet, um Daten abzurufen und dann geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-271">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="17326-272">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-272">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-273">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Vorgang dann fügt die Zeilen in das angegebene Ziel <xref:System.Data.DataTable> -Objekt in der <xref:System.Data.DataSet>, wodurch die <xref:System.Data.DataTable> Objekt, wenn es nicht bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="17326-274">Beim Erstellen einer <xref:System.Data.DataTable> -Objekt, das <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Vorgang wird normalerweise nur Spaltennamen-Metadaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-274">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="17326-275">Aber wenn die <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> -Eigenschaftensatz auf `AddWithKey`, entsprechenden primären Schlüsseln und Einschränkungen werden auch erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-275">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="17326-276">Wenn die <xref:System.Data.Common.DbDataAdapter> Objekt trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2 ","*Columnname*3 ", und so weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-276">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-277">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-277">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="17326-278">Die Überladung von <xref:System.Data.Common.DbDataAdapter.Fill%2A> akzeptiert `DataTable` wie ein Parameter nur das erste Ergebnis abruft.</span><span class="sxs-lookup"><span data-stu-id="17326-278">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="17326-279">Verwenden Sie eine Überladung der <xref:System.Data.Common.DbDataAdapter.Fill%2A> akzeptiert `DataSet` als Parameter an mehrere Ergebnisse zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-279">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="17326-280">Sie können die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode mehrere Male auf der gleichen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-280">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-281">Wenn ein Primärschlüssel vorhanden ist, werden die eingehende Zeilen mit übereinstimmenden Zeilen zusammengeführt, die bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="17326-281">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="17326-282">Wenn kein Primärschlüssel vorhanden ist, werden eingehende Zeilen an angehängt der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-282">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-283">Wenn vom `SelectCommand` die Ergebnisse eines OUTER JOIN zurückgegeben werden, wird vom `DataAdapter` kein <xref:System.Data.DataTable.PrimaryKey%2A>-Wert für die resultierende <xref:System.Data.DataTable> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-283">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-284">Sie müssen explizit definieren, dass den Primärschlüssel, um sicherzustellen, dass doppelte Zeilen ordnungsgemäß aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="17326-284">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="17326-285">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="17326-285">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-286">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-286">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-287">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-287">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-288">
            <para>Diese Überladung von der <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-288">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord">
          <span data-ttu-id="17326-289">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-289">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="17326-290">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-290">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="dataTables">
          <span data-ttu-id="17326-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="17326-294">This value does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-294">This value does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-295">Die <xref:System.Data.Common.DataAdapter.Fill%2A> Methode ruft Zeilen ab, aus der Datenquelle, die mithilfe der SELECT-Anweisung angegeben, die von einem zugeordneten <xref:System.Data.IDbDataAdapter.SelectCommand%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-295">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="17326-296">Das Verbindungsobjekt, das mit der SELECT-Anweisung verknüpft ist, muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-296">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-297">Wenn die Verbindung geschlossen wird, bevor Sie <xref:System.Data.Common.DataAdapter.Fill%2A> wird aufgerufen, wird Sie zum Abrufen von Daten geöffnet, und klicken Sie dann geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-297">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="17326-298">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-298">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-299">Die <xref:System.Data.Common.DataAdapter.Fill%2A> Vorgang dann fügt die Zeilen, in Ziel <xref:System.Data.DataTable> Objekte in der <xref:System.Data.DataSet>, wodurch die <xref:System.Data.DataTable> Objekte an, wenn sie nicht bereits vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="17326-299">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="17326-300">Beim Erstellen von <xref:System.Data.DataTable> Objekte, die <xref:System.Data.Common.DataAdapter.Fill%2A> -Vorgang wird normalerweise nur Spaltennamen-Metadaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-300">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="17326-301">Aber wenn die <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> -Eigenschaftensatz auf `AddWithKey`, entsprechenden primären Schlüsseln und Einschränkungen werden auch erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-301">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="17326-302">Wenn vom `SelectCommand` die Ergebnisse eines OUTER JOIN zurückgegeben werden, wird vom `DataAdapter` kein <xref:System.Data.DataTable.PrimaryKey%2A>-Wert für die resultierende <xref:System.Data.DataTable> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-302">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-303">Sie müssen explizit definieren, dass den Primärschlüssel, um sicherzustellen, dass doppelte Zeilen ordnungsgemäß aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="17326-303">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="17326-304">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="17326-304">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="17326-305">Wenn der Datenadapter doppelte Spalten beim Auffüllen des findet eine <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "columnname1", "columnname2", "Spaltenname3" und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-305">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="17326-306">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-306">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-307">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet>, wird jedes Resultset in einer separaten Tabelle platziert.</span><span class="sxs-lookup"><span data-stu-id="17326-307">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-308">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter).</span><span class="sxs-lookup"><span data-stu-id="17326-308">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="17326-309">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-309">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-310">Wenn die SELECT-Anweisung zum Füllen der <xref:System.Data.DataSet> mehrere Ergebnisse zurückgibt, z. B. eine SQL-Anweisungen, wenn ein Ergebnis einen Fehler enthält alle nachfolgenden Ergebnisse werden übersprungen, und nicht hinzugefügt, die <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-310">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="17326-311">Sie können die <xref:System.Data.Common.DataAdapter.Fill%2A> -Methode mehrere Male auf der gleichen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-311">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-312">Wenn ein Primärschlüssel vorhanden ist, werden die eingehende Zeilen mit übereinstimmenden Zeilen zusammengeführt, die bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="17326-312">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="17326-313">Wenn kein Primärschlüssel vorhanden ist, werden eingehende Zeilen an angehängt der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-313">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-314">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-314">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-315">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-315">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="17326-317">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-317">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="17326-318">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-318">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="17326-319">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-319">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="17326-322">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-322">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-323">Ein `maxRecords` Wert 0 ruft alle Datensätze, die nach dem Startdatensatz gefunden.</span><span class="sxs-lookup"><span data-stu-id="17326-323">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="17326-324">Wenn `maxRecords` ist größer als die Anzahl der verbleibenden Zeilen nur die verbleibenden Zeilen zurückgegeben werden, und wird kein Fehler ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="17326-324">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="17326-325">Wenn Sie der entsprechenden select-Befehl eine Anweisung, die mehrere Ergebnisse zurückgibt, ist <xref:System.Data.Common.DbDataAdapter.Fill%2A> gilt nur `maxRecords` auf das erste Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="17326-325">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="17326-326">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode ruft die Daten aus der Datenquelle, die mithilfe einer SELECT-Anweisung ab.</span><span class="sxs-lookup"><span data-stu-id="17326-326">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="17326-327">Die <xref:System.Data.IDbConnection> Objekt verknüpft ist, mit der SELECT-Anweisung muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-327">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-328">Wenn die <xref:System.Data.IDbConnection> wird geschlossen, bevor <xref:System.Data.Common.DbDataAdapter.Fill%2A> wird aufgerufen, wird geöffnet, um Daten abzurufen und dann geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-328">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="17326-329">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-329">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-330">Wenn ein Befehl keine Zeilen zurückgibt, werden keine Tabellen hinzugefügt, um die <xref:System.Data.DataSet>, jedoch wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-330">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="17326-331">Wenn die <xref:System.Data.Common.DbDataAdapter> Objekt trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2 ","*Columnname*3 ", und so weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-331">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-332">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-332">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="17326-333">Wenn die angegebene Abfrage mehrere Ergebnisse zurückgibt, wird jedes Resultset in einer separaten Tabelle platziert.</span><span class="sxs-lookup"><span data-stu-id="17326-333">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-334">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter).</span><span class="sxs-lookup"><span data-stu-id="17326-334">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="17326-335">Da keine Tabelle für eine Abfrage, die keine Zeilen zurückgibt erstellt wird, wenn Sie eine Insert-Abfrage, gefolgt von einer select-Abfrage verarbeiten, heißt in der Tabelle, die für die select-Abfrage erstellt wurde "Table", da es die erste Tabelle erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-335">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="17326-336">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-336">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-337">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-337">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-338">In solchen Situationen <xref:System.Data.Common.DbDataAdapter.Fill%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und erstellt eine neue Tabelle aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-338">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="17326-339">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-339">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="17326-340">Wenn <xref:System.Data.Common.DbDataAdapter.Fill%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-340">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-341">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-341">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-342">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-342">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-343">Wenn ein Fehler oder eine Ausnahme beim Füllen der Datentabellen auftritt, bleiben vor dem Auftreten des Fehlers hinzugefügte Zeilen in den Datentabellen.</span><span class="sxs-lookup"><span data-stu-id="17326-343">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="17326-344">Der Rest der Vorgang wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="17326-344">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="17326-345">Wenn die SELECT-Anweisung zum Füllen der <xref:System.Data.DataSet> mehrere Ergebnisse zurückgibt, z. B. SQL-Anweisungen, berücksichtigen Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="17326-345">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="17326-346">Bei der Verarbeitung von mehreren Ergebnissen aus einem Batch-SQL-Anweisung `maxRecords` gilt nur für das erste Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="17326-346">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="17326-347">Dasselbe gilt für Zeilen, die in Kapitel unterteilten Ergebnisse (.NET Framework-Datenanbieter für OLE DB nur) enthält.</span><span class="sxs-lookup"><span data-stu-id="17326-347">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="17326-348">Das Ergebnis der obersten Ebene wird durch beschränkt `maxRecords`, aber es werden alle untergeordneten Zeilen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="17326-348">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="17326-349">Wenn eines der Ergebnisse einen Fehler enthält, werden alle nachfolgenden Ergebnisse übersprungen und nicht hinzugefügt, die <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-349">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="17326-350">Bei nachfolgenden Verwendung <xref:System.Data.Common.DbDataAdapter.Fill%2A> Aufrufe zum Aktualisieren des Inhalts der <xref:System.Data.DataSet>, müssen zwei Bedingungen erfüllt sein:</span><span class="sxs-lookup"><span data-stu-id="17326-350">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="17326-351">Die SQL-Anweisung sollte zunächst zum Auffüllen verwendet entsprechen den <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-351">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="17326-352">Die **Schlüssel** Spalteninformationen muss vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="17326-352">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="17326-353">Wenn der Primärschlüssel vorhanden ist, alle doppelten Zeilen abgestimmt werden und nur einmal in werden die <xref:System.Data.DataTable> , entspricht die <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-353">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-354">Primärschlüsselinformationen kann festgelegt werden, entweder durch <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, durch Angabe der <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft der <xref:System.Data.DataTable>, oder durch Festlegen der <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Eigenschaft `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-354">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-355">Wenn vom `SelectCommand` die Ergebnisse eines OUTER JOIN zurückgegeben werden, wird vom `DataAdapter` kein <xref:System.Data.DataTable.PrimaryKey%2A>-Wert für die resultierende <xref:System.Data.DataTable> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-355">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-356">Sie müssen explizit definieren, dass den Primärschlüssel, um sicherzustellen, dass doppelte Zeilen ordnungsgemäß aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="17326-356">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="17326-357">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="17326-357">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-358">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-358">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-359">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-359">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-360">Die `DataSet` enthält nicht mehr als die angegebene Anzahl von Datensätzen durch `maxRecords`.</span><span class="sxs-lookup"><span data-stu-id="17326-360">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="17326-361">Das gesamte, von der Abfrage generierte Resultset ist jedoch immer noch vom Server zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="17326-361">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-362">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter>, zum Füllen einer <xref:System.Data.DataSet> mit 15 Zeilen, die in Zeile 10, ab der **Kategorien** Tabelle.</span><span class="sxs-lookup"><span data-stu-id="17326-362">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="17326-363">In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <xref:System.Data.OleDb.OleDbDataAdapter> und <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-363">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="17326-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-365">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-365">The source table is invalid.</span>
          </span>
          <span data-ttu-id="17326-366">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-366">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="17326-367">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-367">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17326-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="17326-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-370">
            <para>Beim Überschreiben von <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-370">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSet">To be added.</param>
        <param name="srcTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="startRecord">To be added.</param>
        <param name="maxRecords">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="17326-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="17326-372">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-372">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="17326-373">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-373">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="17326-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="17326-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-377">The number of rows added to or refreshed in the data tables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-377">The number of rows added to or refreshed in the data tables.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-378">Ein `maxRecords` Wert 0 ruft alle Datensätze, die nach dem Startdatensatz gefunden.</span><span class="sxs-lookup"><span data-stu-id="17326-378">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="17326-379">Wenn `maxRecords` ist größer als die Anzahl der verbleibenden Zeilen nur die verbleibenden Zeilen zurückgegeben werden und wird kein Fehler ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="17326-379">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="17326-380">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode ruft die Daten aus der Datenquelle, die mithilfe einer SELECT-Anweisung ab.</span><span class="sxs-lookup"><span data-stu-id="17326-380">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="17326-381">Die <xref:System.Data.IDbConnection> Objekt verknüpft ist, mit der SELECT-Anweisung muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-381">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-382">Wenn die <xref:System.Data.IDbConnection> wird geschlossen, bevor <xref:System.Data.Common.DbDataAdapter.Fill%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-382">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-383">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-383">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-384">Wenn ein Befehl keine Zeilen zurückgibt, werden keine Tabellen hinzugefügt, um die <xref:System.Data.DataSet>, jedoch wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-384">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="17326-385">Wenn die <xref:System.Data.Common.DbDataAdapter> Objekt trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2 ","*Columnname*3 ", und so weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-385">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-386">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-386">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="17326-387">Wenn die angegebene Abfrage mehrere Ergebnisse zurückgibt, wird jedes Resultset in einer separaten Tabelle platziert.</span><span class="sxs-lookup"><span data-stu-id="17326-387">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-388">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter).</span><span class="sxs-lookup"><span data-stu-id="17326-388">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="17326-389">Da keine Tabelle für eine Abfrage, die keine Zeilen zurückgibt erstellt wurde würden Sie eine Insert-Abfrage, gefolgt von einer select-Abfrage zu verarbeiten, würde für die select-Abfrage erstellte Tabelle "Table", benannt werden, da es die erste Tabelle erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-389">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="17326-390">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-390">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-391">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-391">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-392">In solchen Situationen <xref:System.Data.Common.DbDataAdapter.Fill%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und erstellt eine neue Tabelle aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-392">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="17326-393">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-393">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="17326-394">Wenn <xref:System.Data.Common.DbDataAdapter.Fill%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-394">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-395">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-395">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-396">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-396">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-397">Wenn ein Fehler oder eine Ausnahme beim Füllen der Datentabellen auftritt, bleiben vor dem Auftreten des Fehlers hinzugefügte Zeilen in den Datentabellen.</span><span class="sxs-lookup"><span data-stu-id="17326-397">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="17326-398">Der Rest der Vorgang wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="17326-398">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="17326-399">Wenn die SELECT-Anweisung zum Füllen der <xref:System.Data.DataTable> Objekte mehrere Ergebnisse zurückgibt, wie z. B. ein Batch SQL-Anweisung, beachten Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="17326-399">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="17326-400">Bei der Verarbeitung von mehreren Ergebnissen aus einem Batch-SQL-Anweisung `maxRecords` gilt nur für das erste Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="17326-400">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="17326-401">Dasselbe gilt für Zeilen, die in Kapitel unterteilten Ergebnisse (.NET Framework-Datenanbieter für OLE DB nur) enthält.</span><span class="sxs-lookup"><span data-stu-id="17326-401">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="17326-402">Das Ergebnis der obersten Ebene wird durch beschränkt `maxRecords`, aber es werden alle untergeordneten Zeilen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="17326-402">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="17326-403">Wenn eines der Ergebnisse einen Fehler enthält, werden alle nachfolgenden Ergebnisse ausgelassen.</span><span class="sxs-lookup"><span data-stu-id="17326-403">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-404">Die `DataSet` enthält nicht mehr als die angegebene Anzahl von Datensätzen durch `maxRecords`.</span><span class="sxs-lookup"><span data-stu-id="17326-404">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="17326-405">Allerdings wird das gesamte Resultset, das von der Abfrage generierten weiterhin vom Server zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="17326-405">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="17326-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-407">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-407">The source table is invalid.</span>
          </span>
          <span data-ttu-id="17326-408">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-408">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="17326-409">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-409">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17326-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="17326-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-412">
            <para>Beim Überschreiben von <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-412">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="17326-414">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-414">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="17326-415">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-415">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="17326-416">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-416">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="17326-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="17326-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="17326-421">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-421">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-422">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode ruft Zeilen ab, aus der Datenquelle, die mithilfe der SELECT-Anweisung angegeben, die von einem zugeordneten <xref:System.Data.IDbDataAdapter.SelectCommand%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-422">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="17326-423">Das Verbindungsobjekt, das mit der SELECT-Anweisung verknüpft ist, muss gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-423">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-424">Wenn die Verbindung geschlossen wird, bevor Sie <xref:System.Data.Common.DbDataAdapter.Fill%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-424">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-425">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.Fill%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-425">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-426">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Vorgang dann fügt die Zeilen, in Ziel <xref:System.Data.DataTable> Objekte in der <xref:System.Data.DataSet>, wodurch die <xref:System.Data.DataTable> Objekte an, wenn sie nicht bereits vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="17326-426">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="17326-427">Beim Erstellen von <xref:System.Data.DataTable> Objekte, die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Vorgang wird normalerweise nur Spaltennamen-Metadaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-427">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="17326-428">Aber wenn die <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> -Eigenschaftensatz auf `AddWithKey`, entsprechenden primären Schlüsseln und Einschränkungen werden auch erstellt.</span><span class="sxs-lookup"><span data-stu-id="17326-428">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="17326-429">Wenn die <xref:System.Data.Common.DbDataAdapter> auf trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2", "*Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-429">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-430">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-430">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-431">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet> jedes Resultset in einer separaten Tabelle platziert wird.</span><span class="sxs-lookup"><span data-stu-id="17326-431">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-432">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter).</span><span class="sxs-lookup"><span data-stu-id="17326-432">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="17326-433">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-433">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-434">Die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-434">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-435">In solchen Situationen <xref:System.Data.Common.DbDataAdapter.Fill%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und erstellt eine neue Tabelle aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-435">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="17326-436">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-436">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="17326-437">Wenn <xref:System.Data.Common.DbDataAdapter.Fill%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-437">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-438">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-438">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-439">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-439">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-440">Sie können die <xref:System.Data.Common.DbDataAdapter.Fill%2A> -Methode mehrere Male auf der gleichen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-440">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-441">Wenn ein Primärschlüssel vorhanden ist, werden die eingehende Zeilen mit übereinstimmenden Zeilen zusammengeführt, die bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="17326-441">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="17326-442">Wenn kein Primärschlüssel vorhanden ist, werden eingehende Zeilen an angehängt der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-442">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-443">Wenn vom `SelectCommand` die Ergebnisse eines OUTER JOIN zurückgegeben werden, wird vom `DataAdapter` kein <xref:System.Data.DataTable.PrimaryKey%2A>-Wert für die resultierende <xref:System.Data.DataTable> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-443">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-444">Sie müssen explizit definieren, dass den Primärschlüssel, um sicherzustellen, dass doppelte Zeilen ordnungsgemäß aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="17326-444">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="17326-445">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="17326-445">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-446">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.Fill%2A> und <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für eine .NET Framework Anbieter abruft, die Schemainformationen für nur das erste Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="17326-446">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-447">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-447">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17326-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="17326-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-450">
            <para>Diese Überladung von der <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-450">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-452">Die <see cref="T:System.Data.CommandBehavior" /> des Befehls verwendet, um das Füllen des Datenadapters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-452">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17326-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="17326-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-458">Diese Methode ruft die Schemainformationen ab, aus der Datenquelle mit dem <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-458">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="17326-459">Ein <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> -Vorgang fügt einem <xref:System.Data.DataTable> an das Ziel <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-459">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-460">Es fügt dann die Spalten der <xref:System.Data.DataColumnCollection> von der <xref:System.Data.DataTable>, und konfiguriert die folgenden <xref:System.Data.DataColumn> -Eigenschaften fest, wenn sie in der Datenquelle vorhanden sind:</span><span class="sxs-lookup"><span data-stu-id="17326-460">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="17326-461"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="17326-461"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="17326-462">Sie müssen festlegen, <xref:System.Data.DataColumn.AutoIncrementStep%2A> und <xref:System.Data.DataColumn.AutoIncrementSeed%2A> getrennt.</span><span class="sxs-lookup"><span data-stu-id="17326-462">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="17326-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Außerdem konfiguriert der <xref:System.Data.DataTable.PrimaryKey%2A> und <xref:System.Data.DataTable.Constraints%2A> Eigenschaften gemäß den folgenden Regeln:</span><span class="sxs-lookup"><span data-stu-id="17326-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="17326-464">Wenn eine oder mehrere Primärschlüsselspalten von zurückgegeben werden die <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, sie werden verwendet, als die Primärschlüsselspalten für die <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-464">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="17326-465">Wenn keine Primärschlüsselspalten werden zurückgegeben, jedoch eindeutige Spalten sind, werden die eindeutigen Spalten als Primärschlüssel verwendet, wenn und nur, wenn alle eindeutigen Spalten NULL nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="17326-465">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="17326-466">Wenn eine der Spalten NULL-Werte zulässt, ist eine <xref:System.Data.UniqueConstraint> hinzugefügt wird die <xref:System.Data.ConstraintCollection>, aber die <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-466">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="17326-467">Wenn sowohl die Primärschlüsselspalten als auch die eindeutige Spalten zurückgegeben werden, dienen als die Primärschlüsselspalten für die Primärschlüsselspalten der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-467">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-468">Beachten Sie, dass es sich bei Primärschlüsseln und unique-Einschränkungen, um hinzugefügt werden die <xref:System.Data.ConstraintCollection> gemäß den obigen Regeln, aber andere Einschränkung Typen nicht hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="17326-468">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="17326-469">Wenn Sie einen eindeutigen gruppierten Index für eine Spalte oder Spalten in einer SQL Server-Tabelle definiert ist, und primary Key-Einschränkung für einen separaten Satz von Spalten definiert ist, und klicken Sie dann den Namen der Spalten im gruppierten Index zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="17326-469">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="17326-470">Um den Namen oder die Namen der Primärschlüsselspalten zurückzugeben, verwenden Sie eines Abfragehinweises mit der SELECT-Anweisung, die den Namen der der Index des primären Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="17326-470">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="17326-471">Weitere Informationen zum Angeben von Abfragehinweisen finden Sie unter [Abfragehinweis (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="17326-471">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="17326-472">Informationen zum Primärschlüssel wird verwendet, während der <xref:System.Data.Common.DbDataAdapter.Fill%2A> zum Suchen und ersetzen alle Zeilen, deren Schlüsselspalten übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="17326-472">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="17326-473">Wenn dies nicht das gewünschte Verhalten ist, verwenden Sie <xref:System.Data.Common.DbDataAdapter.Fill%2A> keine Schemainformationen.</span><span class="sxs-lookup"><span data-stu-id="17326-473">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="17326-474">Wenn die <xref:System.Data.IDataAdapter> auf trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2", "*Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-474">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-475">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-475">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-476">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet> jedes Resultset in einer separaten Tabelle platziert wird.</span><span class="sxs-lookup"><span data-stu-id="17326-476">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-477">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter.).</span><span class="sxs-lookup"><span data-stu-id="17326-477">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="17326-478">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-478">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-479">Die <xref:System.Data.IDbConnection> Objekt verknüpft ist, mit der select-Befehl muss gültig sein, aber es muss nicht öffnen.</span><span class="sxs-lookup"><span data-stu-id="17326-479">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="17326-480">Wenn die <xref:System.Data.IDbConnection> wird geschlossen, bevor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-480">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-481">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wird aufgerufen, es bleibt geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-481">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-482">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-482">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-483">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-483">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-484">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, die .NET Framework-Datenanbieter für SQL Server fügt eine FOR BROWSE-Klausel der Anweisung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-484">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="17326-485">Der Benutzer muss mögliche Nebeneffekte, z. B. beeinträchtigungen bei der Verwendung von SET FMTONLY ON Anweisungen kennen.</span><span class="sxs-lookup"><span data-stu-id="17326-485">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="17326-486">Weitere Informationen finden Sie in der SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="17326-486">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-487">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.SqlClient.SqlDataAdapter>, zum Füllen einer <xref:System.Data.DataSet> mit dem Schema, und gibt eine <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-487">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="17326-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="17326-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-492">Die <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Methode ruft das Schema ab, aus der Datenquelle mit dem <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-492">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="17326-493">Das Verbindungsobjekt zugeordnet der <xref:System.Data.IDbDataAdapter.SelectCommand%2A> müssen gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-493">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-494">Wenn die Verbindung geschlossen wird, bevor Sie <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-494">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-495">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-495">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-496">Ein <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Vorgang gibt eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-496">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="17326-497">Es fügt dann die Spalten der <xref:System.Data.DataColumnCollection> von der <xref:System.Data.DataTable>, und konfiguriert die folgenden <xref:System.Data.DataColumn> -Eigenschaften fest, wenn sie in der Datenquelle vorhanden sind:</span><span class="sxs-lookup"><span data-stu-id="17326-497">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="17326-498"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="17326-498"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="17326-499">Sie müssen festlegen, <xref:System.Data.DataColumn.AutoIncrementStep%2A> und <xref:System.Data.DataColumn.AutoIncrementSeed%2A> getrennt.</span><span class="sxs-lookup"><span data-stu-id="17326-499">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="17326-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Außerdem konfiguriert der <xref:System.Data.DataTable.PrimaryKey%2A> und <xref:System.Data.DataTable.Constraints%2A> Eigenschaften gemäß den folgenden Regeln:</span><span class="sxs-lookup"><span data-stu-id="17326-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="17326-501">Wenn eine <xref:System.Data.DataTable.PrimaryKey%2A> wurde bereits definiert wurde, für die `DataTable`, oder die `DataTable` enthält Daten, die `PrimaryKey` -Eigenschaft nicht festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="17326-501">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="17326-502">Wenn eine oder mehrere Primärschlüsselspalten von zurückgegeben werden die <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, sie werden verwendet, als die Primärschlüsselspalten für die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="17326-502">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="17326-503">Wenn keine Primärschlüsselspalten werden zurückgegeben, jedoch eindeutige Spalten sind, werden die eindeutigen Spalten als Primärschlüssel verwendet, wenn und nur, wenn alle eindeutigen Spalten NULL nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="17326-503">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="17326-504">Wenn eine der Spalten NULL-Werte zulässt, ist eine <xref:System.Data.UniqueConstraint> hinzugefügt wird die <xref:System.Data.ConstraintCollection>, aber die `PrimaryKey` Eigenschaft nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-504">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="17326-505">Wenn sowohl die Primärschlüsselspalten als auch die eindeutige Spalten zurückgegeben werden, dienen als die Primärschlüsselspalten für die Primärschlüsselspalten der `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="17326-505">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="17326-506">Beachten Sie, dass es sich bei Primärschlüsseln und unique-Einschränkungen, um hinzugefügt werden die <xref:System.Data.ConstraintCollection> gemäß den obigen Regeln, aber andere Einschränkung Typen nicht hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="17326-506">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="17326-507">Dieser Prozess kann mehrere Roundtrips zum Server erfordern.</span><span class="sxs-lookup"><span data-stu-id="17326-507">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="17326-508">Wenn Sie einen eindeutigen gruppierten Index für eine Spalte oder Spalten in einer SQL Server-Tabelle definiert ist, und primary Key-Einschränkung für einen separaten Satz von Spalten definiert ist, und klicken Sie dann den Namen der Spalten im gruppierten Index zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="17326-508">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="17326-509">Um den Namen oder die Namen der Primärschlüsselspalten zurückzugeben, verwenden Sie eines Abfragehinweises mit der SELECT-Anweisung, die den Namen der der Index des primären Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="17326-509">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="17326-510">Weitere Informationen zum Angeben von Abfragehinweisen finden Sie unter [Abfragehinweis (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="17326-510">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="17326-511">Wenn die <xref:System.Data.Common.DbDataAdapter> auf trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2", "*Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-511">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-512">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-512">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-513">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet> jedes Resultset in einer separaten Tabelle platziert wird.</span><span class="sxs-lookup"><span data-stu-id="17326-513">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-514">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter.).</span><span class="sxs-lookup"><span data-stu-id="17326-514">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="17326-515">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-515">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> keine zurückgibt Zeilen.</span><span class="sxs-lookup"><span data-stu-id="17326-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="17326-517">Verwenden der <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode zum Hinzufügen von Zeilen zu einer <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-517">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-518">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-519">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-519">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-520">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, die .NET Framework-Datenanbieter für SQL Server fügt eine FOR BROWSE-Klausel der Anweisung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-520">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="17326-521">Der Benutzer muss mögliche Nebeneffekte, z. B. beeinträchtigungen bei der Verwendung von SET FMTONLY ON Anweisungen kennen.</span><span class="sxs-lookup"><span data-stu-id="17326-521">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="17326-522">Weitere Informationen finden Sie in der SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="17326-522">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-523">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.SqlClient.SqlDataAdapter>, zum Füllen einer <xref:System.Data.DataSet> mit dem Schema, und gibt eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-523">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="17326-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="17326-526">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-526">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-529">Diese Methode ruft die Schemainformationen ab, aus der Datenquelle mit dem <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-529">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="17326-530">Ein <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> -Vorgang fügt einem <xref:System.Data.DataTable> an das Ziel <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-530">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-531">Es fügt dann die Spalten der <xref:System.Data.DataColumnCollection> von der <xref:System.Data.DataTable>, und konfiguriert die folgenden <xref:System.Data.DataColumn> -Eigenschaften fest, wenn sie in der Datenquelle vorhanden sind:</span><span class="sxs-lookup"><span data-stu-id="17326-531">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="17326-532"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="17326-532"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="17326-533">Sie müssen festlegen, <xref:System.Data.DataColumn.AutoIncrementStep%2A> und <xref:System.Data.DataColumn.AutoIncrementSeed%2A> getrennt.</span><span class="sxs-lookup"><span data-stu-id="17326-533">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="17326-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Außerdem konfiguriert der <xref:System.Data.DataTable.PrimaryKey%2A> und <xref:System.Data.DataTable.Constraints%2A> Eigenschaften gemäß den folgenden Regeln:</span><span class="sxs-lookup"><span data-stu-id="17326-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="17326-535">Wenn eine oder mehrere Primärschlüsselspalten von zurückgegeben werden die <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, sie werden verwendet, als die Primärschlüsselspalten für die <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-535">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="17326-536">Wenn keine Primärschlüsselspalten werden zurückgegeben, jedoch eindeutige Spalten sind, werden die eindeutigen Spalten als Primärschlüssel verwendet, wenn und nur, wenn alle eindeutigen Spalten NULL nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="17326-536">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="17326-537">Wenn eine der Spalten NULL-Werte zulässt, ist eine <xref:System.Data.UniqueConstraint> hinzugefügt wird die <xref:System.Data.ConstraintCollection>, aber die <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-537">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="17326-538">Wenn sowohl die Primärschlüsselspalten als auch die eindeutige Spalten zurückgegeben werden, dienen als die Primärschlüsselspalten für die Primärschlüsselspalten der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-538">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-539">Beachten Sie, dass es sich bei Primärschlüsseln und unique-Einschränkungen, um hinzugefügt werden die <xref:System.Data.ConstraintCollection> gemäß den obigen Regeln, aber andere Einschränkung Typen nicht hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="17326-539">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="17326-540">Wenn Sie einen eindeutigen gruppierten Index für eine Spalte oder Spalten in einer SQL Server-Tabelle definiert ist, und primary Key-Einschränkung für einen separaten Satz von Spalten definiert ist, und klicken Sie dann den Namen der Spalten im gruppierten Index zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="17326-540">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="17326-541">Um den Namen oder die Namen der Primärschlüsselspalten zurückzugeben, verwenden Sie eines Abfragehinweises mit der SELECT-Anweisung, die den Namen der der Index des primären Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="17326-541">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="17326-542">Weitere Informationen zum Angeben von Abfragehinweisen finden Sie unter [Abfragehinweis (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="17326-542">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="17326-543">Informationen zum Primärschlüssel wird verwendet, während der <xref:System.Data.Common.DbDataAdapter.Fill%2A> zum Suchen und ersetzen alle Zeilen, deren Schlüsselspalten übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="17326-543">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="17326-544">Wenn dies nicht das gewünschte Verhalten ist, verwenden Sie <xref:System.Data.Common.DbDataAdapter.Fill%2A> keine Schemainformationen.</span><span class="sxs-lookup"><span data-stu-id="17326-544">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="17326-545">Wenn die <xref:System.Data.Common.DbDataAdapter> auf trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2", "*Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-545">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-546">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-546">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-547">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet> jedes Resultset in einer separaten Tabelle platziert wird.</span><span class="sxs-lookup"><span data-stu-id="17326-547">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-548">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter.).</span><span class="sxs-lookup"><span data-stu-id="17326-548">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="17326-549">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-549">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-550">Die <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-550">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-551">In solchen Situationen <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und erstellt eine neue Tabelle aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-551">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="17326-552">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-552">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="17326-553">Wenn <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-553">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-554">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-554">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-555">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-555">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-556">Die <xref:System.Data.IDbConnection> Objekt verknüpft ist, mit der select-Befehl muss gültig sein, aber es muss nicht öffnen.</span><span class="sxs-lookup"><span data-stu-id="17326-556">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="17326-557">Wenn die <xref:System.Data.IDbConnection> wird geschlossen, bevor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-557">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-558">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wird aufgerufen, es bleibt geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-558">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-559">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-559">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-560">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-560">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-561">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, die .NET Framework-Datenanbieter für SQL Server fügt eine FOR BROWSE-Klausel der Anweisung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-561">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="17326-562">Der Benutzer muss mögliche Nebeneffekte, z. B. beeinträchtigungen bei der Verwendung von SET FMTONLY ON Anweisungen kennen.</span><span class="sxs-lookup"><span data-stu-id="17326-562">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="17326-563">Weitere Informationen finden Sie in der SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="17326-563">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-564">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.SqlClient.SqlDataAdapter>, zum Füllen einer <xref:System.Data.DataSet> mit dem Schema, und gibt eine <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-564">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17326-565">A source table from which to get the schema could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-565">A source table from which to get the schema could not be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="17326-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="17326-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="17326-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="17326-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-572">Die <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Methode ruft das Schema ab, aus der Datenquelle mit dem <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-572">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="17326-573">Das Verbindungsobjekt zugeordnet der <xref:System.Data.IDbDataAdapter.SelectCommand%2A> müssen gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-573">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-574">Wenn die Verbindung geschlossen wird, bevor Sie <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-574">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-575">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-575">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-576">Ein <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> -Vorgang fügt einem <xref:System.Data.DataTable> an das Ziel <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-576">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-577">Es fügt dann die Spalten der <xref:System.Data.DataColumnCollection> von der <xref:System.Data.DataTable>, und konfiguriert die folgenden <xref:System.Data.DataColumn> -Eigenschaften fest, wenn sie in der Datenquelle vorhanden sind:</span><span class="sxs-lookup"><span data-stu-id="17326-577">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="17326-578"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="17326-578"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="17326-579">Sie müssen festlegen, <xref:System.Data.DataColumn.AutoIncrementStep%2A> und <xref:System.Data.DataColumn.AutoIncrementSeed%2A> getrennt.</span><span class="sxs-lookup"><span data-stu-id="17326-579">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="17326-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Außerdem konfiguriert der <xref:System.Data.DataTable.PrimaryKey%2A> und <xref:System.Data.DataTable.Constraints%2A> Eigenschaften gemäß den folgenden Regeln:</span><span class="sxs-lookup"><span data-stu-id="17326-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="17326-581">Wenn eine oder mehrere Primärschlüsselspalten von zurückgegeben werden die <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, sie werden verwendet, als die Primärschlüsselspalten für die <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-581">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="17326-582">Wenn keine Primärschlüsselspalten werden zurückgegeben, jedoch eindeutige Spalten sind, werden die eindeutigen Spalten als Primärschlüssel verwendet, wenn und nur, wenn alle eindeutigen Spalten NULL nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="17326-582">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="17326-583">Wenn eine der Spalten NULL-Werte zulässt, ist eine <xref:System.Data.UniqueConstraint> hinzugefügt wird die <xref:System.Data.ConstraintCollection>, aber die <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-583">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="17326-584">Wenn sowohl die Primärschlüsselspalten als auch die eindeutige Spalten zurückgegeben werden, dienen als die Primärschlüsselspalten für die Primärschlüsselspalten der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-584">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-585">Beachten Sie, dass es sich bei Primärschlüsseln und unique-Einschränkungen, um hinzugefügt werden die <xref:System.Data.ConstraintCollection> gemäß den obigen Regeln, aber andere Einschränkung Typen nicht hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="17326-585">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="17326-586">Wenn Sie einen eindeutigen gruppierten Index für eine Spalte oder Spalten in einer SQL Server-Tabelle definiert ist, und primary Key-Einschränkung für einen separaten Satz von Spalten definiert ist, und klicken Sie dann den Namen der Spalten im gruppierten Index zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="17326-586">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="17326-587">Um den Namen oder die Namen der Primärschlüsselspalten zurückzugeben, verwenden Sie eines Abfragehinweises mit der SELECT-Anweisung, die den Namen der der Index des primären Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="17326-587">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="17326-588">Weitere Informationen zum Angeben von Abfragehinweisen finden Sie unter [Abfragehinweis (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="17326-588">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="17326-589">Wenn die <xref:System.Data.IDataAdapter> auf trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2", "*Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-589">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-590">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-590">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-591">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet> jedes Resultset in einer separaten Tabelle platziert wird.</span><span class="sxs-lookup"><span data-stu-id="17326-591">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-592">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter.).</span><span class="sxs-lookup"><span data-stu-id="17326-592">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="17326-593">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-593">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> keine zurückgibt Zeilen.</span><span class="sxs-lookup"><span data-stu-id="17326-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="17326-595">Verwenden der <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode zum Hinzufügen von Zeilen zu einer <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-595">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-596">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-596">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-597">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-597">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-598">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, die .NET Framework-Datenanbieter für SQL Server fügt eine FOR BROWSE-Klausel der Anweisung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-598">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="17326-599">Der Benutzer muss mögliche Nebeneffekte, z. B. beeinträchtigungen bei der Verwendung von SET FMTONLY ON Anweisungen kennen.</span><span class="sxs-lookup"><span data-stu-id="17326-599">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="17326-600">Weitere Informationen finden Sie in der SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="17326-600">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-601">
            <para>Diese Implementierung von der <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-601">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="17326-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="17326-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="17326-605">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-605">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="17326-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-609">Die <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Methode ruft das Schema ab, aus der Datenquelle mit dem <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-609">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="17326-610">Das Verbindungsobjekt zugeordnet der <xref:System.Data.IDbDataAdapter.SelectCommand%2A> müssen gültig sein, aber es muss nicht geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="17326-610">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="17326-611">Wenn die Verbindung geschlossen wird, bevor Sie <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> wird aufgerufen, es wird geöffnet, um Daten abzurufen und anschließend geschlossen.</span><span class="sxs-lookup"><span data-stu-id="17326-611">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="17326-612">Wenn die Verbindung vor dem Öffnen wird <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ist aufgerufen wird, bleibt es geöffnet.</span><span class="sxs-lookup"><span data-stu-id="17326-612">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="17326-613">Ein <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> -Vorgang fügt einem <xref:System.Data.DataTable> an das Ziel <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-614">Es fügt dann die Spalten der <xref:System.Data.DataColumnCollection> von der <xref:System.Data.DataTable>, und konfiguriert die folgenden <xref:System.Data.DataColumn> -Eigenschaften fest, wenn sie in der Datenquelle vorhanden sind:</span><span class="sxs-lookup"><span data-stu-id="17326-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="17326-615"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="17326-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="17326-616">Sie müssen festlegen, <xref:System.Data.DataColumn.AutoIncrementStep%2A> und <xref:System.Data.DataColumn.AutoIncrementSeed%2A> getrennt.</span><span class="sxs-lookup"><span data-stu-id="17326-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="17326-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Außerdem konfiguriert der <xref:System.Data.DataTable.PrimaryKey%2A> und <xref:System.Data.DataTable.Constraints%2A> Eigenschaften gemäß den folgenden Regeln:</span><span class="sxs-lookup"><span data-stu-id="17326-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="17326-618">Wenn eine oder mehrere Primärschlüsselspalten von zurückgegeben werden die <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, sie werden verwendet, als die Primärschlüsselspalten für die <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="17326-619">Wenn keine Primärschlüsselspalten werden zurückgegeben, jedoch eindeutige Spalten sind, werden die eindeutigen Spalten als Primärschlüssel verwendet, wenn und nur, wenn alle eindeutigen Spalten NULL nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="17326-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="17326-620">Wenn eine der Spalten NULL-Werte zulässt, ist eine <xref:System.Data.UniqueConstraint> hinzugefügt wird die <xref:System.Data.ConstraintCollection>, aber die <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="17326-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="17326-621">Wenn sowohl die Primärschlüsselspalten als auch die eindeutige Spalten zurückgegeben werden, dienen als die Primärschlüsselspalten für die Primärschlüsselspalten der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-622">Beachten Sie, dass es sich bei Primärschlüsseln und unique-Einschränkungen, um hinzugefügt werden die <xref:System.Data.ConstraintCollection> gemäß den obigen Regeln, aber andere Einschränkung Typen nicht hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="17326-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="17326-623">Wenn Sie einen eindeutigen gruppierten Index für eine Spalte oder Spalten in einer SQL Server-Tabelle definiert ist, und primary Key-Einschränkung für einen separaten Satz von Spalten definiert ist, und klicken Sie dann den Namen der Spalten im gruppierten Index zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="17326-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="17326-624">Um den Namen oder die Namen der Primärschlüsselspalten zurückzugeben, verwenden Sie eines Abfragehinweises mit der SELECT-Anweisung, die den Namen der der Index des primären Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="17326-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="17326-625">Weitere Informationen zum Angeben von Abfragehinweisen finden Sie unter [Abfragehinweis (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="17326-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="17326-626">Wenn die <xref:System.Data.IDataAdapter> auf trifft doppelte Spalten beim Auffüllen einer <xref:System.Data.DataTable>, generiert er Namen für die nachfolgenden Spalten, die mit dem Muster "*Columnname*1", "*Columnname*2", "*Columnname*3", und So weiter.</span><span class="sxs-lookup"><span data-stu-id="17326-626">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="17326-627">Wenn die eingehenden Daten unbenannte Spalten enthalten, werden sie platziert, der <xref:System.Data.DataSet> gemäß dem Muster "Column1", "Column2" usw.</span><span class="sxs-lookup"><span data-stu-id="17326-627">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="17326-628">Wenn mehrere Resultsets hinzugefügt werden, um die <xref:System.Data.DataSet> jedes Resultset in einer separaten Tabelle platziert wird.</span><span class="sxs-lookup"><span data-stu-id="17326-628">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="17326-629">Zusätzliche Resultsets werden mit dem Namen durch Anhängen von ganzzahligen Werten auf dem angegebenen Tabellennamen (beispielsweise "Table", "Table1", "Table2" und So weiter.).</span><span class="sxs-lookup"><span data-stu-id="17326-629">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="17326-630">Anwendungen mithilfe von Spalten- und Tabellennamen sorgen dafür, dass verursacht einen Konflikt mit dem folgenden Benennungsmuster erfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="17326-630">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="17326-631">Die <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-631">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-632">In solchen Situationen <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und erstellt eine neue Tabelle aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-632">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="17326-633">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-633">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="17326-634">Wenn <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-634">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-635">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-635">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-636">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-636">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> keine zurückgibt Zeilen.</span><span class="sxs-lookup"><span data-stu-id="17326-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="17326-638">Verwenden der <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode zum Hinzufügen von Zeilen zu einer <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-638">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-639">Bei der Behandlung von SQL-Anweisungen, die mehrere Ergebnisse, die Implementierung von zurückgeben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> für die .NET Framework-Datenanbieter für OLE DB Schemainformationen für nur das erste Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="17326-639">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="17326-640">Verwenden Sie zum Abrufen von Schemainformationen für mehrere Ergebnisse <xref:System.Data.Common.DbDataAdapter.Fill%2A> mit der <xref:System.Data.MissingSchemaAction> festgelegt `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="17326-640">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="17326-641">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, die .NET Framework-Datenanbieter für SQL Server fügt eine FOR BROWSE-Klausel der Anweisung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-641">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="17326-642">Der Benutzer muss mögliche Nebeneffekte, z. B. beeinträchtigungen bei der Verwendung von SET FMTONLY ON Anweisungen kennen.</span><span class="sxs-lookup"><span data-stu-id="17326-642">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="17326-643">Weitere Informationen finden Sie in der SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="17326-643">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-644">
            <para>Diese Implementierung von der <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-644">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="17326-645">The index of the command to retrieve the parameter from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-645">The index of the command to retrieve the parameter from.</span>
          </span>
        </param>
        <param name="parameterIndex">
          <span data-ttu-id="17326-646">The index of the parameter within the command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-646">The index of the parameter within the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-649">In <xref:System.Data.Common.DbDataAdapter>, löst diese Methode <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17326-649">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="17326-650">Klassen, die von erben <xref:System.Data.Common.DbDataAdapter> überschreiben diese Methode, um die Batches unterstützen.</span><span class="sxs-lookup"><span data-stu-id="17326-650">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="17326-651">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-651">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-652">
            <para>Diese Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.  Wenn eine Klasse, die von erbt <see cref="T:System.Data.Common.DbDataAdapter" /> Batches unterstützt, überschreibt diese Klasse diese Methode, um Benutzer zu einen Batch ausgeführt werden können. Eine Implementierung verwendet die <paramref name="commandIdentifier" /> bereitgestellt, um den angeforderten Befehl zu suchen, und verwendet dann die <paramref name="parameterIndex" /> bereitgestellt, um den angeforderten Parameter. Z. B. eine <paramref name="commandIdentifier" /> 0 und einem <paramref name="parameterIndex" /> 0 den ersten Parameter aus dem ersten Befehl im Batch zurück.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-652">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter. For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="17326-653">The zero-based column ordinal of the individual command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-653">The zero-based column ordinal of the individual command within the batch.</span>
          </span>
        </param>
        <param name="recordsAffected">
          <span data-ttu-id="17326-654">The number of rows affected in the data store by the specified command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-654">The number of rows affected in the data store by the specified command within the batch.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="17326-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          </span>
          <span data-ttu-id="17326-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-657">Returns information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-657">Returns information about an individual update attempt within a larger batched update.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-658">Information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-658">Information about an individual update attempt within a larger batched update.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-659">Datenanbieter, die im Batchmodus Aktualisierungslogik zu unterstützen, müssen eine Reihe von virtuellen Methoden überschreiben, auf die <xref:System.Data.Common.DbDataAdapter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="17326-659">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="17326-660">`GetBatchedRecordsAffected` Stellt eine dieser virtuellen Methoden dar.</span><span class="sxs-lookup"><span data-stu-id="17326-660">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="17326-661">Die `DbDataAdapter` Klasse basiert auf `GetBatchedRecordsAffected` um zu bestimmen, den Erfolg oder Misserfolg der einzelnen Updateversuchen in einem Batch jeweils entsprechenden kennzeichnen <xref:System.Data.DataRow> entsprechend.</span><span class="sxs-lookup"><span data-stu-id="17326-661">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17326-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17326-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-665">In <xref:System.Data.Common.DbDataAdapter>, löst diese Methode <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17326-665">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="17326-666">Klassen, die von erben <xref:System.Data.Common.DbDataAdapter> überschreiben diese Methode, um die Batches unterstützen.</span><span class="sxs-lookup"><span data-stu-id="17326-666">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="17326-667">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-667">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-668">
            <para>Diese Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.  Wenn eine Klasse, die von erbt <see cref="T:System.Data.Common.DbDataAdapter" /> Batches unterstützt, diese Klasse diese Methode überschreibt. Diese Methode ermöglicht die Klasse, die Möglichkeit, initialisieren Sie alle Ressourcen, die zur Unterstützung der Batchverarbeitung erforderlich sind. Eine Klasse kann z. B. eine Datenstruktur zum Speichern von des Satzes von Befehlen im Batch reservieren.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-668">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to initialize any resources necessary to support batching. For example, a class may allocate a data structure to hold the set of commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-669">Gets or sets a command used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-669">Gets or sets a command used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-670">Ein <see cref="T:System.Data.IDbCommand" /> verwendet, während der <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> zum Einfügen von Datensätzen in der Datenquelle für neue Zeilen im DataSet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-670">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-671">Während der <xref:System.Data.Common.DbDataAdapter.Update%2A>, wenn diese Eigenschaft nicht festgelegt ist und Primärschlüsselinformationen befindet sich in der <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> wird automatisch generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-671">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-672">Das folgende Beispiel erstellt die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="17326-672">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="17326-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-675">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="17326-675">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="17326-676">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="17326-676">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-677">
            <para>Beim Überschreiben von <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-677">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="17326-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-680">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="17326-680">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="17326-681">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="17326-681">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-682">
            <para>Beim Überschreiben von <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen, <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-682">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-683">Gets or sets a command used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-683">Gets or sets a command used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-684">Ein <see cref="T:System.Data.IDbCommand" /> , mit dem bei <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-684">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17326-685">Das folgende Beispiel erstellt die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="17326-685">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-687">Ein <see cref="T:System.Data.IDbCommand" /> verwendet, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Löschen von Datensätzen in der Datenquelle für gelöschte Zeilen im DataSet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-687">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-688">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="17326-688">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="17326-689">Er kann nur verwendet werden, wenn die <xref:System.Data.Common.DbDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-689">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="17326-690">Weitere Informationen finden Sie unter <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-690">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-692">Ein <see cref="T:System.Data.IDbCommand" /> verwendet, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Einfügen von Datensätzen in der Datenquelle für neue Zeilen im DataSet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-692">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-693">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="17326-693">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="17326-694">Er kann nur verwendet werden, wenn die <xref:System.Data.Common.DbDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-694">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="17326-695">Weitere Informationen finden Sie unter <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-695">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-696">Gets or sets an SQL statement used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-696">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-697">Ein <see cref="T:System.Data.IDbCommand" /> , mit dem bei <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-697">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-698">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="17326-698">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="17326-699">Er kann nur verwendet werden, wenn die <xref:System.Data.Common.DbDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-699">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="17326-700">Weitere Informationen finden Sie unter <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-700">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-701">Gets or sets an SQL statement used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-701">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-702">Ein <see cref="T:System.Data.IDbCommand" /> verwendet, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Aktualisieren von Datensätzen in der Datenquelle für die geänderten Zeilen im DataSet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-702">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-703">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="17326-703">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="17326-704">Er kann nur verwendet werden, wenn die <xref:System.Data.Common.DbDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-704">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="17326-705">Weitere Informationen finden Sie unter <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-705">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17326-706">Creates a new object that is a copy of the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-706">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-707">A new object that is a copy of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-707">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-708">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="17326-708">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="17326-709">Er kann nur verwendet werden, wenn die <xref:System.Data.Common.DbDataAdapter>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-709">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="17326-710">Weitere Informationen finden Sie unter <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="17326-710">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17326-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-712">In <xref:System.Data.Common.DbDataAdapter>, löst diese Methode <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17326-712">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="17326-713">Klassen, die von erben <xref:System.Data.Common.DbDataAdapter> überschreiben diese Methode, um die Batches unterstützen.</span><span class="sxs-lookup"><span data-stu-id="17326-713">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="17326-714">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-714">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="17326-715">
            <para>Diese Methode ist geschützt und durch einen .NET Framework-Datenanbieter für die Verwendung vorgesehen.  Wenn eine Klasse, die von erbt <see cref="T:System.Data.Common.DbDataAdapter" /> Batches unterstützt, diese Klasse diese Methode überschreibt. Diese Methode ermöglicht die Klasse, die Möglichkeit zur Unterstützung der Batchverarbeitung reservierten Ressourcen freizugeben. Die Klasse kann z. B. die Datenstruktur freigeben, die die Befehle in der Batch enthält.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-715">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to dispose of any resources allocated to support batching. For example, the class may deallocate the data structure that holds the commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17326-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="17326-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-720">Wenn eine Anwendung ruft die <xref:System.Data.Common.DbDataAdapter.Update%2A> -Methode, die <xref:System.Data.Common.DbDataAdapter> untersucht die <xref:System.Data.DataRow.RowState%2A> -Eigenschaft, und führt die erforderlichen INSERT-, Update- oder DELETE-Anweisungen iterativ für jede Zeile, die entsprechend der Reihenfolge der Indizes, die in der konfiguriert<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-720">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-721">Z. B. <xref:System.Data.Common.DbDataAdapter.Update%2A> möglicherweise ausführen eine DELETE-Anweisung, gefolgt von einer INSERT-Anweisung und einer weiteren DELETE-Anweisung, aufgrund der Anordnung der Zeilen in der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-721">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-722">Beachten Sie, dass diese Anweisungen nicht als Batchprozess ausgeführt werden; Jede Zeile wird einzeln aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-722">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="17326-723">Kann eine Anwendung Aufrufen der <xref:System.Data.DataSet.GetChanges%2A> -Methode in Situationen, in denen die Reihenfolge der Anweisungstypen (z. B. Insert vor UPDATEs) gesteuert werden muss.</span><span class="sxs-lookup"><span data-stu-id="17326-723">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="17326-724">Weitere Informationen finden Sie unter [Aktualisieren von Datenquellen mit "DataAdapters"](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="17326-724">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="17326-725">Wenn die INSERT-, Update- oder DELETE-Anweisungen nicht angegeben wurden, die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-725">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="17326-726">Allerdings können Sie erstellen eine <xref:System.Data.SqlClient.SqlCommandBuilder> oder <xref:System.Data.OleDb.OleDbCommandBuilder> Objekt, das SQL-Anweisungen für einzelne Tabellen Updates automatisch zu generieren, wenn Sie festlegen, die `SelectCommand` Eigenschaft eines .NET Framework-Datenanbieters.</span><span class="sxs-lookup"><span data-stu-id="17326-726">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="17326-727">Alle zusätzlichen SQL-Anweisungen, die Sie nicht festlegen, werden dann generiert, indem die **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="17326-727">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="17326-728">Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-728">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-729">Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="17326-729">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="17326-730">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode ruft Zeilen ab, aus der Tabelle, die in der ersten Zuordnung vor dem Ausführen eines Updates aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="17326-730">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="17326-731">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> aktualisiert dann die Zeile, die mithilfe des Werts für die <xref:System.Data.IDbCommand.UpdatedRowSource%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-731">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="17326-732">Alle weiteren zurückgegebenen Zeilen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="17326-732">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="17326-733">Nachdem alle Daten erneut geladen werden die <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> -Ereignis ausgelöst wird, sodass der Benutzer die abgeglichene überprüfen <xref:System.Data.DataSet> Zeile und alle Ausgabeparameter enthalten, die vom Befehl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="17326-733">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="17326-734">Nachdem eine Zeile wurde erfolgreich aktualisiert wurde, werden die Änderungen an dieser Spalte akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="17326-734">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="17326-735">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.Update%2A>, die Reihenfolge der Ausführung wird wie folgt:</span><span class="sxs-lookup"><span data-stu-id="17326-735">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="17326-736">Die Werte in der <xref:System.Data.DataRow> verschoben werden, um die Parameterwerte.</span><span class="sxs-lookup"><span data-stu-id="17326-736">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="17326-737">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-737">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="17326-738">Der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-738">The command executes.</span></span>  
  
4.  <span data-ttu-id="17326-739">Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, das erste zurückgegebene Ergebnis befindet sich der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-739">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="17326-740">Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-740">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="17326-741">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-741">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="17326-742"><xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="17326-742"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="17326-743">Jeder Befehl zugeordnete der <xref:System.Data.Common.DbDataAdapter> hat in der Regel eine Auflistung von Parametern zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="17326-743">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="17326-744">Parameter sind zugeordnet, mit der aktuellen Zeile über die `SourceColumn` und `SourceVersion` Eigenschaften eines .NET Framework-Datenanbieters `Parameter` Klasse.</span><span class="sxs-lookup"><span data-stu-id="17326-744">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="17326-745">`SourceColumn` bezieht sich auf eine <xref:System.Data.DataTable> Spalte, die die <xref:System.Data.Common.DbDataAdapter> Verweise auf die Parameterwerte für die aktuelle Zeile abzurufen.</span><span class="sxs-lookup"><span data-stu-id="17326-745">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="17326-746">`SourceColumn` bezieht sich auf den Namen nicht zugeordnete Spalte, bevor alle tabellenzuordnungen angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="17326-746">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="17326-747">Wenn `SourceColumn` bezieht sich auf eine nicht vorhandene Spalte, die ausgeführte Aktion hängt von einer der folgenden <xref:System.Data.MissingMappingAction> Werte.</span><span class="sxs-lookup"><span data-stu-id="17326-747">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="17326-748">Enumerationswert</span><span class="sxs-lookup"><span data-stu-id="17326-748">Enumeration value</span></span>|<span data-ttu-id="17326-749">Ausgeführte Aktion</span><span class="sxs-lookup"><span data-stu-id="17326-749">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="17326-750">Verwenden Sie die Namen der Quellspalten und den Tabellennamen in der <xref:System.Data.DataSet> , wenn keine Zuordnung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-750">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="17326-751">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-751">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="17326-752">Wenn die Zuordnungen explizit festgelegt sind, ist eine fehlenden Zuordnung für einen Eingabeparameter in der Regel das Ergebnis eines Fehlers.</span><span class="sxs-lookup"><span data-stu-id="17326-752">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="17326-753">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-753">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="17326-754">Die `SourceColumn` Eigenschaft wird auch verwendet, um den Wert für die Ausgabe zuzuordnen oder Eingabe-/Ausgabeparameter zurück an die `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="17326-754">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="17326-755">Es wird eine Ausnahme generiert, wenn er auf eine nicht vorhandene Spalte verweist.</span><span class="sxs-lookup"><span data-stu-id="17326-755">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="17326-756">Die `SourceVersion` Eigenschaft eines .NET Framework-Datenanbieters `Parameter` Klasse bestimmt, ob die ursprünglichen, aktuelle oder die vorgeschlagene Version des Spaltenwerts verwenden.</span><span class="sxs-lookup"><span data-stu-id="17326-756">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="17326-757">Diese Funktion wird häufig verwendet, auf die ursprünglichen Werte in der WHERE-Klausel einer UPDATE-Anweisung für die Verletzung der vollständigen Parallelität zu überprüfen sind.</span><span class="sxs-lookup"><span data-stu-id="17326-757">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-758">Wenn beim Aktualisieren einer Zeile ein Fehler auftritt, wird eine Ausnahme ausgelöst und Ausführung der Aktualisierung wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="17326-758">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="17326-759">Um weiterhin von der Update-Vorgang ohne Generierung von Ausnahmen, wenn ein Fehler auftritt, legen Sie die <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Eigenschaft `true` vor dem Aufruf <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-759">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="17326-760">Sie können auch auf Fehler für jede Zeile einzeln reagieren die `RowUpdated` Ereignis einen "DataAdapter".</span><span class="sxs-lookup"><span data-stu-id="17326-760">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="17326-761">Den Update-Vorgang fortgesetzt, ohne Auslösen einer Ausnahme in der `RowUpdated` Ereignissatz, der <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> Eigenschaft der <xref:System.Data.Common.RowUpdatedEventArgs> zu <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="17326-761">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-762">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter>, um die Datenquelle zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="17326-762">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17326-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-764">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-764">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="17326-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="17326-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="17326-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="17326-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-772">Wenn eine Anwendung ruft die <xref:System.Data.Common.DbDataAdapter.Update%2A> -Methode, die <xref:System.Data.Common.DbDataAdapter> untersucht die <xref:System.Data.DataRow.RowState%2A> -Eigenschaft, und führt die erforderlichen INSERT-, Update- oder DELETE-Anweisungen iterativ für jede Zeile, die entsprechend der Reihenfolge der Indizes, die in der konfiguriert<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-772">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-773">Z. B. <xref:System.Data.Common.DbDataAdapter.Update%2A> möglicherweise ausführen eine DELETE-Anweisung, gefolgt von einer INSERT-Anweisung und einer weiteren DELETE-Anweisung, aufgrund der Anordnung der Zeilen in der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-773">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-774">Beachten Sie, dass diese Anweisungen nicht als Batchprozess ausgeführt werden; Jede Zeile wird einzeln aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-774">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="17326-775">Kann eine Anwendung Aufrufen der <xref:System.Data.DataSet.GetChanges%2A> -Methode in Situationen, in denen die Reihenfolge der Anweisungstypen (z. B. Insert vor UPDATEs) gesteuert werden muss.</span><span class="sxs-lookup"><span data-stu-id="17326-775">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="17326-776">Weitere Informationen finden Sie unter [Aktualisieren von Datenquellen mit "DataAdapters"](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="17326-776">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="17326-777">Wenn die INSERT-, Update- oder DELETE-Anweisungen nicht angegeben wurden, die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-777">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="17326-778">Allerdings können Sie erstellen eine <xref:System.Data.SqlClient.SqlCommandBuilder> oder <xref:System.Data.OleDb.OleDbCommandBuilder> Objekt, das SQL-Anweisungen für einzelne Tabellen Updates automatisch zu generieren, wenn Sie festlegen, die `SelectCommand` Eigenschaft eines .NET Framework-Datenanbieters.</span><span class="sxs-lookup"><span data-stu-id="17326-778">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="17326-779">Alle zusätzlichen SQL-Anweisungen, die Sie nicht festlegen, werden dann generiert, indem die **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="17326-779">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="17326-780">Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-780">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-781">Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="17326-781">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="17326-782">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode ruft Zeilen ab, aus der Tabelle, die in der ersten Zuordnung vor dem Ausführen eines Updates aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="17326-782">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="17326-783">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> aktualisiert dann die Zeile, die mithilfe des Werts für die <xref:System.Data.IDbCommand.UpdatedRowSource%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-783">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="17326-784">Alle weiteren zurückgegebenen Zeilen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="17326-784">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="17326-785">Nachdem alle Daten erneut geladen werden die <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> -Ereignis ausgelöst wird, sodass der Benutzer die abgeglichene überprüfen <xref:System.Data.DataSet> Zeile und alle Ausgabeparameter enthalten, die vom Befehl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="17326-785">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="17326-786">Nachdem eine Zeile wurde erfolgreich aktualisiert wurde, werden die Änderungen an dieser Spalte akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="17326-786">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="17326-787">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.Update%2A>, die Reihenfolge der Ausführung wird wie folgt:</span><span class="sxs-lookup"><span data-stu-id="17326-787">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="17326-788">Die Werte in der <xref:System.Data.DataRow> verschoben werden, um die Parameterwerte.</span><span class="sxs-lookup"><span data-stu-id="17326-788">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="17326-789">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-789">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="17326-790">Der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-790">The command executes.</span></span>  
  
4.  <span data-ttu-id="17326-791">Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, und klicken Sie dann das erste Ergebnis befindet sich zurückgegebene der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-791">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="17326-792">Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-792">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="17326-793">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-793">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="17326-794"><xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="17326-794"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="17326-795">Jeder Befehl zugeordnete der <xref:System.Data.Common.DbDataAdapter> hat in der Regel eine Auflistung von Parametern zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="17326-795">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="17326-796">Parameter sind zugeordnet, mit der aktuellen Zeile über die `SourceColumn` und `SourceVersion` Eigenschaften eines .NET Framework-Datenanbieters `Parameter` Klasse.</span><span class="sxs-lookup"><span data-stu-id="17326-796">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="17326-797">`SourceColumn` bezieht sich auf eine <xref:System.Data.DataTable> Spalte, die die <xref:System.Data.Common.DbDataAdapter> Verweise auf die Parameterwerte für die aktuelle Zeile abzurufen.</span><span class="sxs-lookup"><span data-stu-id="17326-797">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="17326-798">`SourceColumn` bezieht sich auf den Namen nicht zugeordnete Spalte, bevor alle tabellenzuordnungen angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="17326-798">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="17326-799">Wenn `SourceColumn` bezieht sich auf eine nicht vorhandene Spalte, die ausgeführte Aktion hängt von einer der folgenden <xref:System.Data.MissingMappingAction> Werte.</span><span class="sxs-lookup"><span data-stu-id="17326-799">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="17326-800">Enumerationswert</span><span class="sxs-lookup"><span data-stu-id="17326-800">Enumeration value</span></span>|<span data-ttu-id="17326-801">Ausgeführte Aktion</span><span class="sxs-lookup"><span data-stu-id="17326-801">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="17326-802">Verwenden Sie die Namen der Quellspalten und den Tabellennamen in der <xref:System.Data.DataSet> , wenn keine Zuordnung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-802">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="17326-803">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-803">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="17326-804">Wenn die Zuordnungen explizit festgelegt sind, ist eine fehlenden Zuordnung für einen Eingabeparameter in der Regel das Ergebnis eines Fehlers.</span><span class="sxs-lookup"><span data-stu-id="17326-804">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="17326-805">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-805">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="17326-806">Die `SourceColumn` Eigenschaft wird auch verwendet, um den Wert für die Ausgabe zuzuordnen oder Eingabe-/Ausgabeparameter zurück an die `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="17326-806">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="17326-807">Es wird eine Ausnahme generiert, wenn er auf eine nicht vorhandene Spalte verweist.</span><span class="sxs-lookup"><span data-stu-id="17326-807">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="17326-808">Die `SourceVersion` Eigenschaft eines .NET Framework-Datenanbieters `Parameter` Klasse bestimmt, ob die ursprünglichen, aktuelle oder die vorgeschlagene Version des Spaltenwerts verwenden.</span><span class="sxs-lookup"><span data-stu-id="17326-808">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="17326-809">Diese Funktion wird häufig verwendet, auf die ursprünglichen Werte in der WHERE-Klausel einer UPDATE-Anweisung für die Verletzung der vollständigen Parallelität zu überprüfen sind.</span><span class="sxs-lookup"><span data-stu-id="17326-809">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-810">Wenn beim Aktualisieren einer Zeile ein Fehler auftritt, wird eine Ausnahme ausgelöst und Ausführung der Aktualisierung wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="17326-810">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="17326-811">Um weiterhin von der Update-Vorgang ohne Generierung von Ausnahmen, wenn ein Fehler auftritt, legen Sie die <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Eigenschaft `true` vor dem Aufruf <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-811">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="17326-812">Sie können auch auf Fehler für jede Zeile einzeln reagieren die `RowUpdated` Ereignis einen "DataAdapter".</span><span class="sxs-lookup"><span data-stu-id="17326-812">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="17326-813">Den Update-Vorgang fortgesetzt, ohne Auslösen einer Ausnahme in der `RowUpdated` Ereignissatz, der <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> Eigenschaft der <xref:System.Data.Common.RowUpdatedEventArgs> zu <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="17326-813">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-814">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter>, um die Datenquelle zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="17326-814">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-815">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-815">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="17326-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="17326-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-820">Wenn eine Anwendung ruft die <xref:System.Data.Common.DbDataAdapter.Update%2A> -Methode, die <xref:System.Data.Common.DbDataAdapter> untersucht die <xref:System.Data.DataRow.RowState%2A> -Eigenschaft, und führt die erforderlichen INSERT-, Update- oder DELETE-Anweisungen iterativ für jede Zeile, die entsprechend der Reihenfolge der Indizes, die in der konfiguriert<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-820">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-821">Z. B. <xref:System.Data.Common.DbDataAdapter.Update%2A> möglicherweise ausführen eine DELETE-Anweisung, gefolgt von einer INSERT-Anweisung und einer weiteren DELETE-Anweisung, aufgrund der Anordnung der Zeilen in der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-821">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-822">Beachten Sie, dass diese Anweisungen nicht als Batchprozess ausgeführt werden; Jede Zeile wird einzeln aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-822">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="17326-823">Kann eine Anwendung Aufrufen der <xref:System.Data.DataSet.GetChanges%2A> -Methode in Situationen, in denen die Reihenfolge der Anweisungstypen (z. B. Insert vor UPDATEs) gesteuert werden muss.</span><span class="sxs-lookup"><span data-stu-id="17326-823">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="17326-824">Weitere Informationen finden Sie unter [Aktualisieren von Datenquellen mit "DataAdapters"](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="17326-824">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="17326-825">Wenn die INSERT-, Update- oder DELETE-Anweisungen nicht angegeben wurden, die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-825">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="17326-826">Allerdings können Sie erstellen eine <xref:System.Data.SqlClient.SqlCommandBuilder> oder <xref:System.Data.OleDb.OleDbCommandBuilder> Objekt, das SQL-Anweisungen für einzelne Tabellen Updates automatisch zu generieren, wenn Sie festlegen, die `SelectCommand` Eigenschaft eines .NET Framework-Datenanbieters.</span><span class="sxs-lookup"><span data-stu-id="17326-826">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="17326-827">Alle zusätzlichen SQL-Anweisungen, die Sie nicht festlegen, werden dann generiert, indem die **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="17326-827">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="17326-828">Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-828">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-829">Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="17326-829">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="17326-830">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode ruft Zeilen ab, aus der Tabelle, die in der ersten Zuordnung vor dem Ausführen eines Updates aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="17326-830">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="17326-831">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> aktualisiert dann die Zeile, die mithilfe des Werts für die <xref:System.Data.IDbCommand.UpdatedRowSource%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-831">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="17326-832">Alle weiteren zurückgegebenen Zeilen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="17326-832">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="17326-833">Nachdem alle Daten erneut geladen werden die <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> -Ereignis ausgelöst wird, sodass der Benutzer die abgeglichene überprüfen <xref:System.Data.DataSet> Zeile und alle Ausgabeparameter enthalten, die vom Befehl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="17326-833">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="17326-834">Nachdem eine Zeile wurde erfolgreich aktualisiert wurde, werden die Änderungen an dieser Spalte akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="17326-834">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="17326-835">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.Update%2A>, die Reihenfolge der Ausführung wird wie folgt:</span><span class="sxs-lookup"><span data-stu-id="17326-835">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="17326-836">Die Werte in der <xref:System.Data.DataRow> verschoben werden, um die Parameterwerte.</span><span class="sxs-lookup"><span data-stu-id="17326-836">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="17326-837">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-837">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="17326-838">Der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-838">The command executes.</span></span>  
  
4.  <span data-ttu-id="17326-839">Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, und klicken Sie dann das erste Ergebnis befindet sich zurückgegebene der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-839">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="17326-840">Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-840">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="17326-841">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-841">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="17326-842"><xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="17326-842"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="17326-843">Jeder Befehl zugeordnete der <xref:System.Data.Common.DbDataAdapter> hat in der Regel eine Auflistung von Parametern zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="17326-843">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="17326-844">Parameter sind zugeordnet, mit der aktuellen Zeile über die `SourceColumn` und `SourceVersion` Eigenschaften eines .NET Framework-Datenanbieters `Parameter` Klasse.</span><span class="sxs-lookup"><span data-stu-id="17326-844">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="17326-845">`SourceColumn` bezieht sich auf eine <xref:System.Data.DataTable> Spalte, die die <xref:System.Data.Common.DbDataAdapter> Verweise auf die Parameterwerte für die aktuelle Zeile abzurufen.</span><span class="sxs-lookup"><span data-stu-id="17326-845">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="17326-846">`SourceColumn` bezieht sich auf den Namen nicht zugeordnete Spalte, bevor alle tabellenzuordnungen angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="17326-846">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="17326-847">Wenn `SourceColumn` bezieht sich auf eine nicht vorhandene Spalte, die ausgeführte Aktion hängt von einer der folgenden <xref:System.Data.MissingMappingAction> Werte.</span><span class="sxs-lookup"><span data-stu-id="17326-847">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="17326-848">Enumerationswert</span><span class="sxs-lookup"><span data-stu-id="17326-848">Enumeration value</span></span>|<span data-ttu-id="17326-849">Ausgeführte Aktion</span><span class="sxs-lookup"><span data-stu-id="17326-849">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="17326-850">Verwenden Sie die Namen der Quellspalten und den Tabellennamen in der <xref:System.Data.DataSet> , wenn keine Zuordnung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-850">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="17326-851">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-851">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="17326-852">Wenn die Zuordnungen explizit festgelegt sind, ist eine fehlenden Zuordnung für einen Eingabeparameter in der Regel das Ergebnis eines Fehlers.</span><span class="sxs-lookup"><span data-stu-id="17326-852">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="17326-853">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-853">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="17326-854">Die `SourceColumn` Eigenschaft wird auch verwendet, um den Wert für die Ausgabe zuzuordnen oder Eingabe-/Ausgabeparameter zurück an die `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="17326-854">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="17326-855">Es wird eine Ausnahme generiert, wenn er auf eine nicht vorhandene Spalte verweist.</span><span class="sxs-lookup"><span data-stu-id="17326-855">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="17326-856">Die `SourceVersion` Eigenschaft eines .NET Framework-Datenanbieters `Parameter` Klasse bestimmt, ob die ursprünglichen, aktuelle oder die vorgeschlagene Version des Spaltenwerts verwenden.</span><span class="sxs-lookup"><span data-stu-id="17326-856">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="17326-857">Diese Funktion wird häufig verwendet, auf die ursprünglichen Werte in der WHERE-Klausel einer UPDATE-Anweisung für die Verletzung der vollständigen Parallelität zu überprüfen sind.</span><span class="sxs-lookup"><span data-stu-id="17326-857">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-858">Wenn beim Aktualisieren einer Zeile ein Fehler auftritt, wird eine Ausnahme ausgelöst und Ausführung der Aktualisierung wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="17326-858">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="17326-859">Um weiterhin von der Update-Vorgang ohne Generierung von Ausnahmen, wenn ein Fehler auftritt, legen Sie die <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Eigenschaft `true` vor dem Aufruf <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-859">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="17326-860">Sie können auch auf Fehler für jede Zeile einzeln reagieren die `RowUpdated` Ereignis einen "DataAdapter".</span><span class="sxs-lookup"><span data-stu-id="17326-860">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="17326-861">Den Update-Vorgang fortgesetzt, ohne Auslösen einer Ausnahme in der `RowUpdated` Ereignissatz, der <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> Eigenschaft der <xref:System.Data.Common.RowUpdatedEventArgs> zu <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="17326-861">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-862">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter>, um die Datenquelle zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="17326-862">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17326-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-864">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-864">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="17326-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="17326-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="17326-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="17326-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="17326-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="17326-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-873">Wenn eine Anwendung ruft die <xref:System.Data.Common.DbDataAdapter.Update%2A> -Methode, die <xref:System.Data.Common.DbDataAdapter> untersucht die <xref:System.Data.DataRow.RowState%2A> -Eigenschaft, und führt die erforderlichen INSERT-, Update- oder DELETE-Anweisungen iterativ für jede Zeile, die entsprechend der Reihenfolge der Indizes, die in der konfiguriert<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-873">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-874">Z. B. <xref:System.Data.Common.DbDataAdapter.Update%2A> möglicherweise ausführen eine DELETE-Anweisung, gefolgt von einer INSERT-Anweisung und einer weiteren DELETE-Anweisung, aufgrund der Anordnung der Zeilen in der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-874">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-875">Beachten Sie, dass diese Anweisungen nicht als Batchprozess ausgeführt werden; Jede Zeile wird einzeln aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-875">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="17326-876">Kann eine Anwendung Aufrufen der <xref:System.Data.DataSet.GetChanges%2A> -Methode in Situationen, in denen die Reihenfolge der Anweisungstypen (z. B. Insert vor UPDATEs) gesteuert werden muss.</span><span class="sxs-lookup"><span data-stu-id="17326-876">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="17326-877">Weitere Informationen finden Sie unter [Aktualisieren von Datenquellen mit "DataAdapters"](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="17326-877">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="17326-878">Wenn die INSERT-, Update- oder DELETE-Anweisungen nicht angegeben wurden, die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-878">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="17326-879">Allerdings können Sie erstellen eine <xref:System.Data.SqlClient.SqlCommandBuilder> oder <xref:System.Data.OleDb.OleDbCommandBuilder> Objekt, das SQL-Anweisungen für einzelne Tabellen Updates automatisch zu generieren, wenn Sie festlegen, die `SelectCommand` Eigenschaft eines .NET Framework-Datenanbieters.</span><span class="sxs-lookup"><span data-stu-id="17326-879">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="17326-880">Alle zusätzlichen SQL-Anweisungen, die Sie nicht festlegen, werden dann generiert, indem die **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="17326-880">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="17326-881">Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-881">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-882">Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="17326-882">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="17326-883">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode ruft Zeilen ab, aus der Tabelle, die in der ersten Zuordnung vor dem Ausführen eines Updates aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="17326-883">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="17326-884">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> aktualisiert dann die Zeile, die mithilfe des Werts für die <xref:System.Data.IDbCommand.UpdatedRowSource%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-884">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="17326-885">Alle weiteren zurückgegebenen Zeilen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="17326-885">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="17326-886">Nachdem alle Daten erneut geladen werden die <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> -Ereignis ausgelöst wird, sodass der Benutzer die abgeglichene überprüfen <xref:System.Data.DataSet> Zeile und alle Ausgabeparameter enthalten, die vom Befehl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="17326-886">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="17326-887">Nachdem eine Zeile wurde erfolgreich aktualisiert wurde, werden die Änderungen an dieser Spalte akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="17326-887">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="17326-888">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.Update%2A>, die Reihenfolge der Ausführung wird wie folgt:</span><span class="sxs-lookup"><span data-stu-id="17326-888">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="17326-889">Die Werte in der <xref:System.Data.DataRow> verschoben werden, um die Parameterwerte.</span><span class="sxs-lookup"><span data-stu-id="17326-889">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="17326-890">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-890">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="17326-891">Der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-891">The command executes.</span></span>  
  
4.  <span data-ttu-id="17326-892">Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, und klicken Sie dann das erste Ergebnis befindet sich zurückgegebene der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-892">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="17326-893">Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-893">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="17326-894">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-894">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="17326-895"><xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="17326-895"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="17326-896">Jeder Befehl zugeordnete der <xref:System.Data.Common.DbDataAdapter> hat in der Regel eine Auflistung von Parametern zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="17326-896">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="17326-897">Parameter sind zugeordnet, mit der aktuellen Zeile über die `SourceColumn` und `SourceVersion` Eigenschaften eines .NET Framework-Datenanbieters `Parameter` Klasse.</span><span class="sxs-lookup"><span data-stu-id="17326-897">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="17326-898">`SourceColumn` bezieht sich auf eine <xref:System.Data.DataTable> Spalte, die die <xref:System.Data.Common.DbDataAdapter> Verweise auf die Parameterwerte für die aktuelle Zeile abzurufen.</span><span class="sxs-lookup"><span data-stu-id="17326-898">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="17326-899">`SourceColumn` bezieht sich auf den Namen nicht zugeordnete Spalte, bevor alle tabellenzuordnungen angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="17326-899">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="17326-900">Wenn `SourceColumn` bezieht sich auf eine nicht vorhandene Spalte, die ausgeführte Aktion hängt von einer der folgenden <xref:System.Data.MissingMappingAction> Werte.</span><span class="sxs-lookup"><span data-stu-id="17326-900">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="17326-901">Enumerationswert</span><span class="sxs-lookup"><span data-stu-id="17326-901">Enumeration value</span></span>|<span data-ttu-id="17326-902">Ausgeführte Aktion</span><span class="sxs-lookup"><span data-stu-id="17326-902">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="17326-903">Verwenden Sie die Namen der Quellspalten und den Tabellennamen in der <xref:System.Data.DataSet> , wenn keine Zuordnung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-903">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="17326-904">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-904">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="17326-905">Wenn die Zuordnungen explizit festgelegt sind, ist eine fehlenden Zuordnung für einen Eingabeparameter in der Regel das Ergebnis eines Fehlers.</span><span class="sxs-lookup"><span data-stu-id="17326-905">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="17326-906">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-906">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="17326-907">Die `SourceColumn` Eigenschaft wird auch verwendet, um den Wert für die Ausgabe zuzuordnen oder Eingabe-/Ausgabeparameter zurück an die `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="17326-907">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="17326-908">Es wird eine Ausnahme generiert, wenn er auf eine nicht vorhandene Spalte verweist.</span><span class="sxs-lookup"><span data-stu-id="17326-908">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="17326-909">Die `SourceVersion` Eigenschaft eines .NET Framework-Datenanbieters `Parameter` Klasse bestimmt, ob die ursprünglichen, aktuelle oder die vorgeschlagene Version des Spaltenwerts verwenden.</span><span class="sxs-lookup"><span data-stu-id="17326-909">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="17326-910">Diese Funktion wird häufig verwendet, auf die ursprünglichen Werte in der WHERE-Klausel einer UPDATE-Anweisung für die Verletzung der vollständigen Parallelität zu überprüfen sind.</span><span class="sxs-lookup"><span data-stu-id="17326-910">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-911">Wenn beim Aktualisieren einer Zeile ein Fehler auftritt, wird eine Ausnahme ausgelöst und Ausführung der Aktualisierung wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="17326-911">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="17326-912">Um weiterhin von der Update-Vorgang ohne Generierung von Ausnahmen, wenn ein Fehler auftritt, legen Sie die <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Eigenschaft `true` vor dem Aufruf <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-912">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="17326-913">Sie können auch auf Fehler für jede Zeile einzeln reagieren die `RowUpdated` Ereignis einen "DataAdapter".</span><span class="sxs-lookup"><span data-stu-id="17326-913">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="17326-914">Den Update-Vorgang fortgesetzt, ohne Auslösen einer Ausnahme in der `RowUpdated` Ereignissatz, der <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> Eigenschaft der <xref:System.Data.Common.RowUpdatedEventArgs> zu <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="17326-914">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17326-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-916">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-916">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="17326-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="17326-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="17326-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="17326-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="17326-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="17326-922">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-922">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17326-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17326-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-925">Wenn eine Anwendung ruft die <xref:System.Data.Common.DbDataAdapter.Update%2A> -Methode, die <xref:System.Data.Common.DbDataAdapter> untersucht die <xref:System.Data.DataRow.RowState%2A> -Eigenschaft, und führt die erforderlichen INSERT-, Update- oder DELETE-Anweisungen iterativ für jede Zeile, die entsprechend der Reihenfolge der Indizes, die in der konfiguriert<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-925">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-926">Z. B. <xref:System.Data.Common.DbDataAdapter.Update%2A> möglicherweise ausführen eine DELETE-Anweisung, gefolgt von einer INSERT-Anweisung und einer weiteren DELETE-Anweisung, aufgrund der Anordnung der Zeilen in der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="17326-926">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="17326-927">Beachten Sie, dass diese Anweisungen nicht als Batchprozess ausgeführt werden; Jede Zeile wird einzeln aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-927">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="17326-928">Kann eine Anwendung Aufrufen der <xref:System.Data.DataSet.GetChanges%2A> -Methode in Situationen, in denen die Reihenfolge der Anweisungstypen gesteuert werden muss (z. B. INSERT vor UPDATE).</span><span class="sxs-lookup"><span data-stu-id="17326-928">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="17326-929">Weitere Informationen finden Sie unter [Aktualisieren von Datenquellen mit "DataAdapters"](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="17326-929">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="17326-930">Wenn die INSERT-, Update- oder DELETE-Anweisungen nicht angegeben wurden, die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-930">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="17326-931">Allerdings können Sie erstellen eine <xref:System.Data.SqlClient.SqlCommandBuilder> oder <xref:System.Data.OleDb.OleDbCommandBuilder> Objekt, das SQL-Anweisungen für einzelne Tabellen Updates automatisch zu generieren, wenn Sie festlegen, die `SelectCommand` Eigenschaft eines .NET Framework-Datenanbieters.</span><span class="sxs-lookup"><span data-stu-id="17326-931">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="17326-932">Alle zusätzlichen SQL-Anweisungen, die Sie nicht festlegen, werden dann generiert, indem die **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="17326-932">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="17326-933">Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-933">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-934">Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="17326-934">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="17326-935">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> -Methode unterstützt Szenarien, in denen die <xref:System.Data.DataSet> enthält mehrere <xref:System.Data.DataTable> Objekte, deren Namen sich nur durch Fall unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="17326-935">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="17326-936">Wenn mehrere Tabellen mit demselben Namen, aber andere Groß-/Kleinschreibung, vorhanden ist, einem `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> führt einen Vergleich Groß-/Kleinschreibung beachtet, um die entsprechende Tabelle zu suchen, und generiert eine Ausnahme aus, wenn keine genaue Übereinstimmung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-936">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="17326-937">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-937">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="17326-938">Wenn <xref:System.Data.Common.DbDataAdapter.Update%2A> aufgerufen wird und die <xref:System.Data.DataSet> enthält nur eine <xref:System.Data.DataTable> , deren Name unterscheidet sich nur durch den Fall, <xref:System.Data.DataTable> wird aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="17326-938">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="17326-939">In diesem Szenario ist der Vergleich Groß-und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="17326-939">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="17326-940">Der folgende C#-Code veranschaulicht dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="17326-940">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="17326-941">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode ruft Zeilen ab, aus der Tabelle, die in der ersten Zuordnung vor dem Ausführen eines Updates aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="17326-941">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="17326-942">Die <xref:System.Data.Common.DbDataAdapter.Update%2A> aktualisiert dann die Zeile, die mithilfe des Werts für die <xref:System.Data.IDbCommand.UpdatedRowSource%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="17326-942">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="17326-943">Alle weiteren zurückgegebenen Zeilen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="17326-943">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="17326-944">Nachdem alle Daten erneut geladen werden die <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> -Ereignis ausgelöst wird, sodass der Benutzer die abgeglichene überprüfen <xref:System.Data.DataSet> Zeile und alle Ausgabeparameter enthalten, die vom Befehl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="17326-944">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="17326-945">Nachdem eine Zeile wurde erfolgreich aktualisiert wurde, werden die Änderungen an dieser Spalte akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="17326-945">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="17326-946">Bei Verwendung <xref:System.Data.Common.DbDataAdapter.Update%2A>, die Reihenfolge der Ausführung wird wie folgt:</span><span class="sxs-lookup"><span data-stu-id="17326-946">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="17326-947">Die Werte in der <xref:System.Data.DataRow> verschoben werden, um die Parameterwerte.</span><span class="sxs-lookup"><span data-stu-id="17326-947">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="17326-948">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-948">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="17326-949">Der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="17326-949">The command executes.</span></span>  
  
4.  <span data-ttu-id="17326-950">Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, und klicken Sie dann das erste Ergebnis befindet sich zurückgegebene der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-950">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="17326-951">Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="17326-951">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="17326-952">Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="17326-952">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="17326-953"><xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="17326-953"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="17326-954">Jeder Befehl zugeordnete der <xref:System.Data.Common.DbDataAdapter> hat in der Regel eine Auflistung von Parametern zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="17326-954">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="17326-955">Parameter sind zugeordnet, mit der aktuellen Zeile über die `SourceColumn` und `SourceVersion` Eigenschaften eines .NET Framework-Datenanbieters `Parameter` Klasse.</span><span class="sxs-lookup"><span data-stu-id="17326-955">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="17326-956">`SourceColumn` bezieht sich auf eine <xref:System.Data.DataTable> Spalte, die die <xref:System.Data.Common.DbDataAdapter> Verweise auf die Parameterwerte für die aktuelle Zeile abzurufen.</span><span class="sxs-lookup"><span data-stu-id="17326-956">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="17326-957">`SourceColumn` bezieht sich auf den Namen nicht zugeordnete Spalte, bevor alle tabellenzuordnungen angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="17326-957">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="17326-958">Wenn `SourceColumn` bezieht sich auf eine nicht vorhandene Spalte, die ausgeführte Aktion hängt von einer der folgenden <xref:System.Data.MissingMappingAction> Werte.</span><span class="sxs-lookup"><span data-stu-id="17326-958">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="17326-959">Enumerationswert</span><span class="sxs-lookup"><span data-stu-id="17326-959">Enumeration value</span></span>|<span data-ttu-id="17326-960">Ausgeführte Aktion</span><span class="sxs-lookup"><span data-stu-id="17326-960">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="17326-961">Verwenden Sie die Namen der Quellspalten und den Tabellennamen in der <xref:System.Data.DataSet> , wenn keine Zuordnung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="17326-961">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="17326-962">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-962">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="17326-963">Wenn die Zuordnungen explizit festgelegt sind, ist eine fehlenden Zuordnung für einen Eingabeparameter in der Regel das Ergebnis eines Fehlers.</span><span class="sxs-lookup"><span data-stu-id="17326-963">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="17326-964">Ein <xref:System.SystemException> wird generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-964">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="17326-965">Die `SourceColumn` Eigenschaft wird auch verwendet, um den Wert für die Ausgabe zuzuordnen oder Eingabe-/Ausgabeparameter zurück an die `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="17326-965">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="17326-966">Es wird eine Ausnahme generiert, wenn er auf eine nicht vorhandene Spalte verweist.</span><span class="sxs-lookup"><span data-stu-id="17326-966">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="17326-967">Die `SourceVersion` Eigenschaft eines .NET Framework-Datenanbieters `Parameter` Klasse bestimmt, ob die ursprünglichen, aktuelle oder die vorgeschlagene Version des Spaltenwerts verwenden.</span><span class="sxs-lookup"><span data-stu-id="17326-967">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="17326-968">Diese Funktion wird häufig verwendet, auf die ursprünglichen Werte in der WHERE-Klausel einer UPDATE-Anweisung für die Verletzung der vollständigen Parallelität zu überprüfen sind.</span><span class="sxs-lookup"><span data-stu-id="17326-968">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17326-969">Wenn beim Aktualisieren einer Zeile ein Fehler auftritt, wird eine Ausnahme ausgelöst und Ausführung der Aktualisierung wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="17326-969">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="17326-970">Um weiterhin von der Update-Vorgang ohne Generierung von Ausnahmen, wenn ein Fehler auftritt, legen Sie die <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Eigenschaft `true` vor dem Aufruf <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="17326-970">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="17326-971">Sie können auch auf Fehler für jede Zeile einzeln reagieren die `RowUpdated` Ereignis einen "DataAdapter".</span><span class="sxs-lookup"><span data-stu-id="17326-971">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="17326-972">Den Update-Vorgang fortgesetzt, ohne Auslösen einer Ausnahme in der `RowUpdated` Ereignissatz, der <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> Eigenschaft der <xref:System.Data.Common.RowUpdatedEventArgs> zu <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="17326-972">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-973">Im folgenden Beispiel wird die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter>, um die Datenquelle zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="17326-973">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17326-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="17326-975">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-975">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="17326-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-978">Die Anzahl der Zeilen pro Batch verarbeitet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-978">The number of rows to process per batch.</span>
          </span>
          <span data-ttu-id="17326-979">
            <list type="table">
              <listheader>
                <term> Wert ist </term>
                <description> Auswirkung </description>
              </listheader>
              <item>
                <term> 0 </term>
                <description> es gibt keine Beschränkung für die Batchgröße.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description> deaktiviert die Batchaktualisierung.  </description>
              </item>
              <item>
                <term> &gt; 1 </term>
                <description> Änderungen gesendet werden, mit Batches von <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> -Operationen gleichzeitig.  </description>
              </item>
            </list>  Beim Festlegen auf einen anderen Wert als 1, alle Befehle zugeordnet der <see cref="T:System.Data.Common.DbDataAdapter" /> müssen ihre <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> -Eigenschaftensatz auf ** keine ** oder ** OutputParameters **.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-979">
              <list type="table">
                <listheader>
                  <term> Value is  </term>
                  <description> Effect  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> There is no limit on the batch size.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> Disables batch updating.  </description>
                </item>
                <item>
                  <term> &gt; 1  </term>
                  <description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.  </description>
                </item>
              </list>  When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span>
          </span>
          <span data-ttu-id="17326-980">Andernfalls wird eine Ausnahme ausgelöst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-980">An exception will be thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-981">Verwenden der <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> Eigenschaft zum Aktualisieren einer Datenquelle mit Änderungen aus einem <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="17326-981">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="17326-982">Wenn der Datenanbieter die Batchverarbeitung unterstützt, kann diese Leistung der Anwendung erhöhen, indem Sie die Anzahl der Roundtrips zum Server reduziert.</span><span class="sxs-lookup"><span data-stu-id="17326-982">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="17326-983">In ADO.NET 2.0 wird diese Eigenschaft für die .NET-Datenanbieter für SQL Server (SqlClient) und Oracle (OracleClient) unterstützt.</span><span class="sxs-lookup"><span data-stu-id="17326-983">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="17326-984">Die Ausführung eines extrem großen Batches könnte die Leistung verringern.</span><span class="sxs-lookup"><span data-stu-id="17326-984">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="17326-985">Daher sollten Sie die Einstellung für eine optimale Batchgröße vor der Implementierung Ihrer Anwendung austesten.</span><span class="sxs-lookup"><span data-stu-id="17326-985">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="17326-986">Ein <xref:System.ArgumentOutOfRangeException> wird ausgelöst, wenn der Wert, in eine Zahl festgelegt ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="17326-986">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17326-987">Gets or sets a command used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-987">Gets or sets a command used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17326-988">Ein <see cref="T:System.Data.IDbCommand" /> verwendet, während der <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> zum Aktualisieren von Datensätzen in der Datenquelle für die geänderten Zeilen im DataSet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17326-988">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17326-989">Während der <xref:System.Data.Common.DbDataAdapter.Update%2A>, wenn diese Eigenschaft nicht festgelegt ist und Primärschlüsselinformationen befindet sich in der <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> wird automatisch generiert.</span><span class="sxs-lookup"><span data-stu-id="17326-989">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17326-990">Das folgende Beispiel erstellt die abgeleitete Klasse <xref:System.Data.OleDb.OleDbDataAdapter> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="17326-990">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>