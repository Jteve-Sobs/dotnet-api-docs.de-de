<Type Name="DbXmlEnabledProviderManifest" FullName="System.Data.Common.DbXmlEnabledProviderManifest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f85b66c5a96a01403f0fccf4a7f3ccc9cda947b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36691664" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbXmlEnabledProviderManifest : System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbXmlEnabledProviderManifest extends System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbXmlEnabledProviderManifest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbXmlEnabledProviderManifest&#xA;Inherits DbProviderManifest" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbXmlEnabledProviderManifest abstract : System::Data::Common::DbProviderManifest" />
  <TypeSignature Language="F#" Value="type DbXmlEnabledProviderManifest = class&#xA;    inherit DbProviderManifest" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbProviderManifest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1ab24-101">Stellt eine Basisklasse dar, die das <see cref="T:System.Data.Common.DbProviderManifest" /> auf Grundlage einer XML-Definition implementiert.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ab24-101">Represents a base class that implements the <see cref="T:System.Data.Common.DbProviderManifest" /> based on an XML definition.</span>
      </span>
      <span data-ttu-id="1ab24-102">Sie können die <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" />-Klasse verwenden, um zur Laufzeit anbieterspezifische Informationen abzurufen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ab24-102">You can use the <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> class to obtain provider-specific information at runtime.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab24-103">Die <xref:System.Data.Common.DbXmlEnabledProviderManifest>-Klasse ist besonders für Anbieter geeignet, deren Typmapping zum EDM symmetrisch ist.</span><span class="sxs-lookup"><span data-stu-id="1ab24-103">The <xref:System.Data.Common.DbXmlEnabledProviderManifest> class is especially appropriate for the providers whose type mapping to EDM is symmetrical.</span></span> <span data-ttu-id="1ab24-104">In Szenarios mit symmetrischem Typmapping wird, unabhängig von der Mappingrichtung, jeder Speichertyp einem einzigen Entity Data Model (EDM)-Typ zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="1ab24-104">In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction.</span></span> <span data-ttu-id="1ab24-105">Mit anderen Worten ist das EDM-zu-Anbieter-Typmapping das Gleiche wie das Anbieter-zu-EDM-Typmapping.</span><span class="sxs-lookup"><span data-stu-id="1ab24-105">In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.</span></span>  
  
 <span data-ttu-id="1ab24-106">In symmetrischen Mappingszenarios kann die benutzerdefinierte Anbieterklasse entweder von der <xref:System.Data.Common.DbXmlEnabledProviderManifest>-Klasse oder der <xref:System.Data.Common.DbProviderManifest>-Klasse abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="1ab24-106">In symmetric mapping scenarios, you can either derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class or the <xref:System.Data.Common.DbProviderManifest> class.</span></span> <span data-ttu-id="1ab24-107">Es wird empfohlen, in symmetrischen Mappingszenarios die benutzerdefinierte Anbieterklasse von der <xref:System.Data.Common.DbXmlEnabledProviderManifest>-Klasse abzuleiten, da die <xref:System.Data.Common.DbXmlEnabledProviderManifest>-Klasse eine deklarative Angabe der Manifeste ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="1ab24-107">We recommend that you derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class for symmetric mapping scenarios because the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class will allow you to specify the manifests declaratively.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbXmlEnabledProviderManifest (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbXmlEnabledProviderManifest(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbXmlEnabledProviderManifest : System.Xml.XmlReader -&gt; System.Data.Common.DbXmlEnabledProviderManifest" Usage="new System.Data.Common.DbXmlEnabledProviderManifest reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="1ab24-108">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das den Zugriff auf die XML-Daten in der Anbietermanifestdatei bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-108">An <see cref="T:System.Xml.XmlReader" /> object that provides access to the XML data in the provider manifest file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab24-109">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-109">Initializes a new instance of the <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab24-110">Das Entity Framework stellt eine Standardimplementierung, die den Anbieter erstellt manifest Informationen aus dem angegebenen XmlReader.</span><span class="sxs-lookup"><span data-stu-id="1ab24-110">The Entity Framework provides a default implementation that builds the provider manifest information from the given XmlReader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFacetDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions (System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions(class System.Data.Metadata.Edm.EdmType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFacetDescriptions (type As EdmType) As ReadOnlyCollection(Of FacetDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::FacetDescription ^&gt; ^ GetFacetDescriptions(System::Data::Metadata::Edm::EdmType ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetFacetDescriptions : System.Data.Metadata.Edm.EdmType -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;" Usage="dbXmlEnabledProviderManifest.GetFacetDescriptions type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1ab24-111">Ein <see cref="T:System.Data.Metadata.Edm.EdmType" />, für den die Facetbeschreibungen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-111">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> for which the facet descriptions are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ab24-112">Gibt eine Liste der Facetbeschreibungen für den angegebenen Entity Data Model (EDM)-Typ zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-112">Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab24-113">Eine Auflistung vom Typ <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, die die Liste der Facetbeschreibungen für den angegebenen EDM-Typ enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-113">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of facet descriptions for the specified EDM type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreFunctions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStoreFunctions () As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetStoreFunctions();" />
      <MemberSignature Language="F#" Value="override this.GetStoreFunctions : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="dbXmlEnabledProviderManifest.GetStoreFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ab24-114">Gibt eine Liste vom Anbieter unterstützter Funktionen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-114">Returns the list of provider-supported functions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab24-115">Eine Auflistung vom Typ <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, in der eine Liste der vom Anbieter unterstützten Funktionen enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-115">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of provider-supported functions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab24-116">Diese (nicht NULL zulassen) Methode gibt keinen benutzerdefinierten Funktionen zurück.</span><span class="sxs-lookup"><span data-stu-id="1ab24-116">This (not nullable) method does not return user-defined functions.</span></span> <span data-ttu-id="1ab24-117">Wenn der Anbieter keine Funktionen unterstützt, gibt diese Methode eine leere Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="1ab24-117">If the provider does not support any functions, this method returns an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStoreTypes () As ReadOnlyCollection(Of PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetStoreTypes();" />
      <MemberSignature Language="F#" Value="override this.GetStoreTypes : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="dbXmlEnabledProviderManifest.GetStoreTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ab24-118">Gibt eine Liste der vom Speicheranbieter unterstützten primitiven Typen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-118">Returns the list of primitive types supported by the storage provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab24-119">Eine Auflistung des Typs <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, die eine Liste der vom Speicheranbieter unterstützten primitiven Typen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-119">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of primitive types supported by the storage provider.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab24-120">Wenn der Speicher einen beliebigen Typ nicht unterstützt, gibt diese (nicht NULL zulassen) Methode eine leere Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="1ab24-120">If the store does not support any type, this (not nullable) method returns an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public override string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceName : string" Usage="System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ab24-121">Ruft den von diesem Anbietermanifest unterstützten Namespacenamen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-121">Gets the namespace name supported by this provider manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ab24-122">Der von diesem Anbietermanifest unterstützte Namespacename.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-122">The namespace name supported by this provider manifest.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypeNameToEdmPrimitiveType">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToEdmPrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToEdmPrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StoreTypeNameToEdmPrimitiveType As Dictionary(Of String, PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ StoreTypeNameToEdmPrimitiveType { System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreTypeNameToEdmPrimitiveType : System.Collections.Generic.Dictionary&lt;string, System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ab24-123">Ruft den ähnlichsten Entity Data Model (EDM)-Typ für einen angegebenen Speichertypnamen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-123">Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ab24-124">Der ähnlichste EDM-Typ für einen angegebenen Speichertypnamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-124">The best mapped equivalent EDM type for a specified storage type name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab24-125">Diese Eigenschaft (keine Nullwerte zulässt) gibt die <xref:System.Collections.Generic.Dictionary`2> Objekt, das einen Speichertypnamen als Schlüssel akzeptiert und gibt den zugeordneten Wert des EDM-Typ.</span><span class="sxs-lookup"><span data-stu-id="1ab24-125">This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary`2> object, which accepts a storage type name as a key and returns its associated EDM type value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypeNameToStorePrimitiveType">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToStorePrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToStorePrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StoreTypeNameToStorePrimitiveType As Dictionary(Of String, PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ StoreTypeNameToStorePrimitiveType { System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreTypeNameToStorePrimitiveType : System.Collections.Generic.Dictionary&lt;string, System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ab24-126">Ruft den ähnlichsten primitiven Speichertyp für einen angegebenen Speichertypnamen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-126">Gets the best mapped equivalent storage primitive type for a specified storage type name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ab24-127">Der ähnlichste primitive Speichertyp für einen angegebenen Speichertypnamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab24-127">The best mapped equivalent storage primitive type for a specified storage type name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab24-128">Diese Eigenschaft (keine Nullwerte zulässt) gibt die <xref:System.Collections.Generic.Dictionary`2> Objekt, das einen Speichertypnamen als Schlüssel akzeptiert und den zugeordneten Speicher Grundtyp Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="1ab24-128">This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary`2> object, which accepts a storage type name as a key and returns its associated storage primitive type value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>