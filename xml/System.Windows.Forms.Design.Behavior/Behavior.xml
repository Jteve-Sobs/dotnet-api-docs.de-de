<Type Name="Behavior" FullName="System.Windows.Forms.Design.Behavior.Behavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7512aba8d12912c3cb5c7a5cbbe8ce361557fd48" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006208" /></Metadata><TypeSignature Language="C#" Value="public abstract class Behavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Behavior extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.Behavior.Behavior" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Behavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class Behavior abstract" />
  <TypeSignature Language="F#" Value="type Behavior = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Objekte dar, die von einem <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> verwaltet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse kann erweitert werden, um alle Arten von Verhalten der Benutzeroberfläche zu entwickeln, einschließlich Auswahl-, Drag-und Größenänderung.  
  
 Weitere Informationen finden Sie unter [Übersicht über den Verhaltens Dienst](https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f).  
  
> [!NOTE]
>  Der <xref:System.Windows.Forms.Design.Behavior.Behavior> Typ muss einem <xref:System.Windows.Forms.Design.Behavior.Glyph> Typ zugeordnet werden. Symbol unabhängige Verhalten werden nicht unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine eigene-Klasse basierend auf <xref:System.Windows.Forms.Design.Behavior.Behavior> der-Klasse erstellt wird, die auf Benutzer Klicks antwortet. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f">Übersicht über den Behavior-Dienst</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird das Initialisieren einer neuen Instanz der <xref:System.Windows.Forms.Design.Behavior.Behavior>-Klasse gezeigt. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f">Übersicht über den Behavior-Dienst</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior (bool callParentBehavior, System.Windows.Forms.Design.Behavior.BehaviorService behaviorService);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool callParentBehavior, class System.Windows.Forms.Design.Behavior.BehaviorService behaviorService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior(bool callParentBehavior, System::Windows::Forms::Design::Behavior::BehaviorService ^ behaviorService);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.Behavior : bool * System.Windows.Forms.Design.Behavior.BehaviorService -&gt; System.Windows.Forms.Design.Behavior.Behavior" Usage="new System.Windows.Forms.Design.Behavior.Behavior (callParentBehavior, behaviorService)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callParentBehavior" Type="System.Boolean" />
        <Parameter Name="behaviorService" Type="System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Parameters>
      <Docs>
        <param name="callParentBehavior"><see langword="true" />, wenn das übergeordnete Verhalten bei Vorhandensein aufgerufen werden soll, andernfalls <see langword="false" />.</param>
        <param name="behaviorService">Der zu verwendende <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das übergeordnete Verhalten ist das nächste Verhalten im Verhaltens Stapel, das von <xref:System.Windows.Forms.Design.Behavior.BehaviorService>verwaltet wird. Wenn der `callParentBehavior` -Parameter `true`ist, darf `behaviorService` der-Parameter nicht `null`sein.  
  
 `callParentBehavior`Gibt an, ob <xref:System.Windows.Forms.Design.Behavior.Behavior> die Basisklasse das übergeordnete Verhalten aufruft, und <xref:System.Windows.Forms.Design.Behavior.BehaviorService> ermöglicht dann das Auswählen des richtigen übergeordneten Verhaltens.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callParentBehavior" /> ist <see langword="true" />, und <paramref name="behaviorService" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Cursor ab, der für dieses Verhalten angezeigt werden soll.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.Cursor" />, der den Cursor darstellt, der für dieses Verhalten angezeigt werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableAllCommands">
      <MemberSignature Language="C#" Value="public virtual bool DisableAllCommands { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableAllCommands" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisableAllCommands As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisableAllCommands { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DisableAllCommands : bool" Usage="System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.ComponentModel.Design.MenuCommand" />-Objekte deaktiviert werden sollen.</summary>
        <value><see langword="true" />, <see cref="T:System.ComponentModel.Design.MenuCommand" /> <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />Wennalle Objekte, die der Designer empfängt, die Zustände auf <c>aktiviert = false</c> festgelegt haben, wenn diese aktiv ist; andernfalls. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein `true` Wert für die <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> -Eigenschaft gibt an <xref:System.Windows.Forms.Design.Behavior.BehaviorService> , dass <xref:System.ComponentModel.Design.MenuCommand> für alle vom Designer empfangenen-Objekte der Zustand deaktiviert werden soll, wenn dieses Verhalten aktiv ist.  
  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> -Eigenschaft funktioniert in Verbindung mit <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> der-Methode, sodass Sie die Interaktion zwischen Symbolen und Verhalten anpassen können. In <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> der folgenden Tabelle werden die Ergebnisse eines Aufrufes für einen <xref:System.ComponentModel.Design.MenuCommand>bestimmten zusammengefasst.  
  
||<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> ist gleich `true`.|<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> ist gleich `false`.|  
|-|-|-|  
|Dem Treffer geprüften Symbol ist ein Verhalten zugewiesen.|, Wenn <xref:System.ComponentModel.Design.MenuCommand> die mit dem `command ID` angegebenen in der <xref:System.ComponentModel.Design.IMenuCommandService> <xref:System.ComponentModel.Design.MenuCommand> gefunden wird, die deaktiviert und zurückgegeben wird. Andernfalls wird `null` zurückgegeben.|<xref:System.ComponentModel.Design.MenuCommandService.FindCommand%2A>wird für das-Verhalten aufgerufen, und wenn Sie gefunden werden, <xref:System.ComponentModel.Design.MenuCommand> wird das Verhalten von zurückgegeben. Andernfalls wird das Ergebnis von <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> mit dem angegebenen `command ID` -Wert zurückgegeben.|  
|Dem Treffer geprüften Symbol wurde kein Verhalten zugewiesen.|Das Ergebnis von <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> mit dem angegebenen `command ID` wird zurückgegeben.|Das Ergebnis von <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> mit dem angegebenen `command ID` wird zurückgegeben.|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die Standardimplementierung gibt immer <see langword="false" /> zurück.</para></block>
        <altmember cref="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand" />
        <altmember cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandId);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand&#xA;override this.FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="behavior.FindCommand commandId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandId">Ein <see cref="T:System.ComponentModel.Design.CommandID" />-Objekt.</param>
        <summary>Fängt Befehle ab.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.Design.MenuCommand" />. <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> gibt standardmäßig <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> -Methode wird <xref:System.Windows.Forms.Design.Behavior.BehaviorService>von aufgerufen. Es bietet eine Gelegenheit für das <xref:System.Windows.Forms.Design.Behavior.Behavior> zurückgeben eines eigenen Benutzer <xref:System.ComponentModel.Design.MenuCommand>definierten, wodurch diese Nachricht abgefangen wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="public virtual void OnDragDrop (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragDrop (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragDrop(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragDrop (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes Drag &amp; Drop-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> -Methode überschreiben, <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sodass ein eigene Drag &amp; Drop-Regeln angeben kann.</para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="public virtual void OnDragEnter (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragEnter (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragEnter (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragEnter-Verhalten aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes DragEnter-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> -Methode überschreiben, <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sodass ein eigene Drag-Enter-Regeln angeben kann.</para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="public virtual void OnDragLeave (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragLeave(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragLeave (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnDragLeave (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragLeave-Verhalten aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes DragLeave-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" /> -Methode überschreiben, <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sodass ein eigene Drag-Leave-Regeln angeben kann.</para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="public virtual void OnDragOver (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragOver (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragOver(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragOver (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragOver-Verhalten aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes DragOver-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> -Methode überschreiben, <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sodass ein eigene Drag-over-Regeln angeben kann.</para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="public virtual void OnGiveFeedback (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnGiveFeedback (g As Glyph, e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="behavior.OnGiveFeedback (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes Drag &amp; Drop-Feedbackverhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" /> -Methode überschreiben, <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sodass ein eigene Drag &amp; Drop-Regeln angeben kann.</para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoseCapture">
      <MemberSignature Language="C#" Value="public virtual void OnLoseCapture (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLoseCapture(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnLoseCapture (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnLoseCapture(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnLoseCapture (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird vom Gestaltungsfenster aufgerufen, wenn keine Mausereignisse mehr erfasst werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Verhalten kann die Maus Aufzeichnung durch den Verhaltens Dienst anfordern, indem er sich mit der <xref:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior%2A> -Methode auf den Verhaltens Stapel drückt. Wenn dies der Fall ist, wird Sie über die- <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> Methode benachrichtigt, wenn die Erfassung verloren geht. Im allgemeinen entfernt sich das Verhalten zu diesem Zeitpunkt selbst aus dem Stapel. Die Erfassung geht verloren, wenn eine der folgenden Aktionen durchgeführt wird:  
  
-   Eine andere Person fordert die Erfassung an.  
  
-   Ein anderes Verhalten wird übermittelt.  
  
-   Dieses Verhalten wird entfernt.  
  
 In jedem dieser Fälle <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> wird für das Verhalten aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDoubleClick (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDoubleClick(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDoubleClick (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDoubleClick(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDoubleClick (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <param name="mouseLoc">Die Position, an der geklickt wurde.</param>
        <summary>Wird aufgerufen, wenn eine beliebige Doppelklick-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns><see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> -Methode wird aufgerufen, wenn eine Doppelklick Nachricht in `WndProc` den des <xref:System.Windows.Forms.Design.Behavior.BehaviorService>adornerfensters von eintritt. Zuerst wird die Nachricht an die oberste <xref:System.Windows.Forms.Design.Behavior.Behavior> Position im Verhaltens Stapel übermittelt. Die `true` Rückgabe dieser Methode gibt an, dass die Nachricht <xref:System.Windows.Forms.Design.Behavior.Behavior> vom behandelt und nicht weiterverarbeitet werden sollte. An dieser Stelle wird die Nachricht an das entsprechende Verhalten gesendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Doppelklick Nachricht verarbeitet wird. Eine vollständige Code Auflistung finden [Sie unter Gewusst wie: Erweitern Sie das Aussehen und Verhalten von Steuerelementen im](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120))Entwurfs Modus.  
  
 [!code-csharp[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/CS/DesignerDemoControl.cs#10)]
 [!code-vb[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/VB/DesignerDemoControl.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDown (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDown(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDown (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDown(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDown (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <param name="mouseLoc">Die Position, an der geklickt wurde.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseDown-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns><see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> -Methode wird aufgerufen, wenn eine beliebige MouseDown `WndProc` -Meldung in den des <xref:System.Windows.Forms.Design.Behavior.BehaviorService>adornerfensters von eintritt. Zuerst wird die Nachricht an die oberste <xref:System.Windows.Forms.Design.Behavior.Behavior> Position im Verhaltens Stapel übermittelt. Die `true` Rückgabe dieser Methode gibt an, dass die Nachricht <xref:System.Windows.Forms.Design.Behavior.Behavior> vom behandelt und nicht weiterverarbeitet werden sollte. An dieser Stelle wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseEnter (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseEnter(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseEnter (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseEnter g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseEnter-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns><see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> -Methode wird aufgerufen, wenn eine beliebige MouseEnter `WndProc` -Meldung in den des <xref:System.Windows.Forms.Design.Behavior.BehaviorService>adornerfensters von eintritt. An dieser Stelle wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 Wenn die Position des Mauszeigers positiv mit einem anderen <xref:System.Windows.Forms.Design.Behavior.Glyph> als den vorherigen Treffer Tests getestet wird, wird diese Methode für den <xref:System.Windows.Forms.Design.Behavior.Behavior> aufgerufen, der dem <xref:System.Windows.Forms.Design.Behavior.Glyph>zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseHover (System.Windows.Forms.Design.Behavior.Glyph g, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseHover(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseHover (g As Glyph, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseHover(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseHover (g, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="mouseLoc">Die Position, an der die Bewegung des Mauszeigers aufgetreten ist.</param>
        <summary>Wird aufgerufen, wenn eine beliebige Mauszeiger-Bewegungsmeldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns><see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> -Methode wird aufgerufen, wenn eine Mauszeiger Nachricht in `WndProc` den des <xref:System.Windows.Forms.Design.Behavior.BehaviorService>adornerfensters von eintritt. Zuerst wird die Nachricht an die oberste <xref:System.Windows.Forms.Design.Behavior.Behavior> Position im Verhaltens Stapel übermittelt. Die `true` Rückgabe dieser Methode gibt an, dass die Nachricht <xref:System.Windows.Forms.Design.Behavior.Behavior> vom behandelt und nicht weiterverarbeitet werden sollte. An dieser Stelle wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseLeave (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseLeave(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseLeave (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseLeave g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseLeave-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns><see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> -Methode wird aufgerufen, wenn eine beliebige MouseLeave `WndProc` -Meldung in den des <xref:System.Windows.Forms.Design.Behavior.BehaviorService>adornerfensters von eintritt. An dieser Stelle wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 Wenn der Mauszeiger einen positiv mit einem gültigen <xref:System.Windows.Forms.Design.Behavior.Glyph> <xref:System.Windows.Forms.Design.Behavior.Behavior>Treffer Test verlässt, wird diese Methode aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseMove (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseMove(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseMove (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseMove(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseMove (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <param name="mouseLoc">Die Position, an der die Bewegung aufgetreten ist.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseMove-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns><see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> -Methode wird aufgerufen, wenn eine beliebige Maus Verschiebe `WndProc` Nachricht in den des <xref:System.Windows.Forms.Design.Behavior.BehaviorService>adornerfensters von eintritt. Zuerst wird die Nachricht an die oberste <xref:System.Windows.Forms.Design.Behavior.Behavior> Position im Verhaltens Stapel übermittelt. Die `true` Rückgabe dieser Methode gibt an, dass die Nachricht <xref:System.Windows.Forms.Design.Behavior.Behavior> vom behandelt und nicht weiterverarbeitet werden sollte. An dieser Stelle wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseUp (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseUp(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseUp (g As Glyph, button As MouseButtons) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseUp(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool&#xA;override this.OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool" Usage="behavior.OnMouseUp (g, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseUp-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns><see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> -Methode wird aufgerufen, wenn eine beliebige MouseUp `WndProc` -Meldung in den des <xref:System.Windows.Forms.Design.Behavior.BehaviorService>adornerfensters von eintritt. Zuerst wird die Nachricht an die oberste <xref:System.Windows.Forms.Design.Behavior.Behavior> Position im Verhaltens Stapel übermittelt. Die `true` Rückgabe dieser Methode gibt an, dass die Nachricht <xref:System.Windows.Forms.Design.Behavior.Behavior> vom behandelt und nicht weiterverarbeitet werden sollte. An dieser Stelle wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="public virtual void OnQueryContinueDrag (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnQueryContinueDrag (g As Glyph, e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="behavior.OnQueryContinueDrag (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Sendet dieses Drag &amp; Drop-Ereignis aus dem Gestaltungsfenster an das entsprechende <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> oder auf Treffer überprüfte <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" /> -Methode überschreiben, <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sodass ein eigene Drag &amp; Drop-Regeln angeben kann.</para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
  </Members>
</Type>