<Type Name="Behavior" FullName="System.Windows.Forms.Design.Behavior.Behavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b22b1eba7362422dc8e88eea990339824431cd55" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51910378" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Behavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Behavior extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.Behavior.Behavior" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Behavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class Behavior abstract" />
  <TypeSignature Language="F#" Value="type Behavior = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Objekte dar, die von einem <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> verwaltet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse kann erweitert werden, um jede Art von Benutzeroberflächenverhalten, einschließlich der Auswahl, verschieben Sie entwickeln und Ändern der Größe Verhalten.  
  
 Weitere Informationen finden Sie unter [Verhaltensdienst – Übersicht](https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f).  
  
> [!NOTE]
>  Ihre <xref:System.Windows.Forms.Design.Behavior.Behavior> Typ zugeordnet werden eine <xref:System.Windows.Forms.Design.Behavior.Glyph> Typ. Symbol-unabhängige Verhalten werden nicht unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer eigenen Klasse, die auf der Grundlage der <xref:System.Windows.Forms.Design.Behavior.Behavior> -Klasse, die auf Mausklicks reagiert. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f">Übersicht über den Behavior-Dienst</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird das Initialisieren einer neuen Instanz der <xref:System.Windows.Forms.Design.Behavior.Behavior>-Klasse gezeigt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f">Übersicht über den Behavior-Dienst</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior (bool callParentBehavior, System.Windows.Forms.Design.Behavior.BehaviorService behaviorService);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool callParentBehavior, class System.Windows.Forms.Design.Behavior.BehaviorService behaviorService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior(bool callParentBehavior, System::Windows::Forms::Design::Behavior::BehaviorService ^ behaviorService);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.Behavior : bool * System.Windows.Forms.Design.Behavior.BehaviorService -&gt; System.Windows.Forms.Design.Behavior.Behavior" Usage="new System.Windows.Forms.Design.Behavior.Behavior (callParentBehavior, behaviorService)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callParentBehavior" Type="System.Boolean" />
        <Parameter Name="behaviorService" Type="System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Parameters>
      <Docs>
        <param name="callParentBehavior">
          <see langword="true" />, wenn das übergeordnete Verhalten bei Vorhandensein aufgerufen werden soll, andernfalls <see langword="false" />.</param>
        <param name="behaviorService">Der zu verwendende <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das übergeordnete Verhalten ist das nächste Verhalten auf dem Verhaltensstapel ab, die von verwaltet die <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Wenn die `callParentBehavior` Parameter `true`, und klicken Sie dann die `behaviorService` Parameter darf nicht sein `null`.  
  
 `callParentBehavior` Gibt an, ob die Basis <xref:System.Windows.Forms.Design.Behavior.Behavior> Klasse rufen Sie das übergeordnete Verhalten soll, und lassen Sie die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> wählen Sie das richtige übergeordnete Verhalten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callParentBehavior" /> ist <see langword="true" />, und <paramref name="behaviorService" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Cursor ab, der für dieses Verhalten angezeigt werden soll.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.Cursor" />, der den Cursor darstellt, der für dieses Verhalten angezeigt werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableAllCommands">
      <MemberSignature Language="C#" Value="public virtual bool DisableAllCommands { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableAllCommands" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisableAllCommands As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisableAllCommands { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DisableAllCommands : bool" Usage="System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.ComponentModel.Design.MenuCommand" />-Objekte deaktiviert werden sollen.</summary>
        <value>
          <see langword="true" /> Wenn alle <see cref="T:System.ComponentModel.Design.MenuCommand" /> Objekte, die der Designer erhält müssen Zustände festgelegt <c>Enabled = "false"</c> beim dies <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> aktiv ist; andernfalls, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein `true` Wert für die <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> Eigenschaft gibt an, um die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> , die alle <xref:System.ComponentModel.Design.MenuCommand> Objekte, die der Designer erhält, müssen deren Status deaktiviert, wenn dieses Verhalten aktiv ist.  
  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> Eigenschaft funktioniert in Verbindung mit der <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> Methode, sodass Sie die Interaktion zwischen Symbolen und Verhalten anpassen können. Die folgende Tabelle enthält die Ergebnisse eines Aufrufs von <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> für einen bestimmten <xref:System.ComponentModel.Design.MenuCommand>.  
  
||<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> ist gleich `true`.|<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> ist gleich `false`.|  
|-|-|-|  
|Treffer überprüfte Symbol weist ein zugewiesene Verhalten|Wenn die <xref:System.ComponentModel.Design.MenuCommand> mit dem angegebenen `command ID` befindet sich der <xref:System.ComponentModel.Design.IMenuCommandService>, <xref:System.ComponentModel.Design.MenuCommand> deaktiviert und zurückgegeben. Andernfalls wird `null` zurückgegeben.|<xref:System.ComponentModel.Design.MenuCommandService.FindCommand%2A> wird aufgerufen, auf dem Verhalten und, sofern gefunden, des Verhaltens des <xref:System.ComponentModel.Design.MenuCommand> zurückgegeben wird. Andernfalls das Ergebnis des <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> mit dem angegebenen `command ID` zurückgegeben wird.|  
|Treffer überprüfte Symbol weist keine zugewiesenen Verhalten|Das Ergebnis des <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> mit dem angegebenen `command ID` zurückgegeben wird.|Das Ergebnis des <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> mit dem angegebenen `command ID` zurückgegeben wird.|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die Standardimplementierung gibt immer <see langword="false" /> zurück.</para>
        </block>
        <altmember cref="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand" />
        <altmember cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandId);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand&#xA;override this.FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="behavior.FindCommand commandId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandId">Ein <see cref="T:System.ComponentModel.Design.CommandID" />-Objekt.</param>
        <summary>Fängt Befehle ab.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.Design.MenuCommand" />. <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> gibt standardmäßig <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> Methode wird aufgerufen, von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Es bietet die Möglichkeit für die <xref:System.Windows.Forms.Design.Behavior.Behavior> zurückzugebenden ihr eigenes benutzerdefiniertes <xref:System.ComponentModel.Design.MenuCommand>können. Dadurch wird diese Nachricht abfangen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="public virtual void OnDragDrop (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragDrop (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragDrop(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragDrop (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes Drag &amp; Drop-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Können Sie überschreiben die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> Methode, damit eine <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> können eigene Drag &amp; Drop-Regeln angeben.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="public virtual void OnDragEnter (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragEnter (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragEnter (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragEnter-Verhalten aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes DragEnter-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Können Sie überschreiben die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> Methode, damit eine <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> können eigene DragEnter-Regeln angeben.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="public virtual void OnDragLeave (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragLeave(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragLeave (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnDragLeave (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragLeave-Verhalten aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes DragLeave-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Können Sie überschreiben die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" /> Methode, damit eine <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> kann eine eigene DragLeave-Regeln angeben.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="public virtual void OnDragOver (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragOver (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragOver(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragOver (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, für das das DragOver-Verhalten aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes DragOver-Verhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Können Sie überschreiben die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> Methode, damit eine <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> kann eine eigene DragOver-Regeln angeben.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="public virtual void OnGiveFeedback (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnGiveFeedback (g As Glyph, e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="behavior.OnGiveFeedback (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Lässt benutzerdefiniertes Drag &amp; Drop-Feedbackverhalten zu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Können Sie überschreiben die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" /> Methode, damit eine <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> können eigene Drag &amp; Drop-Regeln angeben.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoseCapture">
      <MemberSignature Language="C#" Value="public virtual void OnLoseCapture (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLoseCapture(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnLoseCapture (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnLoseCapture(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnLoseCapture (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt, für das Drag &amp; Drop aufgerufen werden soll.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird vom Gestaltungsfenster aufgerufen, wenn keine Mausereignisse mehr erfasst werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Verhalten, kann die Erfassung von Mauseingaben über den Behavior-Dienst anfordern, indem Sie mithilfe von Push übertragen selbst auf dem Verhaltensstapel ab, mit der <xref:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior%2A> Methode. Wenn es der Fall ist, sie werden benachrichtigt, über die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> Methode, wenn Sie Capture verloren geht. Im Allgemeinen das Verhalten sich selbst entfernt aus dem Stapel zu diesem Zeitpunkt. Capture geht verloren, wenn eines der folgenden Aktionen aus:  
  
-   Eine andere Person Anforderungen erfassen.  
  
-   Ein anderes Verhalten wird mithilfe von Push übertragen.  
  
-   Dieses Verhalten wird entfernt.  
  
 In allen diesen Fällen <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> wird für das Verhalten aufgerufen werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDoubleClick (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDoubleClick(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDoubleClick (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDoubleClick(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDoubleClick (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <param name="mouseLoc">Die Position, an der geklickt wurde.</param>
        <summary>Wird aufgerufen, wenn eine beliebige Doppelklick-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns>
          <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> Methode wird aufgerufen, wenn eine beliebige Doppelklick-Meldung wechselt die `WndProc` des Gestaltungsfensters von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Die Nachricht ist zuerst übergeben, um das am weitesten oben <xref:System.Windows.Forms.Design.Behavior.Behavior> im Verhaltensstapel. Zurückgeben von `true` von dieser Methode bedeutet, dass die Meldung, indem behandelt wurde die <xref:System.Windows.Forms.Design.Behavior.Behavior> und sollte nicht mehr weiter verarbeitet werden. Von hier aus wird die Nachricht an das entsprechende Verhalten gesendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Doppelklick-Meldung verarbeitet. Eine vollständige codeauflistung finden Sie unter [Vorgehensweise: Erweitern der Darstellung und Verhalten von Steuerelementen im Entwurfsmodus](https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b).  
  
 [!code-csharp[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/CS/DesignerDemoControl.cs#10)]
 [!code-vb[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/VB/DesignerDemoControl.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDown (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDown(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDown (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDown(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDown (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <param name="mouseLoc">Die Position, an der geklickt wurde.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseDown-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns>
          <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> Methode wird aufgerufen, wenn eine beliebige MouseDown Meldung wechselt die `WndProc` des Gestaltungsfensters von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Die Nachricht ist zuerst übergeben, um das am weitesten oben <xref:System.Windows.Forms.Design.Behavior.Behavior> im Verhaltensstapel. Zurückgeben von `true` von dieser Methode bedeutet, dass die Meldung, indem behandelt wurde die <xref:System.Windows.Forms.Design.Behavior.Behavior> und sollte nicht mehr weiter verarbeitet werden. Von hier aus wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseEnter (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseEnter(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseEnter (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseEnter g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseEnter-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns>
          <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> Methode wird aufgerufen, wenn eine beliebige MouseEnter-Meldung Eintritt der `WndProc` des Gestaltungsfensters von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Von hier aus wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 Wenn die Position des Mauszeigers werde, positiv als Treffer mit einer anderen getestet ist <xref:System.Windows.Forms.Design.Behavior.Glyph> als zuvor auf Treffer überprüft, diese Methode aufgerufen wird, auf die <xref:System.Windows.Forms.Design.Behavior.Behavior> zugeordneten der <xref:System.Windows.Forms.Design.Behavior.Glyph>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseHover (System.Windows.Forms.Design.Behavior.Glyph g, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseHover(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseHover (g As Glyph, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseHover(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseHover (g, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="mouseLoc">Die Position, an der die Bewegung des Mauszeigers aufgetreten ist.</param>
        <summary>Wird aufgerufen, wenn eine beliebige Mauszeiger-Bewegungsmeldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns>
          <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> Methode wird aufgerufen, wenn eine beliebige Mauszeiger-bewegungsmeldung wechselt die `WndProc` des Gestaltungsfensters von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Die Nachricht ist zuerst übergeben, um das am weitesten oben <xref:System.Windows.Forms.Design.Behavior.Behavior> im Verhaltensstapel. Zurückgeben von `true` von dieser Methode bedeutet, dass die Meldung, indem behandelt wurde die <xref:System.Windows.Forms.Design.Behavior.Behavior> und sollte nicht mehr weiter verarbeitet werden. Von hier aus wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseLeave (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseLeave(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseLeave (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseLeave g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseLeave-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns>
          <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> Methode wird aufgerufen, wenn eine beliebige MouseLeave Meldung wechselt die `WndProc` des Gestaltungsfensters von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Von hier aus wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 Wenn der Mauszeiger die Form verlässt eine werde, positiv Treffer überprüfte <xref:System.Windows.Forms.Design.Behavior.Glyph> mit einer gültigen <xref:System.Windows.Forms.Design.Behavior.Behavior>, diese Methode wird aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseMove (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseMove(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseMove (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseMove(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseMove (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <param name="mouseLoc">Die Position, an der die Bewegung aufgetreten ist.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseMove-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns>
          <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> Methode wird aufgerufen, wenn eine beliebige MouseMove-Meldung Eintritt der `WndProc` des Gestaltungsfensters von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Die Nachricht ist zuerst übergeben, um das am weitesten oben <xref:System.Windows.Forms.Design.Behavior.Behavior> im Verhaltensstapel. Zurückgeben von `true` von dieser Methode bedeutet, dass die Meldung, indem behandelt wurde die <xref:System.Windows.Forms.Design.Behavior.Behavior> und sollte nicht mehr weiter verarbeitet werden. Von hier aus wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseUp (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseUp(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseUp (g As Glyph, button As MouseButtons) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseUp(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool&#xA;override this.OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool" Usage="behavior.OnMouseUp (g, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="button">Ein <see cref="T:System.Windows.Forms.MouseButtons" />-Wert, der angibt, auf welche Schaltfläche geklickt wurde.</param>
        <summary>Wird aufgerufen, wenn eine beliebige MouseUp-Meldung in das Gestaltungsfenster des <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> eintritt.</summary>
        <returns>
          <see langword="true" />, wenn die Nachricht behandelt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> Methode wird aufgerufen, wenn eine beliebige MouseUp-Meldung Eintritt der `WndProc` des Gestaltungsfensters von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Die Nachricht ist zuerst übergeben, um das am weitesten oben <xref:System.Windows.Forms.Design.Behavior.Behavior> im Verhaltensstapel. Zurückgeben von `true` von dieser Methode bedeutet, dass die Meldung, indem behandelt wurde die <xref:System.Windows.Forms.Design.Behavior.Behavior> und sollte nicht mehr weiter verarbeitet werden. Von hier aus wird die Nachricht an das entsprechende Verhalten gesendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="public virtual void OnQueryContinueDrag (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnQueryContinueDrag (g As Glyph, e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="behavior.OnQueryContinueDrag (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Sendet dieses Drag &amp; Drop-Ereignis aus dem Gestaltungsfenster an das entsprechende <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> oder auf Treffer überprüfte <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Können Sie überschreiben die <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" /> Methode, damit eine <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> können eigene Drag &amp; Drop-Regeln angeben.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Gewusst wie: Erweitern der Darstellung und des Verhaltens von Steuerelementen im Entwurfsmodus</related>
      </Docs>
    </Member>
  </Members>
</Type>