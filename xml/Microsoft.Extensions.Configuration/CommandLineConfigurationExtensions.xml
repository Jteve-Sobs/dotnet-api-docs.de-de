<Type Name="CommandLineConfigurationExtensions" FullName="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="157221122cc383da4fd9b738ad800494613a3bd7" /><Meta Name="ms.sourcegitcommit" Value="3001e6bfbacb09c47be86e2ade5b0c2bd91bb0cb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/31/2020" /><Meta Name="ms.locfileid" Value="87469674" /></Metadata><TypeSignature Language="C#" Value="public static class CommandLineConfigurationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CommandLineConfigurationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CommandLineConfigurationExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineConfigurationExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type CommandLineConfigurationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="191f1-101">Erweiterungsmethoden zum Registrieren von <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" /> bei <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="191f1-101">Extension methods for registering <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" /> with <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCommandLine">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine (this Microsoft.Extensions.Configuration.IConfigurationBuilder builder, Action&lt;Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt; configureSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine(class Microsoft.Extensions.Configuration.IConfigurationBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt; configureSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCommandLine (builder As IConfigurationBuilder, configureSource As Action(Of CommandLineConfigurationSource)) As IConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Configuration::IConfigurationBuilder ^ AddCommandLine(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ builder, Action&lt;Microsoft::Extensions::Configuration::CommandLine::CommandLineConfigurationSource ^&gt; ^ configureSource);" />
      <MemberSignature Language="F#" Value="static member AddCommandLine : Microsoft.Extensions.Configuration.IConfigurationBuilder * Action&lt;Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt; -&gt; Microsoft.Extensions.Configuration.IConfigurationBuilder" Usage="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine (builder, configureSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="configureSource" Type="System.Action&lt;Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="191f1-102">Die <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />-Schnittstelle, der etwas hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="191f1-102">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</span></span></param>
        <param name="configureSource"><span data-ttu-id="191f1-103">Konfiguriert die Quelle.</span><span class="sxs-lookup"><span data-stu-id="191f1-103">Configures the source.</span></span></param>
        <summary><span data-ttu-id="191f1-104">Fügt eine <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />-Schnittstelle hinzu, die Konfigurationswerte aus der Befehlszeile liest.</span><span class="sxs-lookup"><span data-stu-id="191f1-104">Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the command line.</span></span></summary>
        <returns><span data-ttu-id="191f1-105">Die <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="191f1-105">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCommandLine">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine (this Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine(class Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCommandLine (configurationBuilder As IConfigurationBuilder, args As String()) As IConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Configuration::IConfigurationBuilder ^ AddCommandLine(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ configurationBuilder, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member AddCommandLine : Microsoft.Extensions.Configuration.IConfigurationBuilder * string[] -&gt; Microsoft.Extensions.Configuration.IConfigurationBuilder" Usage="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine (configurationBuilder, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationBuilder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" RefType="this" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="configurationBuilder"><span data-ttu-id="191f1-106">Die <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />-Schnittstelle, der etwas hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="191f1-106">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</span></span></param>
        <param name="args"><span data-ttu-id="191f1-107">Die Befehlszeilenargumente.</span><span class="sxs-lookup"><span data-stu-id="191f1-107">The command line args.</span></span></param>
        <summary><span data-ttu-id="191f1-108">Fügt eine <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />-Schnittstelle der <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" />-Klasse hinzu, die Konfigurationswerte aus der Befehlszeile liest.</span><span class="sxs-lookup"><span data-stu-id="191f1-108">Adds a <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" /><see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the command line.</span></span></summary>
        <returns><span data-ttu-id="191f1-109">Die <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="191f1-109">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span></span></returns>
        <remarks><para><span data-ttu-id="191f1-110">Die Werte, die in der Befehlszeile im <c>args</c> -Zeichen folgen Array ausgegeben werden, sollten eine Reihe von Schlüsseln mit vorangestelltem Bindestrich ("--") und dann die Werte aufweisen, getrennt durch das Gleichheitszeichen ("=") oder ein Leerzeichen ("").</span><span class="sxs-lookup"><span data-stu-id="191f1-110">The values passed on the command line, in the <c>args</c> string array, should be a set of keys prefixed with two dashes ("--") and then values, separate by either the equals sign ("=") or a space (" ").</span></span></para>
          <para><span data-ttu-id="191f1-111">Ein Schrägstrich ("/") kann als alternatives Präfix verwendet werden, wobei entweder gleich oder Leerzeichen ist. Wenn ein Gleichheitszeichen verwendet wird, kann das Präfix vollständig ausgelassen werden.</span><span class="sxs-lookup"><span data-stu-id="191f1-111">A forward slash ("/") can be used as an alternative prefix, with either equals or space, and when using an equals sign the prefix can be left out altogether.</span></span> </para>
          <para><span data-ttu-id="191f1-112">Es gibt fünf grundlegende alternative Formate für Argumente: <c>key1 = value1--key2 = value2/key3 = Wert3--key4 Value4</c>/key5 value5.</span><span class="sxs-lookup"><span data-stu-id="191f1-112">There are five basic alternative formats for arguments: <c>key1=value1 --key2=value2 /key3=value3 --key4 value4 /key5 value5</c>.</span></span></para></remarks>
        <example><span data-ttu-id="191f1-113">Eine einfache Konsolenanwendung, die über fünf Werte verfügt.</span><span class="sxs-lookup"><span data-stu-id="191f1-113">A simple console application that has five values.</span></span> 
              <code>
                // dotnet run key1=value1 --key2=value2 /key3=value3 --key4 value4 /key5 value5
                
                using Microsoft.Extensions.Configuration;
                using System;
                
                namespace CommandLineSample
                {
                   public class Program
                   {
                       public static void Main(string[] args)
                       {
                           var builder = new ConfigurationBuilder();
                           builder.AddCommandLine(args);
                
                           var config = builder.Build();
                
                           Console.WriteLine($"Key1: '{config["Key1"]}'");
                           Console.WriteLine($"Key2: '{config["Key2"]}'");
                           Console.WriteLine($"Key3: '{config["Key3"]}'");
                           Console.WriteLine($"Key4: '{config["Key4"]}'");
                           Console.WriteLine($"Key5: '{config["Key5"]}'");
                       }
                   }
                }
              </code></example>
      </Docs>
    </Member>
    <Member MemberName="AddCommandLine">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine (this Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args, System.Collections.Generic.IDictionary&lt;string,string&gt; switchMappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Configuration.IConfigurationBuilder AddCommandLine(class Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string[] args, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; switchMappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String[],System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCommandLine (configurationBuilder As IConfigurationBuilder, args As String(), switchMappings As IDictionary(Of String, String)) As IConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Configuration::IConfigurationBuilder ^ AddCommandLine(Microsoft::Extensions::Configuration::IConfigurationBuilder ^ configurationBuilder, cli::array &lt;System::String ^&gt; ^ args, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ switchMappings);" />
      <MemberSignature Language="F#" Value="static member AddCommandLine : Microsoft.Extensions.Configuration.IConfigurationBuilder * string[] * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Extensions.Configuration.IConfigurationBuilder" Usage="Microsoft.Extensions.Configuration.CommandLineConfigurationExtensions.AddCommandLine (configurationBuilder, args, switchMappings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration.CommandLine</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationBuilder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" RefType="this" />
        <Parameter Name="args" Type="System.String[]" />
        <Parameter Name="switchMappings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="configurationBuilder"><span data-ttu-id="191f1-114">Die <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />-Schnittstelle, der etwas hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="191f1-114">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</span></span></param>
        <param name="args"><span data-ttu-id="191f1-115">Die Befehlszeilenargumente.</span><span class="sxs-lookup"><span data-stu-id="191f1-115">The command line args.</span></span></param>
        <param name="switchMappings"><span data-ttu-id="191f1-116">Die Optionszuordnungen.</span><span class="sxs-lookup"><span data-stu-id="191f1-116">The switch mappings.</span></span> <span data-ttu-id="191f1-117">Ein Wörterbuch mit Abkürzungen (mit dem Präfix „-“) und Aliasschlüsseln (mit dem Präfix „--“), das dem Konfigurationsschlüssel (ohne Präfix) zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="191f1-117">A dictionary of short (with prefix "-") and alias keys (with prefix "--"), mapped to the configuration key (no prefix).</span></span></param>
        <summary><span data-ttu-id="191f1-118">Fügt eine <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />-Schnittstelle der <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" />-Klasse hinzu, die mithilfe der angegebenen Optionszuordnungen Konfigurationswerte aus der Befehlszeile liest.</span><span class="sxs-lookup"><span data-stu-id="191f1-118">Adds a <see cref="T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" /><see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the command line using the specified switch mappings.</span></span></summary>
        <returns><span data-ttu-id="191f1-119">Die <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="191f1-119">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</span></span></returns>
        <remarks><para><span data-ttu-id="191f1-120">Mithilfe der <c>switchmappings</c> können zusätzliche Formate für alternative kurz-und Alias Schlüssel in der Befehlszeile verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="191f1-120">The <c>switchMappings</c> allows additional formats for alternative short and alias keys to be used from the command line.</span></span> <span data-ttu-id="191f1-121">Weitere Informationen finden Sie auch in der Grundversion von <c>addcommandline</c> für die unterstützten Standardformate.</span><span class="sxs-lookup"><span data-stu-id="191f1-121">Also see the basic version of <c>AddCommandLine</c> for the standard formats supported.</span></span></para>
          <para><span data-ttu-id="191f1-122">Kurze Schlüssel beginnen mit einem einzelnen Bindestrich ("-") und werden dem Hauptschlüssel Namen (ohne Präfix) zugeordnet und können mit "ob" oder "Space" verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="191f1-122">Short keys start with a single dash ("-") and are mapped to the main key name (without prefix), and can be used with either equals or space.</span></span> <span data-ttu-id="191f1-123">Die einzelnen Bindestriche sollen für kürzere Alternative Switches verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="191f1-123">The single dash mappings are intended to be used for shorter alternative switches.</span></span></para>
          <para><span data-ttu-id="191f1-124">Beachten Sie, dass auf einen einzelnen Bindestrich nicht direkt zugegriffen werden kann, sondern dass eine switchzuordnung definiert sein muss, und der Zugriff erfolgt über den vollständigen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="191f1-124">Note that a single dash switch cannot be accessed directly, but must have a switch mapping defined and accessed using the full key.</span></span> <span data-ttu-id="191f1-125">Wenn ein nicht definiertes einzelnes Dash-Argument übergeben wird, wird als <c>FormatException</c>ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="191f1-125">Passing an undefined single dash argument will cause as <c>FormatException</c>.</span></span></para>
          <para><span data-ttu-id="191f1-126">Es gibt zwei Formate für kurze Argumente: <c>-K1 = value1-K2 Value2</c>.</span><span class="sxs-lookup"><span data-stu-id="191f1-126">There are two formats for short arguments: <c>-k1=value1 -k2 value2</c>.</span></span></para>
          <para><span data-ttu-id="191f1-127">Alias Schlüsseldefinitionen beginnen mit zwei Bindestrichen ("--") und werden dem Hauptschlüssel Namen (ohne Präfix) zugeordnet und können anstelle des normalen Schlüssels verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="191f1-127">Alias key definitions start with two dashes ("--") and are mapped to the main key name (without prefix), and can be used in place of the normal key.</span></span> <span data-ttu-id="191f1-128">Sie funktionieren auch, wenn ein Schrägstrich-Präfix in der Befehlszeile verwendet wird (jedoch nicht mit dem Format "kein Präfix gleich").</span><span class="sxs-lookup"><span data-stu-id="191f1-128">They also work when a forward slash prefix is used in the command line (but not with the no prefix equals format).</span></span></para>
          <para><span data-ttu-id="191f1-129">Es gibt nur vier Formate für Alias Argumente: <c>--alt3 = Wert3/alt4 = Value4--alt5 value5/alt6 value6</c>.</span><span class="sxs-lookup"><span data-stu-id="191f1-129">There are only four formats for aliased arguments: <c>--alt3=value3 /alt4=value4 --alt5 value5 /alt6 value6</c>.</span></span></para></remarks>
        <example><span data-ttu-id="191f1-130">Eine einfache Konsolenanwendung, für die zwei kurze und vier Alias Wechsel Zuordnungen definiert sind.</span><span class="sxs-lookup"><span data-stu-id="191f1-130">A simple console application that has two short and four alias switch mappings defined.</span></span> 
              <code>
                // dotnet run -k1=value1 -k2 value2 --alt3=value2 /alt4=value3 --alt5 value5 /alt6 value6
                
                using Microsoft.Extensions.Configuration;
                using System;
                using System.Collections.Generic;
                
                namespace CommandLineSample
                {
                   public class Program
                   {
                       public static void Main(string[] args)
                       {
                           var switchMappings = new Dictionary&lt;string, string&gt;()
                           {
                               { "-k1", "key1" },
                               { "-k2", "key2" },
                               { "--alt3", "key3" },
                               { "--alt4", "key4" },
                               { "--alt5", "key5" },
                               { "--alt6", "key6" },
                           };
                           var builder = new ConfigurationBuilder();
                           builder.AddCommandLine(args, switchMappings);
                
                           var config = builder.Build();
                
                           Console.WriteLine($"Key1: '{config["Key1"]}'");
                           Console.WriteLine($"Key2: '{config["Key2"]}'");
                           Console.WriteLine($"Key3: '{config["Key3"]}'");
                           Console.WriteLine($"Key4: '{config["Key4"]}'");
                           Console.WriteLine($"Key5: '{config["Key5"]}'");
                           Console.WriteLine($"Key6: '{config["Key6"]}'");
                       }
                   }
                }
              </code></example>
      </Docs>
    </Member>
  </Members>
</Type>
