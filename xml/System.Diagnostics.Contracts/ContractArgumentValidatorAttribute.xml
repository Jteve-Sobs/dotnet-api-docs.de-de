<Type Name="ContractArgumentValidatorAttribute" FullName="System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cb1413fd21fcf82c4b83c8c37a7173dfd606243" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30397014" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContractArgumentValidatorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContractArgumentValidatorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContractArgumentValidatorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractArgumentValidatorAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Contracts</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.Conditional("CONTRACTS_FULL")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a5485-101">Aktiviert die Verarbeitung von Legacy <see langword="if-then-throw" />-Code in separate Methoden zur Wiederverwendung und stellt die vollständige Kontrolle über ausgelösten Ausnahmen und Argumenten bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5485-101">Enables the factoring of legacy <see langword="if-then-throw" /> code into separate methods for reuse, and provides full control over thrown exceptions and arguments.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5485-102">Wenn Ihr Code verwendet, die explizite `if-then-throw` code zum Überprüfen der Parameter, die Sie möglicherweise werden Dokumentationssatzes Hilfsmethoden, die Durchführung von Überprüfungen und bestimmte Ausnahmen bei einem Fehler, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="a5485-102">If your code uses explicit `if-then-throw` code to validate parameters, you may be employing helper methods that perform checks and throw particular exceptions on failure, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/cs/ifthenthrow1.cs#1)]
 [!code-vb[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/vb/ifthenthrow1.vb#1)]  
  
 <span data-ttu-id="a5485-103">In diesem Beispiel `Execute` weist eine optionale Vorbedingung gibt an, dass der Parameterwert nicht sein sollte `null`.</span><span class="sxs-lookup"><span data-stu-id="a5485-103">In this example, `Execute` has an elective precondition specifying that the parameter value should not be `null`.</span></span> <span data-ttu-id="a5485-104">So aktivieren Sie die vertragstools erkennen, die den Aufruf von `ValidationHelper.NotNull` stellt einen Vertrag dar, markieren Sie die aufgerufene Methode mit dem <xref:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="a5485-104">To enable the contract tools to recognize that the call to `ValidationHelper.NotNull` represents a contract, you can mark the called method with the  <xref:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute> attribute.</span></span> <span data-ttu-id="a5485-105">Die <xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> Methodenaufruf sollte verwendet werden, um die Tools zum Extrahieren von der richtigen Spezifikationen für dokumentgenerierung und statische Überprüfung wie folgt zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="a5485-105">The <xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> method call should be used to enable the tools to extract the proper specifications for document generation and static checking, as follows.</span></span>  
  
 [!code-csharp[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/cs/ifthenthrow2.cs#2)]
 [!code-vb[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/vb/ifthenthrow2.vb#2)]  
  
 <span data-ttu-id="a5485-106">Zusätzlich zu `if-then-throw` Abschnitt Vertrag, der Methoden des Dienstvertrags Validierungssteuerelement-Anweisungen können Aufrufe an andere Methoden des Dienstvertrags Validierungssteuerelement enthalten.</span><span class="sxs-lookup"><span data-stu-id="a5485-106">In addition to `if-then-throw` statements, the contract section of contract validator methods may contain calls to other contract validator methods.</span></span> <span data-ttu-id="a5485-107">Allerdings keine anderen Verträge (z. B. <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>, oder <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType>) sind zulässig.</span><span class="sxs-lookup"><span data-stu-id="a5485-107">However, no other contracts (such as <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>, or <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType>) are allowed.</span></span> <span data-ttu-id="a5485-108">Der folgende Code die <xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> Aufruf wird von allen vertragstools ignoriert.</span><span class="sxs-lookup"><span data-stu-id="a5485-108">Code that follows the <xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType> call is ignored by all contract tools.</span></span>  
  
 <span data-ttu-id="a5485-109">Das folgende Beispiel zeigt ein Argument im Hinblick auf eine vorhandene geschrieben Validierungssteuerelements `NotNull` Validierungssteuerelement-Methode.</span><span class="sxs-lookup"><span data-stu-id="a5485-109">The following example shows a range argument validator written in terms of an existing `NotNull` validator method.</span></span>  
  
 [!code-csharp[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/cs/ifthenthrow3.cs#3)]
 [!code-vb[System.Diagnostics.Contracts.ContractArgumentValidatorAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.contracts.contractargumentvalidatorattribute/vb/ifthenthrow3.vb#3)]  
  
 <span data-ttu-id="a5485-110">Aus Sicht des eine Spezifikation der `Execute` Methode hat die folgenden drei Verträge:</span><span class="sxs-lookup"><span data-stu-id="a5485-110">From a specification point of view, the `Execute` method has the following three contracts:</span></span>  
  
```  
Contract.Requires<ArgumentNullException>(data != null);  
Contract.Requires<ArgumentOutOfRangeException>(position >= 0);  
Contract.Requires<ArgumentOutOfRangeException>(position < data.Length);  
  
```  
  
 <span data-ttu-id="a5485-111">In Standardmethoden, Aufrufe von Methoden Validierungssteuerelement Vertrag können kostenlos kombiniert werden mit anderen Verträge wie z. B. <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType> oder <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a5485-111">In standard methods, calls to contract validator methods can be freely mixed with other contracts such as <xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractArgumentValidatorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractArgumentValidatorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Contracts</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a5485-112">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5485-112">Initializes a new instance of the <see cref="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>