<Type Name="EntityConnection" FullName="System.Data.EntityClient.EntityConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c57790a27303bcab3bdfe859fc45564152fffde1" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967620" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityConnection : System.Data.Common.DbConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnection extends System.Data.Common.DbConnection" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnection&#xA;Inherits DbConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnection sealed : System::Data::Common::DbConnection" />
  <TypeSignature Language="F#" Value="type EntityConnection = class&#xA;    inherit DbConnection" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält einen Verweis auf ein Konzeptmodell und eine Datenquellenverbindung. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Um zu vermeiden, dass versehentlich Objekte wie <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht synchron mit Ihren Metadaten werden, müssen <xref:System.Data.EntityClient.EntityConnection> ihre Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>-Konstruktor erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. Wenn Sie <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> aufrufen, werden die Metadaten gesperrt.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>-Konstruktor erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.

 Codebeispiele finden Sie unter [Arbeiten mit EntityClient](https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)).

 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/ef/entityclient-provider-for-the-entity-framework">EntityClient-Anbieter für Entity Framework</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)">Arbeiten mit EntityClient</related>
    <related type="Article" href="/dotnet/framework/data/adonet/ef/connection-strings">Verbindungszeichenfolge</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Um zu vermeiden, dass versehentlich Objekte wie <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht synchron mit Ihren Metadaten werden, müssen <xref:System.Data.EntityClient.EntityConnection> ihre Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>-Konstruktor erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. Wenn Sie <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> aufrufen, werden die Metadaten gesperrt.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>-Konstruktor erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.

 Codebeispiele finden Sie unter [Arbeiten mit EntityClient](https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)).

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Data.EntityClient.EntityConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Um zu vermeiden, dass versehentlich Objekte wie <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht synchron mit Ihren Metadaten werden, müssen <xref:System.Data.EntityClient.EntityConnection> ihre Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>-Konstruktor erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. Wenn Sie <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> aufrufen, werden die Metadaten gesperrt.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>-Konstruktor erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.

 Codebeispiele finden Sie unter [Arbeiten mit EntityClient](https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : string -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Die anbieterspezifische Verbindungszeichenfolge.</param>
        <summary>Initialisiert auf Grundlage der Verbindungszeichenfolge eine neue Instanz der <see cref="T:System.Data.EntityClient.EntityConnection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die [Entity Data Model Tools](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399249(v=vs.100)) generieren eine benannte Verbindungs Zeichenfolge, die in der Konfigurationsdatei der Anwendung gespeichert ist. Diese benannte Verbindungs Zeichenfolge kann anstelle des `connectionString`-Parameters angegeben werden, wenn Sie die <xref:System.Data.EntityClient.EntityConnection>-Klasse instanziieren.

 Um zu vermeiden, dass versehentlich Objekte <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht mit Ihren Metadaten synchronisiert werden, müssen <xref:System.Data.EntityClient.EntityConnection> ihre Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über diesen Konstruktor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>) erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. Wenn Sie <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> aufrufen, werden die Metadaten gesperrt.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>-Konstruktor erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.

 Codebeispiele finden Sie unter [Arbeiten mit EntityClient](https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)).

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde ein ungültiges Schlüsselwort für eine Verbindungszeichenfolge bereitgestellt, oder ein erforderliches Schlüsselwort für eine Verbindungszeichenfolge wurde nicht bereitgestellt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace workspace, class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workspace As MetadataWorkspace, connection As DbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::Data::Metadata::Edm::MetadataWorkspace ^ workspace, System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : System.Data.Metadata.Edm.MetadataWorkspace * System.Data.Common.DbConnection -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection (workspace, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="workspace">Ein <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, das <see cref="T:System.Data.EntityClient.EntityConnection" /> zugeordnet werden soll.</param>
        <param name="connection">Die zugrunde liegende Datenquellenverbindung für dieses <see cref="T:System.Data.EntityClient.EntityConnection" />-Objekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.EntityClient.EntityConnection" />-Klasse mit einer angegebenen <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> und <see cref="T:System.Data.Common.DbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Mit diesem Konstruktor können Sie eine <xref:System.Data.EntityClient.EntityConnection> aus Metadaten erstellen, die sich nicht aus einer Datei auf einem Datenträger oder einer eingebetteten Ressource in einer Assembly befinden.

 Um zu vermeiden, dass versehentlich Objekte wie <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht synchron mit Ihren Metadaten werden, muss der <xref:System.Data.EntityClient.EntityConnection> seine Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>-Konstruktor erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. Wenn Sie <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> aufrufen, werden die Metadaten gesperrt.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über diesen Konstruktor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>) erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="workspace" />-Parameter oder der <paramref name="connection" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das konzeptionelle Modell fehlt im Arbeitsbereich.

Oder

Die Zuordnungsdatei fehlt im Arbeitsbereich.

Oder

Das Speichermodell fehlt im Arbeitsbereich.

Oder

Das <paramref name="connection" />-Element befindet sich nicht im geschlossenen Zustand.</exception>
        <exception cref="T:System.Data.ProviderIncompatibleException">Der <paramref name="connection" /> stammt nicht von einem ADO.NET Entity Framework-kompatiblen Anbieter.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BeginDbTransaction (isolationLevel As IsolationLevel) As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="entityConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Beginnt eine Datenbanktransaktion.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As EntityTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet eine Transaktion mit dem zugrunde liegenden Anbieter.</summary>
        <returns>Ein neuer <see cref="T:System.Data.EntityClient.EntityTransaction" />. Die zurückgegebene <see cref="T:System.Data.EntityClient.EntityTransaction" />-Instanz kann später <see cref="T:System.Data.EntityClient.EntityCommand" /> zugeordnet werden, um den Befehl unter dieser Transaktion auszuführen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>-Methode verwendet die Isolationsstufe <xref:System.Data.IsolationLevel.Unspecified> Transaktion. Um eine andere Isolationsstufe anzugeben, wenden Sie <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>an. Dieser Wert kann von unterschiedlichen zugrunde liegenden Anbietern unterschiedlich interpretiert werden. Wenn Sie möchten, dass Ihre Anwendung über mehrere Anbieter hinweg portabel ist, sollten Sie die Transaktions Isolationsstufe explizit angeben, indem Sie <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>aufrufen.

 Zu einem bestimmten Zeitpunkt darf nicht mehr als eine aktive Transaktion vorhanden sein, die über <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>erstellt wurde. Der Versuch, eine der <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Überladungen für eine <xref:System.Data.EntityClient.EntityConnection> aufzurufen, die bereits über eine aktuelle Transaktion verfügt, führt zu einem <xref:System.InvalidOperationException>.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Anbieter ist nicht bekannt.

Oder

Der Aufruf von <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> wurde für ein <see cref="T:System.Data.EntityClient.EntityConnection" />-Element ausgeführt, das bereits über eine aktuelle Transaktion verfügt.

Oder

Der Zustand von <see cref="T:System.Data.EntityClient.EntityConnection" /> ist nicht <see cref="F:System.Data.ConnectionState.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (isolationLevel As IsolationLevel) As EntityTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Die Isolationsstufe der Transaktion.</param>
        <summary>Startet eine Transaktion mit dem zugrunde liegenden Anbieter mit der angegebenen Isolationsstufe.</summary>
        <returns>Ein neuer <see cref="T:System.Data.EntityClient.EntityTransaction" />. Die zurückgegebene <see cref="T:System.Data.EntityClient.EntityTransaction" />-Instanz kann später <see cref="T:System.Data.EntityClient.EntityCommand" /> zugeordnet werden, um den Befehl unter dieser Transaktion auszuführen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Zu einem bestimmten Zeitpunkt darf nicht mehr als eine aktive Transaktion vorhanden sein, die über <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>erstellt wurde. Der Versuch, eine der <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Überladungen für eine <xref:System.Data.EntityClient.EntityConnection> aufzurufen, die bereits über eine aktuelle Transaktion verfügt, führt zu einem <xref:System.InvalidOperationException>.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Anbieter ist nicht bekannt.

Oder

Der Aufruf von <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> wurde für ein <see cref="T:System.Data.EntityClient.EntityConnection" />-Element ausgeführt, das bereits über eine aktuelle Transaktion verfügt.

Oder

Der Zustand von <see cref="T:System.Data.EntityClient.EntityConnection" /> ist nicht <see cref="F:System.Data.ConnectionState.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (databaseName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ databaseName);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="entityConnection.ChangeDatabase databaseName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseName">Wird nicht unterstützt.</param>
        <summary>Wird nicht unterstützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Beim Ableiten von <xref:System.Data.Common.DbConnection>ist die <xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A>-Methode erforderlich. Diese Methode wird nicht unterstützt und gibt eine <xref:System.NotSupportedException>aus.

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wenn die Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="entityConnection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt die Verbindung zur Datenbank.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn der zugrunde liegende Datenanbieter nicht bekannt ist, führt der <xref:System.Data.EntityClient.EntityConnection.Close%2A>-Aufrufe keine Aktion aus.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Beim Schließen der Verbindung ist ein Fehler aufgetreten.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.EntityClient.EntityConnection" />-Verbindungszeichenfolge ab oder legt diese fest.</summary>
        <value>Die Verbindungszeichenfolge, die zum Herstellen der ersten Verbindung mit der Datenquelle erforderlich ist. Der Standardwert ist eine leere Zeichenfolge. Bei einer geschlossenen Verbindung wird der aktuell festgelegte Wert zurückgegeben. Wenn kein Wert festgelegt wurde, wird eine leere Zeichenfolge zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine `EntityClient` Verbindungs Zeichenfolge besteht aus einer Folge von Schlüsselwort-Wert-Parameter Paaren, die durch Semikolons getrennt sind. Das Gleichheitszeichen (=) verbindet jedes Schlüsselwort und seinen Wert. Die folgende Tabelle enthält die gültigen Namen für Schlüsselwortwerte im <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.

|Schlüsselwort|BESCHREIBUNG|
|-------------|-----------------|
|`Provider`|Erforderlich, wenn das Schlüsselwort `Name` nicht angegeben ist. Der Anbietername, mit dem das <xref:System.Data.Common.DbProviderFactory>-Objekt für den zugrunde liegenden Anbieter abgerufen wird. Dieser Wert ist konstant.<br /><br /> Wenn das `Name`-Schlüsselwort nicht in der Verbindungs Zeichenfolge enthalten ist, ist ein nicht leerer Wert für das `Provider`-Schlüsselwort erforderlich. Dieses Schlüsselwort und das Schlüsselwort `Name` schließen sich gegenseitig aus.|
|`Provider Connection String`|Optional. Gibt die anbieterspezifische Verbindungszeichenfolge an, die an die zugrunde liegende Datenquelle übergeben wird. Diese Verbindungszeichenfolge wird mithilfe gültiger Schlüsselwort-Wert-Paare für den Datenanbieter ausgedrückt. Eine ungültige `Provider Connection String` löst bei der Auswertung durch die Datenquelle einen Laufzeitfehler aus.<br /><br /> Dieses Schlüsselwort und das Schlüsselwort `Name` schließen sich gegenseitig aus.<br /><br /> Der Wert der `Provider Connection String` muss durch Anführungszeichen eingeschlossen sein. Es folgt ein Beispiel:<br /><br /> `Provider Connection String ="Server=serverName; User ID = userID";`<br /><br /> Das folgende Beispiel ist nicht funktionsfähig:<br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|
|`Metadata`|Erforderlich, wenn das Schlüsselwort `Name` nicht angegeben ist. Eine durch Trennzeichen getrennte Liste von Verzeichnissen, Dateien und Ressourcen Positionen, in denen nach Modell-und Zuordnungsinformationen gesucht werden soll. Es folgt ein Beispiel:<br /><br /> `Metadata=`<br /><br /> `c:\model &#124; c:\model\sql\mapping.msl;`<br /><br /> Leerzeichen zu beiden Seiten des senkrechten Strichs werden ignoriert.<br /><br /> Dieses Schlüsselwort und das Schlüsselwort `Name` schließen sich gegenseitig aus.|
|`Name`|Der Verbindungsname kann von der Anwendung optional in einer Anwendungskonfigurationsdatei angegeben werden, die die erforderlichen Verbindungszeichenfolgen-Werte mit den Schlüsselwort-Wert-Paaren enthält. In diesem Fall können diese nicht direkt in der Verbindungszeichenfolge bereitgestellt werden. Das Schlüsselwort `Name` ist in einer Konfigurationsdatei nicht zulässig.<br /><br /> Wenn das Schlüsselwort `Name` in der Verbindungszeichenfolge nicht eingefügt wurde, ist für das Provider-Schlüsselwort ein nicht leerer Wert erforderlich.<br /><br /> Dieses Schlüsselwort und alle anderen Schlüsselwörter für Verbindungszeichenfolgen schließen sich gegenseitig aus.|

 Die Anwendung kann das Schlüsselwort/die Werte direkt in der <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>-Eigenschaft angeben, oder Sie kann einen Wert für das `Name`-Schlüsselwort angeben. Wenn das `Name`-Schlüsselwort angegeben wird, werden die Verbindungs Zeichenfolgen-Schlüsselwörter/-Werte wie folgt aus einer Anwendungs Konfigurationsdatei abgerufen:

 `Name=AdventureWorksEntities;`

 Wenn das `Name`-Schlüsselwort in der <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>-Eigenschaft verwendet wird, sind keine anderen Schlüsselwörter zulässig. Das `Name`-Schlüsselwort verweist auf eine benannte Verbindungs Zeichenfolge, die im Abschnitt `connectionStrings` in einer Anwendungs Konfigurationsdatei gespeichert wird, wie im folgenden Beispiel gezeigt. Die Werte für `Provider`, `Metadata`und `Provider Connection String` werden zur Laufzeit aus der Konfigurationsdatei abgerufen.



 Die Schlüsselwort-Wert-Paare können auch direkt in der <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>-Eigenschaft bereitgestellt werden, wie im folgenden Beispiel dargestellt. In diesem Fall wird das `Name`-Schlüsselwort nicht verwendet.

```
"Provider=System.Data.SqlClient;
Metadata=c:\metadata|c:\Metadata\Sql;
Provider Connection String= 'Data Source=localhost;
    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' "
```

 Um zu vermeiden, dass versehentlich Objekte wie <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht synchron mit Ihren Metadaten werden, müssen <xref:System.Data.EntityClient.EntityConnection> ihre Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>-Konstruktor erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. Wenn Sie <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> aufrufen, werden die Metadaten gesperrt.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>-Konstruktor erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.



## Examples
 Im folgenden Beispiel wird die Verwendung von <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in Verbindung mit einem <xref:System.Data.SqlClient.SqlConnectionStringBuilder> veranschaulicht. Der Code legt die Eigenschaften eines `SqlConnectionStringBuilder` fest, um eine <xref:System.Data.SqlClient.SqlConnection> Zeichenfolge zu erstellen, die einen Teil der zugrunde liegenden Anbieter Verbindungs Zeichenfolge bereitstellt Beachten Sie, dass der `Provider` Name nicht mit dem `SqlConnectionStringBuilder`festgelegt werden kann, da er keine gültige `SqlConnection` Syntax verwendet. Der Code erstellt die <xref:System.Data.EntityClient.EntityConnection> Zeichenfolge, indem `EntityConnectionStringBuilder` Eigenschaften festgelegt werden.

 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es wurde der Versuch unternommen, die <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" />-Eigenschaft festzulegen, nachdem der <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> von <see cref="T:System.Data.EntityClient.EntityConnection" /> initialisiert wurde. Das <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />-Element wird initialisiert, wenn die <see cref="T:System.Data.EntityClient.EntityConnection" />-Instanz durch die Überladung erstellt wird, die einen <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> als Parameter annimmt, oder wenn die <see cref="T:System.Data.EntityClient.EntityConnection" />-Instanz geöffnet wurde.</exception>
        <exception cref="T:System.ArgumentException">Es wurde ein ungültiges Schlüsselwort für eine Verbindungszeichenfolge bereitgestellt, oder ein erforderliches Schlüsselwort für eine Verbindungszeichenfolge wurde nicht bereitgestellt.</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">Verbindungszeichenfolgen</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/connection-strings">Verbindungszeichenfolgen (Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl von Sekunden ab, während der beim Verbindungsaufbau gewartet werden soll, bevor der Versuch beendet und ein Fehler generiert wird.</summary>
        <value>Der Zeitraum in Sekunden, in dem auf das Öffnen einer Verbindung gewartet werden soll. Der Standardwert ist der Standardtimeout des zugrunde liegenden Datenanbieters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Gibt 0 (null) zurück, wenn der zugrunde liegende Datenanbieter nicht bekannt ist.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der festgelegte Wert ist kleiner als 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As EntityCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.EntityClient.EntityCommand" Usage="entityConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz eines <see cref="T:System.Data.EntityClient.EntityCommand" />, mit der <see cref="P:System.Data.EntityClient.EntityCommand.Connection" /> auf diese <see cref="T:System.Data.EntityClient.EntityConnection" /> festgelegt.</summary>
        <returns>Ein <see cref="T:System.Data.EntityClient.EntityCommand" />-Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der Name des zugrunde liegenden Datenanbieters ist nicht bekannt.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="entityConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.EntityClient.EntityConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der aktuellen Datenbank oder der nach dem Öffnen einer Verbindung verwendeten Datenbank ab.</summary>
        <value>Der Wert der <see langword="Database" />-Eigenschaft des zugrunde liegenden Datenanbieters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Informationen zu den spezifischen Schlüsselwort Werten, wie z. b. `Database`, die der Eigenschaft <xref:System.Data.EntityClient.EntityConnection.Database%2A> zugeordnet sind, finden Sie in der Dokumentation für den zugrunde liegenden Datenanbieter. SQL Server entsprechenden Schlüsselwörtern finden Sie in der Dokumentation für die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType>-Eigenschaft.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Datenanbieter ist nicht bekannt.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen oder die Netzwerkadresse der Datenquelle ab, mit der eine Verbindung hergestellt werden soll.</summary>
        <value>Den Namen der Datenquelle. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Informationen zu den spezifischen Schlüsselwort Werten, wie z. b. `DataSource`, die der Eigenschaft <xref:System.Data.EntityClient.EntityConnection.DataSource%2A> zugeordnet sind, finden Sie in der Dokumentation für den zugrunde liegenden Datenanbieter. SQL Server entsprechenden Schlüsselwörtern finden Sie in der Dokumentation für die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType>-Eigenschaft.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Datenanbieter ist nicht bekannt.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="entityConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EnlistTransaction (transaction As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="entityConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Das Transaktionsobjekt, in das eingetragen wird.</param>
        <summary>Trägt dieses <see cref="T:System.Data.EntityClient.EntityConnection" />-Objekt in die angegebene Transaktion ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode leitet den-Befehl an die Datenquellen Verbindung weiter, um Sie explizit in den bestandenen <xref:System.Transactions.Transaction>einzutragen.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Zustand von <see cref="T:System.Data.EntityClient.EntityConnection" /> ist nicht <see cref="F:System.Data.ConnectionState.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataWorkspace () As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::MetadataWorkspace ^ GetMetadataWorkspace();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataWorkspace : unit -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="entityConnection.GetMetadataWorkspace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> zurück, der dieser <see cref="T:System.Data.EntityClient.EntityConnection" /> zugeordnet ist.</summary>
        <returns>Das dieser <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> zugeordnete <see cref="T:System.Data.EntityClient.EntityConnection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein <xref:System.Data.Metadata.Edm.MetadataWorkspace>-Objekt wird automatisch erstellt, wenn die <xref:System.Data.EntityClient.EntityConnection>-Klasse erstellt wird. Der Erstellungs Prozess löst möglicherweise metadatenspezifische Ausnahmen aus. Metadaten werden in den Arbeitsspeicher geladen, und eine Entity Data Model (EDM)-Anwendung verwendet diese Metadaten, um auf Informationen über die zugrunde liegende Datenquelle zuzugreifen. Weitere Informationen finden Sie unter [ADO.net Metadata](https://docs.microsoft.com/previous-versions/bb399207(v=vs.90)).

 Um zu vermeiden, dass versehentlich Objekte wie <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht synchron mit Ihren Metadaten werden, müssen <xref:System.Data.EntityClient.EntityConnection> ihre Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>-Konstruktor erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> sperrt die Metadaten.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>-Konstruktor erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MetadataException">Die Inlineverbindungszeichenfolge enthält einem ungültigen <see langword="Metadata" />-Schlüsselwortwert.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="entityConnection.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt durch das Aufrufen der <see langword="Open" />-Methode des zugrunde liegenden Datenanbieters eine Verbindung mit der Datenquelle her.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Um zu vermeiden, dass versehentlich Objekte wie <xref:System.Data.Common.CommandTrees> und <xref:System.Data.Objects.ObjectContext> nicht synchron mit Ihren Metadaten werden, müssen <xref:System.Data.EntityClient.EntityConnection> ihre Metadaten sperren. Nachdem die Metadaten gesperrt sind, sind keine Änderungen an der Verbindungs Zeichenfolge zulässig. Im folgenden finden Sie zwei Szenarien, in denen die Metadaten gesperrt sind:

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den Parameter losen Konstruktor oder über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>-Konstruktor erstellt, der eine Verbindungs Zeichenfolge akzeptiert. In beiden Fällen wird die Verbindungs Zeichenfolge möglicherweise mehrmals geändert, bevor die Verbindung geöffnet wird. Wenn Sie <xref:System.Data.EntityClient.EntityConnection.Open%2A> oder <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> aufrufen, werden die Metadaten gesperrt.

-   Die <xref:System.Data.EntityClient.EntityConnection> Instanz wird über den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>-Konstruktor erstellt, der eine <xref:System.Data.Metadata.Edm.MetadataWorkspace> und eine <xref:System.Data.Common.DbConnection>akzeptiert. In diesem Fall werden die Metadaten zur Konstruktionszeit gesperrt. Es sind keine Änderungen an der Verbindungs Zeichenfolge zulässig.

 Beim Laden von Metadaten überprüft der <xref:System.Data.EntityClient.EntityConnection>, ob das konzeptionelle Modell, das Speichermodell und die Mapping-Datei alle vorhanden sind.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ein Fehler tritt auf, wenn die Verbindung geöffnet wird oder der Name des zugrunde liegenden Datenanbieters nicht bekannt ist.</exception>
        <exception cref="T:System.Data.MetadataException">Die Inlineverbindungszeichenfolge enthält einem ungültigen <see langword="Metadata" />-Schlüsselwortwert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge mit der Version der Datenquelle ab, mit der der Client verbunden ist.</summary>
        <value>Die in der Anbieterverbindungszeichenfolge enthaltene Version der Datenquelle.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung ist geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.EntityClient.EntityConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.ConnectionState" />-Eigenschaft des zugrunde liegenden Anbieters ab, wenn die <see cref="T:System.Data.EntityClient.EntityConnection" /> geöffnet ist. Andernfalls wird <see cref="F:System.Data.ConnectionState.Closed" />zurückgegeben.</summary>
        <value><see cref="F:System.Data.ConnectionState.Open" />, wenn und nur dann, wenn der interne Zustand des <see cref="T:System.Data.EntityClient.EntityConnection" />und der <see cref="T:System.Data.ConnectionState" /> des zugrunde liegenden Anbieters offen sind. Wenn der <see cref="T:System.Data.EntityClient.EntityConnection" />Zustand geöffnet ist, der <see cref="T:System.Data.ConnectionState" /> des Anbieters jedoch geschlossen ist, gibt diese Eigenschaft <see cref="F:System.Data.ConnectionState.Broken" />zurück. Andernfalls wird <see cref="F:System.Data.ConnectionState.Closed" />zurückgegeben.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection StoreConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection StoreConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ StoreConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreConnection : System.Data.Common.DbConnection" Usage="System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bietet Zugriff auf die vom <see cref="T:System.Data.EntityClient.EntityConnection" />-Objekt verwendete zugrunde liegende Datenquellenverbindung.</summary>
        <value>Das <see cref="T:System.Data.Common.DbConnection" /> für die Datenquellenverbindung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn das <xref:System.Data.EntityClient.EntityConnection> Objekt geschlossen wird, wird die zurückgegebene Datenquellen Verbindung geschlossen. Wenn Sie geöffnet ist, wird eine geöffnete Datenquellen Verbindung zurückgegeben. Wenn die Datenquellen-Verbindungsinformationen festgelegt wurden, ist der zurückgegebene Wert immer nicht NULL. Wenn keine Datenquellen-Verbindungsinformationen vorhanden sind (z. b. wenn der Parameter lose Konstruktor verwendet wurde und danach keine Verbindungs Zeichenfolge festgelegt wurde), wird ein NULL-Verweis zurückgegeben.

 Die gleiche Datenquellen Verbindung, die von der Entity Framework verwendet wird, kann für andere Teile einer Anwendung freigegeben werden. Die Datenquellen Verbindung wird als <xref:System.Data.Common.DbConnection> Objekt von der <xref:System.Data.Objects.ObjectContext.Connection%2A>-Eigenschaft von <xref:System.Data.Objects.ObjectContext>oder von der <xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A>-Eigenschaft von <xref:System.Data.EntityClient.EntityConnection>zurückgegeben.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
