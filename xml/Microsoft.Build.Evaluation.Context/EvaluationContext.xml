<Type Name="EvaluationContext" FullName="Microsoft.Build.Evaluation.Context.EvaluationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="763ff3b3e46aa3704bbe9918e8e885eadec2112f" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86369956" /></Metadata><TypeSignature Language="C#" Value="public class EvaluationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EvaluationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Context.EvaluationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class EvaluationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvaluationContext" />
  <TypeSignature Language="F#" Value="type EvaluationContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ein Objekt, das vom Aufrufer verwendet wird, um die Lebensdauer von Auswertungscaches zu verlängern (indem das Objekt an andere Auswertungen weitergegeben wird).
Der Aufrufer muss den Kontext verwerfen, wenn sich die Umgebung ändert (E/A, Umgebungsvariablen, SDK-Auflösungseingaben usw.).
Diese Klasse und ihr Abschluss müssen threadsicher sein, da API-Benutzer Auswertungen parallel vornehmen können.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Evaluation.Context.EvaluationContext Create (Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Evaluation.Context.EvaluationContext Create(valuetype Microsoft.Build.Evaluation.Context.EvaluationContext/SharingPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Context.EvaluationContext.Create(Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (policy As EvaluationContext.SharingPolicy) As EvaluationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Evaluation::Context::EvaluationContext ^ Create(Microsoft::Build::Evaluation::Context::EvaluationContext::SharingPolicy policy);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.Build.Evaluation.Context.EvaluationContext.SharingPolicy -&gt; Microsoft.Build.Evaluation.Context.EvaluationContext" Usage="Microsoft.Build.Evaluation.Context.EvaluationContext.Create policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Context.EvaluationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="Microsoft.Build.Evaluation.Context.EvaluationContext+SharingPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">To be added.</param>
        <summary>Factory für <see cref="T:Microsoft.Build.Evaluation.Context.EvaluationContext" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
