<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyHashAlgorithm.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5060dff181314dfc69c0d9ba87fc12a49fb4e75cb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">060dff181314dfc69c0d9ba87fc12a49fb4e75cb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Specifies all the hash algorithms used for hashing files and for generating the strong name.</source>
          <target state="translated">Legt alle Hashalgorithmen fest, die für das Hashing von Dateien und das Generieren des starken Namens verwendet werden.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>A <ph id="ph1">`hash function``H`</ph> is a transformation that takes an input <ph id="ph2">`m`</ph> and returns a fixed-size string, which is called the hash value <ph id="ph3">`h`</ph> (that is, <ph id="ph4">`h`</ph><ph id="ph5"> = </ph><ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>)).</source>
          <target state="translated">Ein <ph id="ph1">`hash function``H`</ph> ist eine Transformation, die eine Eingabe akzeptiert <ph id="ph2">`m`</ph> und gibt eine Zeichenfolge mit fester Größe, die aufgerufen wird, den Hashwert <ph id="ph3">`h`</ph> (d. h. <ph id="ph4">`h`</ph> <ph id="ph5"> = </ph> <ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>)).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.</source>
          <target state="translated">Hashfunktionen mit nur diese Eigenschaft bieten eine Vielzahl von allgemeinen rechnerischen verwendet, aber wenn bei der Verschlüsselung eingesetzt wird, die Hashfunktionen werden in der Regel ausgewählt, um zusätzliche Eigenschaften haben.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The basic requirements for a cryptographic hash function are:</source>
          <target state="translated">Die Mindestanforderungen für einen kryptografischen Hash-Funktion sind:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The input can be of any length.</source>
          <target state="translated">Die Eingabe kann mit beliebiger Länge sein.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The output has a fixed length.</source>
          <target state="translated">Die Ausgabe hat eine feste Länge.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph> is relatively easy to compute for any given x.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph> ist relativ leicht, für jedes angegebene x zu berechnen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is one-way.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) ist unidirektional.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is collision-free.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) besitzt kein Konflikt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest.</source>
          <target state="translated">Der Hashwert stellt deutlicher auf, die länger Nachricht bzw. ein Dokument aus dem er berechnet wurde; Dieser Wert wird der Nachrichtenübersicht bezeichnet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>You can think of a message digest as a digital fingerprint of the larger document.</source>
          <target state="translated">Sie können einen Message Digest als digitalen Fingerabdruck des größeren Dokuments vorstellen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Examples of well-known hash functions are MD2 and SHA.</source>
          <target state="translated">Beispiele für bekannte Hashfunktionen sind MD2 und SHA.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>Retrieves the MD5 message-digest algorithm.</source>
          <target state="translated">Ruft den Message Digest-Algorithmus MD5 ab.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>MD5 was developed by Rivest in 1991.</source>
          <target state="translated">MD5 wurde von Rivest im Jahr 1991 entwickelt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security.</source>
          <target state="translated">Im Grunde handelt es sich hierbei um MD4 mit zusätzlichen Sicherungen. Die Geschwindigkeit ist im Vergleich zu MD4 etwas geringer, die Sicherheit jedoch höher.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4.</source>
          <target state="translated">Der Algorithmus besteht aus vier unabhängigen Durchläufen und unterscheidet sich im Aufbau geringfügig von MD4.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>Message-digest size, as well as padding requirements, remain the same.</source>
          <target state="translated">Die Größe des Message Digests sowie die Anforderungen an Leerraum sind gleich geblieben.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None">
          <source>A mask indicating that there is no hash algorithm.</source>
          <target state="translated">Eine Maske, die angibt, dass kein Hashalgorithmus verfügbar ist.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None">
          <source>If you specify <ph id="ph1">&lt;see langword="None" /&gt;</ph> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.</source>
          <target state="translated">Wenn Sie <ph id="ph1">&lt;see langword="None" /&gt;</ph> für eine Assembly mit mehreren Modulen angeben, ist der Standardalgorithmus für die Common Language Runtime SHA1, da Assemblys mit mehreren Modulen einen Hash generieren müssen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1">
          <source>A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.</source>
          <target state="translated">Ein Maske, mit der eine Revision des SHA (Secure Hash Algorithm, sicherer Hashalgorithmus) abgerufen wird, die einen nicht veröffentlichten Fehler in SHA korrigiert.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.</source>
          <target state="translated">Ein Maske, mit der eine Version des SHA (Secure Hash Algorithm, sicherer Hashalgorithmus) mit einer Hashgröße von 256 Bits abgerufen wird.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.</source>
          <target state="translated">Eine Maske, mit der eine Version des SHA (Secure Hash Algorithm, sicherer Hashalgorithmus) mit einer Hashgröße von 384 Bits abgerufen wird.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.</source>
          <target state="translated">Eine Maske, mit der eine Version des SHA (Secure Hash Algorithm, sicherer Hashalgorithmus) mit einer Hashgröße von 512 Bits abgerufen wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>