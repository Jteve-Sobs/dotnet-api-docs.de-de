<Type Name="AssemblyDependencyResolver" FullName="System.Runtime.Loader.AssemblyDependencyResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f9adec247481caf945c3c70ec14a5f92d96a9e8" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72407159" /></Metadata><TypeSignature Language="C#" Value="public sealed class AssemblyDependencyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyDependencyResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Loader.AssemblyDependencyResolver" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyDependencyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyDependencyResolver sealed" />
  <TypeSignature Language="F#" Value="type AssemblyDependencyResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Loader</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht einem Programm das Auflösen von Assemblys und nativen Bibliotheken in Pfaden, die auf den Abhängigkeiten einer bestimmten Assembly basieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Mit der `AssemblyDependencyResolver`-Klasse können Anwendungsentwickler problemlos eine Plug-in-Architektur in Verbindung mit benutzerdefinierten <xref:System.Runtime.Loader.AssemblyLoadContext?displayProperty=nameWithType>-Instanzen entwickeln, um Plug-ins zu isolieren und Plug-ins zum Laden von Abhängigkeiten zu aktivieren

 Im [Tutorial zum Erstellen einer .net Core-Anwendung mit](https://docs.microsoft.com/dotnet/core/tutorials/creating-app-with-plugin-support) Plug-ins wird beschrieben, wie Sie eine benutzerdefinierte <xref:System.Runtime.Loader.AssemblyLoadContext> erstellen, die eine `AssemblyDependencyResolver` zum Auflösen der Abhängigkeiten des Plug-ins und zum korrekten Isolieren der Abhängigkeiten des Plug-ins von der Host Anwendung verwendet.
 
    ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyDependencyResolver (string componentAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string componentAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentAssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyDependencyResolver(System::String ^ componentAssemblyPath);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Loader.AssemblyDependencyResolver : string -&gt; System.Runtime.Loader.AssemblyDependencyResolver" Usage="new System.Runtime.Loader.AssemblyDependencyResolver componentAssemblyPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentAssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentAssemblyPath">Der Pfad zur Komponente oder zum verwalteten Einstiegspunkt des Plug-Ins.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" />-Klasse mit einem Pfad zur Assembly der Komponente.</summary>
        <remarks>`componentAssemblyPath` kann ein relativer oder ein absoluter Pfad sein. Die Assembly muss über eine zugehörige deps. JSON-Datei im gleichen Verzeichnis verfügen, in der die Abhängigkeiten der Assembly beschrieben werden. Diese Datei wird während des Buildprozesses ausgegeben.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAssemblyToPath">
      <MemberSignature Language="C#" Value="public string ResolveAssemblyToPath (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveAssemblyToPath(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveAssemblyToPath(System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.ResolveAssemblyToPath : System.Reflection.AssemblyName -&gt; string" Usage="assemblyDependencyResolver.ResolveAssemblyToPath assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Der aufzulösende Assemblyname.</param>
        <summary>Löst einen Pfad zu einer Assembly mit dem angegebenen Assemblynamen auf, der auf den Abhängigkeiten der Komponente basiert.</summary>
        <returns>Der Pfad zu einer Assembly mit dem angegebenen Namen aus der deps.json-Datei oder <see langword="null" />, wenn die Assembly in der deps.json-Datei nicht vorhanden ist oder sich auf dem Datenträger nicht an dem Speicherort befindet, der von der deps.json-Datei angegeben wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUnmanagedDllToPath">
      <MemberSignature Language="C#" Value="public string ResolveUnmanagedDllToPath (string unmanagedDllName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveUnmanagedDllToPath(string unmanagedDllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveUnmanagedDllToPath (unmanagedDllName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveUnmanagedDllToPath(System::String ^ unmanagedDllName);" />
      <MemberSignature Language="F#" Value="member this.ResolveUnmanagedDllToPath : string -&gt; string" Usage="assemblyDependencyResolver.ResolveUnmanagedDllToPath unmanagedDllName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Loader</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedDllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unmanagedDllName">Der Name der aufzulösenden nativen Bibliothek.</param>
        <summary>Löst einen Pfad zu einer nativen Bibliothek mit dem angegebenen Namen auf, der auf den Abhängigkeiten der Komponente basiert.</summary>
        <returns>Der Pfad zu einer nativen Bibliothek mit dem angegebenen Namen aus der deps.json-Datei der Komponente und der aktuelle Runtimebezeichner oder <see langword="null" />, wenn die Assembly in der deps.json-Datei nicht vorhanden ist oder sich auf dem Datenträger nicht an dem Speicherort befindet, der von der deps.json-Datei angegeben wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
