<Type Name="OleDbParameter" FullName="System.Data.OleDb.OleDbParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e1ea3c77e0670b525f78518bb022aa0963d1354" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37676864" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type OleDbParameter = class&#xA;    inherit DbParameter&#xA;    interface ICloneable&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbParameter/OleDbParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Parameter für einen <see cref="T:System.Data.OleDb.OleDbCommand" /> sowie optional dessen Zuordnung zu einer <see cref="T:System.Data.DataSet" />-Spalte dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der OLE DB-.NET Framework-Datenanbieter verwendet positionelle Parameter, die markiert sind, mit einem Fragezeichen (?) anstelle von benannten Parametern.  
  
 Beim Abfragen einer Oracle-Datenbank mithilfe von Microsoft OLE DB-Anbieter für Oracle (MSDAORA) und den OLE DB-.NET Framework-Datenanbieter mithilfe der `LIKE` -Klausel zur der Abfragewerte in Feldern mit fester Länge möglicherweise nicht alle erwartete Übereinstimmungen zurück. Der Grund ist, dass die Oracle beim Werte für Felder mit fester Länge in einem `LIKE` -Klausel die gesamte Länge der Zeichenfolge, einschließlich aller auffüllleerzeichen. Wenn eine Tabelle in enthält eine Oracle-Datenbank z. B. ein Feld mit dem Namen "Field1", die als definiert ist `char(3)`, und Sie geben den Wert "a" in eine Zeile der Tabelle, den folgenden Code wird die Zeile nicht zurückgeben.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Dies ist, da Oracle den Spaltenwert als "a" speichert (padding "a", mit nachfolgenden Leerzeichen, um die feste Länge von 3), die Oracle nicht als Übereinstimmung für den Parameterwert von "a" im Fall von behandelt eine `LIKE` Vergleich von Feldern mit fester Länge.  
  
 Um dieses Problem zu beheben, fügen Sie ein Platzhalterzeichen Prozent ("%") auf den Parameterwert (`"a%"`), oder verwenden Sie eine SQL `=` Vergleich stattdessen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt mehrere Instanzen von <xref:System.Data.OleDb.OleDbParameter> über die <xref:System.Data.OleDb.OleDbParameterCollection> Auflistung innerhalb der <xref:System.Data.OleDb.OleDbDataAdapter>. Diese Parameter werden verwendet, um Daten aus der Datenquelle ausgewählt, und platzieren Sie die Daten in die <xref:System.Data.DataSet>. In diesem Beispiel wird vorausgesetzt, dass eine <xref:System.Data.DataSet> und <xref:System.Data.OleDb.OleDbDataAdapter> mithilfe der entsprechenden Schemas, die Befehle und die Verbindung bereits erstellt wurden.  
  
 [!code-csharp[Classic WebData OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbParameter : string * System.Data.OleDb.OleDbType -&gt; System.Data.OleDb.OleDbParameter" Usage="new System.Data.OleDb.OleDbParameter (name, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zuzuordnenden Parameters.</param>
        <param name="dataType">Einer der <see cref="T:System.Data.OleDb.OleDbType" />-Werte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse, die den Parameternamen und den Datentyp verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Datentyp, und gegebenenfalls <xref:System.Data.OleDb.OleDbParameter.Size%2A> und <xref:System.Data.OleDb.OleDbParameter.Precision%2A> abgeleitet werden, aus dem Wert der `dataType` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der im <paramref name="dataType" />-Parameter angegebene Wert ist ein ungültiger Back-End-Datentyp.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbParameter : string * obj -&gt; System.Data.OleDb.OleDbParameter" Usage="new System.Data.OleDb.OleDbParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zuzuordnenden Parameters.</param>
        <param name="value">Der Wert des neuen <see cref="T:System.Data.OleDb.OleDbParameter" />-Objekts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse, die den Parameternamen und den Wert des neuen <see cref="T:System.Data.OleDb.OleDbParameter" /> verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vorsichtig, wenn Sie diese Überladung der verwenden die <xref:System.Data.OleDb.OleDbParameter> Konstruktor, um ganzzahlige Parameterwerte festlegen. Da diese Überladung einen `value` vom Typ <xref:System.Object> akzeptiert, müssen Sie den Ganzzahlwert in einen <xref:System.Object>-Typ konvertieren, wenn der der Wert 0 (null) ist. Dies wird im folgenden C#-Beispiel veranschaulicht.  
  
```csharp  
Parameter = new OleDbParameter("@pname", Convert.ToInt32(0));  
```  
  
 Wenn Sie diese Konvertierung nicht ausführen, nimmt der Compiler an, dass Sie versuchen, rufen Sie die <xref:System.Data.OleDb.OleDbParameter.%23ctor%2A> Überladung des Konstruktors.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbParameter : string * System.Data.OleDb.OleDbType * int -&gt; System.Data.OleDb.OleDbParameter" Usage="new System.Data.OleDb.OleDbParameter (name, dataType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zuzuordnenden Parameters.</param>
        <param name="dataType">Einer der <see cref="T:System.Data.OleDb.OleDbType" />-Werte.</param>
        <param name="size">Die Länge des Parameters.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse, die den Parameternamen, den Datentyp und die Länge verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.Size%2A> wird abgeleitet aus dem Wert der `dataType` -Parameters, wenn sie nicht explizit festgelegt ist die `size` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der im <paramref name="dataType" />-Parameter angegebene Wert ist ein ungültiger Back-End-Datentyp.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType, size As Integer, srcColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType, int size, System::String ^ srcColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbParameter : string * System.Data.OleDb.OleDbType * int * string -&gt; System.Data.OleDb.OleDbParameter" Usage="new System.Data.OleDb.OleDbParameter (name, dataType, size, srcColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zuzuordnenden Parameters.</param>
        <param name="dataType">Einer der <see cref="T:System.Data.OleDb.OleDbType" />-Werte.</param>
        <param name="size">Die Länge des Parameters.</param>
        <param name="srcColumn">Der Name der Quellspalte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse, die den Parameternamen, den Datentyp, die Länge und den Quellspaltennamen verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.Size%2A> wird abgeleitet aus dem Wert der `dataType` -Parameters, wenn sie nicht explizit festgelegt ist die `size` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der im <paramref name="dataType" />-Parameter angegebene Wert ist ein ungültiger Back-End-Datentyp.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As OleDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, srcColumn As String, srcVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ parameterName, System::Data::OleDb::OleDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbParameter : string * System.Data.OleDb.OleDbType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.OleDb.OleDbParameter" Usage="new System.Data.OleDb.OleDbParameter (parameterName, dbType, size, direction, isNullable, precision, scale, srcColumn, srcVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Der Name des Parameters.</param>
        <param name="dbType">Einer der <see cref="T:System.Data.OleDb.OleDbType" />-Werte.</param>
        <param name="size">Die Länge des Parameters.</param>
        <param name="direction">Einer der <see cref="T:System.Data.ParameterDirection" />-Werte.</param>
        <param name="isNullable">
          <see langword="true" />, wenn der Wert des Felds NULL sein kann, andernfalls <see langword="false" />.</param>
        <param name="precision">Die Gesamtanzahl der Ziffern links und rechts vom Dezimaltrennzeichen, in die <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird.</param>
        <param name="scale">Die Gesamtanzahl der Dezimalstellen, in die <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird.</param>
        <param name="srcColumn">Der Name der Quellspalte.</param>
        <param name="srcVersion">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte.</param>
        <param name="value">Ein <see cref="T:System.Object" />, das den Wert des <see cref="T:System.Data.OleDb.OleDbParameter" /> darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse, die Parametername, Datentyp, Länge, Quellspaltenname, Richtung des Parameters, numerische Genauigkeit und andere Eigenschaften verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.Size%2A> und <xref:System.Data.OleDb.OleDbParameter.Precision%2A> werden aus dem Wert hergeleitet der `dataType` -Parameters, wenn sie nicht explizit festgelegt sind das `size` und `precision` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und zeigt die <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der im <paramref name="dataType" />-Parameter angegebene Wert ist ein ungültiger Back-End-Datentyp.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As OleDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ parameterName, System::Data::OleDb::OleDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbParameter : string * System.Data.OleDb.OleDbType * int * System.Data.ParameterDirection * byte * byte * string * System.Data.DataRowVersion * bool * obj -&gt; System.Data.OleDb.OleDbParameter" Usage="new System.Data.OleDb.OleDbParameter (parameterName, dbType, size, direction, precision, scale, sourceColumn, sourceVersion, sourceColumnNullMapping, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Der Name des Parameters.</param>
        <param name="dbType">Einer der <see cref="T:System.Data.OleDb.OleDbType" />-Werte.</param>
        <param name="size">Die Länge des Parameters.</param>
        <param name="direction">Einer der <see cref="T:System.Data.ParameterDirection" />-Werte.</param>
        <param name="precision">Die Gesamtanzahl der Ziffern links und rechts vom Dezimaltrennzeichen, in die <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird.</param>
        <param name="scale">Die Gesamtanzahl der Dezimalstellen, in die <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird.</param>
        <param name="sourceColumn">Der Name der Quellspalte.</param>
        <param name="sourceVersion">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" />, wenn die Quellspalte NULL-Werte zulässt, andernfalls <see langword="false" />.</param>
        <param name="value">Ein <see cref="T:System.Object" />, das den Wert des <see cref="T:System.Data.OleDb.OleDbParameter" /> darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbParameter" />-Klasse, die Parametername, Datentyp, Länge, Quellspaltenname, Richtung des Parameters, numerische Genauigkeit und andere Eigenschaften verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.Size%2A> und <xref:System.Data.OleDb.OleDbParameter.Precision%2A> werden aus dem Wert hergeleitet der `dataType` -Parameters, wenn sie nicht explizit festgelegt sind das `size` und `precision` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und zeigt die <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der im <paramref name="dataType" />-Parameter angegebene Wert ist ein ungültiger Back-End-Datentyp.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.OleDb.OleDbParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Data.DbType" /> des Parameters ab oder legt ihn fest.</summary>
        <value>Einer der <see cref="T:System.Data.DbType" />-Werte. Der Standardwert ist <see cref="F:System.Data.DbType.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> und <xref:System.Data.OleDb.OleDbParameter.DbType%2A> verknüpft sind. Daher ist das Festlegen der <xref:System.Data.OleDb.OleDbParameter.DbType%2A> Änderungen der <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> in eine <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>.  
  
 Eine Liste der unterstützten Datentypen, finden Sie unter den entsprechenden <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> Member. Weitere Informationen finden Sie unter [DataAdapter-Parameter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wurde nicht auf einen gültigen <see cref="T:System.Data.DbType" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.OleDb.OleDbParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Parameter nur zur Eingabe, nur zur Ausgabe oder zu beidem verwendet wird oder ob es sich um einen Parameter für den Rückgabewert einer gespeicherten Prozedur handelt, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Data.ParameterDirection" />-Werte. Der Standardwert ist <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Data.ParameterDirection> ausgegeben wird und die Ausführung der zugeordneten <xref:System.Data.OleDb.OleDbCommand> ist kein Wert zurückgeben, die <xref:System.Data.OleDb.OleDbParameter> enthält einen null-Wert.  
  
 `Output`, `InputOut`, und `ReturnValue` Parameter zurückgegeben, indem <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> kann nicht zugegriffen werden, bis zum Aufruf von <xref:System.Data.OleDb.OleDbDataReader.Close%2A> oder **Dispose** auf die <xref:System.Data.OleDb.OleDbDataReader>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wurde nicht auf einen der gültigen <see cref="T:System.Data.ParameterDirection" />-Werte festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.OleDb.OleDbParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Parameter NULL-Werte akzeptiert, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn NULL-Werte akzeptiert werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 NULL-Werte erfolgt mithilfe der <xref:System.DBNull> Klasse.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.IsNullable = True  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.IsNullable = true;  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.OleDb.OleDbParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OleDbType">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbType OleDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OleDb.OleDbType OleDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property OleDbType As OleDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbType OleDbType { System::Data::OleDb::OleDbType get(); void set(System::Data::OleDb::OleDbType value); };" />
      <MemberSignature Language="F#" Value="member this.OleDbType : System.Data.OleDb.OleDbType with get, set" Usage="System.Data.OleDb.OleDbParameter.OleDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Data.OleDb.OleDbType" /> des Parameters ab oder legt ihn fest.</summary>
        <value>Der <see cref="T:System.Data.OleDb.OleDbType" /> des Parameters. Der Standardwert ist <see cref="F:System.Data.OleDb.OleDbType.VarWChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> und <xref:System.Data.OleDb.OleDbParameter.DbType%2A> verknüpft sind. Daher ist das Festlegen der <xref:System.Data.OleDb.OleDbParameter.DbType%2A> Änderungen der <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> in eine <xref:System.Data.OleDb.OleDbType>.  
  
 Eine Liste der unterstützten Datentypen, finden Sie unter den entsprechenden <xref:System.Data.OleDb.OleDbType> Member. Weitere Informationen finden Sie unter [DataAdapter-Parameter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.OleDb.OleDbParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der <see cref="T:System.Data.OleDb.OleDbParameter" /> ab oder legt diesen fest.</summary>
        <value>Der Name des <see cref="T:System.Data.OleDb.OleDbParameter" />. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der OLE DB-Anbieter für .NET verwendet positionelle Parameter, die markiert sind, mit einem Fragezeichen (?) anstelle von benannten Parametern.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.OleDb.OleDbParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl von Ziffern ab, die zur Darstellung der <see cref="P:System.Data.OleDb.OleDbParameter.Value" />-Eigenschaft verwendet werden kann, oder legt diese fest.</summary>
        <value>Die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.OleDb.OleDbParameter.Value" />-Eigenschaft. Der Standardwert ist 0 (null) und gibt an, dass der Datenanbieter die Genauigkeit für <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> festlegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.Precision%2A> Eigenschaft wird nur für decimal und numeric-Eingabeparameter verwendet.  
  
 Die <xref:System.Data.OleDb.OleDbParameter.Precision%2A> Eigenschaft sollte nur festgelegt werden `Decimal` und `Numeric` Parameter vor dem Aufrufen der <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> Methode der <xref:System.Data.OleDb.OleDbCommand>.  
  
 Wenn diese Eigenschaft auf einen anderen Wert als der Wert in der Datenbank hängt von der Implementierung des Datenanbieters und möglicherweise ein Fehler Code abschneiden und runden die Daten zurück.  
  
 Die `Precision` Eigenschaft wirkt sich nur auf Parameter, dessen <xref:System.Data.OleDb.OleDbType> ist `Decimal`, `Numeric`, oder `VarNumeric`. Für andere Datentypen `Precision` wird ignoriert.  
  
> [!NOTE]
>  Mithilfe dieser Eigenschaft auf coerce-Daten, die an die Datenbank übergeben, wird nicht unterstützt. Verwenden, um round, abgeschnitten oder Umwandeln der Daten vor der Übergabe an die Datenbank, die <xref:System.Math> -Klasse, die Teil der `System` Namespace vor dem Zuweisen eines Werts für des Parameters des `Value` Eigenschaft.  
  
> [!NOTE]
>  .NET Framework-Datenanbieter, die im Lieferumfang von .NET Framework, Version 1.0 sind nicht überprüfen die <xref:System.Data.OleDb.OleDbParameter.Precision%2A> oder <xref:System.Data.OleDb.OleDbParameter.Scale%2A> von <xref:System.Decimal> Parameterwerte. Dies kann dazu führen, dass abgeschnittene Daten, in der Datenquelle eingefügt werden soll. Wenn Sie .NET Framework, Version 1.0 verwenden, überprüfen Sie die <xref:System.Data.OleDb.OleDbParameter.Precision%2A> und <xref:System.Data.OleDb.OleDbParameter.Scale%2A> von <xref:System.Decimal> Werte vor dem Festlegen des Parameterwerts. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> Werte größer sind als die <xref:System.Decimal> Parameterskala werden weiterhin abgeschnitten.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="oleDbParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den diesem <see cref="T:System.Data.OleDb.OleDbParameter" /> zugeordneten Typ zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Ausführen eines Befehls, die Parameterwerte enthält, Code kann entweder explizit festlegen, den Typ eines Parameters oder der Parameter kann den Typ von seinem Wert ableiten. Das Aufrufen dieser Methode wird der Parameter zurückgesetzt, damit sie erneut auf den Typ aus dem im Parameter übergebenen Wert ableiten kann. Das Aufrufen dieser Methode wirkt sich auf beide die <xref:System.Data.OleDb.OleDbParameter.DbType%2A> und <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> Eigenschaften der <xref:System.Data.OleDb.OleDbParameter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="ResetOleDbType">
      <MemberSignature Language="C#" Value="public void ResetOleDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOleDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOleDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOleDbType();" />
      <MemberSignature Language="F#" Value="member this.ResetOleDbType : unit -&gt; unit" Usage="oleDbParameter.ResetOleDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den diesem <see cref="T:System.Data.OleDb.OleDbParameter" /> zugeordneten Typ zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Ausführen eines Befehls, die Parameterwerte enthält, Code kann entweder explizit festlegen, den Typ eines Parameters oder der Parameter kann den Typ von seinem Wert ableiten. Das Aufrufen dieser Methode wird der Parameter zurückgesetzt, damit sie erneut auf den Typ aus dem im Parameter übergebenen Wert ableiten kann. Das Aufrufen dieser Methode wirkt sich auf beide die <xref:System.Data.OleDb.OleDbParameter.DbType%2A> und <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> Eigenschaften der <xref:System.Data.OleDb.OleDbParameter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.OleDb.OleDbParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Dezimalstellen ab, in die <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird, oder legt diese fest.</summary>
        <value>Die Anzahl der Dezimalstellen, in die <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.Scale%2A> Eigenschaft wird nur verwendet, für die decimal und numeric Eingabeparameter vor dem Aufrufen der <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> Methode der <xref:System.Data.OleDb.OleDbCommand> und numerische Output-Parameter angeben.  
  
 Wenn diese Eigenschaft auf einen anderen Wert als der Wert in der Datenbank hängt von der Implementierung des Datenanbieters und möglicherweise ein Fehler Code abschneiden und runden die Daten zurück.  
  
 Bei Verwendung von SQL Server Native Client 10 (oder höher), um einen Parameter zu binden, dessen Typ `Decimal`, `Numeric`, `VarNumeric`, `DBDate`, oder `DBTimeStamp`, müssen Sie eine entsprechende Skalierungswert manuell angeben.  
  
> [!NOTE]
>  Mithilfe dieser Eigenschaft auf coerce-Daten, die an die Datenbank übergeben, wird nicht unterstützt. Verwenden, um round, abgeschnitten oder Umwandeln der Daten vor der Übergabe an die Datenbank, die <xref:System.Math> -Klasse, die Teil der `System` Namespace vor dem Zuweisen eines Werts für des Parameters des `Value` Eigenschaft.  
  
> [!NOTE]
>  .NET Framework-Datenanbieter, die im Lieferumfang von .NET Framework, Version 1.0 sind nicht überprüfen die <xref:System.Data.OleDb.OleDbParameter.Precision%2A> oder <xref:System.Data.OleDb.OleDbParameter.Scale%2A> von <xref:System.Decimal> Parameterwerte. Dies kann dazu führen, dass abgeschnittene Daten, in der Datenquelle eingefügt werden soll. Wenn Sie .NET Framework, Version 1.0 verwenden, überprüfen Sie die <xref:System.Data.OleDb.OleDbParameter.Precision%2A> und <xref:System.Data.OleDb.OleDbParameter> von <xref:System.Decimal> Werte vor dem Festlegen des Parameterwerts. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> Werte größer sind als die <xref:System.Decimal> Parameterskala werden weiterhin abgeschnitten.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.OleDb.OleDbParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen der maximalen Größe (in Bytes) der Daten in der Spalte.</summary>
        <value>Die maximale Größe (in Bytes) der Daten in der Spalte. Der Standardwert wird aus dem Parameterwert hergeleitet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbParameter.Size%2A> Eigenschaft wird verwendet, für die Binär- und Zeichenfolgentypen.  
  
 Für string-Datentypen für die keine Zeichenfolge darstellen und ANSI-Daten, die <xref:System.Data.OleDb.OleDbParameter.Size%2A> Eigenschaft bezieht sich auf die Anzahl von Bytes. Für Unicode-Zeichenfolgendaten <xref:System.Data.OleDb.OleDbParameter.Size%2A> bezieht sich auf die Anzahl der Zeichen. Die Anzahl der Zeichenfolgen umfasst nicht das abschließende Zeichen.  
  
 Für Datentypen variabler Länge <xref:System.Data.OleDb.OleDbParameter.Size%2A> beschreibt die maximale Menge von Daten, an den Server übermittelt. Für eine Unicode-Zeichenfolge-Wert, z. B. <xref:System.Data.OleDb.OleDbParameter.Size%2A> verwendet werden, um die Menge der Daten gesendet, um den Server, auf die ersten 100 Zeichen beschränkt.  
  
 Für die bidirektionale und Ausgabeparameter und Rückgabewerte, müssen Sie festlegen, den Wert der <xref:System.Data.OleDb.OleDbParameter.Size%2A>. Dies ist nicht erforderlich für Eingabeparameter, und wenn nicht explizit festgelegt, der Wert des abgeleitet wird von der tatsächlichen Größe des angegebenen Parameters, wenn eine parametrisierte Anweisung ausgeführt wird.  
  
 Die <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, und <xref:System.Data.OleDb.OleDbParameter.Size%2A> Eigenschaften eines Parameters abgeleitet werden können, durch Festlegen von <xref:System.Data.OleDb.OleDbParameter.Value%2A>. Aus diesem Grund müssen Sie nicht diese angeben. Aber sie sind nicht in verfügbar gemacht <xref:System.Data.OleDb.OleDbParameter> eigenschafteneinstellungen. Wenn die Größe des Parameters abgeleitet wurde, z. B. <xref:System.Data.OleDb.OleDbParameter.Size%2A> enthält keine abgeleiteten Wert nach der Ausführung der Anweisung.  
  
 Für Datentypen fester Länge, den Wert der <xref:System.Data.OleDb.OleDbParameter.Size%2A> wird ignoriert. Sie können abgerufen werden, zu Informationszwecken und gibt die Höchstmenge an Bytes, die der Anbieter verwendet, wenn den Wert des Parameters an den Server zu übertragen.  
  
 Wenn die Größe des Werts für angegeben ein <xref:System.Data.OleDb.OleDbParameter> überschreitet das angegebene <xref:System.Data.OleDb.OleDbParameter.Size%2A>, <xref:System.Data.OleDb.OleDbParameter.Value%2A> von der <xref:System.Data.OleDb.OleDbParameter> enthält den angegebenen Wert, der abgeschnitten werden, um die Größe des der <xref:System.Data.OleDb.OleDbParameter>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.OleDb.OleDbParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Quellspalte ab, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist und zum Laden oder Zurückgeben des <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> verwendet wird, oder legt diesen fest.</summary>
        <value>Der Name der Quellspalte, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> nastaven NA hodnotu alles andere als eine leere Zeichenfolge, die den Wert des Parameters wird abgerufen, aus der Spalte mit dem <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> Name. Wenn <xref:System.Data.OleDb.OleDbParameter.Direction%2A> nastaven NA hodnotu `Input`, der Wert stammt aus dem <xref:System.Data.DataSet>. Wenn <xref:System.Data.OleDb.OleDbParameter.Direction%2A> nastaven NA hodnotu `Output`, der Wert stammt aus der Datenquelle. Ein <xref:System.Data.OleDb.OleDbParameter.Direction%2A> von `InputOutput` ist eine Kombination aus beidem.  
  
 Weitere Informationen zur Verwendung der <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> -Eigenschaft finden Sie unter [DataAdapter-Parameter](~/docs/framework/data/adonet/dataadapter-parameters.md) und [Aktualisieren von Datenquellen mit "DataAdapters"](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.OleDb.OleDbParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt einen Wert fest, der angibt, ob die Quellspalte NULL-Werte zulässt, oder ruft ihn ab. Dadurch kann <see cref="T:System.Data.Common.DbCommandBuilder" /> ordnungsgemäß Update-Anweisungen für Spalten generieren, die NULL-Werte zulassen.</summary>
        <value>
          <see langword="true" />, wenn die Quellspalte NULL-Werte zulässt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> wird verwendet, durch die <xref:System.Data.Common.DbCommandBuilder> , ordnungsgemäß generieren, die beim Umgang mit NULL-Werte zulassen. Im Allgemeinen die Verwendung von <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> ist auf Entwickler, die Vererbung von <xref:System.Data.Common.DbCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> Diese Eigenschaft verwendet, um zu bestimmen, ob die Quellspalte NULL-Werte zulässt, und legt diese Eigenschaft auf `true` ist dies NULL-Werte zulässt, und `false` ist dies nicht. Wenn <xref:System.Data.Common.DbCommandBuilder> wird die Update-Anweisung wird generiert, untersucht die <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> für jeden Parameter. Wenn die Eigenschaft `true`, <xref:System.Data.Common.DbCommandBuilder> generiert eine WHERE-Klausel wie folgt (in diesem Abfrageausdruck stellt "FieldName" den Namen des Felds dar):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Wenn <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> für das Feld "false" ist <xref:System.Data.Common.DbCommandBuilder> generiert die folgende WHERE-Klausel:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Darüber hinaus @IsNull_FieldName enthält 1, wenn das Quellfeld enthält Null, und 0, wenn dies nicht der Fall. Dieser Mechanismus ermöglicht eine leistungsoptimierung in SQL Server sowie für gemeinsamen Code, der über mehrere Anbieter funktioniert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.OleDb.OleDbParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.DataRowVersion" /> ab, die beim Laden von <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> verwendet werden soll, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Data.DataRowVersion" />-Werte. Der Standardwert ist <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein, die <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> während eines Aktualisierungsvorgangs, um zu bestimmen, ob der Wert des Parameters, um festgelegt ist `Current` oder `Original`. Dadurch können Primärschlüssel aktualisiert werden. Diese Eigenschaft wird festgelegt, auf die Version von der <xref:System.Data.DataRow> ein, die die <xref:System.Data.DataRow.Item%2A> -Eigenschaft oder das <xref:System.Data.DataRow.GetChildRows%2A> -Methode der der <xref:System.Data.DataRow> Objekt.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wurde nicht auf einen der <see cref="T:System.Data.DataRowVersion" />-Werte festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Ein neues <see cref="T:System.Object" />, das eine Kopie dieser Instanz ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.OleDb.OleDbParameter>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="oleDbParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" /> enthält.</summary>
        <returns>Eine Zeichenfolge, die den <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" /> enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.OleDb.OleDbParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Parameters ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das den Wert des Parameters darstellt. Der Standardwert ist NULL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Eingabeparameter, der Wert gebunden ist, um die <xref:System.Data.OleDb.OleDbCommand> , die an den Server gesendet wird. Bei Ausgabe- und Rückgabewertparameter, der Wert festgelegt ist, nach Abschluss der <xref:System.Data.OleDb.OleDbCommand> und die <xref:System.Data.OleDb.OleDbDataReader> geschlossen wird.  
  
 Wenn Sie einen null-Parameterwert an den Server senden, müssen Sie angeben <xref:System.DBNull>, nicht null ist. Der NULL-Wert im System ist ein leeres Objekt, das über keinen Wert verfügt. <xref:System.DBNull> wird zur Darstellung von NULL-Werten verwendet.  
  
 Wenn die Anwendung den Datenbanktyp angibt, wird der gebundene Wert auf diesen Typ konvertiert, wenn der Anbieter die Daten an den Server sendet. Der Anbieter versucht, sämtliche Typen von Werten zu konvertieren, falls dies unterstützt die <xref:System.IConvertible> Schnittstelle. Fehler bei der Konvertierung möglicherweise auf, wenn der angegebene Typ nicht kompatibel mit dem Wert ist.  
  
 Sowohl die <xref:System.Data.OleDb.OleDbParameter.DbType%2A> und <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> Eigenschaften durch Festlegen des Werts abgeleitet werden können.  
  
 Die <xref:System.Data.OleDb.OleDbParameter.Value%2A> Eigenschaft wird von der Update-Methode überschrieben <xref:System.Data.IDbDataAdapter>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.OleDb.OleDbParameter> und legt einige ihrer Eigenschaften.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>