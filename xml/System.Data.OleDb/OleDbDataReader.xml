<Type Name="OleDbDataReader" FullName="System.Data.OleDb.OleDbDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bdea3400cba1e99abb685f42a3e6bcc6f13b83f1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70633242" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OleDbDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Bietet ein Verfahren für das Lesen eines Vorwärtsstreams von Datenzeilen aus einer Datenquelle. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Erstellen eines <xref:System.Data.OleDb.OleDbDataReader>muss die <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> -Methode des <xref:System.Data.OleDb.OleDbCommand> -Objekts aufgerufen werden, anstatt direkt einen Konstruktor zu verwenden.  
  
 Bevor Sie schließen <xref:System.Data.OleDb.OleDbConnection>, schließen Sie zuerst das <xref:System.Data.OleDb.OleDbDataReader> -Objekt. Sie müssen das <xref:System.Data.OleDb.OleDbDataReader> -Objekt auch schließen, wenn Sie ein <xref:System.Data.OleDb.OleDbCommand> Objekt fortsetzen möchten. Beispielsweise können Sie erst dann Ausgabeparameter abrufen, nachdem Sie <xref:System.Data.OleDb.OleDbDataReader.Close%2A>aufgerufen haben.  
  
 Änderungen, die an einem Resultset durch einen anderen Prozess oder Thread vorgenommen werden, während die Daten gelesen werden, sind <xref:System.Data.OleDb.OleDbDataReader>möglicherweise für den Benutzer des sichtbar. Das genaue Verhalten hängt jedoch von der zeitlichen Steuerung ab.  
  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>und <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sind die einzigen Eigenschaften, die Sie nach dem <xref:System.Data.OleDb.OleDbDataReader> schließen von aufzurufen können. Obwohl auf <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> die-Eigenschaft zugegriffen werden kann <xref:System.Data.OleDb.OleDbDataReader> , während die vorhanden <xref:System.Data.OleDb.OleDbDataReader.Close%2A> ist, müssen Sie vor <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> der Rückgabe des Werts von immer aufrufen, um einen exakten Rückgabewert sicherzustellen.  
  
   
  
## Examples  
 Im folgenden Beispiel werden ein <xref:System.Data.OleDb.OleDbConnection>, ein <xref:System.Data.OleDb.OleDbCommand>und <xref:System.Data.OleDb.OleDbDataReader>ein erstellt. Im Beispiel werden die Daten gelesen und in die Konsole geschrieben. Schließlich schließt das Beispiel die <xref:System.Data.OleDb.OleDbDataReader> und dann das. <xref:System.Data.OleDb.OleDbConnection>  
  
 [!code-csharp[Classic WebData OleDbDataReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oleDbDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt das <see cref="T:System.Data.OleDb.OleDbDataReader" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen die <xref:System.Data.OleDb.OleDbDataReader.Close%2A> -Methode explizit aufzurufen <xref:System.Data.OleDb.OleDbDataReader> , wenn Sie die verwenden, um die <xref:System.Data.OleDb.OleDbConnection> zugeordnete für andere Zwecke zu verwenden.  
  
> [!CAUTION]
>  Führen Sie in der **Finalize** -Methode der Klasse nicht **Close** oder verwerfen für eine Verbindung, einen DataReader **oder ein** anderes verwaltetes Objekt aus. In einem Finalizer sollten Sie nur nicht verwaltete Ressourcen freigeben, die Ihre Klasse direkt besitzt. Wenn die Klasse keine nicht verwalteten Ressourcen besitzt, definieren Sie in der Klasse keine **Finalize**-Methode. Weitere Informationen finden Sie unter [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 Im folgenden Beispiel werden ein <xref:System.Data.OleDb.OleDbConnection>, ein <xref:System.Data.OleDb.OleDbCommand>und <xref:System.Data.OleDb.OleDbDataReader>ein erstellt. Im Beispiel werden die Daten gelesen und in die Konsole geschrieben. Schließlich schließt das Beispiel die <xref:System.Data.OleDb.OleDbDataReader>und dann das. <xref:System.Data.OleDb.OleDbConnection>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Tiefe der Schachtelung für die aktuelle Zeile angibt.</summary>
        <value>Die Tiefe der Schachtelung für die aktuelle Zeile.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die äußerste Tabelle hat die Tiefe 0.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Spalten in der aktuellen Zeile ab.</summary>
        <value>Wenn die Position außerhalb eines gültigen Recordsets liegt, 0, andernfalls die Anzahl der Spalten im aktuellen Datensatz. Der Standard ist -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schließt ausgeblendete Felder ein. Verwenden Sie <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>, um ausgeblendete Felder auszuschließen.  
  
 Nachdem eine Abfrage ausgeführt wurde, die keine Zeilen zurück <xref:System.Data.OleDb.OleDbDataReader.FieldCount%2A> gibt, wird 0 zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es gibt derzeit keine Verbindung mit einer Datenquelle.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OleDbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OleDbDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="oleDbDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ermöglicht dem Objekt den Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="oleDbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als booleschen Wert ab.</summary>
        <returns>Der Wert der Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits ein boolescher Wert sein, oder es wird eine Ausnahme generiert.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="oleDbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als ein Byte ab.</summary>
        <returns>Der Wert der angegebenen Spalte als Byte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits ein Byte sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="oleDbDataReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <param name="dataIndex">Der Index in dem Feld, in dem der Lesevorgang beginnen soll.</param>
        <param name="buffer">Der Puffer, in den der Bytedatenstrom gelesen werden soll.</param>
        <param name="bufferIndex">Der Index im <paramref name="buffer" />, an dem der Schreibvorgang beginnen soll.</param>
        <param name="length">Die maximale Länge, die in den Puffer kopiert werden soll.</param>
        <summary>Liest beginnend am angegebenen Pufferoffset einen Stream von Bytes aus dem angegebenen Spaltenoffset als Array in den Puffer.</summary>
        <returns>Die tatsächlich gelesene Anzahl von Bytes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A>Gibt die Anzahl der verfügbaren Bytes im-Feld zurück. In den meisten Fällen ist dies die genaue Länge des Felds. Die zurückgegebene Zahl kann jedoch kleiner als die tatsächliche Länge des Felds sein, wenn `GetBytes` bereits zum Abrufen von Bytes aus dem Feld verwendet wurde. Dies kann z. b. der Fall sein, wenn <xref:System.Data.OleDb.OleDbDataReader> der eine große Datenstruktur in einen Puffer liest. Weitere Informationen finden Sie unter der `SequentialAccess` -Einstellung <xref:System.Data.CommandBehavior>für.  
  
 Wenn Sie einen Puffer übergeben, der `null`ist <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> , gibt die Länge des Felds in Bytes zurück.  
  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits ein Bytearray sein.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="oleDbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Zeichen ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird für <xref:System.Data.OleDb> nicht unterstützt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="oleDbDataReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <param name="dataIndex">Der Index in der Zeile, in der der Lesevorgang beginnen soll.</param>
        <param name="buffer">Der Puffer, in den Daten kopiert werden sollen.</param>
        <param name="bufferIndex">Der Index im <paramref name="buffer" />, an dem der Schreibvorgang beginnen soll.</param>
        <param name="length">Die Anzahl der zu lesenden Zeichen.</param>
        <summary>Liest beginnend am angegebenen Pufferoffset einen Stream von Zeichen aus dem angegebenen Spaltenoffset in den Puffer eines Arrays.</summary>
        <returns>Die tatsächlich gelesene Anzahl von Zeichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A>Gibt die Anzahl der im Feld verfügbaren Zeichen zurück. In den meisten Fällen ist dies die genaue Länge des Felds. Allerdings kann die zurückgegebene Zahl kleiner als die tatsächliche Länge des Felds sein, `GetChars` wenn bereits zum Abrufen von Zeichen aus dem Feld verwendet wurde. Dies kann z. b. der Fall sein, wenn <xref:System.Data.OleDb.OleDbDataReader> der eine große Datenstruktur in einen Puffer liest. Weitere Informationen finden Sie unter der `SequentialAccess` -Einstellung <xref:System.Data.CommandBehavior>für.  
  
 Wenn Sie einen Puffer übergeben, der `null`ist <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> , wird die Länge des Felds in Zeichen zurückgegeben.  
  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits ein Zeichen Array sein.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetData : int -&gt; System.Data.OleDb.OleDbDataReader" Usage="oleDbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Gibt ein <see cref="T:System.Data.OleDb.OleDbDataReader" />-Objekt für die angeforderte Spaltenordnungszahl zurück.</summary>
        <returns>Ein <see cref="T:System.Data.OleDb.OleDbDataReader" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataReader> <xref:System.Data.IDataReader>Ruft <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> auf, wenn der Anbieter eine mit einer Spalte zurückgibt, die von <xref:System.Data.OleDb.OleDbDataReader.GetData%2A>  unterstützt wird.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="oleDbDataReader.GetDataTypeName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Namen des Quelldatentyps ab.</summary>
        <returns>Der Name des Back-End-Datentyps. Weitere Informationen finden Sie unter <see href="https://docs.microsoft.com/sql/t-sql/data-types/data-types-transact-sql">SQL Server-Datentypen</see> oder <see href="https://docs.microsoft.com/sql/odbc/microsoft/microsoft-access-data-types">Zugriffsdatentypen</see>.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="oleDbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits ein <xref:System.DateTime> -Objekt sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="oleDbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="oleDbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.Decimal" />-Objekt ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits ein <xref:System.Decimal> -Objekt sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="oleDbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits eine Gleit Komma Zahl mit doppelter Genauigkeit sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="oleDbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> zurück, mit dem die Zeilen im Datenleser durchlaufen werden können.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die Zeilen im Datenleser durchlaufen werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl Sie diese Methode zum Abrufen eines expliziten Enumerators verwenden können, ist es in Sprachen `foreach` , die ein Konstrukt unterstützen, einfacher, das Schleifen Konstrukt direkt zu verwenden, damit die Zeilen im Daten Reader durchlaufen werden können.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (index As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int index);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="oleDbDataReader.GetFieldType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den <see cref="T:System.Type" /> ab, der den Datentyp des Objekts darstellt.</summary>
        <returns>Der <see cref="T:System.Type" />, der der Datentyp des Objekts ist.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="oleDbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits eine Gleit Komma Zahl mit einfacher Genauigkeit sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="oleDbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als global eindeutigen Bezeichner (Globally Unique Identifier, GUID) ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits Globally Unique Identifier sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="oleDbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als 16-Bit-Ganzzahl mit Vorzeichen ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits eine 16-Bit-Ganzzahl mit Vorzeichen sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="oleDbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen und einer Länge von 32 Bit ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits eine 32-Bit-Ganzzahl mit Vorzeichen sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="oleDbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als 64-Bit-Ganzzahl mit Vorzeichen ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits eine 64-Bit-Ganzzahl mit Vorzeichen sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="oleDbDataReader.GetName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Namen der angegebenen Spalte ab.</summary>
        <returns>Der Name der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="oleDbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Spalte.</param>
        <summary>Ruft bei angegebenem Spaltennamen die Ordnungszahl der Spalte ab.</summary>
        <returns>Die nullbasierte Ordnungszahl der Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A>führt zuerst eine Suche mit Berücksichtigung der Groß-und Kleinschreibung durch. Bei einem Fehler wird eine zweite Suche ohne Beachtung der Groß-/Kleinschreibung durchgeführt. Die-Methode löst `IndexOutOfRange` eine Ausnahme aus, wenn die null basierte Spalten Ordnungszahl nicht gefunden wurde.  
  
 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A>ist Kana-Breite nicht beachtet.  
  
 Da ordinalbasierte Suchvorgänge effizienter als benannte suchen sind, ist es ineffizient, innerhalb einer-Schleife <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> aufzurufen. Sparen Sie Zeit, <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> indem Sie ein Mal aufrufen und die Ergebnisse einer ganzzahligen Variablen zur Verwendung innerhalb der Schleife zuweisen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A>-Methode veranschaulicht.  
  
 [!code-csharp[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="oleDbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.OleDb.OleDbDataReader" /> beschreibt.</summary>
        <returns>Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A> -Methode wird der OLE DB **IColumnsRowset:: GetColumnsRowset** -Methode zugeordnet und gibt Metadaten zu jeder Spalte in der folgenden Reihenfolge zurück:  
  
|DataReader-Spalte|Spalten-ID OLE DB|Beschreibung|  
|-----------------------|----------------------|-----------------|  
|Spaltenname|DBCOLUMN_NAME|Der Name der Spalte. Dies ist möglicherweise nicht eindeutig. Wenn dies nicht bestimmt werden kann, wird ein NULL-Wert zurückgegeben. Dieser Name gibt immer das letzte Umbenennen der Spalte in der aktuellen Ansicht oder im Befehls Text wieder.|  
|Columnordinon|DBCOLUMN_NUMBER|Die nullbasierte Ordnungszahl der Spalte. Diese Spalte darf keinen NULL-Wert enthalten.|  
|ColumnSize|DBCOLUMN_COLUMNSIZE|Die maximal mögliche Länge eines Werts in der Spalte. Bei Spalten, die einen Datentyp mit fester Länge verwenden, ist dies die Größe des Datentyps.|  
|NumericPrecision|DBCOLUMN_PRECISION|Wenn DbType ein numerischer Datentyp ist, ist dies die maximale Genauigkeit der Spalte. Die Genauigkeit von Spalten mit dem Datentyp DBTYPE_DECIMAL oder DBTYPE_NUMERIC hängt von der Definition der Spalte ab. Wenn DbType kein numerischer Datentyp ist, ist dies ein NULL-Wert.|  
|NumericScale|DBCOLUMN_SCALE|Wenn DbType "DBTYPE_DECIMAL" oder "DBTYPE_NUMERIC" ist, ist dies die Anzahl der Ziffern rechts vom Dezimaltrennzeichen. Andernfalls ist dies ein NULL-Wert.|  
|DataType|Keine|Wird dem .NET Framework Typ der Spalte zugeordnet.|  
|Provider Type|DBCOLUMN_TYPE|Der Indikator des Datentyps der Spalte. Wenn sich der Datentyp der Spalte von Zeile zu Zeile unterscheidet, muss dies DBTYPE_VARIANT lauten. Diese Spalte darf keinen NULL-Wert enthalten.|  
|IsLong|DBCOLUMNFLAGS_ISLONG|Der Anbieter legt DBCOLUMNFLAGS_ISLONG fest, wenn die Spalte ein binäres Long-Objekt (BLOB) enthält, das sehr lange Daten enthält. Die Definition von sehr langen Daten ist Anbieter spezifisch. Die Einstellung dieses Flags entspricht dem Wert der IS_LONG-Spalte im PROVIDER_TYPES-Rowset für den-Datentyp.|  
|AllowDBNull|DBCOLUMNFLAGS_ISNULLABLE|Der Anbieter legt DBCOLUMNFLAGS_ISNULLABLE fest, wenn der Consumer die Spalte auf einen NULL-Wert festlegen kann oder wenn der Anbieter nicht bestimmen kann, ob der Consumer die Spalte auf einen NULL-Wert festlegen kann. Eine Spalte kann NULL-Werte enthalten, auch wenn Sie nicht auf einen NULL-Wert festgelegt werden kann.|  
|IsReadOnly|DBCOLUMNFLAGS_WRITE|`true`, wenn die Spalte nicht geändert werden kann. andernfalls `false`. Es wird angenommen, dass die Spalte beschreibbar ist, wenn der Anbieter entweder das DBCOLUMNFLAGS_WRITE-oder das DBCOLUMNFLAGS_WRITEUNKNOWN-Flag festgelegt hat.|  
|IsRowVersion|DBCOLUMNFLAGS_ISROWID|Der Anbieter legt DBCOLUMNFLAGS_ISROWID fest, wenn die Spalte einen beständigen Zeilen Bezeichner enthält, in den nicht geschrieben werden kann, und hat keinen sinnvollen Wert, außer der Identität der Zeile.|  
|IsUnique|DBCOLUMN_ISUNIQUE|VARIANT_TRUE: keine zwei Zeilen in der Basistabelle-die Tabelle, die in BaseTableName zurückgegeben wird, kann in dieser Spalte denselben Wert aufweisen. IsUnique ist garantiert VARIANT_TRUE, wenn die Spalte einen Schlüssel allein darstellt, oder wenn eine Einschränkung vom Typ UNIQUE vorliegt, die nur für diese Spalte gilt.<br /><br /> VARIANT_FALSE: die Spalte kann doppelte Werte in der Basistabelle enthalten. Der Standardwert dieser Spalte ist VARIANT_FALSE.|  
|IsKey|DBCOLUMN_KEYCOLUMN|VARIANT_TRUE: die Spalte ist eine Gruppe von Spalten im Rowset, die die Zeile eindeutig identifizieren. Der Satz von Spalten, bei dem IsKey auf VARIANT_TRUE festgelegt ist, muss eine Zeile im Rowset eindeutig identifizieren. Es ist nicht erforderlich, dass es sich bei diesem Satz von Spalten um einen minimalen Satz von Spalten handelt. Dieser Spalten Satz kann aus einem Primärschlüssel der Basistabelle, einer UNIQUE-Einschränkung oder einem eindeutigen Index generiert werden.<br /><br /> VARIANT_FALSE: die Spalte ist nicht erforderlich, um die Zeile eindeutig zu identifizieren.|  
|IsAutoIncrement|DBCOLUMN_ISAUTOINCREMENT|VARIANT_TRUE: die Spalte weist neuen Zeilen in fester Inkrementen Werte zu.<br /><br /> VARIANT_FALSE: die Spalte weist neuen Zeilen in fester Inkrementen keine Werte zu. Der Standardwert dieser Spalte ist VARIANT_FALSE.|  
|BaseSchemaName|DBCOLUMN_BASESCHEMANAME|Der Name des Schemas im Datenspeicher, der die Spalte enthält. Ein NULL-Wert, wenn der Name des Basis Schemas nicht bestimmt werden kann. Der Standardwert dieser Spalte ist ein NULL-Wert.|  
|BaseCatalogName|DBCOLUMN_BASECATALOGNAME|Der Name des Katalogs im Datenspeicher, der die Spalte enthält. Ein NULL-Wert, wenn der Name des Basis Katalogs nicht bestimmt werden kann. Der Standardwert dieser Spalte ist ein NULL-Wert.|  
|BaseTableName|DBCOLUMN_BASETABLENAME|Der Name der Tabelle oder Sicht im Datenspeicher, in der die Spalte enthalten ist. Ein NULL-Wert, wenn der Name der Basistabelle nicht bestimmt werden kann. Der Standardwert dieser Spalte ist ein NULL-Wert.|  
|Basecolumschlag Name|DBCOLUMN_BASECOLUMNNAME|Der Name der Spalte im Datenspeicher. Dies kann sich von dem Spaltennamen unterscheiden, der in der ColumnName-Spalte zurückgegeben wurde, wenn ein Alias verwendet wurde. Ein NULL-Wert, wenn der Name der Basis Spalte nicht bestimmt werden kann oder wenn die Rowsetspalte abgeleitet ist, aber nicht mit einer Spalte im Datenspeicher identisch ist. Der Standardwert dieser Spalte ist ein NULL-Wert.|  
  
> [!NOTE]
>  Um sicherzustellen, dass Metadatenspalten die richtigen Informationen zurückgeben, <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> müssen Sie `behavior` aufrufen, wobei `KeyInfo`der-Parameter auf festgelegt ist. Andernfalls können einige Spalten in der Schema Tabelle Standard-, NULL-oder falsche Daten zurückgeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Data.OleDb.OleDbDataReader" /> ist geschlossen.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="oleDbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als eine Zeichenfolge ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits eine Zeichenfolge sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (ordinal As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetTimeSpan : int -&gt; TimeSpan" Usage="oleDbDataReader.GetTimeSpan ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.TimeSpan" />-Objekt ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden keine Konvertierungen ausgeführt. Daher müssen die abgerufenen Daten bereits ein <xref:System.TimeSpan> -Objekt sein.  
  
 Rufen <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> Sie auf, um nach Nullwerten zu suchen, bevor Sie diese Methode aufrufen  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="oleDbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft den Wert der Spalte an der angegebenen Ordnungszahl im systemeigenen Format ab.</summary>
        <returns>Der zurückzugebende Wert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt <xref:System.DBNull> zurück, wenn die Datenbankspalten NULL-Werte enthalten.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="oleDbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Ein Array vom Typ <see cref="T:System.Object" />, in das die Attributspalten kopiert werden sollen.</param>
        <summary>Füllt ein Array von Objekten mit den Spaltenwerten der aktuellen Zeile auf.</summary>
        <returns>Die Anzahl der Instanzen von <see cref="T:System.Object" /> im Array.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei den meisten Anwendungen bietet <xref:System.Data.OleDb.OleDbDataReader.GetValues%2A> die-Methode eine effiziente Möglichkeit zum Abrufen aller Spalten, anstatt jede Spalte einzeln abzurufen.  
  
 Sie können ein <xref:System.Object> Array übergeben, das weniger als die Anzahl der Spalten enthält, die in der resultierenden Zeile enthalten sind. Nur die Menge der Daten, <xref:System.Object> die das Array enthält, wird in das Array kopiert. Sie können auch ein <xref:System.Object> Array übergeben, dessen Länge größer ist als die Anzahl der Spalten, die in der resultierenden Zeile enthalten sind.  
  
 Diese Methode gibt <xref:System.DBNull> zurück, wenn die Datenbankspalten NULL-Werte enthalten.  
  
   
  
## Examples  
 [!code-csharp[OleDbDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/oledbdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OleDbDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/oledbdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Data.OleDb.OleDbDataReader" /> eine oder mehrere Zeilen enthält.</summary>
        <value><see langword="true" />, wenn <see cref="T:System.Data.OleDb.OleDbDataReader" /> eine oder mehrere Zeilen enthält, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob der Datenreader geschlossen ist.</summary>
        <value><see langword="true" /> wenn der <see cref="T:System.Data.OleDb.OleDbDataReader" /> geschlossen ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>und <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sind die einzigen Eigenschaften, die Sie nach dem <xref:System.Data.OleDb.OleDbDataReader> schließen von aufzurufen können.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="oleDbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
        <returns><see langword="true" />, wenn der angegebene Spaltenwert <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode auf, um nach NULL-Spaltenwerten zu suchen, bevor Sie die typisierten <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>Get-Methoden aufrufen (z <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>. b., usw.), um eine Fehlermeldung zu vermeiden.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den Wert einer Spalte im systemeigenen Format ab.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die Spaltenordnungszahl.</param>
        <summary>Ruft bei angegebener Spaltenordnungszahl den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
        <value>Der Wert der angegebenen Spalte im systemeigenen Format.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Spaltenname</param>
        <summary>Ruft bei angegebenem Spaltennamen den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
        <value>Der Wert der angegebenen Spalte im systemeigenen Format.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zuerst wird eine Suche mit Unterscheidung nach Groß-/Kleinschreibung ausgeführt. Bei einem Fehler wird eine zweite Suche ohne Beachtung der Groß-/Kleinschreibung durchgeführt.  
  
 Diese Methode hat keine unempfindliche Breite von Kana.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Keine Spalte mit dem angegebenen Namen wurde gefunden.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="oleDbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Datenleser beim Lesen der Ergebnisse von SQL-Anweisungen auf das nächste Ergebnis.</summary>
        <returns><see langword="true" />, wenn weitere Resultsets vorhanden sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird verwendet, um mehrere Ergebnisse zu verarbeiten, die durch Ausführen von Batch-SQL-Anweisungen generiert werden können.  
  
 Standardmäßig wird der Daten Leser auf dem ersten Ergebnis positioniert.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="oleDbDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den <see cref="T:System.Data.OleDb.OleDbDataReader" /> auf den nächsten Datensatz.</summary>
        <returns><see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardposition des der <xref:System.Data.OleDb.OleDbDataReader> steht vor dem ersten Datensatz. Daher müssen Sie aufrufen <xref:System.Data.OleDb.OleDbDataReader.Read%2A> , um mit dem Zugriff auf Daten zu beginnen.  
  
 Während der <xref:System.Data.OleDb.OleDbDataReader> verwendet wird, <xref:System.Data.OleDb.OleDbConnection> ist die zugeordnete ausgelastet, bis Sie aufzurufen <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.  
  
   
  
## Examples  
 Im folgenden Beispiel werden ein <xref:System.Data.OleDb.OleDbConnection>, ein <xref:System.Data.OleDb.OleDbCommand>und <xref:System.Data.OleDb.OleDbDataReader>ein erstellt. Im Beispiel werden die Daten gelesen und in die Konsole geschrieben. Schließlich schließt das Beispiel die <xref:System.Data.OleDb.OleDbDataReader> und dann das. <xref:System.Data.OleDb.OleDbConnection>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab.</summary>
        <value>Die Anzahl der geänderten, eingefügten oder gelöschten Zeilen; 0, wenn keine Zeilen betroffen sind, oder bei der Anweisung ein Fehler aufgetreten ist, und -1 für SELECT-Anweisungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> -Eigenschaft wird erst festgelegt, wenn alle Zeilen gelesen wurden und <xref:System.Data.OleDb.OleDbDataReader>Sie schließen.  
  
 Der Wert dieser Eigenschaft ist kumulativ. Wenn z. b. zwei Datensätze in den Batch Modus eingefügt werden, <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> ist der Wert von 2.  
  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>und <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sind die einzigen Eigenschaften, die Sie nach dem <xref:System.Data.OleDb.OleDbDataReader> schließen von aufzurufen können.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ordinal">Der Index des zu suchenden Felds.</param>
        <summary>Gibt einen <see cref="T:System.Data.IDataReader" /> für die angegebene Spaltenordnungszahl zurück.</summary>
        <returns>Der <see cref="T:System.Data.IDataReader" /> für die angegebene Spaltenordnungszahl.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Data.OleDb.OleDbDataReader" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der nicht ausgeblendeten Felder im <see cref="T:System.Data.OleDb.OleDbDataReader" /> ab.</summary>
        <value>Die Anzahl der nicht ausgeblendeten Felder.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Wert wird verwendet, um zu bestimmen, wie viele <xref:System.Data.OleDb.OleDbDataReader> Felder in der sichtbar sind. Eine SELECT-Anweisung auf einen Teil eines Primärschlüssels gibt beispielsweise die restlichen Teile des Schlüssels als ausgeblendete Felder zurück. Die ausgeblendeten Felder werden immer hinter den sichtbaren Feldern angefügt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">"DataAdapters" und "DataReaders"</related>
      </Docs>
    </Member>
  </Members>
</Type>
