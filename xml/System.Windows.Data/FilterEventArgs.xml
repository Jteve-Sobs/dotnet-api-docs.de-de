<Type Name="FilterEventArgs" FullName="System.Windows.Data.FilterEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ce9cf6dc9f6e2aad2c1d7fe17c703b3d60d28af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69210659" /></Metadata><TypeSignature Language="C#" Value="public class FilterEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.FilterEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FilterEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen und Ereignisdaten bereit, die dem <see cref="E:System.Windows.Data.CollectionViewSource.Filter" />-Ereignis zugeordnet sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Ereignishandler für das <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> -Ereignis festgelegt wird. In diesem Beispiel `listingDataView` ist eine Instanz von <xref:System.Windows.Data.CollectionViewSource>.  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 Das folgende Beispiel zeigt die Implementierung des Beispiel `ShowOnlyBargainsFilter` Filter Ereignis Handlers. Dieser Ereignishandler verwendet die <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> -Eigenschaft, um `AuctionItem` Objekte auszufiltern, `CurrentPrice` die über eine von $25,00 oder höher verfügen.  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 Das komplette Beispiel finden Sie unter [Demo zur Datenbindung](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
  </Docs>
  <Members>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public bool Accepted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Accepted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.FilterEventArgs.Accepted" />
      <MemberSignature Language="VB.NET" Value="Public Property Accepted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Accepted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Accepted : bool with get, set" Usage="System.Windows.Data.FilterEventArgs.Accepted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dem angegeben wird, ob das Element den Filter passiert, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Element den Filter passiert, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Ereignishandler für das <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> -Ereignis festgelegt wird. In diesem Beispiel `listingDataView` ist eine Instanz von <xref:System.Windows.Data.CollectionViewSource>.  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 Das folgende Beispiel zeigt die Implementierung des Beispiel `ShowOnlyBargainsFilter` Filter Ereignis Handlers. Dieser Ereignishandler verwendet die <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> -Eigenschaft, um `AuctionItem` Objekte auszufiltern, `CurrentPrice` die über eine von $25,00 oder höher verfügen.  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 Das komplette Beispiel finden Sie unter [Demo zur Datenbindung](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.FilterEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Windows.Data.FilterEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das vom Filter zu testende Objekt ab.</summary>
        <value>Das vom Filter zu testende Objekt. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Ereignishandler für das <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> -Ereignis festgelegt wird. In diesem Beispiel `listingDataView` ist eine Instanz von <xref:System.Windows.Data.CollectionViewSource>.  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 Das folgende Beispiel zeigt die Implementierung des Beispiel `ShowOnlyBargainsFilter` Filter Ereignis Handlers. Dieser Ereignishandler verwendet die <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> -Eigenschaft, um `AuctionItem` Objekte auszufiltern, `CurrentPrice` die über eine von $25,00 oder höher verfügen.  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 Das komplette Beispiel finden Sie unter [Demo zur Datenbindung](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
      </Docs>
    </Member>
  </Members>
</Type>
