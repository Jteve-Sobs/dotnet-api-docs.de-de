<Type Name="ListCollectionView" FullName="System.Windows.Data.ListCollectionView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d966dde5dc94ad68294bcedfea036d80549aa563" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37579176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListCollectionView : System.Windows.Data.CollectionView, System.Collections.IComparer, System.ComponentModel.ICollectionViewLiveShaping, System.ComponentModel.IEditableCollectionView, System.ComponentModel.IEditableCollectionViewAddNewItem, System.ComponentModel.IItemProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListCollectionView extends System.Windows.Data.CollectionView implements class System.Collections.IComparer, class System.ComponentModel.ICollectionViewLiveShaping, class System.ComponentModel.IEditableCollectionView, class System.ComponentModel.IEditableCollectionViewAddNewItem, class System.ComponentModel.IItemProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.ListCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListCollectionView&#xA;Inherits CollectionView&#xA;Implements ICollectionViewLiveShaping, IComparer, IEditableCollectionView, IEditableCollectionViewAddNewItem, IItemProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListCollectionView : System::Windows::Data::CollectionView, System::Collections::IComparer, System::ComponentModel::ICollectionViewLiveShaping, System::ComponentModel::IEditableCollectionView, System::ComponentModel::IEditableCollectionViewAddNewItem, System::ComponentModel::IItemProperties" />
  <TypeSignature Language="F#" Value="type ListCollectionView = class&#xA;    inherit CollectionView&#xA;    interface IComparer&#xA;    interface IEditableCollectionViewAddNewItem&#xA;    interface IEditableCollectionView&#xA;    interface ICollectionViewLiveShaping&#xA;    interface IItemProperties" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.CollectionView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICollectionViewLiveShaping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionViewAddNewItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IItemProperties</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3f20b-101">Represents the collection view for collections that implement <see cref="T:System.Collections.IList" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f20b-101">Represents the collection view for collections that implement <see cref="T:System.Collections.IList" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-102">Beim Binden an eine datenauflistung empfiehlt es sich, die zum Sortieren, filtern oder gruppieren Sie die Daten.</span><span class="sxs-lookup"><span data-stu-id="3f20b-102">When you bind to a data collection, you may want to sort, filter, or group the data.</span></span> <span data-ttu-id="3f20b-103">Zu diesem Zweck verwenden Sie Auflistungsansichten.</span><span class="sxs-lookup"><span data-stu-id="3f20b-103">To do that, you use collection views.</span></span> <span data-ttu-id="3f20b-104">Stellen Sie sich eine <xref:System.Windows.Data.CollectionView> als Schicht auf die Auflistung der Bindungen-Quelle, mit dem Sie navigieren und die jeweilige quellauflistung basierend auf Sortierung, Filter und Gruppenabfragen anzeigen, ohne die zugrunde liegende bearbeiten-quellauflistung selbst.</span><span class="sxs-lookup"><span data-stu-id="3f20b-104">You can think of a <xref:System.Windows.Data.CollectionView> as the layer on top of the binding source collection that allows you to navigate and display the source collection based on sort, filter, and group queries, all without having to manipulate the underlying source collection itself.</span></span> <span data-ttu-id="3f20b-105">Wenn die quellauflistung implementiert die <xref:System.Collections.Specialized.INotifyCollectionChanged> Schnittstelle, die Änderungen, die ausgelöst wird, indem die <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> Ereignis an die Ansichten weitergegeben werden.</span><span class="sxs-lookup"><span data-stu-id="3f20b-105">If the source collection implements the <xref:System.Collections.Specialized.INotifyCollectionChanged> interface, the changes raised by the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event are propagated to the views.</span></span>  
  
 <span data-ttu-id="3f20b-106">Alle Sammlungen haben einen Standardwert <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="3f20b-106">All collections have a default <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="3f20b-107">Für alle Sammlungen implementieren <xref:System.Collections.IList>, <xref:System.Windows.Data.ListCollectionView> Objekt das Standardobjekt für die Ansicht ist.</span><span class="sxs-lookup"><span data-stu-id="3f20b-107">For all collections implementing <xref:System.Collections.IList>, the <xref:System.Windows.Data.ListCollectionView> object is the default view object.</span></span> <span data-ttu-id="3f20b-108">Die <xref:System.Windows.Data.BindingListCollectionView> ist die View-Auflistungsklasse, die für Auflistungen, implementieren verwendet <xref:System.ComponentModel.IBindingList>.</span><span class="sxs-lookup"><span data-stu-id="3f20b-108">The <xref:System.Windows.Data.BindingListCollectionView> is the collection view class used for collections that implement <xref:System.ComponentModel.IBindingList>.</span></span> <span data-ttu-id="3f20b-109">Rufen Sie die Standardansicht, die Sie mit der <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="3f20b-109">To get the default view, you use the <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A> method.</span></span> <span data-ttu-id="3f20b-110">Ein Beispiel finden Sie unter [Vorgehensweise: Abrufen der Standardansicht einer datenauflistung](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md).</span><span class="sxs-lookup"><span data-stu-id="3f20b-110">For an example, see [How to: Get the Default View of a Data Collection](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md).</span></span>  
  
 <span data-ttu-id="3f20b-111">Weitere Informationen zu Auflistungsansichten, finden Sie unter [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3f20b-111">For more information about collection views, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListCollectionView (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListCollectionView(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.ListCollectionView : System.Collections.IList -&gt; System.Windows.Data.ListCollectionView" Usage="new System.Windows.Data.ListCollectionView list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="3f20b-112">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-112">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-113">Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView" /> class, using a supplied collection that implements <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-113">Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView" /> class, using a supplied collection that implements <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer ActiveComparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ActiveComparer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveComparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveComparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ ActiveComparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveComparer : System.Collections.IComparer with get, set" Usage="System.Windows.Data.ListCollectionView.ActiveComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-114">Gets or sets the current active comparer that is used in sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-114">Gets or sets the current active comparer that is used in sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-115">Ein <see cref="T:System.Collections.IComparer" /> -Objekt, das den aktiven Vergleich bildet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-115">An <see cref="T:System.Collections.IComparer" /> object that is the active comparer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveFilter">
      <MemberSignature Language="C#" Value="protected Predicate&lt;object&gt; ActiveFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; ActiveFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveFilter" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveFilter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Predicate&lt;System::Object ^&gt; ^ ActiveFilter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveFilter : Predicate&lt;obj&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.ActiveFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-116">Gets or sets the current active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-116">Gets or sets the current active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-117">Die aktive <see cref="P:System.Windows.Data.CollectionView.Filter" /> Rückruf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-117">The active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="listCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-118">Starts an add transaction and returns the pending new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-118">Starts an add transaction and returns the pending new item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-119">The pending new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-119">The pending new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-120">Aufrufen von <xref:System.Windows.Data.ListCollectionView.AddNew%2A> startet eine Transaktion zum Hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="3f20b-120">Calling <xref:System.Windows.Data.ListCollectionView.AddNew%2A> starts an add transaction.</span></span> <span data-ttu-id="3f20b-121">Rufen Sie <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> um die Transaktion zu beenden.</span><span class="sxs-lookup"><span data-stu-id="3f20b-121">You should call <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="3f20b-122">Ein neues Element erscheint immer in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="3f20b-122">A new item always appears in the collection view.</span></span> <span data-ttu-id="3f20b-123">Eine Filterung, Sortierung oder Gruppierung wird angewendet auf die Ansicht angewendet wird, auf das neue Element <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3f20b-123">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public object AddNewItem (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNewItem(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItem (newItem As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNewItem(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="abstract member AddNewItem : obj -&gt; obj&#xA;override this.AddNewItem : obj -&gt; obj" Usage="listCollectionView.AddNewItem newItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem">
          <span data-ttu-id="3f20b-124">The object to add to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-124">The object to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-125">Adds the specified object to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-125">Adds the specified object to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-126">The object that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-126">The object that was added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-127">Aufrufen der <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> -Methode startet eine Transaktion zum Hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="3f20b-127">Calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method starts an add transaction.</span></span> <span data-ttu-id="3f20b-128">Rufen Sie die <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> Methoden, um die Transaktion zu beenden.</span><span class="sxs-lookup"><span data-stu-id="3f20b-128">You should call the <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> methods to end the add transaction.</span></span> <span data-ttu-id="3f20b-129">Ein neues Element erscheint immer in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="3f20b-129">A new item always appears in the collection view.</span></span> <span data-ttu-id="3f20b-130">Eine Filterung, Sortierung oder Gruppierung wird angewendet auf die Ansicht angewendet wird, auf das neue Element <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3f20b-130">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3f20b-131">An object cannot be added to the <see cref="T:System.Windows.Data.ListCollectionView" /> by using the <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-131">An object cannot be added to the <see cref="T:System.Windows.Data.ListCollectionView" /> by using the <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.Windows.Data.ListCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-132">Gets a value that indicates whether a new item can be added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-132">Gets a value that indicates whether a new item can be added to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-133">
            <see langword="true" />, wenn der Auflistung ein neues Element hinzugefügt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-133">
              <see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-134">Die <xref:System.Windows.Data.ListCollectionView> können für die Auflistung ein neues Element erstellen, wenn keine Transaktion zum Bearbeiten ausgeführt wird, vorhanden ist, wenn die Auflistung nicht über eine feste Größe ist, und wenn die <xref:System.Windows.Data.ListCollectionView> können ein Objekt mit dem richtigen Typ erstellen.</span><span class="sxs-lookup"><span data-stu-id="3f20b-134">The <xref:System.Windows.Data.ListCollectionView> can create a new item for the collection if there is no edit transaction occurring, if the collection is not a fixed size, and if the <xref:System.Windows.Data.ListCollectionView> can create an object of the correct type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNewItem">
      <MemberSignature Language="C#" Value="public bool CanAddNewItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNewItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNewItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNewItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNewItem : bool" Usage="System.Windows.Data.ListCollectionView.CanAddNewItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-135">Gets a value that indicates whether a specified object can be added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-135">Gets a value that indicates whether a specified object can be added to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-136">
            <see langword="true" /> Wenn ein angegebenes Objekt der Auflistung hinzugefügt werden kann; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-136">
              <see langword="true" /> if a specified object can be added to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-137">Wenn die <xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> Eigenschaft `true`, können Sie angeben, ein Objekt der Auflistung hinzuzufügende durch Aufrufen der <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="3f20b-137">If the <xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> property is `true`, you can specify an object to add to the collection by calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method.</span></span> <span data-ttu-id="3f20b-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> ist `false` Wenn Elemente der Auflistung hinzugefügt werden können.</span><span class="sxs-lookup"><span data-stu-id="3f20b-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> is `false` if items cannot be added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.Windows.Data.ListCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-139">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-139">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-140">
            <see langword="true" />, wenn die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-140">
              <see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> ist `true` , wenn die bearbeitete Element implementiert die <xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="3f20b-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true` if the edited item implements the <xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="3f20b-142">Wenn <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> ist `false`, rufen Sie <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> , dazu führen, dass die Ansicht, um den Bearbeitungsstatus zu beenden, und geben Sie die Logik, um die Änderungen für das Objekt, das geändert wurde, rückgängig zu machen.</span><span class="sxs-lookup"><span data-stu-id="3f20b-142">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `false`, call <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit&#xA;override this.CancelEdit : unit -&gt; unit" Usage="listCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-143">Ends the edit transaction, and if possible, restores the original value to the item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-143">Ends the edit transaction, and if possible, restores the original value to the item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> Legt <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> zu `null` und bewirkt, dass die Auflistungsansicht, um den Bearbeitungsstatus zu beenden.</span><span class="sxs-lookup"><span data-stu-id="3f20b-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> sets <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span> <span data-ttu-id="3f20b-145">Wenn <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> ist `true`, <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> stellt auch die ursprünglichen Werte des bearbeiteten Objekts.</span><span class="sxs-lookup"><span data-stu-id="3f20b-145">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true`, <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit&#xA;override this.CancelNew : unit -&gt; unit" Usage="listCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-146">Ends the add transaction and discards the pending new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-146">Ends the add transaction and discards the pending new item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveFiltering">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveFiltering : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-147">Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-147">Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-148">
            <see langword="true" /> in allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-148">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveGrouping">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveGrouping : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-149">Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-149">Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-150">
            <see langword="true" /> in allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-150">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveSorting">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveSorting : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-151">Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-151">Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-152">
            <see langword="true" /> in allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-152">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFilter">
      <MemberSignature Language="C#" Value="public override bool CanFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFilter : bool" Usage="System.Windows.Data.ListCollectionView.CanFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-153">Gets a value that indicates whether the view supports callback-based filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-153">Gets a value that indicates whether the view supports callback-based filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-154">Für eine Standardinstanz von <see cref="T:System.Windows.Data.ListCollectionView" />, gibt diese Eigenschaft immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-154">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-155">Mit dieser Eigenschaft können Sie überprüfen, ob die aktuelle Implementierung unterstützt das Filtern, bevor Sie einen Rückruf an die geerbte zuweisen <xref:System.Windows.Data.CollectionView.Filter%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="3f20b-155">Use this property to test whether the current implementation supports filtering before assigning a callback to the inherited <xref:System.Windows.Data.CollectionView.Filter%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGroup">
      <MemberSignature Language="C#" Value="public override bool CanGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanGroup { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGroup : bool" Usage="System.Windows.Data.ListCollectionView.CanGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-156">Gets a value that indicates whether the collection view supports grouping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-156">Gets a value that indicates whether the collection view supports grouping.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-157">
            <see langword="true" /> Wenn die Auflistungsansicht das Gruppieren unterstützt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-157">
              <see langword="true" /> if the collection view supports grouping; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.Windows.Data.ListCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-158">Gets a value that indicates whether an item can be removed from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-158">Gets a value that indicates whether an item can be removed from the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-159">
            <see langword="true" />, wenn ein Element aus der Auflistung entfernt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-159">
              <see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A> ist `true` , wenn die Auflistung nicht über eine feste Größe ist und eine Add- oder Edit-Transaktion nicht ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="3f20b-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A> is `true` if the collection is not a fixed size and if an add or edit transaction is not occurring.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Windows.Data.ListCollectionView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-161">Gets a value that indicates whether the collection view supports sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-161">Gets a value that indicates whether the collection view supports sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-162">Für eine Standardinstanz von <see cref="T:System.Windows.Data.ListCollectionView" />, gibt diese Eigenschaft immer <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-162">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit&#xA;override this.CommitEdit : unit -&gt; unit" Usage="listCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-163">Ends the edit transaction and saves the pending changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-163">Ends the edit transaction and saves the pending changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit&#xA;override this.CommitNew : unit -&gt; unit" Usage="listCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-164">Ends the add transaction and saves the pending new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-164">Ends the add transaction and saves the pending new item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-165">Eine Filterung, Sortierung oder Gruppierung wird angewendet die <xref:System.Windows.Data.ListCollectionView> angewendet wird, auf das neue Element <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3f20b-165">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.ListCollectionView> is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected virtual int Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Compare (o1 As Object, o2 As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Compare(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="listCollectionView.Compare (o1, o2)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="3f20b-166">The first object to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-166">The first object to compare.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="3f20b-167">The second object to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-167">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-168">Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-168">Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-169">Less than zero if <paramref name="o1" /> is less than <paramref name="o2" />, zero if <paramref name="o1" /> and <paramref name="o2" /> are equal, or greater than zero if <paramref name="o1" /> is greater than <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-169">Less than zero if <paramref name="o1" /> is less than <paramref name="o2" />, zero if <paramref name="o1" /> and <paramref name="o2" /> are equal, or greater than zero if <paramref name="o1" /> is greater than <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public override bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.Contains : obj -&gt; bool" Usage="listCollectionView.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f20b-170">The object to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-170">The object to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-171">Returns a value that indicates whether a given item belongs to the collection view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-171">Returns a value that indicates whether a given item belongs to the collection view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-172">
            <see langword="true" /> if the item belongs to the collection view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-172">
              <see langword="true" /> if the item belongs to the collection view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-173">Diese Methode macht nicht keine Annahmen über die zugrunde liegende Auflistung gibt an, ob das Element gehört.</span><span class="sxs-lookup"><span data-stu-id="3f20b-173">This method does not make any assumptions about whether the item belongs to the underlying collection.</span></span> <span data-ttu-id="3f20b-174">Wenn Sie wissen, dass das Element der zugrunde liegenden Auflistung gehört, ist es effizienter, rufen Sie <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="3f20b-174">If you know that the item belongs to the underlying collection, it is more efficient to call <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Data.ListCollectionView.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-175">Gets the estimated number of records.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-175">Gets the estimated number of records.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-176">Eine der folgenden: <list type="table"><listheader><term> Wert </term><description> Bedeutung </description></listheader><item><term> -1 </term><description> konnte nicht ermittelt werden die die Anzahl der Auflistung. Dies wird möglicherweise zurückgegeben werden von einer "virtualisierenden" Ansicht, in dem die Ansicht absichtlich nicht für alle Elemente in der zugrunde liegenden Auflistung berücksichtigt weil die Sicht versucht, die Effizienz zu steigern und die Abhängigkeit von der ständigen Verfügbarkeit die gesamte Auflistung zu minimieren.  </description></item><item><term> jede andere ganze Zahl </term><description> die Anzahl der Auflistung.  </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-176">One of the following:  <list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> -1  </term><description> Could not determine the count of the collection. This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is trying to increase efficiency and minimize dependence on always having the whole collection available.  </description></item><item><term> any other integer  </term><description> The count of the collection.  </description></item></list></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-177">Beachten Sie, dass diese Anzahl die Anzahl die gefilterte darstellt.</span><span class="sxs-lookup"><span data-stu-id="3f20b-177">Note that this count represents the filtered count.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.Windows.Data.ListCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-178">Gets the item that is being added during the current add transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-178">Gets the item that is being added during the current add transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-179">Das Element, das hinzugefügt wird, wenn <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /><see langword="true" /> ist, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-179">The item that is being added if <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.Windows.Data.ListCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-180">Gets the item in the collection that is being edited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-180">Gets the item in the collection that is being edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-181">Das Element in der Auflistung, die gerade bearbeitet wird, wenn <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> gleich <see langword="true" /> ist, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-181">The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      </Docs>
    </Member>
    <Member MemberName="CustomSort">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer CustomSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer CustomSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CustomSort" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomSort As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ CustomSort { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomSort : System.Collections.IComparer with get, set" Usage="System.Windows.Data.ListCollectionView.CustomSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-182">Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer" /> to sort items in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-182">Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer" /> to sort items in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-183">Die Sortierkriterien als Implementierung <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-183">The sort criteria as an implementation of <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-184">Durch Festlegen dieser Eigenschaft wird eine sofortige Aktualisierung, es sei denn, eine <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> ist aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3f20b-184">Setting this property causes an immediate refresh unless a <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> is in effect.</span></span>  
  
 <span data-ttu-id="3f20b-185">Durch Festlegen dieser Eigenschaft wird ein zuvor festgelegter <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> Wert.</span><span class="sxs-lookup"><span data-stu-id="3f20b-185">Setting this property clears a previously set <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit&#xA;override this.EditItem : obj -&gt; unit" Usage="listCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f20b-186">The item to edit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-186">The item to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-187">Begins an edit transaction of the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-187">Begins an edit transaction of the specified item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public override Predicate&lt;object&gt; Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Filter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Predicate&lt;System::Object ^&gt; ^ Filter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : Predicate&lt;obj&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-188">Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-188">Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-189">Ein Delegat, der die Methode, die verwendet wird darstellt, um zu bestimmen, ob ein Element zum Einfügen in die Ansicht geeignet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-189">A delegate that represents the method that is used to determine whether an item is suitable for inclusion in the view.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listCollectionView.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-190">Returns an object that you can use to enumerate the items in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-190">Returns an object that you can use to enumerate the items in the view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-191">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-191">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-192">Enumerator-Instanzen werden in der Regel verwendet, zum Ausführen von asynchronen überprüft den Inhalt einer Sammlung oder in diesem Fall den Inhalt der Ansicht.</span><span class="sxs-lookup"><span data-stu-id="3f20b-192">Enumerator instances are typically used for making asynchronous checks of the contents of a collection, or in this case, the contents of the view.</span></span> <span data-ttu-id="3f20b-193">Angenommen, Sie sind dabei, starten Sie eine `foreach` Iteration über den Inhalt der Ansicht, kann es besser sein, erhalten eine asynchrone Kopie, um sicherzustellen, dass die Länge der Liste die Schleife nicht unerwartet Zielpfads geändert wird.</span><span class="sxs-lookup"><span data-stu-id="3f20b-193">For example, if you are about to start a `foreach` iteration over the contents of the view, it may be better to obtain an asynchronous copy to ensure that the length of the view items does not change unexpectedly midway through the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public override object GetItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetItemAt(int index);" />
      <MemberSignature Language="F#" Value="override this.GetItemAt : int -&gt; obj" Usage="listCollectionView.GetItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3f20b-194">The zero-based index at which the item is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-194">The zero-based index at which the item is located.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-195">Retrieves the item at the specified position in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-195">Retrieves the item at the specified position in the view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-196">The item at the specified position in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-196">The item at the specified position in the view.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-197">Diese Methode wertet den Index mit einem <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>, und <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> Eigenschaften, die für die Sicht festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="3f20b-197">This method evaluates the index with any <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>, and <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> properties that are set on the view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3f20b-198">If <paramref name="index" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-198">If <paramref name="index" /> is out of range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBySelector">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupBySelector As GroupDescriptionSelectorCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Data::GroupDescriptionSelectorCallback ^ GroupBySelector { System::Windows::Data::GroupDescriptionSelectorCallback ^ get(); void set(System::Windows::Data::GroupDescriptionSelectorCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBySelector : System.Windows.Data.GroupDescriptionSelectorCallback with get, set" Usage="System.Windows.Data.ListCollectionView.GroupBySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.GroupDescriptionSelectorCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-199">Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-199">Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-200">Eine Methode, die die Logik für die Auswahl der stellt der <see cref="T:System.ComponentModel.GroupDescription" /> als Funktion der übergeordneten Gruppe und deren Ebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-200">A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span>
          </span>
          <span data-ttu-id="3f20b-201">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-201">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="GroupDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt; GroupDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.ComponentModel.GroupDescription&gt; GroupDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GroupDescriptions As ObservableCollection(Of GroupDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ GroupDescriptions { System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupDescriptions : System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;" Usage="System.Windows.Data.ListCollectionView.GroupDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-202">Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-202">Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-203">Eine Auflistung von <see cref="T:System.ComponentModel.GroupDescription" /> Objekte, die beschreiben, wie die Elemente in der Auflistung in der Ansicht gruppiert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-203">A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3f20b-204">Diese Eigenschaft kann nur festgelegt werden, indem Sie den Zugriff auf das Objekt und dessen verschiedene Methoden wie z. B. `Add`.</span><span class="sxs-lookup"><span data-stu-id="3f20b-204">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="3f20b-205">Die Eigenschaft auf das Auflistungsobjekt selbst ist schreibgeschützt; die Auflistung an sich ist Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="3f20b-205">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f20b-206">Das folgende Beispiel zeigt, wie Sie diese Eigenschaft verwenden:</span><span class="sxs-lookup"><span data-stu-id="3f20b-206">The following example shows how to use this property:</span></span>  
  
 [!code-csharp[DataBindingLab#6](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#6)]
 [!code-vb[DataBindingLab#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#6)]  
  
 <span data-ttu-id="3f20b-207">Das vollständige Beispiel finden Sie unter [Demo für die Datenbindung](http://go.microsoft.com/fwlink/?LinkID=163703).</span><span class="sxs-lookup"><span data-stu-id="3f20b-207">For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;object&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;object&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Groups As ReadOnlyObservableCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ Groups { System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;obj&gt;" Usage="System.Windows.Data.ListCollectionView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-208">Gets the top-level groups.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-208">Gets the top-level groups.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-209">Eine schreibgeschützte Auflistung der Gruppen der obersten Ebene oder <see langword="null" /> , wenn keine Gruppen vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-209">A read-only collection of the top-level groups, or <see langword="null" /> if there are no groups.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-210">Die Elemente in der Auflistung sind vom Typ <xref:System.Windows.Data.CollectionViewGroup>.</span><span class="sxs-lookup"><span data-stu-id="3f20b-210">The items in the collection are of type <xref:System.Windows.Data.CollectionViewGroup>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public override int IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IndexOf(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : obj -&gt; int" Usage="listCollectionView.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f20b-211">The object to check for in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-211">The object to check for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-212">Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-212">Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-213">The index of the item in the collection, or <c>-1</c> if the item does not exist in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-213">The index of the item in the collection, or <c>-1</c> if the item does not exist in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalContains">
      <MemberSignature Language="C#" Value="protected bool InternalContains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool InternalContains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalContains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool InternalContains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.InternalContains : obj -&gt; bool" Usage="listCollectionView.InternalContains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f20b-214">The item to locate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-214">The item to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-215">Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-215">Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-216">
            <see langword="true" /> if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-216">
              <see langword="true" /> if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalCount">
      <MemberSignature Language="C#" Value="protected int InternalCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalCount" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int InternalCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalCount : int" Usage="System.Windows.Data.ListCollectionView.InternalCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-217">Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-217">Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-218">Die Anzahl der Datensätze in der <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-218">The number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetEnumerator">
      <MemberSignature Language="C#" Value="protected System.Collections.IEnumerator InternalGetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.IEnumerator InternalGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalGetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::IEnumerator ^ InternalGetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.InternalGetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listCollectionView.InternalGetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-219">Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-219">Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-220">An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-220">An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalIndexOf">
      <MemberSignature Language="C#" Value="protected int InternalIndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 InternalIndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalIndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int InternalIndexOf(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.InternalIndexOf : obj -&gt; int" Usage="listCollectionView.InternalIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f20b-221">The item to return an index for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-221">The item to return an index for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-222">Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-222">Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-223">The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-223">The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalItemAt">
      <MemberSignature Language="C#" Value="protected object InternalItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object InternalItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ InternalItemAt(int index);" />
      <MemberSignature Language="F#" Value="member this.InternalItemAt : int -&gt; obj" Usage="listCollectionView.InternalItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3f20b-224">The index at which the item is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-224">The index at which the item is located.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-225">Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-225">Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-226">The item at the specified zero-based index in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-226">The item at the specified zero-based index in the view.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalList">
      <MemberSignature Language="C#" Value="protected System.Collections.IList InternalList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList InternalList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalList As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IList ^ InternalList { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalList : System.Collections.IList" Usage="System.Windows.Data.ListCollectionView.InternalList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-227">Gets the complete and unfiltered underlying collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-227">Gets the complete and unfiltered underlying collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-228">Der zugrunde liegenden Auflistung, die implementieren muss, <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-228">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.Windows.Data.ListCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-229">Gets a value that indicates whether an add transaction is in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-229">Gets a value that indicates whether an add transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-230">
            <see langword="true" /> Wenn eine Transaktion zum Hinzufügen ausgeführt wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-230">
              <see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-231">Starten Sie eine Transaktion zum Hinzufügen durch einen Aufruf der <xref:System.Windows.Data.ListCollectionView.AddNew%2A> Methode, und Sie beenden die Transaktion, durch den Aufruf <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="3f20b-231">You begin an add transaction by calling the <xref:System.Windows.Data.ListCollectionView.AddNew%2A> method, and you end the add transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      </Docs>
    </Member>
    <Member MemberName="IsDataInGroupOrder">
      <MemberSignature Language="C#" Value="public bool IsDataInGroupOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataInGroupOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDataInGroupOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataInGroupOrder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDataInGroupOrder : bool with get, set" Usage="System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-232">Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-232">Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-233">
            <see langword="true" /> Wenn die Liste der Elemente bereits in der richtigen Reihenfolge für die Gruppierung ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-233">
              <see langword="true" /> if the list of items is already in the correct order for grouping; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-234">Wenn diese Eigenschaft auf `true` wird die Ansicht darüber informiert, dass die Liste der Elemente bereits in der richtigen Reihenfolge für die Gruppierung und kann die Ansicht einen effizienteren Algorithmus zu verwenden, um die Gruppen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="3f20b-234">Setting this property to `true` informs the view that the list of items is already in the correct order for grouping and allows the view to use a more efficient algorithm to build the groups.</span></span> <span data-ttu-id="3f20b-235">Die Daten sind in der richtigen Reihenfolge wenn:</span><span class="sxs-lookup"><span data-stu-id="3f20b-235">The data is in the correct order if:</span></span>  
  
1.  <span data-ttu-id="3f20b-236">Alle Elemente, die zu einer bestimmten Gruppe gehören werden nacheinander angezeigt, und</span><span class="sxs-lookup"><span data-stu-id="3f20b-236">All items belonging to a given group appear consecutively, and</span></span>  
  
2.  <span data-ttu-id="3f20b-237">Wenn die <xref:System.ComponentModel.GroupDescription.GroupNames%2A> Auflistung ist nicht leer ist, die Gruppen in <xref:System.ComponentModel.GroupDescription.GroupNames%2A> angezeigt werden, vor allen anderen Gruppen, und klicken Sie in der gleichen Reihenfolge wie in <xref:System.ComponentModel.GroupDescription.GroupNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="3f20b-237">If the <xref:System.ComponentModel.GroupDescription.GroupNames%2A> collection is non-empty, the groups in <xref:System.ComponentModel.GroupDescription.GroupNames%2A> appear before any other groups, and in the same order as in <xref:System.ComponentModel.GroupDescription.GroupNames%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.Windows.Data.ListCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-238">Gets a value that indicates whether an edit transaction is in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-238">Gets a value that indicates whether an edit transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-239">
            <see langword="true" /> Wenn eine Transaktion zum Bearbeiten ausgeführt wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-239">
              <see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-240">Starten Sie eine Transaktion zum Bearbeiten, durch einen Aufruf der <xref:System.Windows.Data.ListCollectionView.EditItem%2A> Methode, und Sie beenden die Transaktion, durch den Aufruf <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="3f20b-240">You begin an edit transaction by calling the <xref:System.Windows.Data.ListCollectionView.EditItem%2A> method, and you end the transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> or <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public override bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Data.ListCollectionView.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-241">Returns a value that indicates whether the resulting (filtered) view is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-241">Returns a value that indicates whether the resulting (filtered) view is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-242">
            <see langword="true" /> Wenn die resultierende Ansicht leer ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-242">
              <see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGrouping">
      <MemberSignature Language="C#" Value="protected bool IsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsGrouping" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGrouping : bool" Usage="System.Windows.Data.ListCollectionView.IsGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-243">Gets a value that indicates whether there are groups in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-243">Gets a value that indicates whether there are groups in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-244">
            <see langword="true" /> Wenn in der Ansicht Gruppen vorhanden sind; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-244">
              <see langword="true" /> if there are groups in the view; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFiltering">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveFiltering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveFiltering As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveFiltering { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveFiltering : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-245">Gets or sets a value that indicates whether filtering data in real time is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-245">Gets or sets a value that indicates whether filtering data in real time is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-246">
            <see langword="true" /> Wenn das Filtern von Daten in Echtzeit aktiviert ist. <see langword="false" /> Wenn aktive Filterung nicht aktiviert ist; <see langword="null" /> Wenn nicht ermittelt werden kann, ob die Auflistungsansicht die aktive Filterung implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-246">
              <see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f20b-247">
            <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-247">
              <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGrouping">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveGrouping As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveGrouping { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveGrouping : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-248">Gets or sets a value that indicates whether grouping data in real time is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-248">Gets or sets a value that indicates whether grouping data in real time is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-249">
            <see langword="true" /> Gruppieren von Daten in Echtzeit aktiviert ist. <see langword="false" /> Wenn aktive Gruppierung nicht aktiviert ist; <see langword="null" /> Wenn nicht ermittelt werden kann, ob die Auflistungsansicht die aktive Gruppierung implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-249">
              <see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f20b-250">
            <see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> cannot be set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-250">
              <see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> cannot be set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSorting">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveSorting As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveSorting { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveSorting : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-251">Gets or sets a value that indicates whether sorting in real time is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-251">Gets or sets a value that indicates whether sorting in real time is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-252">
            <see langword="true" /> Wenn das Sortieren von Daten in Echtzeit aktiviert ist. <see langword="false" /> Wenn aktive Sortierung nicht aktiviert ist; <see langword="null" /> Wenn nicht ermittelt werden kann, ob die Auflistungsansicht die aktive Sortierung implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-252">
              <see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f20b-253">
            <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-253">
              <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ItemProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt; ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.ItemPropertyInfo&gt; ItemProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemProperties As ReadOnlyCollection(Of ItemPropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ ItemProperties { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemProperties : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;" Usage="System.Windows.Data.ListCollectionView.ItemProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-254">Gets a collection of objects that describes the properties of the items in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-254">Gets a collection of objects that describes the properties of the items in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-255">Eine Auflistung von Objekten, die die Eigenschaften der Elemente in der Auflistung beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-255">A collection of objects that describes the properties of the items in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveFilteringProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveFilteringProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveFilteringProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveFilteringProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveFilteringProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveFilteringProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-256">Gets a collection of strings that specify the properties that participate in filtering data in real time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-256">Gets a collection of strings that specify the properties that participate in filtering data in real time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-257">Eine Auflistung von Zeichenfolgen, die die Eigenschaften, die einbezogen Filtern von Daten in Echtzeit angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-257">A collection of strings that specify the properties that participate in filtering data in real time.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveGroupingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveGroupingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveGroupingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveGroupingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveGroupingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveGroupingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-258">Gets a collection of strings that specify the properties that participate in grouping data in real time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-258">Gets a collection of strings that specify the properties that participate in grouping data in real time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-259">Eine Auflistung von Zeichenfolgen, die die Eigenschaften, die einbezogen Gruppieren von Daten in Echtzeit angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-259">A collection of strings that specify the properties that participate in grouping data in real time.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveSortingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveSortingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveSortingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveSortingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveSortingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveSortingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveSortingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveSortingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-260">Gets a collection of strings that specify the properties that participate in sorting data in real time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-260">Gets a collection of strings that specify the properties that participate in sorting data in real time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-261">Eine Auflistung von Zeichenfolgen, die die Eigenschaften, die einbezogen Sortieren von Daten in Echtzeit angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-261">A collection of strings that specify the properties that participate in sorting data in real time.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPosition">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToPosition(int position);" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToPosition : int -&gt; bool" Usage="listCollectionView.MoveCurrentToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="3f20b-262">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-262">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-263">Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-263">Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-264">
            <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-264">
              <see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3f20b-265">Thrown if the index is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-265">Thrown if the index is out of range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-266">Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-266">Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-267">Einer der Enumerationswerte, der angibt, der die Position des neuen Elementplatzhalters in der <see cref="T:System.Windows.Data.ListCollectionView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-267">One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAllowsCrossThreadChangesChanged">
      <MemberSignature Language="C#" Value="protected override void OnAllowsCrossThreadChangesChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAllowsCrossThreadChangesChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAllowsCrossThreadChangesChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAllowsCrossThreadChangesChanged();" />
      <MemberSignature Language="F#" Value="override this.OnAllowsCrossThreadChangesChanged : unit -&gt; unit" Usage="listCollectionView.OnAllowsCrossThreadChangesChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-268">Occurs when the <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-268">Occurs when the <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginChangeLogging">
      <MemberSignature Language="C#" Value="protected override void OnBeginChangeLogging (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginChangeLogging(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginChangeLogging (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginChangeLogging(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="override this.OnBeginChangeLogging : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listCollectionView.OnBeginChangeLogging args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by OnAllowsCrossThreadChangesChanged")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="3f20b-269">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-269">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-270">Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-270">Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-271">Der Zweck dieser Benachrichtigung ist, können Auflistungsansichten einer Momentaufnahme der Informationen, was häufig der Status der Datensammlung, ist, die zum Zeitpunkt der POST-Anforderung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="3f20b-271">The purpose of this notification is to allow collection views to take a snapshot of the information, which is often the state of the data collection, that is needed at the time of the post.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f20b-272">If <paramref name="args" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-272">If <paramref name="args" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PassesFilter">
      <MemberSignature Language="C#" Value="public override bool PassesFilter (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PassesFilter(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PassesFilter (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PassesFilter(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PassesFilter : obj -&gt; bool" Usage="listCollectionView.PassesFilter item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f20b-273">The item to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-273">The item to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-274">Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-274">Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-275">
            <see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-275">
              <see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-276">Im Gegensatz zu den <xref:System.Windows.Data.ListCollectionView.Contains%2A> -Methode, diese Methode wird davon ausgegangen, dass das angegebene Element zu der zugrunde liegenden Auflistung gehört.</span><span class="sxs-lookup"><span data-stu-id="3f20b-276">Unlike the <xref:System.Windows.Data.ListCollectionView.Contains%2A> method, this method assumes that the specified item belongs to the underlying collection.</span></span> <span data-ttu-id="3f20b-277">Diese Methode berücksichtigt Filter.</span><span class="sxs-lookup"><span data-stu-id="3f20b-277">This method takes filters into account.</span></span> <span data-ttu-id="3f20b-278">In der Regel verwenden Sie diese Methode während der geänderten Auflistung Benachrichtigungen, um festzustellen, ob das Element hinzugefügte oder entfernte. die Verarbeitung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="3f20b-278">Typically, you use this method during collection-changed notifications to determine whether the added or removed item requires processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void ProcessCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessCollectionChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessCollectionChanged (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ProcessCollectionChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="override this.ProcessCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listCollectionView.ProcessCollectionChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="3f20b-279">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-279">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-280">Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-280">Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> events.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f20b-281">If <paramref name="args" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-281">If <paramref name="args" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshOverride">
      <MemberSignature Language="C#" Value="protected override void RefreshOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RefreshOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshOverride ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshOverride();" />
      <MemberSignature Language="F#" Value="override this.RefreshOverride : unit -&gt; unit" Usage="listCollectionView.RefreshOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-282">Recreates the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-282">Recreates the view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="listCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3f20b-283">The item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-283">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-284">Removes the specified item from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-284">Removes the specified item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-285">Wenn `item` befindet sich nicht in der Auflistung <xref:System.Windows.Data.ListCollectionView.Remove%2A> hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="3f20b-285">If `item` is not in the collection, <xref:System.Windows.Data.ListCollectionView.Remove%2A> does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3f20b-286">The zero-based index of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-286">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-287">Removes the item at the specified position from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-287">Removes the item at the specified position from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f20b-288">`index` ist relativ zu der Auflistungsansicht, nicht in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="3f20b-288">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="3f20b-289">Z. B. wenn die Auflistung 10 Elemente und die Ansicht hat verfügt über eine <xref:System.ComponentModel.ICollectionView.Filter%2A> , damit 7 Elemente angezeigt werden, die gültigen Werte der `index` sind 0 bis 6.</span><span class="sxs-lookup"><span data-stu-id="3f20b-289">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3f20b-290">
            <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-290">
              <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.SortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SortDescriptions As SortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::SortDescriptionCollection ^ SortDescriptions { System::ComponentModel::SortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.SortDescriptionCollection" Usage="System.Windows.Data.ListCollectionView.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.SortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-291">Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-291">Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-292">Eine Auflistung von <see cref="T:System.ComponentModel.SortDescription" /> Objekte, die beschreiben, wie die Elemente in der Auflistung in der Ansicht sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-292">A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3f20b-293">Diese Eigenschaft kann nur festgelegt werden, indem Sie den Zugriff auf das Objekt und dessen verschiedene Methoden wie z. B. `Add`.</span><span class="sxs-lookup"><span data-stu-id="3f20b-293">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="3f20b-294">Die Eigenschaft auf das Auflistungsobjekt selbst ist schreibgeschützt; die Auflistung an sich ist Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="3f20b-294">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (o1 As Object, o2 As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ o1, System::Object ^ o2) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="3f20b-295">The first object to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-295">The first object to compare.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="3f20b-296">The second object to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-296">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f20b-297">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-297">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f20b-298">A value that is less than zero means <paramref name="o1" /> is less than <paramref name="o2;" /> a value of zero means the objects are equal; and a value that is over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-298">A value that is less than zero means <paramref name="o1" /> is less than <paramref name="o2;" /> a value of zero means the objects are equal; and a value that is over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesLocalArray">
      <MemberSignature Language="C#" Value="protected bool UsesLocalArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesLocalArray" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.UsesLocalArray" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UsesLocalArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool UsesLocalArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesLocalArray : bool" Usage="System.Windows.Data.ListCollectionView.UsesLocalArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f20b-299">Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-299">Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f20b-300">
            <see langword="true" /> Wenn eine private Kopie der Daten zum Sortieren und Filtern erforderlich ist. andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-300">
              <see langword="true" /> if a private copy of the data is needed for sorting and filtering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f20b-301">Die Standardimplementierung gibt <see langword="true" /> liegt eine <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> oder <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, oder beides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f20b-301">The default implementation returns <see langword="true" /> if there is an <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> or <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, or both.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>