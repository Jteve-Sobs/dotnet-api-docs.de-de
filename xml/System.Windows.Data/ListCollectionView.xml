<Type Name="ListCollectionView" FullName="System.Windows.Data.ListCollectionView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98f7f5060d5bcd79366b7d87e54b78497960ec7f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75113003" /></Metadata><TypeSignature Language="C#" Value="public class ListCollectionView : System.Windows.Data.CollectionView, System.Collections.IComparer, System.ComponentModel.ICollectionViewLiveShaping, System.ComponentModel.IEditableCollectionViewAddNewItem, System.ComponentModel.IItemProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListCollectionView extends System.Windows.Data.CollectionView implements class System.Collections.IComparer, class System.ComponentModel.ICollectionViewLiveShaping, class System.ComponentModel.IEditableCollectionView, class System.ComponentModel.IEditableCollectionViewAddNewItem, class System.ComponentModel.IItemProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.ListCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListCollectionView&#xA;Inherits CollectionView&#xA;Implements ICollectionViewLiveShaping, IComparer, IEditableCollectionViewAddNewItem, IItemProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListCollectionView : System::Windows::Data::CollectionView, System::Collections::IComparer, System::ComponentModel::ICollectionViewLiveShaping, System::ComponentModel::IEditableCollectionViewAddNewItem, System::ComponentModel::IItemProperties" />
  <TypeSignature Language="F#" Value="type ListCollectionView = class&#xA;    inherit CollectionView&#xA;    interface IComparer&#xA;    interface IEditableCollectionViewAddNewItem&#xA;    interface IEditableCollectionView&#xA;    interface ICollectionViewLiveShaping&#xA;    interface IItemProperties" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.CollectionView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICollectionViewLiveShaping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionViewAddNewItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IItemProperties</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="56a72-101">Stellt die Auflistungsansicht für Auflistungen dar, die <see cref="T:System.Collections.IList" /> implementieren.</span><span class="sxs-lookup"><span data-stu-id="56a72-101">Represents the collection view for collections that implement <see cref="T:System.Collections.IList" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-102">Wenn Sie eine Bindung an eine Datensammlung herstellen, können Sie die Daten sortieren, Filtern oder gruppieren.</span><span class="sxs-lookup"><span data-stu-id="56a72-102">When you bind to a data collection, you may want to sort, filter, or group the data.</span></span> <span data-ttu-id="56a72-103">Hierzu verwenden Sie Auflistungs Ansichten.</span><span class="sxs-lookup"><span data-stu-id="56a72-103">To do that, you use collection views.</span></span> <span data-ttu-id="56a72-104">Sie können sich eine <xref:System.Windows.Data.CollectionView> als die Ebene oberhalb der Bindungs Quell Auflistung vorstellen, die es Ihnen ermöglicht, die Quell Auflistung auf der Grundlage von Sortierungs-, Filter-und Gruppen Abfragen zu navigieren und anzuzeigen, ohne die zugrunde liegende Quell Auflistung selbst bearbeiten zu müssen.</span><span class="sxs-lookup"><span data-stu-id="56a72-104">You can think of a <xref:System.Windows.Data.CollectionView> as the layer on top of the binding source collection that allows you to navigate and display the source collection based on sort, filter, and group queries, all without having to manipulate the underlying source collection itself.</span></span> <span data-ttu-id="56a72-105">Wenn die Quell Auflistung die <xref:System.Collections.Specialized.INotifyCollectionChanged>-Schnittstelle implementiert, werden die Änderungen, die vom <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>-Ereignis ausgelöst werden, an die Ansichten weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="56a72-105">If the source collection implements the <xref:System.Collections.Specialized.INotifyCollectionChanged> interface, the changes raised by the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event are propagated to the views.</span></span>  
  
 <span data-ttu-id="56a72-106">Alle Sammlungen verfügen über eine Standard <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="56a72-106">All collections have a default <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="56a72-107">Bei allen Auflistungen, die <xref:System.Collections.IList>implementieren, ist das <xref:System.Windows.Data.ListCollectionView> Objekt das standardmäßige Ansichts Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-107">For all collections implementing <xref:System.Collections.IList>, the <xref:System.Windows.Data.ListCollectionView> object is the default view object.</span></span> <span data-ttu-id="56a72-108">Der <xref:System.Windows.Data.BindingListCollectionView> ist die Sammlungs Ansichts Klasse für Auflistungen, die <xref:System.ComponentModel.IBindingList>implementieren.</span><span class="sxs-lookup"><span data-stu-id="56a72-108">The <xref:System.Windows.Data.BindingListCollectionView> is the collection view class used for collections that implement <xref:System.ComponentModel.IBindingList>.</span></span> <span data-ttu-id="56a72-109">Um die Standardansicht zu erhalten, verwenden Sie die <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="56a72-109">To get the default view, you use the <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A> method.</span></span> <span data-ttu-id="56a72-110">Ein Beispiel finden Sie unter Gewusst [wie: Anzeigen der Standardansicht einer Datensammlung](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md).</span><span class="sxs-lookup"><span data-stu-id="56a72-110">For an example, see [How to: Get the Default View of a Data Collection](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md).</span></span>  
  
 <span data-ttu-id="56a72-111">Weitere Informationen zu Auflistungs Ansichten finden Sie unter Übersicht über die [Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="56a72-111">For more information about collection views, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListCollectionView (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListCollectionView(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.ListCollectionView : System.Collections.IList -&gt; System.Windows.Data.ListCollectionView" Usage="new System.Windows.Data.ListCollectionView list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="56a72-112">Die zugrunde liegende Auflistung, die <see cref="T:System.Collections.IList" /> implementieren muss.</span><span class="sxs-lookup"><span data-stu-id="56a72-112">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="56a72-113">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Data.ListCollectionView" />-Klasse unter Verwendung einer bereitgestellten Auflistung, die <see cref="T:System.Collections.IList" /> implementiert.</span><span class="sxs-lookup"><span data-stu-id="56a72-113">Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView" /> class, using a supplied collection that implements <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer ActiveComparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ActiveComparer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveComparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveComparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ ActiveComparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveComparer : System.Collections.IComparer with get, set" Usage="System.Windows.Data.ListCollectionView.ActiveComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-114">Ruft den aktuellen, aktiven, bei der Sortierung verwendeten Vergleich ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56a72-114">Gets or sets the current active comparer that is used in sorting.</span></span></summary>
        <value><span data-ttu-id="56a72-115">Ein <see cref="T:System.Collections.IComparer" />-Objekt, das den aktiven Vergleich bildet.</span><span class="sxs-lookup"><span data-stu-id="56a72-115">An <see cref="T:System.Collections.IComparer" /> object that is the active comparer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveFilter">
      <MemberSignature Language="C#" Value="protected Predicate&lt;object&gt; ActiveFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; ActiveFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveFilter" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveFilter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Predicate&lt;System::Object ^&gt; ^ ActiveFilter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveFilter : Predicate&lt;obj&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.ActiveFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-116">Ruft den aktuellen, aktiven <see cref="P:System.Windows.Data.CollectionView.Filter" />-Rückruf ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56a72-116">Gets or sets the current active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span></span></summary>
        <value><span data-ttu-id="56a72-117">Der aktive <see cref="P:System.Windows.Data.CollectionView.Filter" />-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="56a72-117">The active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="listCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.AddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-118">Startet eine Transaktion zum Hinzufügen und gibt das ausstehende neue Element zurück.</span><span class="sxs-lookup"><span data-stu-id="56a72-118">Starts an add transaction and returns the pending new item.</span></span></summary>
        <returns><span data-ttu-id="56a72-119">Das ausstehende neue Element.</span><span class="sxs-lookup"><span data-stu-id="56a72-119">The pending new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-120">Durch Aufrufen von <xref:System.Windows.Data.ListCollectionView.AddNew%2A> wird eine Transaktion zum Hinzufügen gestartet.</span><span class="sxs-lookup"><span data-stu-id="56a72-120">Calling <xref:System.Windows.Data.ListCollectionView.AddNew%2A> starts an add transaction.</span></span> <span data-ttu-id="56a72-121">Sie sollten <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> zum Beenden der Transaktion "hinzufügen" anrufen.</span><span class="sxs-lookup"><span data-stu-id="56a72-121">You should call <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="56a72-122">Ein neues Element wird immer in der Auflistungs Ansicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="56a72-122">A new item always appears in the collection view.</span></span> <span data-ttu-id="56a72-123">Alle Filter-, Sortier-oder Gruppierungsfunktionen, die auf die Sicht angewendet werden, werden auf das neue Element angewendet, wenn <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-123">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public object AddNewItem (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNewItem(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItem (newItem As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNewItem(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="abstract member AddNewItem : obj -&gt; obj&#xA;override this.AddNewItem : obj -&gt; obj" Usage="listCollectionView.AddNewItem newItem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="newItem"><span data-ttu-id="56a72-124">Das Objekt, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="56a72-124">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="56a72-125">Fügt der Auflistung das angegebene Objekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="56a72-125">Adds the specified object to the collection.</span></span></summary>
        <returns><span data-ttu-id="56a72-126">Das Objekt, das der Auflistung hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="56a72-126">The object that was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-127">Durch Aufrufen der <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A>-Methode wird eine Transaktion zum Hinzufügen gestartet.</span><span class="sxs-lookup"><span data-stu-id="56a72-127">Calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method starts an add transaction.</span></span> <span data-ttu-id="56a72-128">Sie sollten die Methoden <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> zum Beenden der Transaktion hinzufügen aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="56a72-128">You should call the <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> methods to end the add transaction.</span></span> <span data-ttu-id="56a72-129">Ein neues Element wird immer in der Auflistungs Ansicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="56a72-129">A new item always appears in the collection view.</span></span> <span data-ttu-id="56a72-130">Alle Filter-, Sortier-oder Gruppierungsfunktionen, die auf die Sicht angewendet werden, werden auf das neue Element angewendet, wenn <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-130">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56a72-131">Der <see cref="T:System.Windows.Data.ListCollectionView" /> kann kein Objekt mit der <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />-Methode hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="56a72-131">An object cannot be added to the <see cref="T:System.Windows.Data.ListCollectionView" /> by using the <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> method.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.Windows.Data.ListCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CanAddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-132">Ruft einen Wert ab, der angibt, ob der Auflistung ein neues Element hinzugefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="56a72-132">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value><span data-ttu-id="56a72-133"><see langword="true" />, wenn der Auflistung ein neues Element hinzugefügt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-133"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-134">Der <xref:System.Windows.Data.ListCollectionView> kann ein neues Element für die Auflistung erstellen, wenn keine Bearbeitungs Transaktion stattfindet, wenn die Auflistung keine fester Größe hat und die <xref:System.Windows.Data.ListCollectionView> ein Objekt des richtigen Typs erstellen kann.</span><span class="sxs-lookup"><span data-stu-id="56a72-134">The <xref:System.Windows.Data.ListCollectionView> can create a new item for the collection if there is no edit transaction occurring, if the collection is not a fixed size, and if the <xref:System.Windows.Data.ListCollectionView> can create an object of the correct type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNewItem">
      <MemberSignature Language="C#" Value="public bool CanAddNewItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNewItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNewItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNewItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNewItem : bool" Usage="System.Windows.Data.ListCollectionView.CanAddNewItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-135">Ruft einen Wert ab, der angibt, ob der Auflistung ein angegebenes Objekt hinzugefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="56a72-135">Gets a value that indicates whether a specified object can be added to the collection.</span></span></summary>
        <value><span data-ttu-id="56a72-136"><see langword="true" />, wenn der Auflistung ein bestimmtes Objekt hinzugefügt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-136"><see langword="true" /> if a specified object can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-137">Wenn die <xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A>-Eigenschaft `true`ist, können Sie ein-Objekt angeben, das der Auflistung hinzugefügt werden soll, indem Sie die <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="56a72-137">If the <xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> property is `true`, you can specify an object to add to the collection by calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method.</span></span> <span data-ttu-id="56a72-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> ist `false`, wenn der Auflistung keine Elemente hinzugefügt werden können.</span><span class="sxs-lookup"><span data-stu-id="56a72-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> is `false` if items cannot be added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.Windows.Data.ListCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CanCancelEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-139">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann.</span><span class="sxs-lookup"><span data-stu-id="56a72-139">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value><span data-ttu-id="56a72-140"><see langword="true" />, wenn die Auflistungsansicht ausstehende Änderungen verwerfen und die ursprünglichen Werte eines bearbeiteten Objekts wiederherstellen kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-140"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> ist `true`, wenn das bearbeitete Element die <xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="56a72-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true` if the edited item implements the <xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="56a72-142">Wenn <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> `false`ist, rufen Sie <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> auf, um zu bewirken, dass die Ansicht den Bearbeitungs Zustand verlässt, und stellen Sie die Logik bereit, um die Änderungen am bearbeiteten Objekt zurückzusetzen.</span><span class="sxs-lookup"><span data-stu-id="56a72-142">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `false`, call <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit&#xA;override this.CancelEdit : unit -&gt; unit" Usage="listCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CancelEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-143">Beendet die Transaktion zum Bearbeiten und stellt, wenn möglich, den ursprünglichen Wert des Elements wieder her.</span><span class="sxs-lookup"><span data-stu-id="56a72-143">Ends the edit transaction, and if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> legt <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> auf `null` fest und bewirkt, dass die Auflistungs Ansicht den Bearbeitungs Zustand verlässt.</span><span class="sxs-lookup"><span data-stu-id="56a72-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> sets <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span> <span data-ttu-id="56a72-145">Wenn <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> `true`ist, stellt <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> auch die ursprünglichen Werte des bearbeiteten Objekts wieder her.</span><span class="sxs-lookup"><span data-stu-id="56a72-145">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true`, <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit&#xA;override this.CancelNew : unit -&gt; unit" Usage="listCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CancelNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-146">Beendet die Transaktion zum Hinzufügen und verwirft das ausstehende neue Element.</span><span class="sxs-lookup"><span data-stu-id="56a72-146">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveFiltering">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveFiltering : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-147">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht das Ein- oder Ausschalten von Filterdaten in Echtzeit unterstützt.</span><span class="sxs-lookup"><span data-stu-id="56a72-147">Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</span></span></summary>
        <value><span data-ttu-id="56a72-148"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="56a72-148"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveGrouping">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveGrouping : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-149">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht Aktivieren/Deaktivieren von Gruppieren von Daten in Echtzeit unterstützt.</span><span class="sxs-lookup"><span data-stu-id="56a72-149">Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</span></span></summary>
        <value><span data-ttu-id="56a72-150"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="56a72-150"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveSorting">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanChangeLiveSorting : bool" Usage="System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-151">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht Aktivieren/Deaktivieren von Sortieren von Daten in Echtzeit unterstützt.</span><span class="sxs-lookup"><span data-stu-id="56a72-151">Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</span></span></summary>
        <value><span data-ttu-id="56a72-152"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="56a72-152"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFilter">
      <MemberSignature Language="C#" Value="public override bool CanFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFilter : bool" Usage="System.Windows.Data.ListCollectionView.CanFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-153">Ruft einen Wert ab, der angibt, ob die Ansicht rückrufbasiertes Filtern unterstützt.</span><span class="sxs-lookup"><span data-stu-id="56a72-153">Gets a value that indicates whether the view supports callback-based filtering.</span></span></summary>
        <value><span data-ttu-id="56a72-154">Bei einer Standardinstanz von <see cref="T:System.Windows.Data.ListCollectionView" /> gibt diese Eigenschaft stets <see langword="true" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56a72-154">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-155">Mit dieser Eigenschaft können Sie überprüfen, ob die aktuelle Implementierung das Filtern unterstützt, bevor Sie der geerbten <xref:System.Windows.Data.CollectionView.Filter%2A> Eigenschaft einen Rückruf zuweisen.</span><span class="sxs-lookup"><span data-stu-id="56a72-155">Use this property to test whether the current implementation supports filtering before assigning a callback to the inherited <xref:System.Windows.Data.CollectionView.Filter%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGroup">
      <MemberSignature Language="C#" Value="public override bool CanGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanGroup { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGroup : bool" Usage="System.Windows.Data.ListCollectionView.CanGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-156">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht das Gruppieren unterstützt.</span><span class="sxs-lookup"><span data-stu-id="56a72-156">Gets a value that indicates whether the collection view supports grouping.</span></span></summary>
        <value><span data-ttu-id="56a72-157"><see langword="true" />, wenn die Auflistungsansicht das Gruppieren unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-157"><see langword="true" /> if the collection view supports grouping; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.Windows.Data.ListCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CanRemove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-158">Ruft einen Wert ab, der angibt, ob ein Element aus der Auflistung entfernt werden kann.</span><span class="sxs-lookup"><span data-stu-id="56a72-158">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value><span data-ttu-id="56a72-159"><see langword="true" />, wenn ein Element aus der Auflistung entfernt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-159"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A> ist `true`, wenn die Auflistung keine fester Größe hat und keine Transaktion zum Hinzufügen oder bearbeiten auftritt.</span><span class="sxs-lookup"><span data-stu-id="56a72-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A> is `true` if the collection is not a fixed size and if an add or edit transaction is not occurring.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Windows.Data.ListCollectionView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-161">Ruft einen Wert ab, der angibt, ob die Auflistungsansicht das Sortieren unterstützt.</span><span class="sxs-lookup"><span data-stu-id="56a72-161">Gets a value that indicates whether the collection view supports sorting.</span></span></summary>
        <value><span data-ttu-id="56a72-162">Bei einer Standardinstanz von <see cref="T:System.Windows.Data.ListCollectionView" /> gibt diese Eigenschaft stets <see langword="true" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56a72-162">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit&#xA;override this.CommitEdit : unit -&gt; unit" Usage="listCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CommitEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-163">Beendet die Transaktion zum Bearbeiten und speichert die ausstehenden Änderungen.</span><span class="sxs-lookup"><span data-stu-id="56a72-163">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit&#xA;override this.CommitNew : unit -&gt; unit" Usage="listCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.CommitNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-164">Beendet die Transaktion zum Hinzufügen und speichert das ausstehende neue Element.</span><span class="sxs-lookup"><span data-stu-id="56a72-164">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-165">Alle Filter-, Sortier-oder Gruppierungs Vorgänge, die auf die <xref:System.Windows.Data.ListCollectionView> angewendet werden, werden auf das neue Element angewendet, wenn <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-165">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.ListCollectionView> is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected virtual int Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Compare (o1 As Object, o2 As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Compare(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="listCollectionView.Compare (o1, o2)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="56a72-166">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-166">The first object to compare.</span></span></param>
        <param name="o2"><span data-ttu-id="56a72-167">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-167">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="56a72-168">Vergleicht zwei Objekte und gibt über den zurückgegebenen Wert an, ob eines der Objekte kleiner, gleich oder größer als das andere Objekt ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-168">Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="56a72-169">Kleiner als 0 (null), wenn <paramref name="o1" /> kleiner als <paramref name="o2" /> ist, 0 ,wenn <paramref name="o1" /> und <paramref name="o2" /> gleich sind, oder größer als 0, wenn <paramref name="o1" /> größer als  <paramref name="o2" /> ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-169">Less than zero if <paramref name="o1" /> is less than <paramref name="o2" />, zero if <paramref name="o1" /> and <paramref name="o2" /> are equal, or greater than zero if <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public override bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.Contains : obj -&gt; bool" Usage="listCollectionView.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="56a72-170">Das zu überprüfende Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-170">The object to check.</span></span></param>
        <summary><span data-ttu-id="56a72-171">Gibt einen Wert zurück, der angibt, ob ein angegebenes Element zur Auflistungsansicht gehört.</span><span class="sxs-lookup"><span data-stu-id="56a72-171">Returns a value that indicates whether a given item belongs to the collection view.</span></span></summary>
        <returns><span data-ttu-id="56a72-172"><see langword="true" />, wenn das Element zur Auflistungsansicht gehört, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-172"><see langword="true" /> if the item belongs to the collection view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-173">Diese Methode führt keine Annahmen darüber aus, ob das Element zur zugrunde liegenden Auflistung gehört.</span><span class="sxs-lookup"><span data-stu-id="56a72-173">This method does not make any assumptions about whether the item belongs to the underlying collection.</span></span> <span data-ttu-id="56a72-174">Wenn Sie wissen, dass das Element zur zugrunde liegenden Auflistung gehört, ist es effizienter, <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="56a72-174">If you know that the item belongs to the underlying collection, it is more efficient to call <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Data.ListCollectionView.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-175">Ruft die geschätzte Anzahl von Datensätzen ab.</span><span class="sxs-lookup"><span data-stu-id="56a72-175">Gets the estimated number of records.</span></span></summary>
        <value><span data-ttu-id="56a72-176">Eine der folgenden:</span><span class="sxs-lookup"><span data-stu-id="56a72-176">One of the following:</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="56a72-177">Wert</span><span class="sxs-lookup"><span data-stu-id="56a72-177">Value</span></span>  
  
 </term><description> <span data-ttu-id="56a72-178">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="56a72-178">Meaning</span></span>  
  
 </description></listheader><item><term> <span data-ttu-id="56a72-179">-1</span><span class="sxs-lookup"><span data-stu-id="56a72-179">-1</span></span>  
  
 </term><description> <span data-ttu-id="56a72-180">Konnte die Anzahl der Auflistung nicht bestimmen.</span><span class="sxs-lookup"><span data-stu-id="56a72-180">Could not determine the count of the collection.</span></span> <span data-ttu-id="56a72-181">Dies wird möglicherweise von einer "virtualisierenden" Ansicht zurückgegeben, bei der die Ansicht absichtlich nicht alle Elemente in der zugrunde liegenden Auflistung umfasst, da so versucht wird, die Effizienz zu erhöhen und die Abhängigkeit von der ständigen Verfügbarkeit der gesamten Auflistung zu minimieren.</span><span class="sxs-lookup"><span data-stu-id="56a72-181">This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is trying to increase efficiency and minimize dependence on always having the whole collection available.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="56a72-182">eine beliebige andere ganze Zahl</span><span class="sxs-lookup"><span data-stu-id="56a72-182">any other integer</span></span>  
  
 </term><description> <span data-ttu-id="56a72-183">Die Anzahl der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="56a72-183">The count of the collection.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-184">Beachten Sie, dass diese Anzahl die gefilterte Anzahl darstellt.</span><span class="sxs-lookup"><span data-stu-id="56a72-184">Note that this count represents the filtered count.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.Windows.Data.ListCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CurrentAddItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-185">Ruft das Element ab, das während der aktuellen Hinzufügetransaktion hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-185">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="56a72-186">Das Element, das hinzugefügt wird, wenn <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /><see langword="true" /> ist, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-186">The item that is being added if <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.Windows.Data.ListCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.CurrentEditItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-187">Ruft das Element in der Auflistung ab, das gerade bearbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-187">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="56a72-188">Das Element in der Auflistung, die gerade bearbeitet wird, wenn <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> gleich <see langword="true" /> ist, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-188">The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      </Docs>
    </Member>
    <Member MemberName="CustomSort">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer CustomSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer CustomSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CustomSort" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomSort As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ CustomSort { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomSort : System.Collections.IComparer with get, set" Usage="System.Windows.Data.ListCollectionView.CustomSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-189">Ruft ein benutzerdefiniertes Objekt ab, das <see cref="T:System.Collections.IComparer" /> implementiert, um Elemente in der Ansicht zu sortieren, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="56a72-189">Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer" /> to sort items in the view.</span></span></summary>
        <value><span data-ttu-id="56a72-190">Die Sortierkriterien als Implementierung von <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-190">The sort criteria as an implementation of <see cref="T:System.Collections.IComparer" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-191">Das Festlegen dieser Eigenschaft bewirkt eine sofortige Aktualisierung, es sei denn, ein <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> ist wirksam.</span><span class="sxs-lookup"><span data-stu-id="56a72-191">Setting this property causes an immediate refresh unless a <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> is in effect.</span></span>  
  
 <span data-ttu-id="56a72-192">Durch Festlegen dieser Eigenschaft wird ein zuvor fest geleger <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> Wert gelöscht.</span><span class="sxs-lookup"><span data-stu-id="56a72-192">Setting this property clears a previously set <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit&#xA;override this.EditItem : obj -&gt; unit" Usage="listCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="56a72-193">Das zu bearbeitende Element.</span><span class="sxs-lookup"><span data-stu-id="56a72-193">The item to edit.</span></span></param>
        <summary><span data-ttu-id="56a72-194">Startet eine Transaktion zum Bearbeiten des angegebenen Elements.</span><span class="sxs-lookup"><span data-stu-id="56a72-194">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public override Predicate&lt;object&gt; Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Filter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Predicate&lt;System::Object ^&gt; ^ Filter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : Predicate&lt;obj&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-195">Ruft die Methode ab, mit der bestimmt wird, ob ein Element in die Ansicht eingefügt werden kann, oder legt diese Methode fest.</span><span class="sxs-lookup"><span data-stu-id="56a72-195">Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</span></span></summary>
        <value><span data-ttu-id="56a72-196">Ein Delegat, der die Methode darstellt, mit der ermittelt wird, ob ein Element in die Ansicht eingefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="56a72-196">A delegate that represents the method that is used to determine whether an item is suitable for inclusion in the view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listCollectionView.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-197">Gibt ein Objekt zurück, mit dem Sie die Elemente in der Ansicht auflisten können.</span><span class="sxs-lookup"><span data-stu-id="56a72-197">Returns an object that you can use to enumerate the items in the view.</span></span></summary>
        <returns><span data-ttu-id="56a72-198">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, mit dem Sie die Elemente in der Ansicht auflisten können.</span><span class="sxs-lookup"><span data-stu-id="56a72-198">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-199">Enumeratorinstanzen werden in der Regel verwendet, um asynchrone Überprüfungen des Inhalts einer Auflistung oder in diesem Fall den Inhalt der Sicht vorzunehmen.</span><span class="sxs-lookup"><span data-stu-id="56a72-199">Enumerator instances are typically used for making asynchronous checks of the contents of a collection, or in this case, the contents of the view.</span></span> <span data-ttu-id="56a72-200">Wenn Sie z. b. eine `foreach` Iterationen über den Inhalt der Sicht starten möchten, ist es möglicherweise besser, eine asynchrone Kopie abzurufen, um sicherzustellen, dass die Länge der Ansichts Elemente nicht unerwartet in der Mitte der Schleife geändert wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-200">For example, if you are about to start a `foreach` iteration over the contents of the view, it may be better to obtain an asynchronous copy to ensure that the length of the view items does not change unexpectedly midway through the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public override object GetItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetItemAt(int index);" />
      <MemberSignature Language="F#" Value="override this.GetItemAt : int -&gt; obj" Usage="listCollectionView.GetItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="56a72-201">Der nullbasierte Index, an dem sich das Element befindet.</span><span class="sxs-lookup"><span data-stu-id="56a72-201">The zero-based index at which the item is located.</span></span></param>
        <summary><span data-ttu-id="56a72-202">Ruft das Element an der angegebenen Position in der Ansicht ab.</span><span class="sxs-lookup"><span data-stu-id="56a72-202">Retrieves the item at the specified position in the view.</span></span></summary>
        <returns><span data-ttu-id="56a72-203">Das Element an der angegebenen Position in der Ansicht.</span><span class="sxs-lookup"><span data-stu-id="56a72-203">The item at the specified position in the view.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-204">Diese Methode wertet den Index mit allen Eigenschaften <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>und <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> aus, die für die Sicht festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-204">This method evaluates the index with any <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>, and <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> properties that are set on the view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56a72-205">Wenn <paramref name="index" /> außerhalb des Bereichs liegt.</span><span class="sxs-lookup"><span data-stu-id="56a72-205">If <paramref name="index" /> is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBySelector">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupBySelector As GroupDescriptionSelectorCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Data::GroupDescriptionSelectorCallback ^ GroupBySelector { System::Windows::Data::GroupDescriptionSelectorCallback ^ get(); void set(System::Windows::Data::GroupDescriptionSelectorCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBySelector : System.Windows.Data.GroupDescriptionSelectorCallback with get, set" Usage="System.Windows.Data.ListCollectionView.GroupBySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.GroupDescriptionSelectorCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-206">Ruft einen Delegaten ab, mit dem die <see cref="T:System.ComponentModel.GroupDescription" /> als Funktion der übergeordneten Gruppe und deren Ebene ausgewählt wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56a72-206">Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span></span></summary>
        <value><span data-ttu-id="56a72-207">Eine Methode, die die Logik für die Auswahl der <see cref="T:System.ComponentModel.GroupDescription" /> als Funktion der übergeordneten Gruppe und deren Ebene bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="56a72-207">A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span></span> <span data-ttu-id="56a72-208">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-208">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="GroupDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt; GroupDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.ComponentModel.GroupDescription&gt; GroupDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GroupDescriptions As ObservableCollection(Of GroupDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ GroupDescriptions { System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupDescriptions : System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;" Usage="System.Windows.Data.ListCollectionView.GroupDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-209">Ruft eine Auflistung von <see cref="T:System.ComponentModel.GroupDescription" />-Objekten ab, die das Gruppieren der Elemente in der Auflistung in der Ansicht beschreiben.</span><span class="sxs-lookup"><span data-stu-id="56a72-209">Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span></span></summary>
        <value><span data-ttu-id="56a72-210">Eine Auflistung von <see cref="T:System.ComponentModel.GroupDescription" />-Objekten, die das Gruppieren der Elemente in der Auflistung in der Ansicht beschreiben.</span><span class="sxs-lookup"><span data-stu-id="56a72-210">A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="56a72-211">Diese Eigenschaft kann nur festgelegt werden, indem auf das Auflistungs Objekt zugegriffen wird und die verschiedenen Methoden wie `Add`verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="56a72-211">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="56a72-212">Die-Eigenschaft für den Zugriff auf das Auflistungs Objekt selbst ist schreibgeschützt. die Sammlung selbst ist Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="56a72-212">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a72-213">Das folgende Beispiel zeigt, wie diese Eigenschaft verwendet wird:</span><span class="sxs-lookup"><span data-stu-id="56a72-213">The following example shows how to use this property:</span></span>  
  
 [!code-csharp[DataBindingLab#6](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#6)]
 [!code-vb[DataBindingLab#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#6)]  
  
 <span data-ttu-id="56a72-214">Das komplette Beispiel finden Sie unter [Demo zur Datenbindung](https://go.microsoft.com/fwlink/?LinkID=163703).</span><span class="sxs-lookup"><span data-stu-id="56a72-214">For the complete example, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;object&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;object&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Groups As ReadOnlyObservableCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ Groups { System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;obj&gt;" Usage="System.Windows.Data.ListCollectionView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-215">Ruft die Gruppen der obersten Ebene ab</span><span class="sxs-lookup"><span data-stu-id="56a72-215">Gets the top-level groups.</span></span></summary>
        <value><span data-ttu-id="56a72-216">Eine schreibgeschützte Auflistung der Gruppen der obersten Ebene oder <see langword="null" />, wenn keine Gruppen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-216">A read-only collection of the top-level groups, or <see langword="null" /> if there are no groups.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-217">Die Elemente in der Auflistung sind vom Typ <xref:System.Windows.Data.CollectionViewGroup>.</span><span class="sxs-lookup"><span data-stu-id="56a72-217">The items in the collection are of type <xref:System.Windows.Data.CollectionViewGroup>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public override int IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IndexOf(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : obj -&gt; int" Usage="listCollectionView.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="56a72-218">Das in der Auflistung zu suchende Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-218">The object to check for in the collection.</span></span></param>
        <summary><span data-ttu-id="56a72-219">Gibt den Index zurück, an den das angegebene Datenelement in der Auflistung gehört, oder -1, wenn der Index dieses Elements unbekannt ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-219">Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.</span></span></summary>
        <returns><span data-ttu-id="56a72-220">Der Index des Elements in der Auflistung oder <c>–1</c>, wenn das Element nicht in der Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-220">The index of the item in the collection, or <c>-1</c> if the item does not exist in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalContains">
      <MemberSignature Language="C#" Value="protected bool InternalContains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool InternalContains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalContains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool InternalContains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.InternalContains : obj -&gt; bool" Usage="listCollectionView.InternalContains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="56a72-221">Das zu suchende Element.</span><span class="sxs-lookup"><span data-stu-id="56a72-221">The item to locate.</span></span></param>
        <summary><span data-ttu-id="56a72-222">Gibt einen Wert zurück, der angibt, ob die <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> das Element enthält.</span><span class="sxs-lookup"><span data-stu-id="56a72-222">Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item.</span></span></summary>
        <returns><span data-ttu-id="56a72-223"><see langword="true" />, wenn die <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> das Element enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-223"><see langword="true" /> if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalCount">
      <MemberSignature Language="C#" Value="protected int InternalCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalCount" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int InternalCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalCount : int" Usage="System.Windows.Data.ListCollectionView.InternalCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-224">Ruft die Anzahl der Datensätze in der <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> ab.</span><span class="sxs-lookup"><span data-stu-id="56a72-224">Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <value><span data-ttu-id="56a72-225">Die Anzahl der Datensätze in der <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-225">The number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetEnumerator">
      <MemberSignature Language="C#" Value="protected System.Collections.IEnumerator InternalGetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.IEnumerator InternalGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalGetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::IEnumerator ^ InternalGetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.InternalGetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listCollectionView.InternalGetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-226">Gibt einen Enumerator für den <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56a72-226">Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="56a72-227">Ein Enumerator für <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-227">An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalIndexOf">
      <MemberSignature Language="C#" Value="protected int InternalIndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 InternalIndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalIndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int InternalIndexOf(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.InternalIndexOf : obj -&gt; int" Usage="listCollectionView.InternalIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="56a72-228">Das Element, für das ein Index zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="56a72-228">The item to return an index for.</span></span></param>
        <summary><span data-ttu-id="56a72-229">Gibt den Index des angegebenen Elements in der <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56a72-229">Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="56a72-230">Der Index des angegebenen Elements in der <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-230">The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalItemAt">
      <MemberSignature Language="C#" Value="protected object InternalItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object InternalItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ InternalItemAt(int index);" />
      <MemberSignature Language="F#" Value="member this.InternalItemAt : int -&gt; obj" Usage="listCollectionView.InternalItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="56a72-231">Der Index, an dem sich das Element befindet.</span><span class="sxs-lookup"><span data-stu-id="56a72-231">The index at which the item is located.</span></span></param>
        <summary><span data-ttu-id="56a72-232">Gibt das Element am angegebenen Index in der <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56a72-232">Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="56a72-233">Das Element am angegebenen nullbasierten Index der Ansicht.</span><span class="sxs-lookup"><span data-stu-id="56a72-233">The item at the specified zero-based index in the view.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalList">
      <MemberSignature Language="C#" Value="protected System.Collections.IList InternalList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList InternalList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalList As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IList ^ InternalList { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalList : System.Collections.IList" Usage="System.Windows.Data.ListCollectionView.InternalList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-234">Ruft die gefilterte und sortierte Liste der Elemente ab.</span><span class="sxs-lookup"><span data-stu-id="56a72-234">Gets the filtered and sorted list of items.</span></span></summary>
        <value><span data-ttu-id="56a72-235">Der <see cref="T:System.Collections.IList" />, für den das Filtern und Sortieren angewendet wurde.</span><span class="sxs-lookup"><span data-stu-id="56a72-235">The <see cref="T:System.Collections.IList" /> on which filtering and sorting have been applied.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.Windows.Data.ListCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.IsAddingNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-236">Ruft einen Wert ab, der angibt, ob gerade eine Transaktion zum Hinzufügen ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-236">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="56a72-237"><see langword="true" />, wenn momentan eine Transaktion zum Hinzufügen ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-237"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-238">Sie beginnen mit dem Hinzufügen einer Transaktion, indem Sie die <xref:System.Windows.Data.ListCollectionView.AddNew%2A>-Methode aufrufen, und beenden Sie die Transaktion hinzufügen, indem Sie <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="56a72-238">You begin an add transaction by calling the <xref:System.Windows.Data.ListCollectionView.AddNew%2A> method, and you end the add transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      </Docs>
    </Member>
    <Member MemberName="IsDataInGroupOrder">
      <MemberSignature Language="C#" Value="public bool IsDataInGroupOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataInGroupOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDataInGroupOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataInGroupOrder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDataInGroupOrder : bool with get, set" Usage="System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-239">Ruft einen Wert ab, der angibt, ob die Liste der Elemente (ggf. nach dem Anwenden der Sortierung und der Filter) bereits die richtige Reihenfolge für die Gruppierung aufweist.</span><span class="sxs-lookup"><span data-stu-id="56a72-239">Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</span></span></summary>
        <value><span data-ttu-id="56a72-240"><see langword="true" />, wenn die Liste der Elemente bereits die richtige Reihenfolge für die Gruppierung aufweist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-240"><see langword="true" /> if the list of items is already in the correct order for grouping; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-241">Wenn diese Eigenschaft auf `true` festgelegt wird, wird der Ansicht mitgeteilt, dass sich die Liste der Elemente bereits in der richtigen Reihenfolge für die Gruppierung befindet, und die Ansicht kann einen effizienteren Algorithmus zum Erstellen der Gruppen verwenden.</span><span class="sxs-lookup"><span data-stu-id="56a72-241">Setting this property to `true` informs the view that the list of items is already in the correct order for grouping and allows the view to use a more efficient algorithm to build the groups.</span></span> <span data-ttu-id="56a72-242">Die Daten sind in der richtigen Reihenfolge, wenn Folgendes gilt:</span><span class="sxs-lookup"><span data-stu-id="56a72-242">The data is in the correct order if:</span></span>  
  
1.  <span data-ttu-id="56a72-243">Alle Elemente, die zu einer bestimmten Gruppe gehören, werden nacheinander angezeigt.</span><span class="sxs-lookup"><span data-stu-id="56a72-243">All items belonging to a given group appear consecutively, and</span></span>  
  
2.  <span data-ttu-id="56a72-244">Wenn die <xref:System.ComponentModel.GroupDescription.GroupNames%2A> Sammlung nicht leer ist, werden die Gruppen in <xref:System.ComponentModel.GroupDescription.GroupNames%2A> vor allen anderen Gruppen und in derselben Reihenfolge wie in <xref:System.ComponentModel.GroupDescription.GroupNames%2A>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="56a72-244">If the <xref:System.ComponentModel.GroupDescription.GroupNames%2A> collection is non-empty, the groups in <xref:System.ComponentModel.GroupDescription.GroupNames%2A> appear before any other groups, and in the same order as in <xref:System.ComponentModel.GroupDescription.GroupNames%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.Windows.Data.ListCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.IsEditingItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-245">Ruft einen Wert ab, der angibt, ob gerade eine Transaktion zum Bearbeiten ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-245">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="56a72-246"><see langword="true" />, wenn aktuell eine Transaktion zum Bearbeiten ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-246"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-247">Sie beginnen eine Bearbeitungs Transaktion, indem Sie die <xref:System.Windows.Data.ListCollectionView.EditItem%2A>-Methode aufrufen, und Sie beenden die Transaktion, indem Sie <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> oder <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="56a72-247">You begin an edit transaction by calling the <xref:System.Windows.Data.ListCollectionView.EditItem%2A> method, and you end the transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> or <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public override bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Data.ListCollectionView.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-248">Gibt einen Wert zurück, der angibt, ob die resultierende (gefilterte) Ansicht leer ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-248">Returns a value that indicates whether the resulting (filtered) view is empty.</span></span></summary>
        <value><span data-ttu-id="56a72-249"><see langword="true" />, wenn die Ansicht leer ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-249"><see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGrouping">
      <MemberSignature Language="C#" Value="protected bool IsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsGrouping" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGrouping : bool" Usage="System.Windows.Data.ListCollectionView.IsGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-250">Ruft einen Wert ab, mit dem angegeben wird, ob die Ansicht Gruppen enthält.</span><span class="sxs-lookup"><span data-stu-id="56a72-250">Gets a value that indicates whether there are groups in the view.</span></span></summary>
        <value><span data-ttu-id="56a72-251"><see langword="true" />, wenn die Ansicht Gruppen enthält , andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-251"><see langword="true" /> if there are groups in the view; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFiltering">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveFiltering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveFiltering As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveFiltering { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveFiltering : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveFiltering" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-252">Ruft einen Wert ab, der angibt, ob die Filterung von Daten in Echtzeit aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-252">Gets or sets a value that indicates whether filtering data in real time is enabled.</span></span></summary>
        <value><span data-ttu-id="56a72-253"><see langword="true" />, wenn die Filterung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Filterung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Filterung implementiert.</span><span class="sxs-lookup"><span data-stu-id="56a72-253"><see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56a72-254"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> kann nicht auf <see langword="null" /> festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="56a72-254"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGrouping">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveGrouping As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveGrouping { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveGrouping : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveGrouping" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-255">Ruft einen Wert ab, der angibt, ob die Gruppierung von Daten in Echtzeit aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-255">Gets or sets a value that indicates whether grouping data in real time is enabled.</span></span></summary>
        <value><span data-ttu-id="56a72-256"><see langword="true" />, wenn die Gruppierung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Gruppierung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Gruppierung implementiert.</span><span class="sxs-lookup"><span data-stu-id="56a72-256"><see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56a72-257"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> kann nicht auf <see langword="null" /> festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="56a72-257"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSorting">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveSorting As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveSorting { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLiveSorting : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Data.ListCollectionView.IsLiveSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-258">Ruft einen Wert ab, der angibt, ob die Sortierung in Echtzeit aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-258">Gets or sets a value that indicates whether sorting in real time is enabled.</span></span></summary>
        <value><span data-ttu-id="56a72-259"><see langword="true" />, wenn die Sortierung von Daten in Echtzeit aktiviert ist; <see langword="false" />, wenn die aktive Sortierung nicht aktiviert ist; <see langword="null" />, wenn nicht bestimmt werden kann, ob die Auflistungsansicht die aktive Sortierung implementiert.</span><span class="sxs-lookup"><span data-stu-id="56a72-259"><see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56a72-260"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> kann nicht auf <see langword="null" /> festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="56a72-260"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ItemProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt; ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.ItemPropertyInfo&gt; ItemProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemProperties As ReadOnlyCollection(Of ItemPropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ ItemProperties { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemProperties : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;" Usage="System.Windows.Data.ListCollectionView.ItemProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IItemProperties.ItemProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-261">Ruft eine Auflistung von Objekten ab, die die Eigenschaften der Elemente in der Auflistung beschreibt.</span><span class="sxs-lookup"><span data-stu-id="56a72-261">Gets a collection of objects that describes the properties of the items in the collection.</span></span></summary>
        <value><span data-ttu-id="56a72-262">Eine Auflistung von Objekten, die die Eigenschaften der Elemente in der Auflistung beschreibt.</span><span class="sxs-lookup"><span data-stu-id="56a72-262">A collection of objects that describes the properties of the items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveFilteringProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveFilteringProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveFilteringProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveFilteringProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveFilteringProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveFilteringProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-263">Ruft eine Auflistung von Zeichenfolgen an, die die Eigenschaften angeben, die am Filtern von Daten in Echtzeit beteiligt sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-263">Gets a collection of strings that specify the properties that participate in filtering data in real time.</span></span></summary>
        <value><span data-ttu-id="56a72-264">Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Filtern von Daten in Echtzeit beteiligt sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-264">A collection of strings that specify the properties that participate in filtering data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveGroupingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveGroupingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveGroupingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveGroupingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveGroupingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveGroupingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-265">Ruft eine Auflistung von Zeichenfolgen ab, die die Eigenschaften angeben, die am Gruppieren von Daten in Echtzeit beteiligt sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-265">Gets a collection of strings that specify the properties that participate in grouping data in real time.</span></span></summary>
        <value><span data-ttu-id="56a72-266">Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Gruppieren von Daten in Echtzeit beteiligt sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-266">A collection of strings that specify the properties that participate in grouping data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveSortingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveSortingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveSortingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveSortingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveSortingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveSortingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LiveSortingProperties : System.Collections.ObjectModel.ObservableCollection&lt;string&gt;" Usage="System.Windows.Data.ListCollectionView.LiveSortingProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-267">Ruft eine Auflistung von Zeichenfolgen ab, die die Eigenschaften angeben, die am Sortieren von Daten in Echtzeit beteiligt sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-267">Gets a collection of strings that specify the properties that participate in sorting data in real time.</span></span></summary>
        <value><span data-ttu-id="56a72-268">Eine Auflistung von Zeichenfolgen, die die Eigenschaften angeben, die am Sortieren von Daten in Echtzeit beteiligt sind.</span><span class="sxs-lookup"><span data-stu-id="56a72-268">A collection of strings that specify the properties that participate in sorting data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPosition">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToPosition(int position);" />
      <MemberSignature Language="F#" Value="override this.MoveCurrentToPosition : int -&gt; bool" Usage="listCollectionView.MoveCurrentToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="56a72-269">Der Index, auf den das <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="56a72-269">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</span></span></param>
        <summary><span data-ttu-id="56a72-270">Legt das Element am angegebenen Index als das <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in der Ansicht fest.</span><span class="sxs-lookup"><span data-stu-id="56a72-270">Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</span></span></summary>
        <returns><span data-ttu-id="56a72-271"><see langword="true" />, wenn das resultierende <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> sich innerhalb der Ansicht befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-271"><see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56a72-272">Wird ausgelöst, wenn der Index außerhalb des gültigen Bereichs liegt.</span><span class="sxs-lookup"><span data-stu-id="56a72-272">Thrown if the index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-273">Ruft die Position des neuen Elementplatzhalters in der <see cref="T:System.Windows.Data.ListCollectionView" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="56a72-273">Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span></span></summary>
        <value><span data-ttu-id="56a72-274">Einer der Enumerationswerte, der die Position des neuen Elementplatzhalters in der <see cref="T:System.Windows.Data.ListCollectionView" /> angibt.</span><span class="sxs-lookup"><span data-stu-id="56a72-274">One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAllowsCrossThreadChangesChanged">
      <MemberSignature Language="C#" Value="protected override void OnAllowsCrossThreadChangesChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAllowsCrossThreadChangesChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAllowsCrossThreadChangesChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAllowsCrossThreadChangesChanged();" />
      <MemberSignature Language="F#" Value="override this.OnAllowsCrossThreadChangesChanged : unit -&gt; unit" Usage="listCollectionView.OnAllowsCrossThreadChangesChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-275">Tritt ein, wenn sich die <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="56a72-275">Occurs when the <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginChangeLogging">
      <MemberSignature Language="C#" Value="protected override void OnBeginChangeLogging (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginChangeLogging(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginChangeLogging (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginChangeLogging(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="override this.OnBeginChangeLogging : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listCollectionView.OnBeginChangeLogging args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("Replaced by OnAllowsCrossThreadChangesChanged")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="56a72-276">Das <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Objekt, das dem Änderungsprotokoll hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-276">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</span></span></param>
        <summary><span data-ttu-id="56a72-277">Wird von der Basisklasse aufgerufen, um die abgeleitete Klasse zu benachrichtigen, dass ein <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignis an die Meldungswarteschlange gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="56a72-277">Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-278">Der Zweck dieser Benachrichtigung besteht darin, Auflistungs Ansichten das Erstellen einer Momentaufnahme der Informationen zu ermöglichen. Dies ist häufig der Status der Datensammlung, der zum Zeitpunkt des Beitrags benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="56a72-278">The purpose of this notification is to allow collection views to take a snapshot of the information, which is often the state of the data collection, that is needed at the time of the post.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56a72-279">Wenn <paramref name="args" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-279">If <paramref name="args" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PassesFilter">
      <MemberSignature Language="C#" Value="public override bool PassesFilter (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PassesFilter(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PassesFilter (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PassesFilter(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PassesFilter : obj -&gt; bool" Usage="listCollectionView.PassesFilter item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="56a72-280">Das zu überprüfende Element.</span><span class="sxs-lookup"><span data-stu-id="56a72-280">The item to check.</span></span></param>
        <summary><span data-ttu-id="56a72-281">Gibt einen Wert zurück, mit dem angegeben wird, ob das angegebene Element zur Ansicht in der zugrunde liegenden Auflistung gehört.</span><span class="sxs-lookup"><span data-stu-id="56a72-281">Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</span></span></summary>
        <returns><span data-ttu-id="56a72-282"><see langword="true" />, wenn das angegebene Element zu dieser Ansicht gehört oder wenn für diese Auflistungsansicht kein Filter festgelegt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-282"><see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-283">Anders als bei der <xref:System.Windows.Data.ListCollectionView.Contains%2A>-Methode geht diese Methode davon aus, dass das angegebene Element zur zugrunde liegenden Auflistung gehört.</span><span class="sxs-lookup"><span data-stu-id="56a72-283">Unlike the <xref:System.Windows.Data.ListCollectionView.Contains%2A> method, this method assumes that the specified item belongs to the underlying collection.</span></span> <span data-ttu-id="56a72-284">Diese Methode berücksichtigt Filter.</span><span class="sxs-lookup"><span data-stu-id="56a72-284">This method takes filters into account.</span></span> <span data-ttu-id="56a72-285">In der Regel verwenden Sie diese Methode bei Benachrichtigungen mit Sammlungs Änderung, um zu bestimmen, ob das hinzugefügte oder entfernte Element verarbeitet werden muss.</span><span class="sxs-lookup"><span data-stu-id="56a72-285">Typically, you use this method during collection-changed notifications to determine whether the added or removed item requires processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void ProcessCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessCollectionChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessCollectionChanged (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ProcessCollectionChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="override this.ProcessCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listCollectionView.ProcessCollectionChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="56a72-286">Das zu verarbeitende <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-286">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</span></span></param>
        <summary><span data-ttu-id="56a72-287">Behandelt <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />-Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="56a72-287">Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> events.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56a72-288">Wenn <paramref name="args" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-288">If <paramref name="args" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshOverride">
      <MemberSignature Language="C#" Value="protected override void RefreshOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RefreshOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshOverride ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshOverride();" />
      <MemberSignature Language="F#" Value="override this.RefreshOverride : unit -&gt; unit" Usage="listCollectionView.RefreshOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56a72-289">Erstellt die Ansicht neu.</span><span class="sxs-lookup"><span data-stu-id="56a72-289">Recreates the view.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="listCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="56a72-290">Das zu entfernende Element.</span><span class="sxs-lookup"><span data-stu-id="56a72-290">The item to remove.</span></span></param>
        <summary><span data-ttu-id="56a72-291">Entfernt das angegebene Element aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="56a72-291">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-292">Wenn `item` nicht in der Auflistung ist, führt <xref:System.Windows.Data.ListCollectionView.Remove%2A> keine Aktion aus.</span><span class="sxs-lookup"><span data-stu-id="56a72-292">If `item` is not in the collection, <xref:System.Windows.Data.ListCollectionView.Remove%2A> does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="56a72-293">Der nullbasierte Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="56a72-293">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="56a72-294">Entfernt das Element an der angegebenen Position aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="56a72-294">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a72-295">`index` ist relativ zur Auflistungs Ansicht, nicht zur Auflistung.</span><span class="sxs-lookup"><span data-stu-id="56a72-295">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="56a72-296">Wenn die Auflistung z. b. 10 Elemente enthält und die Sicht eine <xref:System.ComponentModel.ICollectionView.Filter%2A> hat, sodass 7 Elemente angezeigt werden, sind die gültigen Werte `index` 0 bis 6.</span><span class="sxs-lookup"><span data-stu-id="56a72-296">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56a72-297"><paramref name="index" /> ist kleiner als 0 oder größer als die Anzahl von Elementen in der Auflistungsansicht.</span><span class="sxs-lookup"><span data-stu-id="56a72-297"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.SortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SortDescriptions As SortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::SortDescriptionCollection ^ SortDescriptions { System::ComponentModel::SortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.SortDescriptionCollection" Usage="System.Windows.Data.ListCollectionView.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.SortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-298">Ruft eine Auflistung der <see cref="T:System.ComponentModel.SortDescription" />-Objekte ab, die die Sortierung der Elemente in der Ansicht beschreibt.</span><span class="sxs-lookup"><span data-stu-id="56a72-298">Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</span></span></summary>
        <value><span data-ttu-id="56a72-299">Eine Auflistung der <see cref="T:System.ComponentModel.SortDescription" />-Objekte, die die Sortierung der Elemente in der Ansicht beschreibt.</span><span class="sxs-lookup"><span data-stu-id="56a72-299">A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="56a72-300">Diese Eigenschaft kann nur festgelegt werden, indem auf das Auflistungs Objekt zugegriffen wird und die verschiedenen Methoden wie `Add`verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="56a72-300">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="56a72-301">Die-Eigenschaft für den Zugriff auf das Auflistungs Objekt selbst ist schreibgeschützt. die Sammlung selbst ist Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="56a72-301">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (o1 As Object, o2 As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ o1, System::Object ^ o2) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="56a72-302">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-302">The first object to compare.</span></span></param>
        <param name="o2"><span data-ttu-id="56a72-303">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="56a72-303">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="56a72-304">Dieser Member unterstützt die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="56a72-304">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="56a72-305">Ein Wert kleiner als 0 (null) bedeutet, dass <paramref name="o1" /> kleiner als <paramref name="o2;" /> ist. Der Wert 0 (null) bedeutet, dass die beiden Werte gleich sind, wohingegen ein Wert über 0 (null) bedeutet, dass <paramref name="o1" /> größer als <paramref name="o2" /> ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-305">A value that is less than zero means <paramref name="o1" /> is less than <paramref name="o2;" /> a value of zero means the objects are equal; and a value that is over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesLocalArray">
      <MemberSignature Language="C#" Value="protected bool UsesLocalArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesLocalArray" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.UsesLocalArray" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UsesLocalArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool UsesLocalArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesLocalArray : bool" Usage="System.Windows.Data.ListCollectionView.UsesLocalArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56a72-306">Ruft einen Wert ab, der angibt, ob zum Sortieren und Filtern eine private Kopie der Daten erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-306">Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</span></span></summary>
        <value><span data-ttu-id="56a72-307"><see langword="true" />, zum Sortieren und Filtern eine private Kopie der Daten erforderlich ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56a72-307"><see langword="true" /> if a private copy of the data is needed for sorting and filtering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="56a72-308">Die Standardimplementierung gibt <see langword="true" /> zurück, wenn ein <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> oder <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" /> oder beides vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="56a72-308">The default implementation returns <see langword="true" /> if there is an <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> or <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, or both.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
