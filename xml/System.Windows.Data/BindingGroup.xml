<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26d67ada62687df5ed3ea106b8fcd618cc36fc45" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82489233" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält eine Auflistung von Bindungen und <see cref="T:System.Windows.Controls.ValidationRule" />-Objekten, die zum Überprüfen eines Objekts verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Data.BindingGroup> erstellt eine Beziehung zwischen mehreren Bindungen, die zusammen überprüft und aktualisiert werden kann. Angenommen, eine Anwendung fordert den Benutzer zur Eingabe einer Adresse auf. Die Anwendung füllt dann ein Objekt vom Typ `Address`mit den Eigenschaften, `Street`, `City`, `ZipCode`und `Country`mit den vom Benutzer bereitgestellten Werten. Die Anwendung verfügt über einen Bereich, der vier <xref:System.Windows.Controls.TextBox> Steuerelemente enthält, von denen jede Daten an eine der Eigenschaften des Objekts gebunden ist. Sie können eine <xref:System.Windows.Controls.ValidationRule> in einem <xref:System.Windows.Data.BindingGroup> verwenden, um das `Address` Objekt zu validieren. Wenn die Bindungen an derselben <xref:System.Windows.Data.BindingGroup>beteiligt sind, können Sie sicherstellen, dass der ZIP-Code für das Land bzw. die Region der Adresse gültig ist.  
  
 Sie legen die <xref:System.Windows.FrameworkElement.BindingGroup%2A>-Eigenschaft auf <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>fest. Untergeordnete Elemente erben die <xref:System.Windows.Data.BindingGroup> von ihren übergeordneten Elementen, ebenso wie jede andere vererbbare Eigenschaft. Eine Bindung für ein Nachfolger Element wird einem <xref:System.Windows.Data.BindingGroup> hinzugefügt, wenn eine der folgenden Situationen eintritt:  
  
-   Die Quelle der Bindung und die <xref:System.Windows.FrameworkElement.DataContext%2A> des Elements, das über die <xref:System.Windows.Data.BindingGroup> verfügt, sind das gleiche Objekt, und die <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>-Eigenschaft ist nicht festgelegt.  
  
-   Die <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>-Eigenschaft der Bindung entspricht der <xref:System.Windows.Data.BindingGroup.Name%2A> des <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> und ist nicht explizit auf `null`festgelegt.  
  
 Nehmen Sie im Beispiel der Adresse an, dass die <xref:System.Windows.FrameworkElement.DataContext%2A> des <xref:System.Windows.Controls.Panel> auf das-Objekt vom Typ `Address`festgelegt ist. Die Bindung für jede <xref:System.Windows.Controls.TextBox> wird der <xref:System.Windows.Data.BindingGroup> des Panels hinzugefügt.  
  
 Sie fügen einer <xref:System.Windows.Data.BindingGroup><xref:System.Windows.Controls.ValidationRule> Objekte hinzu. Der <xref:System.Windows.Data.BindingGroup> wird als erster Parameter der <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode übergeben, wenn die <xref:System.Windows.Controls.ValidationRule> ausgeführt wird. Sie können die <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>-oder <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>-Methode auf diesem <xref:System.Windows.Data.BindingGroup> verwenden, um die vorgeschlagenen Werte des-Objekts zu erhalten, und die <xref:System.Windows.Data.BindingGroup.Items%2A>-Eigenschaft, um die Quellen der Bindungen zu erhalten.  
  
 Ein <xref:System.Windows.Data.BindingGroup> aktualisiert die Quellen der Bindung gleichzeitig, anstatt jede Bindung separat zu aktualisieren. Wenn Sie eine der Methoden zum Validieren der Daten (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>oder <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>) aufzurufen, wird die Bindung für jede <xref:System.Windows.Controls.TextBox> im Beispiel überprüft und möglicherweise aktualisiert. Wenn eine Bindung Teil einer <xref:System.Windows.Data.BindingGroup>ist, wird die Quelle der Bindung erst aktualisiert, wenn Sie <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> oder <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> auf dem <xref:System.Windows.Data.BindingGroup>aufgerufen haben, es sei denn, Sie legen explizit die <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>-Eigenschaft fest.  
  
   
  
## Examples  
 In den folgenden Beispielen wird eine Anwendung erstellt, die den Benutzer auffordert, die Beschreibung und den Preis eines Elements einzugeben, und das Datum, an dem das Angebot abläuft. Die Anwendung zeigt die aktuellen Informationen für das Element unterhalb des Formulars an. Der Benutzer kann die Änderungen übermitteln oder Abbrechen.  
  
 Die Anwendung führt Folgendes aus, um dieses Verhalten zu erzielen.  
  
-   Erstellt eine <xref:System.Windows.Data.BindingGroup> und fügt diese dem Stamm <xref:System.Windows.Controls.StackPanel> hinzu, wenn die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] der Anwendung erstellt wird.  
  
-   Ruft <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>und <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in der Logik der Anwendung auf, um das Rollback von Änderungen zu ermöglichen.  
  
-   Ruft <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in einer <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode auf, um die Eingabe des Benutzers zu erhalten, und überprüft dann, ob ein Element über 100 Dollar für mindestens sieben Tage verfügbar ist.  
  
 Im folgenden Beispiel wird der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] der Anwendung erstellt. Der Stamm <xref:System.Windows.Controls.StackPanel> verfügt über eine <xref:System.Windows.Data.BindingGroup>, die einen <xref:System.Windows.Controls.ValidationRule> enthält, der das Element überprüft, wie zuvor beschrieben. Die Bindungs Objekte für die `Price`-Eigenschaft und die `OfferExpires`-Eigenschaft werden Teil des <xref:System.Windows.Data.BindingGroup>, und jede Bindung verfügt über eine <xref:System.Windows.Controls.ValidationRule>, um sicherzustellen, dass Price und Date gültige Werte sind. Die Validierungsregeln für die einzelnen Eigenschaften werden vor dem <xref:System.Windows.Controls.ValidationRule> auf dem <xref:System.Windows.Data.BindingGroup>ausgeführt.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 Das folgende Beispiel zeigt die Ereignishandler für die Anwendung. Wenn der Benutzer auf die Schaltfläche Senden klickt, ruft die Anwendung <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> auf, um alle <xref:System.Windows.Controls.ValidationRule> auszuführen, die dem <xref:System.Windows.Data.BindingGroup>zugeordnet sind. Wenn jede <xref:System.Windows.Controls.ValidationRule> erfolgreich ist, speichert <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> die Werte in dem-Objekt und beendet die Bearbeitungs Transaktion. Wenn <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> erfolgreich ist, beginnt die Anwendung mit einer weiteren Bearbeitungs Transaktion. Wenn ein <xref:System.Windows.Controls.ValidationRule> fehlschlägt, tritt das <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> Ereignis auf, weil die Anwendung <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> auf `true` auf dem <xref:System.Windows.Data.BindingGroup> (im vorherigen Beispiel) festgelegt hat. `ItemError` behandelt das <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>-Ereignis und zeigt dem Benutzerinformationen zum Validierungs Fehler an. Im Beispiel wird auch das <xref:System.Windows.FrameworkElement.Loaded>-Ereignis für die <xref:System.Windows.Controls.StackPanel> und das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis für die Schaltfläche **Abbrechen** behandelt.  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 Das folgende Beispiel zeigt die benutzerdefinierte <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, die dem <xref:System.Windows.Data.BindingGroup> im ersten Beispiel hinzugefügt wurde. Der <xref:System.Windows.Controls.ValidationRule> verwendet die <xref:System.Windows.Data.BindingGroup> in seiner <xref:System.Windows.Controls.ValidationRule.Validate%2A>-Methode, um die Werte zu erhalten, die der Benutzer in das Formular eingegeben hat, und überprüft, ob ein Element, das mehr als 100 Dollar beträgt, mindestens sieben Tage lang verfügbar ist.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Data.BindingGroup" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet eine Bearbeitungstransaktion für die Quellen in der <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Quellen in der <xref:System.Windows.Data.BindingGroup> das Verwerfen von ausstehenden Änderungen unterstützen, können Sie <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> abrufen, um die Transaktion zum Bearbeiten zu starten. Sie können <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> abrufen, um die ausstehenden Änderungen zu speichern, indem Sie <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> zum Verwerfen der ausstehenden Änderungen aufruft.  
  
 Für jedes Objekt in <xref:System.Windows.Data.BindingGroup.Items%2A>, das <xref:System.ComponentModel.IEditableObject>implementiert, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> aufruft <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> aufgerufen, wenn ein Fenster geladen wird, um die Transaktion zum Bearbeiten zu starten.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Windows.Data.BindingExpression" />-Objekten mit Informationen für jede Bindung in der <see cref="T:System.Windows.Data.BindingGroup" /> ab.</summary>
        <value>Eine Auflistung von <see cref="T:System.Windows.Data.BindingExpression" />-Objekten mit Informationen für jede Bindung in der <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Data.BindingExpression> gehört zu einem <xref:System.Windows.Data.BindingGroup>, wenn einer der folgenden Fälle auftritt:  
  
-   Die Quelle der Bindung und die <xref:System.Windows.FrameworkElement.DataContext%2A> des Elements, das über die <xref:System.Windows.Data.BindingGroup> verfügt, sind das gleiche Objekt, und die <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> ist nicht festgelegt.  
  
-   Die <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>-Eigenschaft der-Bindung und die <xref:System.Windows.Data.BindingGroup.Name%2A> der <xref:System.Windows.Data.BindingGroup> werden auf denselben Wert festgelegt, der ungleich NULL ist, und der <xref:System.Windows.Data.BindingGroup> zu einem übergeordneten Element des Target-Elements der Bindung gehört.  
  
-   <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>können Sie eine <xref:System.Windows.Data.BindingExpression> hinzufügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die Bearbeitungstransaktion und verwirft die ausstehenden Änderungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bewirkt, dass die Quellen die ausstehenden Änderungen verwerfen, wenn ein Quell Objekt dies tun kann, und die Bearbeitungs Transaktion beenden. Dann aktualisiert die-Methode die Zieleigenschaften mit den gespeicherten Quell Werten.  
  
 Für jedes Objekt in <xref:System.Windows.Data.BindingGroup.Items%2A>, das <xref:System.ComponentModel.IEditableObject>implementiert, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> aufruft <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> aufgerufen, um die ausstehenden Änderungen zu verwerfen. Anschließend wird <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> aufgerufen, um die Quelle für die erneute Bearbeitung vorzubereiten.  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob jede Quelle in der Bindung ausstehende Änderungen verwerfen und die ursprünglichen Werte wiederherstellen kann.</summary>
        <value><see langword="true" />, wenn jede Quelle in der Bindung ausstehende Änderungen verwerfen und die ursprünglichen Werte wiederherstellen kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Quelle kann ausstehende Änderungen verwerfen, wenn Sie <xref:System.ComponentModel.IEditableObject>implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt alle <see cref="T:System.Windows.Controls.ValidationRule" />-Objekte aus und aktualisiert die Bindungsquellen, wenn alle Validierungsregeln erfolgreich ausgeführt wurden.</summary>
        <returns><see langword="true" />, wenn jede <see cref="T:System.Windows.Controls.ValidationRule" /> erfolgreich ausgeführt wurde und für die Werte ein Commit an die Quellen ausgeführt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn jede <xref:System.Windows.Controls.ValidationRule> erfolgreich ist, bewirkt diese Methode, dass die Quellen die ausstehenden Änderungen committet und die Bearbeitungs Transaktion beendet, wenn ein Quell Objekt dies tun kann.  
  
 Für jedes Objekt in <xref:System.Windows.Data.BindingGroup.Items%2A>, das <xref:System.ComponentModel.IEditableObject>implementiert, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> aufruft <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> aufgerufen, um die ausstehenden Änderungen zu speichern. Anschließend werden <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> aufgerufen, um die Quelle für die erneute Bearbeitung vorzubereiten.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">Das Objekt, das die angegebene Eigenschaft enthält.</param>
        <param name="propertyName">Die Eigenschaft, deren vorgeschlagener Wert abgerufen werden soll.</param>
        <summary>Gibt den vorgeschlagenen Wert für die angegebene Eigenschaft und das Element zurück.</summary>
        <returns>Der vorgeschlagene Eigenschaftswert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode in der <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>-Methode, um den Wert zu erhalten, der an die Quelle übertragen werden soll. Der Typ des Rückgabewerts hängt von der Stufe ab, in der die <xref:System.Windows.Controls.ValidationRule> auftritt. Wenn z. b. ein <xref:System.Windows.Controls.TextBox> Daten an eine Eigenschaft vom Typ Integer gebunden ist und die <xref:System.Windows.Controls.ValidationRule>, die <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> aufruft, auf <xref:System.Windows.Controls.ValidationStep.RawProposedValue>festgelegt ist, gibt die Methode eine Zeichenfolge zurück. Wenn die <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> der <xref:System.Windows.Controls.ValidationRule> auf <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>festgelegt ist, gibt die Methode den Typ zurück, der vom Konverter der Bindung zurückgegeben wird. In diesem Beispiel gibt <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> in der Regel eine ganze Zahl zurück.  
  
   
  
## Examples  
 Das folgende Beispiel ist Teil einer Anwendung, die den Benutzer zur Eingabe mehrerer Kunden auffordert und jedem Kunden einen Vertriebsmitarbeiter zuweist. Die Anwendung überprüft, ob der Vertriebsmitarbeiter und der Kunde der gleichen Region angehören. Das Beispiel zeigt die <xref:System.Windows.Controls.ValidationRule.Validate%2A>-Methode, die die <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>-Methode verwendet, um vom Kunden eingegebene Werte zu erhalten.  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es besteht keine Bindung für das angegebene Element und die Eigenschaft.</exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">Der Wert der angegebenen Eigenschaft ist aufgrund eines Konvertierungsfehlers oder einer zuvor fehlgeschlagenen Validierungsregel nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob bei der Validierungsregel für die <see cref="T:System.Windows.Data.BindingGroup" /> ein Fehler aufgetreten ist.</summary>
        <value><see langword="true" />, wenn <see cref="T:System.Windows.Data.BindingGroup" /> einen Fehler bei einer Validierungsregel aufweist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob <see cref="T:System.Windows.Data.BindingGroup" /> einen vorgeschlagenen Wert enthält, der nicht in der Quelle geschrieben wurde.</summary>
        <value><see langword="true" />, wenn die <see cref="T:System.Windows.Data.BindingGroup" /> einen vorgeschlagenen Wert enthält, der nicht in der Quelle geschrieben wurde; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von den Bindungsobjekten in der <see cref="T:System.Windows.Data.BindingGroup" /> verwendeten Quellen ab.</summary>
        <value>Die von den Bindungsobjekten in der <see cref="T:System.Windows.Data.BindingGroup" /> verwendeten Quellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Objekt, das als Quelle verwendet wird, wird einmal der <xref:System.Windows.Data.BindingGroup.Items%2A>-Eigenschaft hinzugefügt, auch wenn das Objekt als Quelle für mehrere Bindungen verwendet wird. Häufig gibt es nur ein Element in <xref:System.Windows.Data.BindingGroup.Items%2A>. dabei handelt es sich um das Objekt, das die <xref:System.Windows.FrameworkElement.DataContext%2A> des Elements ist, das die <xref:System.Windows.Data.BindingGroup>verwendet. Es ist jedoch möglich, dass ein <xref:System.Windows.Data.BindingGroup> über mehrere Quellen verfügt. Wenn z. b. Bindungs Objekte denselben <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> haben, aber unterschiedliche Quell Objekte verwenden, befindet sich jedes als Quelle verwendete Objekt in <xref:System.Windows.Data.BindingGroup.Items%2A>.  
  
 Es können auch mehrere Objekte in <xref:System.Windows.Data.BindingGroup.Items%2A> vorhanden sein, wenn der Pfad einer Bindung in eine Eigenschaft der Quelle aufgelöst wird. Angenommen, die Bindung eines <xref:System.Windows.Controls.TextBox>-Steuer Elements ist Teil einer <xref:System.Windows.Data.BindingGroup>, und sein <xref:System.Windows.FrameworkElement.DataContext%2A> ist ein `Customer` Objekt, das eine-Eigenschaft vom Typ `Address`aufweist. Wenn die <xref:System.Windows.Data.Binding.Path%2A> der <xref:System.Windows.Data.Binding> die `Address.ZipCode` Eigenschaft ist, wird der `Address` der <xref:System.Windows.Data.BindingGroup.Items%2A>-Eigenschaft hinzugefügt.  
  
   
  
## Examples  
 Die folgenden Beispiele sind Teil einer Anwendung, die überprüft, ob der Benutzer die Eigenschaften von zwei-Objekten auf die gleichen Werte festgelegt hat. Im ersten Beispiel werden zwei <xref:System.Windows.Controls.TextBox>-Steuerelemente erstellt, von denen jede Daten an eine andere Quelle gebunden ist. Die Bindung des ersten <xref:System.Windows.Controls.TextBox> ruft seine Quelle, `object1`, vom <xref:System.Windows.FrameworkElement.DataContext%2A> des übergeordneten Elements des <xref:System.Windows.Controls.TextBox> Steuer Elements (der <xref:System.Windows.Controls.StackPanel>) ab. Auf dem zweiten <xref:System.Windows.Controls.TextBox>wird die Quelle der Bindung auf `object2`festgelegt. Im Beispiel wird außerdem ein <xref:System.Windows.Controls.Label> erstellt, in dem Validierungs Fehler angezeigt werden.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 Das folgende Beispiel zeigt die <xref:System.Windows.Controls.ValidationRule>, die im vorherigen Beispiel verwendet werden. In der <xref:System.Windows.Controls.ValidationRule.Validate%2A>-Methode ruft das Beispiel jedes Quell Objekt vom <xref:System.Windows.Data.BindingGroup> ab und überprüft, ob die Eigenschaften der Objekte gleich sind.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen ab, der die <see cref="T:System.Windows.Data.BindingGroup" /> bezeichnet, die zum Einbeziehen und Ausschließen von Bindungsobjekten in der <see cref="T:System.Windows.Data.BindingGroup" /> verwendet werden kann.</summary>
        <value>Der Name, der die <see cref="T:System.Windows.Data.BindingGroup" /> bezeichnet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Data.BindingGroup.Name%2A> `null`ist, sind Bindungen mit einer Quelle, die das gleiche Objekt wie der <xref:System.Windows.FrameworkElement.DataContext%2A> des Elements ist, das die <xref:System.Windows.Data.BindingGroup> hat, am <xref:System.Windows.Data.BindingGroup>beteiligt.  
  
 Sie können Bindungen einschließen, die eine Quelle aufweisen, die sich vom <xref:System.Windows.FrameworkElement.DataContext%2A> des übergeordneten Elements unterscheidet, das die <xref:System.Windows.Data.BindingGroup> hat, indem Sie <xref:System.Windows.Data.BindingGroup.Name%2A> der <xref:System.Windows.Data.BindingGroup> und die <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>-Eigenschaft einer Bindung auf denselben Wert festlegen. Sie können Bindungen ausschließen, die dieselbe Quelle wie <xref:System.Windows.FrameworkElement.DataContext%2A> des übergeordneten Elements aufweisen, das über die <xref:System.Windows.Data.BindingGroup> verfügt, indem Sie <xref:System.Windows.Data.BindingGroup.Name%2A> der <xref:System.Windows.Data.BindingGroup> und die <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>-Eigenschaft einer Bindung auf andere Werte festlegen.  
  
   
  
## Examples  
 Die folgenden Beispiele sind Teil einer Anwendung, die überprüft, ob der Benutzer die Eigenschaften von zwei-Objekten auf die gleichen Werte festgelegt hat. Im ersten Beispiel werden zwei <xref:System.Windows.Controls.TextBox>-Steuerelemente erstellt, von denen jede Daten an eine andere Quelle gebunden ist. Die Bindung des ersten <xref:System.Windows.Controls.TextBox> ist Teil des <xref:System.Windows.Data.BindingGroup>, da die <xref:System.Windows.Controls.TextBox> die <xref:System.Windows.FrameworkElement.DataContext%2A> erbt und <xref:System.Windows.Data.BindingGroup> von ihrem übergeordneten <xref:System.Windows.Controls.StackPanel>erbt.  
  
 Die Bindung auf dem zweiten <xref:System.Windows.Controls.TextBox> ist Teil des <xref:System.Windows.Data.BindingGroup>, da die <xref:System.Windows.Data.BindingGroup.Name%2A> der <xref:System.Windows.Data.BindingGroup> und <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> der <xref:System.Windows.Data.Binding> beide auf `bindingGroup`festgelegt sind.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 Das folgende Beispiel zeigt die <xref:System.Windows.Controls.ValidationRule>, die im vorherigen Beispiel verwendet werden. In der <xref:System.Windows.Controls.ValidationRule.Validate%2A>-Methode ruft das Beispiel jedes Quell Objekt vom <xref:System.Windows.Data.BindingGroup> ab und überprüft, ob die Eigenschaften der Objekte gleich sind.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob bei Änderungen am Zustand einer <see cref="E:System.Windows.Controls.Validation.Error" /> das <see cref="T:System.Windows.Controls.ValidationRule" />-Ereignis eintritt.</summary>
        <value><see langword="true" />, wenn bei Änderungen am Zustand einer <see cref="E:System.Windows.Controls.Validation.Error" /> das <see cref="T:System.Windows.Controls.ValidationRule" />-Ereignis eintritt, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> angefügte Ereignis tritt auf dem Element auf, das den <xref:System.Windows.Data.BindingGroup>hat.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Windows.Data.BindingGroup> erstellt und <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> auf `true` festgelegt, damit die Anwendung das <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> Ereignis verarbeiten kann, wenn ein <xref:System.Windows.Controls.ValidationRule> fehlschlägt.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 Im folgenden Beispiel wird das <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>-Ereignis behandelt.  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, dem dieses <see cref="T:System.Windows.Data.BindingGroup" /> zugewiesen ist.</summary>
        <value>Das Objekt, dem dieses <see cref="T:System.Windows.Data.BindingGroup" /> zugewiesen ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Data.BindingGroup" />-Klasse Zielwerte wiederverwendet, die nicht an die Quelle übertragen wurden, oder legt einen Wert fest.</summary>
        <value><see langword="true" />, wenn die <see cref="T:System.Windows.Data.BindingGroup" />-Klasse Zielwerte wiederverwendet, die nicht an die Quelle übertragen wurden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein vorgeschlagene Wert ist ein Wert, der für das Ziel einer Bindung geändert, aber nicht an die Quelle übertragen wurde. Nehmen wir beispielsweise an, dass eine bidirektionale Bindung für eine <xref:System.Windows.Controls.TextBox> und die <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>-Eigenschaft auf <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>festgelegt ist. Wenn der Benutzer den Wert des <xref:System.Windows.Controls.TextBox>ändert, ist der vorgeschlagene Wert der Wert, der sich in der <xref:System.Windows.Controls.TextBox> befindet, bevor er an die Quelle übertragen wird.  
  
 Wenn <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> `true`ist, verwendet der <xref:System.Windows.Data.BindingGroup> den vorgeschlagenen Wert, wenn eine Bindung die BindingGroup verlässt und eine weitere Bindung mit derselben Quelle der BindingGroup Beitritt.  Nehmen wir beispielsweise an, dass eine Anwendung einem Benutzer ermöglicht, mehrere Felder zu bearbeiten und das Quell Objekt zu aktualisieren, indem Sie auf eine Schaltfläche klicken. Wenn ein Feld nicht bearbeitet wird, wird es von der Anwendung in einem <xref:System.Windows.Controls.TextBlock>angezeigt. Wenn der Benutzer mit der Bearbeitung eines Felds beginnt, ersetzt die Anwendung die <xref:System.Windows.Controls.TextBlock> durch eine <xref:System.Windows.Controls.TextBox>. Wenn der Benutzer die Bearbeitung des Felds abgeschlossen hat, ersetzt die Anwendung die <xref:System.Windows.Controls.TextBox> durch eine <xref:System.Windows.Controls.TextBlock>. Da die Quelle erst aktualisiert wird, wenn der Benutzer auf die Schaltfläche klickt, muss die <xref:System.Windows.Controls.TextBlock> über eine Möglichkeit verfügen, den vorgeschlagenen Wert anzuzeigen. Wenn Sie <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> auf `true`festlegen, zeigt die Anwendung die Änderungen des Benutzers an einem Feld an, auch wenn die Quelle nicht aktualisiert wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string * obj -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">Das Objekt, das die angegebene Eigenschaft enthält.</param>
        <param name="propertyName">Die Eigenschaft, deren vorgeschlagener Wert abgerufen werden soll.</param>
        <param name="value">Enthält nach dem Beenden dieser Methode ein Objekt, das den vorgeschlagenen Eigenschaftswert darstellt. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Versucht, den vorgeschlagenen Wert für die angegebene Eigenschaft und das Element abzurufen.</summary>
        <returns><see langword="true" />, wenn der Wert der vorgeschlagene Wert für die angegebene Eigenschaft ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> gibt `false` zurück, wenn keine Bindung für das angegebene Element und die angegebene Eigenschaft vorhanden ist oder wenn der Wert der angegebenen Eigenschaft aufgrund eines Konvertierungs Fehlers oder aufgrund eines Fehlers bei einer früheren Validierungs Regel nicht verfügbar ist.  
  
 Verwenden Sie diese Methode in der <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>-Methode, um den Wert zu erhalten, der an die Quelle übertragen werden soll. Der Typ `value` hängt von der Phase ab, in der die <xref:System.Windows.Controls.ValidationRule> auftritt. Wenn eine <xref:System.Windows.Controls.TextBox> z. b. Daten an eine Eigenschaft vom Typ Integer gebunden ist, ist `value` eine Zeichenfolge, wenn die <xref:System.Windows.Controls.ValidationRule>, die <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> aufruft, auf <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> festgelegt ist.<xref:System.Windows.Controls.ValidationStep.RawProposedValue> Wenn die <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> der <xref:System.Windows.Controls.ValidationRule> auf <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>festgelegt ist, ist der Typ der `value` der Typ, der vom Konverter der Bindung zurückgegeben wird. In diesem Beispiel ist `value` in der Regel eine ganze Zahl.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein benutzerdefiniertes <xref:System.Windows.Controls.ValidationRule> namens `ValidateDateAndPrice`erstellt. In der <xref:System.Windows.Controls.ValidationRule.Validate%2A>-Methode werden im Beispiel die <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>-Methode und die <xref:System.Windows.Data.BindingGroup.Items%2A>-Eigenschaft verwendet, um die Werte zu erhalten, die der Benutzer in das Formular eingegeben hat. Im Beispiel wird überprüft, ob ein Element, das mehr als 100 Dollar beträgt, mindestens sieben Tage lang verfügbar ist. Dieses Beispiel ist Teil eines größeren Beispiels für die <xref:System.Windows.Data.BindingGroup>-Klasse.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt den Konverter für die Bindung und die <see cref="T:System.Windows.Controls.ValidationRule" />-Objekte aus, deren <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />-Eigenschaft auf <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> oder <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> festgelegt ist, und speichert die Werte der Ziele in den Quellobjekten, sofern alle Validierungsregeln erfolgreich ausgeführt wurden.</summary>
        <returns><see langword="true" />, wenn alle Validierungsregeln erfolgreich ausgeführt wurden, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode aktualisiert die Quelle, wenn jede <xref:System.Windows.Controls.ValidationRule> erfolgreich ist, führt jedoch nicht dazu, dass die Quellen einen Commit für die ausstehenden Änderungen durchführen und die Edit Transaction beenden. Das heißt, wenn das Quell Objekt <xref:System.ComponentModel.IEditableObject>implementiert. Das Aufrufen dieser Methode führt nicht dazu, dass <xref:System.ComponentModel.IEditableObject.EndEdit%2A> aufgerufen wird. Verwenden Sie die <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>-Methode, damit die Quellen einen Commit für die ausstehenden Änderungen durchführen.  
  
   
  
## Examples  
 Das folgende Beispiel ist Teil einer Anwendung, die den Benutzer zur Eingabe mehrerer Kunden auffordert und jedem Kunden einen Vertriebsmitarbeiter zuweist. Die Anwendung überprüft, ob der Vertriebsmitarbeiter und der Kunde der gleichen Region angehören. Im Beispiel wird <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> aufgerufen, um die Bindungen zu überprüfen und die Werte in der Quelle zu speichern, wenn alle Validierungsregeln erfolgreich ausgeführt wurden.  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> eingeschlossen werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> eingeschlossen werden soll, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> `true`ist, sucht die Bindung nach Fehlern, die von einer Datenquelle ausgelöst werden, die <xref:System.ComponentModel.INotifyDataErrorInfo>implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt den Konverter für die Bindung und die <see cref="T:System.Windows.Controls.ValidationRule" />-Objekte aus, deren <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />-Eigenschaft auf <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> oder <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> festgelegt ist.</summary>
        <returns><see langword="true" />, wenn die Validierungsregeln erfolgreich ausgeführt wurden, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Quellen werden nicht aktualisiert, wenn Sie diese Methode aufzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Sammlung der <see cref="T:System.Windows.Controls.ValidationError" />-Objekte ab, die dazu führten, dass <see cref="T:System.Windows.Data.BindingGroup" /> ungültig war.</summary>
        <value>Eine Sammlung der <see cref="T:System.Windows.Controls.ValidationError" />-Objekte, die <see cref="T:System.Windows.Data.BindingGroup" /> veranlassten, ungültig zu sein.  Der Wert ist <see langword="null" />, wenn keine Fehler auftreten.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Windows.Controls.ValidationRule" />-Objekten ab, die die Quellobjekte in der <see cref="T:System.Windows.Data.BindingGroup" /> überprüfen.</summary>
        <value>Eine Auflistung von <see cref="T:System.Windows.Controls.ValidationRule" />-Objekten, die die Quellobjekte in der <see cref="T:System.Windows.Data.BindingGroup" /> überprüfen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn einem <xref:System.Windows.Data.BindingGroup>ein <xref:System.Windows.Controls.ValidationRule> hinzugefügt wird, wird der <xref:System.Windows.Data.BindingGroup> als erster Parameter der <xref:System.Windows.Controls.ValidationRule.Validate%2A>-Methode übergeben. Sie können die vorgeschlagenen Werte des-Objekts mithilfe der <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> oder <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>-Methode erhalten. Sie können die Objekte, die die Quellen der Bindungen sind, aus der <xref:System.Windows.Data.BindingGroup.Items%2A>-Eigenschaft erhalten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die benutzerdefinierte <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`dem <xref:System.Windows.Data.BindingGroup>hinzugefügt.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 Im folgenden Beispiel wird die `ValidateDateAndPrice`-Klasse gezeigt. Die <xref:System.Windows.Controls.ValidationRule.Validate%2A>-Methode verwendet die <xref:System.Windows.Data.BindingGroup>, um die Werte zu erhalten, die der Benutzer in das Formular eingegeben hat, und überprüft, ob ein Element, das mehr als 100 Dollar beträgt, mindestens sieben Tage lang verfügbar ist.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
