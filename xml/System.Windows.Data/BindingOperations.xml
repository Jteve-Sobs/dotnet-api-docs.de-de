<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9c352-101">Stellt statische Methoden zum Bearbeiten von Bindungen bereit, u. a. die Objekte <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> und <see cref="T:System.Windows.Data.PriorityBinding" />.</span><span class="sxs-lookup"><span data-stu-id="9c352-101">Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-102">Diese Klasse stellt einen Satz von statischen Methoden, die als Helper-Vorgänge für datenbindungen zu fungieren.</span><span class="sxs-lookup"><span data-stu-id="9c352-102">This class exposes a set of static methods that serve as helper operations for data bindings.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="accessMethod" Type="System.Action" />
        <Parameter Name="writeAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="9c352-103">Die Auflistung, auf die zugegriffen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-103">The collection to access.</span></span></param>
        <param name="accessMethod"><span data-ttu-id="9c352-104">Die Aktion, die für die Auflistung ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-104">The action to perform on the collection.</span></span></param>
        <param name="writeAccess">
          <span data-ttu-id="9c352-105"><see langword="true" />, wenn <c>accessMethod</c> in die Auflistung schreiben wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c352-105"><see langword="true" /> if <c>accessMethod</c> will write to the collection; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9c352-106">Bietet Zugriff auf eine Auflistung mithilfe des Synchronisierungsmechanismus, den die angegebene Anwendung angegeben hat, als sie EnableCollectionSynchronization aufgerufen hat.</span><span class="sxs-lookup"><span data-stu-id="9c352-106">Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-107">Das Objekt, aus dem Bindungen entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="9c352-107">The object from which to remove bindings.</span></span></param>
        <summary><span data-ttu-id="9c352-108">Entfernt alle Bindungen, einschließlich Bindungen des Typs <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> und <see cref="T:System.Windows.Data.PriorityBinding" />, aus dem angegebenen <see cref="T:System.Windows.DependencyObject" />.</span><span class="sxs-lookup"><span data-stu-id="9c352-108">Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-109">Wenn das angegebene Objekt nicht datengebunden ist, hat diese Methode keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="9c352-109">If the specified object is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-110">Wenn <paramref name="target" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-110">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-111">Das Objekt, aus dem die Bindung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-111">The object from which to remove the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-112">Die Abhängigkeitseigenschaft, aus der die Bindung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-112">The dependency property from which to remove the binding.</span></span></param>
        <summary><span data-ttu-id="9c352-113">Entfernt die Bindung aus einer Eigenschaft an, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="9c352-113">Removes the binding from a property if there is one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-114">Wenn die angegebene Eigenschaft mit datengebundenen ist ein <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, oder <xref:System.Windows.Data.MultiBinding>, diese Methode entfernt die entsprechenden Bindungsausdruck und Wiederherstellungen, die der Wert der Eigenschaft, die vor dem lokalen ausnahmslos über die Bindung festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="9c352-114">If the given property is data-bound with a <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, or <xref:System.Windows.Data.MultiBinding>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</span></span>  
  
 <span data-ttu-id="9c352-115">Wenn die angegebene Eigenschaft nicht Daten gebunden ist, hat diese Methode keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="9c352-115">If the given property is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-116">Die Parameter <paramref name="target" /> und <paramref name="dp" /> dürfen nicht gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-116">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c352-117">Tritt ein, wenn das Datenbindungssystem eine Auflistung feststellt.</span><span class="sxs-lookup"><span data-stu-id="9c352-117">Occurs when the data-binding system notices a collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c352-118">Tritt ein, wenn das Datenbindungssystem eine Auflistungsansicht feststellt.</span><span class="sxs-lookup"><span data-stu-id="9c352-118">Occurs when the data-binding system notices a collection view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="9c352-119">Die Auflistung, für die synchronisierter Zugriff entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="9c352-119">The collection to remove synchronized access from.</span></span></param>
        <summary><span data-ttu-id="9c352-120">Entfernen der Synchronisierung, die für die angegebene Auflistung registriert ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-120">Remove the synchronization registered for the specified collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c352-121">Ruft ein Objekt ab, das <see cref="P:System.Windows.FrameworkElement.DataContext" /> ersetzt, wenn ein Elementcontainer in der visuellen Struktur entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-121">Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></summary>
        <value><span data-ttu-id="9c352-122">Ein Objekt, das <see cref="P:System.Windows.FrameworkElement.DataContext" /> ersetzt, wenn ein Elementcontainer in der visuellen Struktur entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-122">An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-123">Verwenden Sie diese Eigenschaft aus, wenn Sie für den Umgang mit müssen die <xref:System.Windows.FrameworkElement.DataContext%2A> des ein Elementcontainer.</span><span class="sxs-lookup"><span data-stu-id="9c352-123">Use this property if you need to deal with the <xref:System.Windows.FrameworkElement.DataContext%2A> of an item container.</span></span>  <span data-ttu-id="9c352-124">Ein Elementcontainer ist das Benutzeroberflächenelement, das ein Element in einem <xref:System.Windows.Controls.ItemsControl> anzeigt.</span><span class="sxs-lookup"><span data-stu-id="9c352-124">An item container is the UI element that displays an item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="9c352-125">Wenn ein <xref:System.Windows.Controls.ItemsControl> an eine Auflistung datengebunden ist, wird ein Elementcontainer für jedes Element generiert.</span><span class="sxs-lookup"><span data-stu-id="9c352-125">When an <xref:System.Windows.Controls.ItemsControl> is data bound to a collection, an item container is generated for each item.</span></span>  <span data-ttu-id="9c352-126">In einigen Fällen werden Elementcontainer aus der visuellen Struktur entfernt.</span><span class="sxs-lookup"><span data-stu-id="9c352-126">In some cases, item containers are removed from the visual tree.</span></span>  <span data-ttu-id="9c352-127">Zwei typische Situationen, in denen ein Elementcontainer entfernt wird, sind folgende: Wenn ein Element aus der zugrunde liegenden Auflistung entfernt wird, und wenn Virtualisierung auf <xref:System.Windows.Controls.ItemsControl> aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-127">Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="9c352-128">In diesen Fällen die <xref:System.Windows.FrameworkElement.DataContext%2A> Eigenschaft des Elementcontainers wird festgelegt die <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> Eigenschaft sollten Sie überprüfen, ob die <xref:System.Windows.FrameworkElement.DataContext%2A> ist gleich der <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> vor dem Zugriff auf die <xref:System.Windows.FrameworkElement.DataContext%2A> in die <xref:System.Windows.FrameworkElement.DataContextChanged> Ereignisses für die Container.</span><span class="sxs-lookup"><span data-stu-id="9c352-128">In these cases, the <xref:System.Windows.FrameworkElement.DataContext%2A> property of the item container will be set to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> property  You should check whether the <xref:System.Windows.FrameworkElement.DataContext%2A> is equal to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> before accessing the <xref:System.Windows.FrameworkElement.DataContext%2A> in the <xref:System.Windows.FrameworkElement.DataContextChanged> event for item containers.</span></span> <span data-ttu-id="9c352-129">Weitere Informationen zu Elementcontainer und Virtualisierung, finden Sie unter den Hinweisen in der <xref:System.Windows.Controls.VirtualizingStackPanel> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9c352-129">For more information about item containers and virtualization, see the remarks in the <xref:System.Windows.Controls.VirtualizingStackPanel> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c352-130">Ermöglicht es einem <see cref="T:System.Windows.Data.CollectionView" />-Objekt, an einem synchronisierten Zugriff auf eine Auflistung teilzunehmen, die in mehreren Threads verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-130">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection that is used on multiple threads.</span></span> </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9c352-131">Eine WPF-Anwendung kann eine Auflistung von Daten mit Anzeigen einer <xref:System.Windows.Controls.ItemsControl> oder eine ihrer Unterklassen (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>usw.).</span><span class="sxs-lookup"><span data-stu-id="9c352-131">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="9c352-132">WPF Kanäle, die Zugriff auf die Auflistung über eine Unterklasse von <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="9c352-132">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="9c352-133">Sowohl die <xref:System.Windows.Controls.ItemsControl> und <xref:System.Windows.Data.CollectionView> haben eine Affinität an den Thread auf dem die <xref:System.Windows.Controls.ItemsControl> erstellt wurde, d. h., dass sie in einem anderen Thread nicht zulässig ist und löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="9c352-133">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="9c352-134">Aktiviert ist, gilt diese Einschränkung als auch die Auflistung ein.</span><span class="sxs-lookup"><span data-stu-id="9c352-134">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="9c352-135">Möglicherweise möchten die Auflistung in mehreren Threads verwenden.</span><span class="sxs-lookup"><span data-stu-id="9c352-135">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="9c352-136">Angenommen, Sie die Sammlung zu aktualisieren möchten (hinzufügen oder Entfernen von Elementen) in einem Thread "Datensammlung" beim Anzeigen der Ergebnisse in einem Thread "Benutzeroberfläche", damit die Benutzeroberfläche auch dann noch reagiert beim Sammeln von Daten geschieht.</span><span class="sxs-lookup"><span data-stu-id="9c352-136">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="9c352-137">In einem solchen Fall können Sie dafür verantwortlich sind synchronisierte ("Thread-sichere") Zugriff auf die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="9c352-137">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</span></span>   <span data-ttu-id="9c352-138">Dies erfolgt in der Regel mit einer einfachen Sperrmechanismus oder einen komplexeren Synchronisierungsmechanismus wie Semaphoren, zurücksetzen, Ereignisse usw.</span><span class="sxs-lookup"><span data-stu-id="9c352-138">This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</span></span> 
 
<span data-ttu-id="9c352-139">Während die Anwendung Zugriff auf die Auflistung synchronisiert werden müssen, Sie müssen außerdem sicherstellen, dass der Zugriff von WPF (insbesondere von <xref:System.Windows.Data.CollectionView>) in der gleichen Synchronisierungsmechanismus beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-139">While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span>  <span data-ttu-id="9c352-140">Hierfür rufen Sie die <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="9c352-140">You do this by calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> method.</span></span>
 
<span data-ttu-id="9c352-141">Um eine Auflistung von mehreren Threads verwenden, von denen im UI-Thread, der Besitzer ist, ist die <xref:System.Windows.Controls.ItemsControl>, eine Anwendung hat die folgenden Verantwortungen:</span><span class="sxs-lookup"><span data-stu-id="9c352-141">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, an application has the following responsibilities:</span></span>

1. <span data-ttu-id="9c352-142">Wählen Sie einen Synchronisierungsmechanismus.</span><span class="sxs-lookup"><span data-stu-id="9c352-142">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="9c352-143">Alle Zugriffe aus der Anwendung mithilfe dieser Mechanismus zur Auflistung zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="9c352-143">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="9c352-144">Rufen Sie <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> WPF des Mechanismus informiert.</span><span class="sxs-lookup"><span data-stu-id="9c352-144">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> to inform WPF of the mechanism.</span></span>

   - <span data-ttu-id="9c352-145">Der Aufruf muss im UI-Thread erfolgen.</span><span class="sxs-lookup"><span data-stu-id="9c352-145">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="9c352-146">Der Aufruf muss erfolgen, bevor Sie mit der Auflistung in einem anderen Thread oder Anfügen den Auflistung, an der <xref:System.Windows.Controls.ItemsControl>, welcher Wert höher ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-146">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

   - <span data-ttu-id="9c352-147">Rufen Sie die <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> Überladung, wenn einen einfache Sperrmechanismus verwenden; Aufruf der <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> Überladung, wenn Sie einen komplexeren Mechanismus verwenden.</span><span class="sxs-lookup"><span data-stu-id="9c352-147">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> overload if using a simple lock mechanism; call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload if using a more elaborate mechanism.</span></span>

1. <span data-ttu-id="9c352-148">Stellen Sie sicher, dass eine Änderung an der Auflistung und die Benachrichtigung über diese Änderung (über <xref:System.Collections.Specialized.INotifyCollectionChanged>) werden atomar; es kann kein Zugriff von anderen Threads eingreifen.</span><span class="sxs-lookup"><span data-stu-id="9c352-148">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="9c352-149">(Dies ist in der Regel frei.</span><span class="sxs-lookup"><span data-stu-id="9c352-149">(This is usually free.</span></span> <span data-ttu-id="9c352-150">For Instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> garantiert, vorausgesetzt, dass alle Änderungen durch Synchronisierung geschützt sind.)</span><span class="sxs-lookup"><span data-stu-id="9c352-150">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="9c352-151">Beim Aufrufen <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, dass der Aufruf auch für den UI-Thread ausgeführt werden muss.</span><span class="sxs-lookup"><span data-stu-id="9c352-151">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="9c352-152">Wenn Sie in mehrere UI-Threads dieselbe Sammlung verwenden möchten, müssen Sie aufrufen <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (und <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, sofern erforderlich) separat für jede UI-Thread.</span><span class="sxs-lookup"><span data-stu-id="9c352-152">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="9c352-153">Deadlocks zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="9c352-153">Avoid deadlock.</span></span>  <span data-ttu-id="9c352-154">Dies ist bereits Zuständigkeit der Anwendung, sobald er entscheidet sich für die Synchronisierung verwenden, aber es auch Konto WPF-Teilnahme an der Synchronisierung berücksichtigt muss wie im folgenden Abschnitt erläutert.</span><span class="sxs-lookup"><span data-stu-id="9c352-154">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</span></span>

<span data-ttu-id="9c352-155">Im Gegenzug bietet WPF die folgenden Verhalten:</span><span class="sxs-lookup"><span data-stu-id="9c352-155">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="9c352-156">Die <xref:System.Windows.Data.CollectionView> greift auf die Auflistung mit den angegebenen Synchronisierungsmechanismus.</span><span class="sxs-lookup"><span data-stu-id="9c352-156">The <xref:System.Windows.Data.CollectionView> accesses the collection using the given synchronization mechanism.</span></span>

- <span data-ttu-id="9c352-157">Die <xref:System.Windows.Data.CollectionView> verwaltet eine "Schattenkopie" der Auflistung für die Verwendung der UI-Thread.</span><span class="sxs-lookup"><span data-stu-id="9c352-157">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="9c352-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> Ereignisse werden in die Warteschlange gestellt eintreffen (auf einem beliebigen Thread).</span><span class="sxs-lookup"><span data-stu-id="9c352-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="9c352-159">Ausstehende Ereignisse gelten für die Schattenkopie asynchron an den UI-Thread wenn er die Gelegenheit dazu hat.</span><span class="sxs-lookup"><span data-stu-id="9c352-159">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="9c352-160">Die <xref:System.Windows.Data.CollectionView> alle anderen für die Anwendung sichtbar Synchronisierungsmechanismus nicht direkt verwendet.</span><span class="sxs-lookup"><span data-stu-id="9c352-160">The <xref:System.Windows.Data.CollectionView> won't directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="9c352-161">Dies ist der WPF Möglichkeit, Aufgaben, um zu vermeiden (Siehe das vorherige Element 7) ein Deadlock auftreten.</span><span class="sxs-lookup"><span data-stu-id="9c352-161">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="9c352-162">Im Endeffekt ist, können Sie die Auflistung für jeden Thread ändern, und diese Änderungen schließlich angezeigt, der <xref:System.Windows.Controls.ItemsControl> Wenn der UI-Thread Zeit "aufholen" aufweist.</span><span class="sxs-lookup"><span data-stu-id="9c352-162">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="9c352-163">Die Implementierung hat zu drosseln optimiert wurden, die Rate, mit Änderungen in der UI-Thread im Hintergrund zu fließen aus Richtlinienabfragen überflutet im UI-Thread und die Antwort auf normale Benutzereingaben eingabeereignisübermittlung threads.</span><span class="sxs-lookup"><span data-stu-id="9c352-163">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="lockObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="9c352-164">Die Auflistung, die synchronisierten Zugriff benötigt.</span><span class="sxs-lookup"><span data-stu-id="9c352-164">The collection that needs synchronized access.</span></span></param>
        <param name="lockObject"><span data-ttu-id="9c352-165">Das beim Zugriff auf die Auflistung zu sperrende Objekt.</span><span class="sxs-lookup"><span data-stu-id="9c352-165">The object to lock when accessing the collection.</span></span></param>
        <summary><span data-ttu-id="9c352-166">Ermöglicht es einem <see cref="T:System.Windows.Data.CollectionView" />-Objekt durch einen einfachen Sperrmechanismus, an einem synchronisierten Zugriff auf eine Auflistung teilzunehmen, die von mehreren Threads verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-166">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</span></span> </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="9c352-167">Eine WPF-Anwendung kann eine Auflistung von Daten mit Anzeigen einer <xref:System.Windows.Controls.ItemsControl> oder eine ihrer Unterklassen (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>usw.).</span><span class="sxs-lookup"><span data-stu-id="9c352-167">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="9c352-168">WPF Kanäle, die Zugriff auf die Auflistung über eine Unterklasse von <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="9c352-168">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="9c352-169">Sowohl die <xref:System.Windows.Controls.ItemsControl> und <xref:System.Windows.Data.CollectionView> haben eine Affinität an den Thread auf dem die <xref:System.Windows.Controls.ItemsControl> erstellt wurde, d. h., dass sie in einem anderen Thread nicht zulässig ist und löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="9c352-169">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="9c352-170">Aktiviert ist, gilt diese Einschränkung als auch die Auflistung ein.</span><span class="sxs-lookup"><span data-stu-id="9c352-170">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="9c352-171">Möglicherweise möchten die Auflistung in mehreren Threads verwenden.</span><span class="sxs-lookup"><span data-stu-id="9c352-171">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="9c352-172">Angenommen, Sie die Sammlung zu aktualisieren möchten (hinzufügen oder Entfernen von Elementen) in einem Thread "Datensammlung" beim Anzeigen der Ergebnisse in einem Thread "Benutzeroberfläche", damit die Benutzeroberfläche auch dann noch reagiert beim Sammeln von Daten geschieht.</span><span class="sxs-lookup"><span data-stu-id="9c352-172">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="9c352-173">In einem solchen Fall können Sie sind verantwortlich für ("Thread-sichere") den Zugriff auf die Auflistung und zum sicherstellen, dass der Zugriff von WPF sicherstellen synchronisiert werden (insbesondere von <xref:System.Windows.Data.CollectionView>) in der gleichen Synchronisierungsmechanismus beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-173">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="9c352-174">Durch Aufrufen der <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> -Methode, hierzu können Sie mit einem einfachen Lock-Mechanismus.</span><span class="sxs-lookup"><span data-stu-id="9c352-174">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> method, you can do this by using a simple lock mechanism.</span></span> 
 
<span data-ttu-id="9c352-175">Um eine Auflistung von mehreren Threads verwenden, von denen im UI-Thread, der Besitzer ist, ist die <xref:System.Windows.Controls.ItemsControl>, müssen Sie wie folgt vorgehen:</span><span class="sxs-lookup"><span data-stu-id="9c352-175">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="9c352-176">Instanziieren Sie ein Objekt zu sperren, wenn auf die Auflistung zugreifen.</span><span class="sxs-lookup"><span data-stu-id="9c352-176">Instantiate an object to lock when accessing the collection.</span></span>

1. <span data-ttu-id="9c352-177">Dieses Objekt zu sperren, um alle Zugriff von der Anwendung in der Auflistung zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="9c352-177">Synchronize all access from the application to the collection by locking that object.</span></span>

1. <span data-ttu-id="9c352-178">Rufen Sie <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> WPF informiert, dass Sie einen einfachen Sperrmechanismus verwenden.</span><span class="sxs-lookup"><span data-stu-id="9c352-178">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> to inform WPF that you are using a simple lock mechanism.</span></span>

   - <span data-ttu-id="9c352-179">Der Aufruf muss im UI-Thread erfolgen.</span><span class="sxs-lookup"><span data-stu-id="9c352-179">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="9c352-180">Der Aufruf muss erfolgen, bevor Sie mit der Auflistung in einem anderen Thread oder Anfügen den Auflistung, an der <xref:System.Windows.Controls.ItemsControl>, welcher Wert höher ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-180">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="9c352-181">Stellen Sie sicher, dass eine Änderung an der Auflistung und die Benachrichtigung über diese Änderung (über <xref:System.Collections.Specialized.INotifyCollectionChanged>) werden atomar; es kann kein Zugriff von anderen Threads eingreifen.</span><span class="sxs-lookup"><span data-stu-id="9c352-181">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="9c352-182">(Dies ist in der Regel frei.</span><span class="sxs-lookup"><span data-stu-id="9c352-182">(This is usually free.</span></span> <span data-ttu-id="9c352-183">For Instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> garantiert, vorausgesetzt, dass alle Änderungen durch Synchronisierung geschützt sind.)</span><span class="sxs-lookup"><span data-stu-id="9c352-183">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="9c352-184">Beim Aufrufen <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, dass der Aufruf auch für den UI-Thread ausgeführt werden muss.</span><span class="sxs-lookup"><span data-stu-id="9c352-184">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="9c352-185">Wenn Sie in mehrere UI-Threads dieselbe Sammlung verwenden möchten, müssen Sie aufrufen <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (und <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, sofern erforderlich) separat für jede UI-Thread.</span><span class="sxs-lookup"><span data-stu-id="9c352-185">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="9c352-186">Deadlocks zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="9c352-186">Avoid deadlock.</span></span>  <span data-ttu-id="9c352-187">Dies ist bereits die Anwendung dafür verantwortlich, sobald er entscheidet sich für die Synchronisierung verwenden, aber es außerdem der WPF Teilnahme an der Synchronisierung berücksichtigt muss.</span><span class="sxs-lookup"><span data-stu-id="9c352-187">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="9c352-188">(Siehe Weitere unten.)</span><span class="sxs-lookup"><span data-stu-id="9c352-188">(See more, below.)</span></span>

<span data-ttu-id="9c352-189">Im Gegenzug bietet WPF die folgenden Verhalten:</span><span class="sxs-lookup"><span data-stu-id="9c352-189">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="9c352-190">Die <xref:System.Windows.Data.CollectionView> greift auf die Auflistung mit den Sperrmechanismus.</span><span class="sxs-lookup"><span data-stu-id="9c352-190">The <xref:System.Windows.Data.CollectionView> accesses the collection using the locking mechanism.</span></span>

- <span data-ttu-id="9c352-191">Die <xref:System.Windows.Data.CollectionView> verwaltet eine "Schattenkopie" der Auflistung für die Verwendung der UI-Thread.</span><span class="sxs-lookup"><span data-stu-id="9c352-191">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="9c352-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> Ereignisse werden in die Warteschlange gestellt eintreffen (auf einem beliebigen Thread).</span><span class="sxs-lookup"><span data-stu-id="9c352-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="9c352-193">Ausstehende Ereignisse gelten für die Schattenkopie asynchron an den UI-Thread wenn er die Gelegenheit dazu hat.</span><span class="sxs-lookup"><span data-stu-id="9c352-193">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="9c352-194">Die <xref:System.Windows.Data.CollectionView> wird nicht direkt verwenden alle anderen Synchronisierungsmechanismus für die Anwendung sichtbar.</span><span class="sxs-lookup"><span data-stu-id="9c352-194">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="9c352-195">Dies ist der WPF Möglichkeit, Aufgaben, um zu vermeiden (Siehe das vorherige Element 7) ein Deadlock auftreten.</span><span class="sxs-lookup"><span data-stu-id="9c352-195">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="9c352-196">Im Endeffekt ist, können Sie die Auflistung für jeden Thread ändern, und diese Änderungen schließlich angezeigt, der <xref:System.Windows.Controls.ItemsControl> Wenn der UI-Thread Zeit "aufholen" aufweist.</span><span class="sxs-lookup"><span data-stu-id="9c352-196">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="9c352-197">Die Implementierung hat zu drosseln optimiert wurden, die Rate, mit Änderungen in der UI-Thread im Hintergrund zu fließen aus Richtlinienabfragen überflutet im UI-Thread und die Antwort auf normale Benutzereingaben eingabeereignisübermittlung threads.</span><span class="sxs-lookup"><span data-stu-id="9c352-197">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="9c352-198">Die Auflistung, die synchronisierten Zugriff benötigt.</span><span class="sxs-lookup"><span data-stu-id="9c352-198">The collection that needs synchronized access.</span></span></param>
        <param name="context"><span data-ttu-id="9c352-199">Ein Objekt, das an den Rückruf übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-199">An object that is passed to the callback.</span></span></param>
        <param name="synchronizationCallback"><span data-ttu-id="9c352-200">Der Rückruf, der aufgerufen wird, wenn der Zugriff auf die Auflistung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-200">The callback that is invoked whenever access to the collection is required.</span></span> <span data-ttu-id="9c352-201">Sie können diesen verwenden, um sicherzustellen, dass die Auflistung nur von einem Thread gleichzeitig verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-201">You can use it to ensure that the collection is accessed by one thread at a time.</span></span> </param>
        <summary><span data-ttu-id="9c352-202">Ermöglicht es einem <see cref="T:System.Windows.Data.CollectionView" />-Objekt durch einen anderen Mechanismus als eine einfache Sperre, an einem synchronisierten Zugriff auf eine Auflistung teilzunehmen, die von mehreren Threads verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-202">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</span></span> </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9c352-203">Eine WPF-Anwendung kann eine Auflistung von Daten mit Anzeigen einer <xref:System.Windows.Controls.ItemsControl> oder eine ihrer Unterklassen (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>usw.).</span><span class="sxs-lookup"><span data-stu-id="9c352-203">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="9c352-204">WPF Kanäle, die Zugriff auf die Auflistung über eine Unterklasse von <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="9c352-204">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="9c352-205">Sowohl die <xref:System.Windows.Controls.ItemsControl> und <xref:System.Windows.Data.CollectionView> haben eine Affinität an den Thread auf dem die <xref:System.Windows.Controls.ItemsControl> erstellt wurde, d. h., dass sie in einem anderen Thread nicht zulässig ist und löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="9c352-205">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="9c352-206">Aktiviert ist, gilt diese Einschränkung als auch die Auflistung ein.</span><span class="sxs-lookup"><span data-stu-id="9c352-206">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="9c352-207">Möglicherweise möchten die Auflistung in mehreren Threads verwenden.</span><span class="sxs-lookup"><span data-stu-id="9c352-207">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="9c352-208">Angenommen, Sie die Sammlung zu aktualisieren möchten (hinzufügen oder Entfernen von Elementen) in einem Thread "Datensammlung" beim Anzeigen der Ergebnisse in einem Thread "Benutzeroberfläche", damit die Benutzeroberfläche auch dann noch reagiert beim Sammeln von Daten geschieht.</span><span class="sxs-lookup"><span data-stu-id="9c352-208">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="9c352-209">In einem solchen Fall können Sie sind verantwortlich für ("Thread-sichere") den Zugriff auf die Auflistung und zum sicherstellen, dass der Zugriff von WPF sicherstellen synchronisiert werden (insbesondere von <xref:System.Windows.Data.CollectionView>) in der gleichen Synchronisierungsmechanismus beteiligt ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-209">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="9c352-210">Durch Aufrufen der <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> -Methode, Sie können dazu einen Synchronisierungsmechanismus, z. B. eine Semaphore, ein Zurücksetzungsereignis usw.</span><span class="sxs-lookup"><span data-stu-id="9c352-210">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</span></span> 
 
<span data-ttu-id="9c352-211">Um eine Auflistung von mehreren Threads verwenden, von denen im UI-Thread, der Besitzer ist, ist die <xref:System.Windows.Controls.ItemsControl>, müssen Sie wie folgt vorgehen:</span><span class="sxs-lookup"><span data-stu-id="9c352-211">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="9c352-212">Wählen Sie einen Synchronisierungsmechanismus.</span><span class="sxs-lookup"><span data-stu-id="9c352-212">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="9c352-213">Alle Zugriffe aus der Anwendung mithilfe dieser Mechanismus zur Auflistung zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="9c352-213">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="9c352-214">Rufen Sie die <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> Überladung WPF informiert, dass Sie einen Mechanismus als einfache Sperren verwenden.</span><span class="sxs-lookup"><span data-stu-id="9c352-214">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload to inform WPF that you are using a mechanism other than simple locking.</span></span>

   - <span data-ttu-id="9c352-215">Der Aufruf muss im UI-Thread erfolgen.</span><span class="sxs-lookup"><span data-stu-id="9c352-215">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="9c352-216">Der Aufruf muss erfolgen, bevor Sie mit der Auflistung in einem anderen Thread oder Anfügen den Auflistung, an der <xref:System.Windows.Controls.ItemsControl>, welcher Wert höher ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-216">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="9c352-217">Stellen Sie sicher, dass eine Änderung an der Auflistung und die Benachrichtigung über diese Änderung (über <xref:System.Collections.Specialized.INotifyCollectionChanged>) werden atomar; es kann kein Zugriff von anderen Threads eingreifen.</span><span class="sxs-lookup"><span data-stu-id="9c352-217">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="9c352-218">(Dies ist in der Regel frei.</span><span class="sxs-lookup"><span data-stu-id="9c352-218">(This is usually free.</span></span> <span data-ttu-id="9c352-219">For Instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> garantiert, vorausgesetzt, dass alle Änderungen durch Synchronisierung geschützt sind.)</span><span class="sxs-lookup"><span data-stu-id="9c352-219">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="9c352-220">Beim Aufrufen <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, dass der Aufruf auch für den UI-Thread ausgeführt werden muss.</span><span class="sxs-lookup"><span data-stu-id="9c352-220">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="9c352-221">Wenn Sie in mehrere UI-Threads dieselbe Sammlung verwenden möchten, müssen Sie aufrufen <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (und <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, sofern erforderlich) separat für jede UI-Thread.</span><span class="sxs-lookup"><span data-stu-id="9c352-221">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="9c352-222">Deadlocks zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="9c352-222">Avoid deadlock.</span></span>  <span data-ttu-id="9c352-223">Dies ist bereits die Anwendung dafür verantwortlich, sobald er entscheidet sich für die Synchronisierung verwenden, aber es außerdem der WPF Teilnahme an der Synchronisierung berücksichtigt muss.</span><span class="sxs-lookup"><span data-stu-id="9c352-223">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="9c352-224">(Siehe Weitere unten.)</span><span class="sxs-lookup"><span data-stu-id="9c352-224">(See more, below.)</span></span>

<span data-ttu-id="9c352-225">Im Gegenzug bietet WPF die folgenden Verhalten:</span><span class="sxs-lookup"><span data-stu-id="9c352-225">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="9c352-226">Die <xref:System.Windows.Data.CollectionView> greift auf die Auflistung durch Aufrufen der registrierten <xref:System.Windows.Data.CollectionSynchronizationCallback> mit den folgenden Argumenten:</span><span class="sxs-lookup"><span data-stu-id="9c352-226">The <xref:System.Windows.Data.CollectionView> accesses the collection by calling the registered <xref:System.Windows.Data.CollectionSynchronizationCallback> with the following arguments:</span></span>

   - <span data-ttu-id="9c352-227">`collection`: die Auflistung von Interesse sind.</span><span class="sxs-lookup"><span data-stu-id="9c352-227">`collection`: the collection of interest.</span></span>
   - <span data-ttu-id="9c352-228">`context`: die registrierten Context-Objekt.</span><span class="sxs-lookup"><span data-stu-id="9c352-228">`context`: the registered context object.</span></span>
   - <span data-ttu-id="9c352-229">`accessMethod`: ein Delegat, der den tatsächlichen Zugriff ausführt.</span><span class="sxs-lookup"><span data-stu-id="9c352-229">`accessMethod`: a delegate that performs the actual access.</span></span>
   - <span data-ttu-id="9c352-230">`writeAccess`: `true` , wenn der Delegat, die Auflistung geändert werden `false` andernfalls.</span><span class="sxs-lookup"><span data-stu-id="9c352-230">`writeAccess`: `true` if the delegate will modify the collection; `false` otherwise.</span></span>

   <span data-ttu-id="9c352-231">Ihre <xref:System.Windows.Data.CollectionSynchronizationCallback> sollte die Synchronisierung in der Sammlung herstellen (mithilfe der `context` Objekt und die `writeAccess` Wert nach Bedarf), Aufrufen der `accessMethod`, lassen Sie die Synchronisierung.</span><span class="sxs-lookup"><span data-stu-id="9c352-231">Your <xref:System.Windows.Data.CollectionSynchronizationCallback> should establish synchronization on the collection (using the `context` object and the `writeAccess` value, as appropriate), call the `accessMethod`, then release synchronization.</span></span>

- <span data-ttu-id="9c352-232">Die <xref:System.Windows.Data.CollectionView> verwaltet eine "Schattenkopie" der Auflistung für die Verwendung der UI-Thread.</span><span class="sxs-lookup"><span data-stu-id="9c352-232">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="9c352-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> Ereignisse werden in die Warteschlange gestellt eintreffen (auf einem beliebigen Thread).</span><span class="sxs-lookup"><span data-stu-id="9c352-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="9c352-234">Ausstehende Ereignisse gelten für die Schattenkopie asynchron an den UI-Thread wenn er die Gelegenheit dazu hat.</span><span class="sxs-lookup"><span data-stu-id="9c352-234">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="9c352-235">Die <xref:System.Windows.Data.CollectionView> wird nicht direkt verwenden alle anderen Synchronisierungsmechanismus für die Anwendung sichtbar.</span><span class="sxs-lookup"><span data-stu-id="9c352-235">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="9c352-236">Dies ist der WPF Möglichkeit, Aufgaben, um zu vermeiden (Siehe das vorherige Element 7) ein Deadlock auftreten.</span><span class="sxs-lookup"><span data-stu-id="9c352-236">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="9c352-237">Im Endeffekt ist, können Sie die Auflistung für jeden Thread ändern, und diese Änderungen schließlich angezeigt, der <xref:System.Windows.Controls.ItemsControl> Wenn der UI-Thread Zeit "aufholen" aufweist.</span><span class="sxs-lookup"><span data-stu-id="9c352-237">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="9c352-238">Die Implementierung hat zu drosseln optimiert wurden, die Rate, mit Änderungen in der UI-Thread im Hintergrund zu fließen aus Richtlinienabfragen überflutet im UI-Thread und die Antwort auf normale Benutzereingaben eingabeereignisübermittlung threads.</span><span class="sxs-lookup"><span data-stu-id="9c352-238">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 <span data-ttu-id="9c352-239">Die `context` Parameter ist ein beliebiges Objekt, das an die `callback`.</span><span class="sxs-lookup"><span data-stu-id="9c352-239">The `context` parameter is an arbitrary object that is passed to the `callback`.</span></span> <span data-ttu-id="9c352-240">Können Sie sie zum Bestimmen der Synchronisierungsmechanismus, der zum Steuern des Zugriffs auf `collection`.</span><span class="sxs-lookup"><span data-stu-id="9c352-240">You can use it to determine the synchronization mechanism used to control access to `collection`.</span></span> <span data-ttu-id="9c352-241">`Context` kann `null`.</span><span class="sxs-lookup"><span data-stu-id="9c352-241">`Context` can be `null`.</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-242">Das Objekt, das bei <c>dp</c> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-242">The object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-243">Die Bindungsziel-Eigenschaft, von der die Bindung abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-243">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="9c352-244">Ruft das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.Binding" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="9c352-244">Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="9c352-245">Das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.Binding" />-Objekt oder <see langword="null" />, wenn kein <see cref="T:System.Windows.Data.Binding" />-Objekt festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="9c352-245">The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-246">Der <paramref name="target" />-Parameter und der <paramref name="dp" />-Parameter können nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-246">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-247">Das Objekt, das bei <c>dp</c> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-247">The object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-248">Die Bindungszieleigenschaft, von der das <see cref="T:System.Windows.Data.BindingBase" />-Objekt abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-248">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</span></span></param>
        <summary><span data-ttu-id="9c352-249">Ruft das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.BindingBase" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="9c352-249">Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="9c352-250">Das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.BindingBase" />-Objekt oder <see langword="null" />, wenn kein Bindungsobjekt festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="9c352-250">The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-251">Die <xref:System.Windows.Data.BindingBase> Klasse ist die allgemeine Basisklasse für die <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, und <xref:System.Windows.Data.MultiBinding> Klassen.</span><span class="sxs-lookup"><span data-stu-id="9c352-251">The <xref:System.Windows.Data.BindingBase> class is the common base class for the <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding> classes.</span></span> <span data-ttu-id="9c352-252">Sie können die <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, und <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> Methoden, wenn Sie den Typ der Bindung, d. h. im Voraus wissen, die für die Eigenschaft festgelegt.</span><span class="sxs-lookup"><span data-stu-id="9c352-252">You can use the <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> methods if you know in advance the type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-253">Die Parameter <paramref name="target" /> und <paramref name="dp" /> dürfen nicht gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-253">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-254">Das Bindungszielobjekt, zu dem <c>dp</c> gehört.</span><span class="sxs-lookup"><span data-stu-id="9c352-254">The binding target object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-255">Die Bindungszieleigenschaft, von der das <see cref="T:System.Windows.Data.BindingExpression" />-Objekt abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-255">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="9c352-256">Gibt das <see cref="T:System.Windows.Data.BindingExpression" />-Objekt zurück, das der angegebenen Bindungszieleigenschaft für das angegebene Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-256">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="9c352-257">Das der angegebenen Eigenschaft zugeordnete <see cref="T:System.Windows.Data.BindingExpression" />-Objekt oder <see langword="null" />, wenn keines vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-257">The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span> <span data-ttu-id="9c352-258">Wenn für die Eigenschaft ein <see cref="T:System.Windows.Data.PriorityBindingExpression" />-Objekt festgelegt wurde, wird die <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9c352-258">If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-259">Die <xref:System.Windows.Data.BindingExpression> -Objekt verwaltet die Verbindung zwischen der Quelle der Bindung und das Bindungsziel.</span><span class="sxs-lookup"><span data-stu-id="9c352-259">The <xref:System.Windows.Data.BindingExpression> object maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="9c352-260">Sie erhalten die <xref:System.Windows.Data.BindingExpression> Objekt durch diese statische Methode aufrufen oder durch Aufrufen der <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> Methode auf einem datengebundenen <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9c352-260">You can obtain the <xref:System.Windows.Data.BindingExpression> object by calling this static method or by calling the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c352-261">Das folgende Beispiel zeigt die Implementierung von einer <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignishandler, der verwendet die <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> Methode zum Abrufen der <xref:System.Windows.Data.BindingExpression> und ruft dann die <xref:System.Windows.Data.BindingExpression.DataItem%2A> das Bindungsquellobjekt aufzurufende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9c352-261">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="9c352-262">Die <xref:System.Windows.Controls.TextBlock> `SavingsText` ist das Bindungszielobjekt und <xref:System.Windows.Controls.TextBlock.Text%2A> Bindungsziel-Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-262">The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-263">Die Parameter <paramref name="target" /> und <paramref name="dp" /> dürfen nicht gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-263">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-264">Das Objekt, das bei <c>dp</c> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-264">The object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-265">Die Bindungszieleigenschaft, von der das <see cref="T:System.Windows.Data.BindingExpressionBase" />-Objekt abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-265">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</span></span></param>
        <summary><span data-ttu-id="9c352-266">Ruft das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.BindingExpressionBase" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="9c352-266">Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="9c352-267">Das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.BindingExpressionBase" />-Objekt oder <see langword="null" />, wenn kein Bindungsobjekt festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="9c352-267">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-268">Die <xref:System.Windows.Data.BindingExpressionBase> Klasse ist die allgemeine Basisklasse für die <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, und <xref:System.Windows.Data.MultiBindingExpression> Klassen.</span><span class="sxs-lookup"><span data-stu-id="9c352-268">The <xref:System.Windows.Data.BindingExpressionBase> class is the common base class for the <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, and <xref:System.Windows.Data.MultiBindingExpression> classes.</span></span> <span data-ttu-id="9c352-269">Sie können die <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, und <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> Methoden, wenn Sie im Voraus wissen, Typ der Bindung, die für die Eigenschaft festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-269">You can use the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> methods if you know in advance type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-270">Der <paramref name="target" />-Parameter und der <paramref name="dp" />-Parameter können nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-270">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-271">Das Objekt, das bei <c>dp</c> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-271">The object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-272">Die Bindungsziel-Eigenschaft, von der die Bindung abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-272">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="9c352-273">Ruft das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.MultiBinding" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="9c352-273">Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="9c352-274">Das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.MultiBinding" />-Objekt oder <see langword="null" />, wenn kein <see cref="T:System.Windows.Data.MultiBinding" />-Objekt festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="9c352-274">The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-275">Der <paramref name="target" />-Parameter und der <paramref name="dp" />-Parameter können nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-275">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-276">Das Bindungszielobjekt, zu dem <c>dp</c> gehört.</span><span class="sxs-lookup"><span data-stu-id="9c352-276">The binding target object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-277">Die Bindungszieleigenschaft, von der das <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekt abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-277">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="9c352-278">Gibt das <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekt zurück, das der angegebenen Bindungszieleigenschaft für das angegebene Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-278">Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="9c352-279">Das der angegebenen Eigenschaft zugeordnete <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekt oder <see langword="null" />, wenn keines vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-279">The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-280">Das der angegebenen Eigenschaft zugeordnete <xref:System.Windows.Data.MultiBindingExpression>-Objekt oder `null`, wenn keines vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-280">The <xref:System.Windows.Data.MultiBindingExpression> object associated with the given property or `null` if none exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-281">Die Parameter <paramref name="target" /> und <paramref name="dp" /> dürfen nicht gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-281">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-282">Das Objekt, das bei <c>dp</c> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-282">The object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-283">Die Bindungsziel-Eigenschaft, von der die Bindung abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-283">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="9c352-284">Ruft das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.PriorityBinding" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="9c352-284">Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="9c352-285">Das für die angegebene Eigenschaft festgelegte <see cref="T:System.Windows.Data.PriorityBinding" />-Objekt oder <see langword="null" />, wenn kein <see cref="T:System.Windows.Data.PriorityBinding" />-Objekt festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="9c352-285">The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-286">Der <paramref name="target" />-Parameter und der <paramref name="dp" />-Parameter können nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-286">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-287">Das Bindungszielobjekt, zu dem <c>dp</c> gehört.</span><span class="sxs-lookup"><span data-stu-id="9c352-287">The binding target object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-288">Die Bindungszieleigenschaft, von der das <see cref="T:System.Windows.Data.PriorityBindingExpression" />-Objekt abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c352-288">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="9c352-289">Gibt das <see cref="T:System.Windows.Data.PriorityBindingExpression" />-Objekt zurück, das der angegebenen Bindungszieleigenschaft für das angegebene Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-289">Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="9c352-290">Das der angegebenen Eigenschaft zugeordnete <see cref="T:System.Windows.Data.PriorityBindingExpression" />-Objekt oder <see langword="null" />, wenn keines vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-290">The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-291">Die Parameter <paramref name="target" /> und <paramref name="dp" /> dürfen nicht gleich <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-291">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="9c352-292">Das Stamm-<see cref="T:System.Windows.UIElement" />, für das Bindungsgruppen abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="9c352-292">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="9c352-293">Diese Methode gibt <see cref="T:System.Windows.Data.BindingGroup" />-Objekte zurück, die diesem Element oder seinen untergeordneten Elementen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="9c352-293">This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="9c352-294">Ruft alle <see cref="T:System.Windows.Data.BindingGroup" />-Objekte ab, die ungültige Werte oder Zielwerte, die nicht aktualisiert wurden, aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9c352-294">Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="9c352-295">Eine Sammlung von <see cref="T:System.Windows.Data.BindingGroup" />-Objekten, die dem angegebenen Element zugeordnet sind und ungültige Werte oder Zielwerte, die nicht aktualisiert wurden, aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9c352-295">A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-296">Wenn `root` ist `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> gibt alle <xref:System.Windows.Data.BindingGroup> Objekte, die ungültig sind oder nicht aktualisiert wurden.</span><span class="sxs-lookup"><span data-stu-id="9c352-296">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> returns all <xref:System.Windows.Data.BindingGroup> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="9c352-297">Das Stamm-<see cref="T:System.Windows.UIElement" />, für das Bindungsgruppen abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="9c352-297">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="9c352-298">Diese Methode gibt <see cref="T:System.Windows.Data.BindingExpressionBase" />-Objekte zurück, die diesem Element oder seinen untergeordneten Elementen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="9c352-298">This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="9c352-299">Ruft alle <see cref="T:System.Windows.Data.BindingExpressionBase" />-Objekte ab, die ungültige Werte oder Zielwerte, die nicht aktualisiert wurden, aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9c352-299">Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="9c352-300">Eine Sammlung von <see cref="T:System.Windows.Data.BindingExpressionBase" />-Objekten, die dem angegebenen Element zugeordnet sind und ungültige Werte oder Zielwerte, die nicht aktualisiert wurden, aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9c352-300">A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-301">Wenn `root` ist `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> gibt alle <xref:System.Windows.Data.BindingExpressionBase> Objekte, die ungültig sind oder nicht aktualisiert wurden.</span><span class="sxs-lookup"><span data-stu-id="9c352-301">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> returns all <xref:System.Windows.Data.BindingExpressionBase> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-302">Das Objekt, das bei <c>dp</c> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-302">The object where <c>dp</c> is.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-303">Die zu überprüfende Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9c352-303">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="9c352-304">Gibt einen Wert zurück, der angibt, ob die angegebene Eigenschaft derzeit datengebunden ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-304">Returns a value that indicates whether the specified property is currently data-bound.</span></span></summary>
        <returns>
          <span data-ttu-id="9c352-305"><see langword="true" />, wenn die angegebene Eigenschaft datengebunden ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c352-305"><see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-306">Wenn <paramref name="target" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="9c352-306">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c352-307">Das Bindungsziel der Bindung.</span><span class="sxs-lookup"><span data-stu-id="9c352-307">The binding target of the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="9c352-308">Die Zieleigenschaft der Bindung.</span><span class="sxs-lookup"><span data-stu-id="9c352-308">The target property of the binding.</span></span></param>
        <param name="binding"><span data-ttu-id="9c352-309">Das <see cref="T:System.Windows.Data.BindingBase" />-Objekt, das die Bindung beschreibt.</span><span class="sxs-lookup"><span data-stu-id="9c352-309">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</span></span></param>
        <summary><span data-ttu-id="9c352-310">Erstellt eine neue Instanz von <see cref="T:System.Windows.Data.BindingExpressionBase" /> und ordnet diese der angegebenen Bindungszieleigenschaft zu.</span><span class="sxs-lookup"><span data-stu-id="9c352-310">Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</span></span></summary>
        <returns><span data-ttu-id="9c352-311">Die Instanz von <see cref="T:System.Windows.Data.BindingExpressionBase" />, die für die angegebene Eigenschaft erstellt und dieser zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="9c352-311">The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property.</span></span> <span data-ttu-id="9c352-312">Die <see cref="T:System.Windows.Data.BindingExpressionBase" />-Klasse ist die Basisklasse von <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" /> und <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9c352-312">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c352-313">Diese Methode erstellt eine neue Instanz der eine <xref:System.Windows.Data.BindingExpressionBase> und ordnet die Instanz die angegebene Abhängigkeitseigenschaft des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="9c352-313">This method creates a new instance of a <xref:System.Windows.Data.BindingExpressionBase> and associates the instance with the given dependency property of the given object.</span></span> <span data-ttu-id="9c352-314">Diese Methode ist die Möglichkeit zum Anfügen einer Bindung an einen beliebigen <xref:System.Windows.DependencyObject> , die möglicherweise eine eigene Methode SetBinding nicht verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="9c352-314">This method is the way to attach a binding to an arbitrary <xref:System.Windows.DependencyObject> that may not expose its own SetBinding method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c352-315">Im folgende Beispiel wird gezeigt, wie diese Methode verwendet, um eine Bindung festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="9c352-315">The following example shows how to use this method to set a binding.</span></span> <span data-ttu-id="9c352-316">In diesem Beispiel `myNewBindDef` ist ein <xref:System.Windows.Data.Binding> Objekt, das die Bindung beschreibt.</span><span class="sxs-lookup"><span data-stu-id="9c352-316">In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding.</span></span> <span data-ttu-id="9c352-317">Ist das Bindungsziel `myDateText`, eine Instanz von der <xref:System.Windows.Controls.TextBlock> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9c352-317">The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.</span></span>  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c352-318">Der <paramref name="binding" />-Parameter darf nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="9c352-318">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>