<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6300e7cf3d76dc813b065e4a554061c3a2d5c179" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211091" /></Metadata><TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase&#xA;Implements IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase, System::Windows::IWeakEventListener" />
  <TypeSignature Language="F#" Value="type BindingExpression = class&#xA;    inherit BindingExpressionBase&#xA;    interface IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enthält Informationen zu einer einzelnen Instanz einer <see cref="T:System.Windows.Data.Binding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Data.Binding> -Klasse ist die Klasse auf hoher Ebene für die Deklaration einer Bindung. Die <xref:System.Windows.Data.BindingExpression> -Klasse ist das zugrunde liegende-Objekt, das die Verbindung zwischen der Bindungs Quelle und dem Bindungs Ziel beibehält. Eine <xref:System.Windows.Data.Binding> enthält alle Informationen, die für mehrere <xref:System.Windows.Data.BindingExpression> -Objekte freigegeben werden können. Ein <xref:System.Windows.Data.BindingExpression> ist ein Instanzausdruck, der nicht freigegeben werden kann und alle Instanzinformationen <xref:System.Windows.Data.Binding>über die enthält.  
  
 Beachten Sie z. b. Folgendes, `myDataObject` wobei eine Instanz `MyData` der-Klasse, `myBinding` das Quell <xref:System.Windows.Data.Binding> Objekt und die- `MyData` Klasse eine definierte Klasse ist, die eine Zeichen folgen Eigenschaft `MyDataProperty`mit dem Namen enthält. In diesem Beispiel wird der Text Inhalt `mytext`von, einer Instanz von <xref:System.Windows.Controls.TextBlock>, an `MyDataProperty`gebunden.  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 Sie können das gleiche `myBinding` -Objekt verwenden, um andere Bindungen zu erstellen. Beispielsweise können Sie das `myBinding` -Objekt verwenden, um den Text Inhalt eines Kontrollkästchens an zu `MyDataProperty`binden. In diesem Szenario gibt es zwei Instanzen von <xref:System.Windows.Data.BindingExpression> , die das `myBinding` -Objekt gemeinsam nutzen.  
  
 Sie können ein <xref:System.Windows.Data.BindingExpression> -Objekt abrufen, indem <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> Sie die- <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> Methode oder die-Methode für ein Daten gebundenes Objekt verwenden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Windows.Data.BindingExpression.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bindungsquellobjekt ab, das von diesem <see cref="T:System.Windows.Data.BindingExpression" /> verwendet wird.</summary>
        <value>Das Bindungsquellobjekt, das von diesem <see cref="T:System.Windows.Data.BindingExpression" /> verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zeigt die Implementierung eines-Ereignis Handlers, der die <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> -Methode verwendet <xref:System.Windows.Data.BindingExpression> , um den abzurufen <xref:System.Windows.Data.BindingExpression.DataItem%2A> , und dann die-Eigenschaft aufruft, um auf das Bindungs Quell Objekt zuzugreifen.  
  
 <xref:System.Windows.Controls.TextBlock.Text%2A> Der <xref:System.Windows.Controls.TextBlock> istdasBindungsZielobjekt,undseine-EigenschaftistdieBindungsZielEigenschaft.`SavingsText`  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentBinding : System.Windows.Data.Binding" Usage="System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt das <see cref="T:System.Windows.Data.Binding" />-Objekt des aktuellen <see cref="T:System.Windows.Data.BindingExpression" /> zurück.</summary>
        <value>Das <see cref="T:System.Windows.Data.Binding" />-Objekt des aktuellen Bindungsausdrucks.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSource : obj" Usage="System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bindungsquellenobjekt für diese <see cref="T:System.Windows.Data.BindingExpression" /> ab.</summary>
        <value>Das Bindungsquellobjekt, für diesen <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSourcePropertyName : string" Usage="System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Bindungsquelleigenschaft für die <see cref="T:System.Windows.Data.BindingExpression" /> ab.</summary>
        <value>Der Name der Bindungsquelleigenschaft für die <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">Der Typ des <see cref="T:System.Windows.WeakEventManager" />, der diese Methode aufruft. Es werden nur Managerobjekte vom Typ <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> erkannt.</param>
        <param name="sender">Das Objekt, das das Ereignis ausgelöst hat.</param>
        <param name="e">Ereignisdaten.</param>
        <summary>Dieser Member unterstützt die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
        <returns><see langword="true" />, wenn der Listener das Ereignis behandelt hat, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberSignature Language="F#" Value="override this.UpdateSource : unit -&gt; unit" Usage="bindingExpression.UpdateSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sendet den aktuellen Bindungszielwert an die Bindungsquelleigenschaft von Bindungen des Typs <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> oder <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt keine Aktion aus <xref:System.Windows.Data.Binding.Mode%2A> , wenn der der Bindung <xref:System.Windows.Data.BindingMode.TwoWay> nicht <xref:System.Windows.Data.BindingMode.OneWayToSource>oder ist.  
  
 Wenn der <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Wert der Bindung auf <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>festgelegt ist, müssen Sie die <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> -Methode aufrufen, oder die Änderungen werden nicht an die Quelle zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Bindung wurde von ihrem Ziel getrennt.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberSignature Language="F#" Value="override this.UpdateTarget : unit -&gt; unit" Usage="bindingExpression.UpdateTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erzwingt eine Datenübertragung von der Bindungsquelleneigenschaft zur Bindungszieleigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht es Ihnen, eine Datenübertragung von der Source-Eigenschaft zur Ziel Eigenschaft zu erzwingen. Wenn das Quell Objekt einen ordnungsgemäßen <xref:System.ComponentModel.INotifyPropertyChanged>, Eigenschaften geänderten Benachrichtigungs Mechanismus, z. b., implementiert, werden die Ziel Updates automatisch ausgeführt. Sie haben jedoch die Möglichkeit, diese Methode zu verwenden, um die Ziel Eigenschaft explizit zu aktualisieren, wenn das Quell Objekt nicht die richtigen Benachrichtigungen für die geänderte Eigenschaft bereitstellt. Sie können diese Methode auch verwenden, wenn die Anwendung die Zieleigenschaften in regelmäßigen Abständen aktualisieren muss.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Bindung wurde von ihrem Ziel getrennt.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>
