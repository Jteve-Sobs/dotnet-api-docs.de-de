<Type Name="UpdateSourceExceptionFilterCallback" FullName="System.Windows.Data.UpdateSourceExceptionFilterCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1e21650008b7c58b6606f8e780046f3aebc215e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36564250" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdateSourceExceptionFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function UpdateSourceExceptionFilterCallback(bindExpression As Object, exception As Exception) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ UpdateSourceExceptionFilterCallback(System::Object ^ bindExpression, Exception ^ exception);" />
  <TypeSignature Language="F#" Value="type UpdateSourceExceptionFilterCallback = delegate of obj * Exception -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="bindExpression" Type="System.Object" />
    <Parameter Name="exception" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="bindExpression">
      <span data-ttu-id="84f26-101">The object with the exception.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84f26-101">The object with the exception.</span>
      </span>
    </param>
    <param name="exception">
      <span data-ttu-id="84f26-102">The exception encountered.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84f26-102">The exception encountered.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="84f26-103">Represents the method that handles exceptions that are thrown during the update of the binding source value.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84f26-103">Represents the method that handles exceptions that are thrown during the update of the binding source value.</span>
      </span>
      <span data-ttu-id="84f26-104">This must be used with the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84f26-104">This must be used with the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="84f26-105">An object that is typically one of the following:  <list type="table"><listheader><term> Value  </term><description> Description  </description></listheader><item><term><see langword="null" /></term><description> To ignore any exceptions. The default behavior (if there is no <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) is to create a <see cref="T:System.Windows.Controls.ValidationError" /> with the exception and adds it to the <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  </description></item><item><term> Any object  </term><description> To create a <see cref="T:System.Windows.Controls.ValidationError" /> object with the <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> set to that object.  The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  </description></item><item><term> A <see cref="T:System.Windows.Controls.ValidationError" /> object  </term><description> To set the <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object as the <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />. The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  </description></item></list></span>
      <span class="sxs-lookup">
        <span data-stu-id="84f26-105">An object that is typically one of the following:  <list type="table"><listheader><term> Value  </term><description> Description  </description></listheader><item><term><see langword="null" /></term><description> To ignore any exceptions. The default behavior (if there is no <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) is to create a <see cref="T:System.Windows.Controls.ValidationError" /> with the exception and adds it to the <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  </description></item><item><term> Any object  </term><description> To create a <see cref="T:System.Windows.Controls.ValidationError" /> object with the <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> set to that object.  The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  </description></item><item><term> A <see cref="T:System.Windows.Controls.ValidationError" /> object  </term><description> To set the <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object as the <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />. The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.  </description></item></list></span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84f26-106">Wenn Sie verknüpft haben die <xref:System.Windows.Controls.ExceptionValidationRule> mit Ihrer <xref:System.Windows.Data.Binding> Objekt stehen Ihnen die Option zum Verwenden der <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> -Eigenschaft zum Festlegen von diesem Rückruf benutzerdefinierten Logik zum Behandeln von Ausnahmen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="84f26-106">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object you have the option to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set this callback to provide custom logic for handling the exceptions.</span></span> <span data-ttu-id="84f26-107">Dieser Rückruf wird immer dann aufgerufen, wenn jede Ausnahme beim Aktualisieren des Bindungsquellwerts durch das Bindungsmodul gefunden.</span><span class="sxs-lookup"><span data-stu-id="84f26-107">This callback is invoked whenever any exception is encountered when the binding engine updates the binding source value.</span></span>  
  
 <span data-ttu-id="84f26-108">Wenn ein <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> nicht angegeben wird, auf die <xref:System.Windows.Data.Binding>, erstellt das Bindungsmodul ein <xref:System.Windows.Controls.ValidationError> mit der Ausnahme und fügt es der <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> Auflistung von das gebundene Element.</span><span class="sxs-lookup"><span data-stu-id="84f26-108">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84f26-109">Die <xref:System.Windows.Controls.TextBox.Text%2A> Eigenschaft der folgenden <xref:System.Windows.Controls.TextBox> ist datengebunden, Quelleigenschaft `Age3` vom Typ `int`.</span><span class="sxs-lookup"><span data-stu-id="84f26-109">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="84f26-110">Die <xref:System.Windows.Controls.ExceptionValidationRule> Überprüfungen für Ausnahmen, die ausgelöst werden, während der Aktualisierung der Source-Eigenschaft (z. B. wenn der Benutzer einen Wert, der in eine ganze Zahl konvertiert werden kann eingibt).</span><span class="sxs-lookup"><span data-stu-id="84f26-110">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="84f26-111">Sie haben die Möglichkeit, benutzerdefinierte Logik zum Behandeln von Ausnahmen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="84f26-111">You have the option to provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="84f26-112">Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> festzulegende Eigenschaft ein <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span><span class="sxs-lookup"><span data-stu-id="84f26-112">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="84f26-113">Im folgenden finden Sie eine beispielimplementierung einer <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span><span class="sxs-lookup"><span data-stu-id="84f26-113">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="84f26-114">Das vollständige Beispiel finden Sie unter [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span><span class="sxs-lookup"><span data-stu-id="84f26-114">For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
  </Docs>
</Type>