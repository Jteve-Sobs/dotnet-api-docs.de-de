<Type Name="UpdateSourceExceptionFilterCallback" FullName="System.Windows.Data.UpdateSourceExceptionFilterCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f896b324e53677ec033476c0063b85c580d3777" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82463259" /></Metadata><TypeSignature Language="C#" Value="public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdateSourceExceptionFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function UpdateSourceExceptionFilterCallback(bindExpression As Object, exception As Exception) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ UpdateSourceExceptionFilterCallback(System::Object ^ bindExpression, Exception ^ exception);" />
  <TypeSignature Language="F#" Value="type UpdateSourceExceptionFilterCallback = delegate of obj * Exception -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="bindExpression" Type="System.Object" />
    <Parameter Name="exception" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="bindExpression">Das Objekt mit der Ausnahme.</param>
    <param name="exception">Die aufgetretene Ausnahme.</param>
    <summary>Stellt die Methode dar, die Ausnahmen behandelt, die während der Aktualisierung des Bindungsquellwerts ausgelöst werden. Diese muss mit der <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> verwendet werden.</summary>
    <returns>Ein Objekt, bei dem es sich in der Regel um Folgendes handelt: 
 <list type="table"><listheader><term> value 
 </term><description> BESCHREIBUNG 
 </description></listheader><item><term><see langword="null" /></term><description> Zum Ignorieren von Ausnahmen. Das Standardverhalten (wenn kein <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" /> vorhanden ist) besteht darin, dass ein <see cref="T:System.Windows.Controls.ValidationError" /> mit der Ausnahme erstellt und der <see cref="P:System.Windows.Controls.Validation.Errors" />-Auflistung des gebundenen Elements hinzugefügt wird.  
  
 </description></item><item><term> Beliebiges Objekt 
 </term><description> Zum Erstellen eines <see cref="T:System.Windows.Controls.ValidationError" />-Objekts, wobei der <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> auf dieses Objekt festgelegt ist.  
  
Das <see cref="T:System.Windows.Controls.ValidationError" />-Objekt wird der <see cref="P:System.Windows.Controls.Validation.Errors" />-Auflistung des gebundenen Elements hinzugefügt.  
  
 </description></item><item><term> Ein <see cref="T:System.Windows.Controls.ValidationError" />-Objekt 
 </term><description> Zum Festlegen des <see cref="T:System.Windows.Data.BindingExpression" />-Objekts oder <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekts als <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />. Das <see cref="T:System.Windows.Controls.ValidationError" />-Objekt wird der <see cref="P:System.Windows.Controls.Validation.Errors" />-Auflistung des gebundenen Elements hinzugefügt.  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.Windows.Controls.ExceptionValidationRule> mit Ihrem <xref:System.Windows.Data.Binding>-Objekt verknüpft haben, können Sie die <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>-Eigenschaft verwenden, um diesen Rückruf festzulegen, um benutzerdefinierte Logik für die Behandlung der Ausnahmen bereitzustellen. Dieser Rückruf wird immer dann aufgerufen, wenn eine Ausnahme auftritt, wenn die Bindungs-Engine den Bindungs Quellwert aktualisiert.  
  
 Wenn eine <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> nicht auf dem <xref:System.Windows.Data.Binding>angegeben ist, erstellt die Bindungs-Engine eine <xref:System.Windows.Controls.ValidationError> mit der Ausnahme und fügt Sie der <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> Auflistung des gebundenen Elements hinzu.  
  
   
  
## Examples  
 Die <xref:System.Windows.Controls.TextBox.Text%2A>-Eigenschaft der folgenden <xref:System.Windows.Controls.TextBox> ist Daten gebunden an eine Quell Eigenschaft `Age3`, die vom Typ `int`ist. Der <xref:System.Windows.Controls.ExceptionValidationRule> prüft auf Ausnahmen, die während der Aktualisierung der Quell Eigenschaft ausgelöst werden (z. b. wenn der Benutzer einen Wert eingibt, der nicht in eine ganze Zahl konvertiert werden kann).  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 Sie haben die Möglichkeit, benutzerdefinierte Logik bereitzustellen, um diese Ausnahmen zu behandeln. Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>-Eigenschaft verwenden, um eine <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>festzulegen:  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 Im folgenden finden Sie eine Beispiel Implementierung eines <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 Das komplette Beispiel finden Sie unter [Beispiel für Bindungs Validierung](https://go.microsoft.com/fwlink/?LinkID=159972).  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
  </Docs>
</Type>
