<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c605e0956d5d6b54081ce7cb70c25a5645e9ac22" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <TypeSignature Language="F#" Value="type IAttachedPropertyStore = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ac12d-101">Represents an attachable member store for an object where attachable members are set.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac12d-101">Represents an attachable member store for an object where attachable members are set.</span>
      </span>
      <span data-ttu-id="ac12d-102">This attachable member store can then be referenced with <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac12d-102">This attachable member store can then be referenced with <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac12d-103">Ein anfügbaren Members ist in der Regel implementiert und als anfügbare Eigenschaft verwendet.</span><span class="sxs-lookup"><span data-stu-id="ac12d-103">An attachable member is typically implemented and used as an attachable property.</span></span> <span data-ttu-id="ac12d-104">Der Begriff "anfügbaren Members" bietet die Möglichkeit, dass eine Technologie auch ein System für anfügbare Ereignisse definiert.</span><span class="sxs-lookup"><span data-stu-id="ac12d-104">The term "attachable member" provides for the possibility that a technology also defines a system for attachable events.</span></span> <span data-ttu-id="ac12d-105">Als ein Element in einen Eigenschaftenspeicher speichert ein anfügbares Ereignis einen Verweis auf den Handler, der über Memberverwendung zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="ac12d-105">As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage.</span></span> <span data-ttu-id="ac12d-106">Ein anfügbares Ereignis in XAML kann den gleichen Speicher verwenden, ebenso anfügbaren Eigenschaften, auch wenn das anfügbare Ereignis nicht tatsächlich eine Eigenschaft mit dem zugrunde liegenden Typsystem ist, oder es in die praktische Verwendung betrachtet wird.</span><span class="sxs-lookup"><span data-stu-id="ac12d-106">An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyPropertiesTo : System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="iAttachedPropertyStore.CopyPropertiesTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="ac12d-107">The destination array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-107">The destination array.</span>
          </span>
          <span data-ttu-id="ac12d-108">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-108">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ac12d-109">The source index where copying should begin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-109">The source index where copying should begin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac12d-110">Copies all attachable member/value pairs from this attachable member store into a destination array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-110">Copies all attachable member/value pairs from this attachable member store into a destination array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyCount : int" Usage="System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac12d-111">Gets the count of the attachable member entries in this attachable member store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-111">Gets the count of the attachable member entries in this attachable member store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac12d-112">Die ganzzahligen Anzahl von Einträgen im Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-112">The integer count of entries in the store.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="iAttachedPropertyStore.RemoveProperty attachableMemberIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="ac12d-113">The XAML type system identifier for the attachable member entry to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-113">The XAML type system identifier for the attachable member entry to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac12d-114">Removes the entry for the specified attachable member from this attachable member store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-114">Removes the entry for the specified attachable member from this attachable member store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac12d-115">
            <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-115">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="iAttachedPropertyStore.SetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="ac12d-116">The XAML type system identifier for the attachable member entry to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-116">The XAML type system identifier for the attachable member entry to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ac12d-117">The value to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-117">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac12d-118">Sets a value for the specified attachable member in the specified store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-118">Sets a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac12d-119">Eine Implementierung sollte keine Ausnahme auslöst, wenn bestimmte anfügbaren Members bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="ac12d-119">An implementation should not throw an exception if the specific attachable member already exists.</span></span> <span data-ttu-id="ac12d-120">Wenn bereits ein Element vorhanden ist, sollte die Implementierung überschreiben alle vorhandenen Werte mit einer `value`.</span><span class="sxs-lookup"><span data-stu-id="ac12d-120">If a member already exists, the implementation should overwrite any existing value with `value`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProperty : System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="iAttachedPropertyStore.TryGetProperty (attachableMemberIdentifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="ac12d-121">The XAML type system identifier for the attachable member entry to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-121">The XAML type system identifier for the attachable member entry to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ac12d-122">Out parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-122">Out parameter.</span>
          </span>
          <span data-ttu-id="ac12d-123">When this method returns, contains the destination object for the value if <c>attachableMemberIdentifier</c> exists in the store and has a value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-123">When this method returns, contains the destination object for the value if <c>attachableMemberIdentifier</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac12d-124">Attempts to get a value for the specified attachable member in the specified store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-124">Attempts to get a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac12d-125">
            <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac12d-125">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac12d-126">Eine Implementierung sollte keine Ausnahme auslöst, die bestimmten anfügbaren Members befindet sich nicht im Speicher.</span><span class="sxs-lookup"><span data-stu-id="ac12d-126">An implementation should not throw an exception if the specific attachable member is not located in the store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>