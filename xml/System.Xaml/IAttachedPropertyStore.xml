<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="873b7d69873c08f5462060c447fb0108cc08e567" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30686104" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="26f15-101">Stellt einen anfügbaren Memberspeicher für ein Objekt dar, in dem anfügbare Member festgelegt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26f15-101">Represents an attachable member store for an object where attachable members are set.</span>
      </span>
      <span data-ttu-id="26f15-102">Auf diesen anfügbaren Memberspeicher kann anschließend mit <see cref="T:System.Xaml.AttachablePropertyServices" /> verwiesen werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26f15-102">This attachable member store can then be referenced with <see cref="T:System.Xaml.AttachablePropertyServices" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26f15-103">Ein anfügbaren Members ist in der Regel implementiert und als anfügbare Eigenschaft verwendet.</span><span class="sxs-lookup"><span data-stu-id="26f15-103">An attachable member is typically implemented and used as an attachable property.</span></span> <span data-ttu-id="26f15-104">Der Begriff "anfügbaren Members" bietet die Möglichkeit, dass eine Technologie auch ein System für anfügbare Ereignisse definiert.</span><span class="sxs-lookup"><span data-stu-id="26f15-104">The term "attachable member" provides for the possibility that a technology also defines a system for attachable events.</span></span> <span data-ttu-id="26f15-105">Als ein Element in einen Eigenschaftenspeicher speichert ein anfügbares Ereignis einen Verweis auf den Handler, der über Memberverwendung zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="26f15-105">As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage.</span></span> <span data-ttu-id="26f15-106">Ein anfügbares Ereignis in XAML kann den gleichen Speicher verwenden, ebenso anfügbaren Eigenschaften, auch wenn das anfügbare Ereignis nicht tatsächlich eine Eigenschaft mit dem zugrunde liegenden Typsystem ist, oder es in die praktische Verwendung betrachtet wird.</span><span class="sxs-lookup"><span data-stu-id="26f15-106">An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="26f15-107">Das Zielarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-107">The destination array.</span>
          </span>
          <span data-ttu-id="26f15-108">Das Array ist ein generisches Array, das ohne Dimension übergeben werden sollte und Komponenten von <see cref="T:System.Xaml.AttachableMemberIdentifier" /> und <see langword="object" /> enthalten muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-108">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="26f15-109">Der Quellindex, an dem der Kopiervorgang beginnen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-109">The source index where copying should begin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26f15-110">Kopiert alle anfügbaren Member-Wert-Paare aus diesem anfügbaren Memberspeicher in ein Zielarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-110">Copies all attachable member/value pairs from this attachable member store into a destination array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26f15-111">Ruft die Anzahl der anfügbaren Membereinträge in diesem anfügbaren Memberspeicher ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-111">Gets the count of the attachable member entries in this attachable member store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26f15-112">Die ganzzahlige Anzahl der Einträge im Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-112">The integer count of entries in the store.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="26f15-113">Der XAML-Typsystembezeichner für den zu entfernenden anfügbaren Membereintrag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-113">The XAML type system identifier for the attachable member entry to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26f15-114">Entfernt den Eintrag für den angegebenen anfügbaren Member aus diesem anfügbaren Memberspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-114">Removes the entry for the specified attachable member from this attachable member store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26f15-115">
            <see langword="true" />, wenn im Speicher ein anfügbarer Membereintrag für <paramref name="attachableMemberIdentifier" /> gefunden und entfernt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-115">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="26f15-116">Der XAML-Typsystembezeichner für den festzulegenden anfügbaren Membereintrag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-116">The XAML type system identifier for the attachable member entry to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="26f15-117">Der festzulegende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-117">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26f15-118">Legt einen Wert für den angegebenen anfügbaren Member im angegebenen Speicher fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-118">Sets a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26f15-119">Eine Implementierung sollte keine Ausnahme auslöst, wenn bestimmte anfügbaren Members bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="26f15-119">An implementation should not throw an exception if the specific attachable member already exists.</span></span> <span data-ttu-id="26f15-120">Wenn bereits ein Element vorhanden ist, sollte die Implementierung überschreiben alle vorhandenen Werte mit einer `value`.</span><span class="sxs-lookup"><span data-stu-id="26f15-120">If a member already exists, the implementation should overwrite any existing value with `value`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier">
          <span data-ttu-id="26f15-121">Der XAML-Typsystembezeichner für den abzurufenden anfügbaren Membereintrag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-121">The XAML type system identifier for the attachable member entry to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="26f15-122">Out-Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-122">Out parameter.</span>
          </span>
          <span data-ttu-id="26f15-123">Enthält bei Beendigung dieser Methode das Zielobjekt für den Wert, wenn <c>attachableMemberIdentifier</c> im Speicher vorhanden ist und über einen Wert verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-123">When this method returns, contains the destination object for the value if <c>attachableMemberIdentifier</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26f15-124">Versucht, einen Wert für den angegebenen anfügbaren Member im angegebenen Speicher abzurufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-124">Attempts to get a value for the specified attachable member in the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26f15-125">
            <see langword="true" />, wenn im Speicher ein anfügbarer Membereintrag für <paramref name="attachableMemberIdentifier" /> gefunden wurde und ein Wert an <paramref name="value" /> gesendet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26f15-125">
              <see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26f15-126">Eine Implementierung sollte keine Ausnahme auslöst, die bestimmten anfügbaren Members befindet sich nicht im Speicher.</span><span class="sxs-lookup"><span data-stu-id="26f15-126">An implementation should not throw an exception if the specific attachable member is not located in the store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>