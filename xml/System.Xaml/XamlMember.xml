<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d50a3ca76157834fc7eb0634ae1d13af8fe855" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444390" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f17e9-101">Stellt den XAML-Typsystembezeichner für Member von XAML-Typen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f17e9-101">Provides the XAML type system identifier for members of XAML types.</span>
      </span>
      <span data-ttu-id="f17e9-102">Der Bezeichner wird während der Verarbeitung von Memberknoten (wenn der XAML-Reader in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" /> positioniert ist) von XAML-Readern und XAML-Writern sowie für die allgemeine XAML-Typsystemlogik verwendet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f17e9-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-103"><xref:System.Xaml.XamlMember> können drei Methoden zum Zurückgeben von Informationen zu XAML-Member: standard common Language Runtime (CLR) Reflektion; eine reine Verweis Reflektion Technik Aufrufen von internen flags APIs mithilfe einer optimierten Bit; oder virtuelle Aufrufen von überschreibt die `Lookup*` -API, die vom möglich bereitgestellt wird <xref:System.Xaml.XamlMember> Unterklassen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="f17e9-104">Für die meisten Verwendungen von .NET Framework-XAML-Dienste-APIs und die <xref:System.Xaml.XamlMember> -API verwenden Sie die standardmäßigen XAML-Schemakontext.</span><span class="sxs-lookup"><span data-stu-id="f17e9-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="f17e9-105">Der standardmäßigen XAML-Schemakontext für .NET Framework XAML Services verwendet die CLR-Unterstützung für das Typsystem.</span><span class="sxs-lookup"><span data-stu-id="f17e9-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="f17e9-106">Dadurch wird der XAML-Readern und XAML-Writer, einen beliebigen Typ oder Member gilt, oder anderweitig verfügbar definiert ist, die CLR und seine Reflektion Methoden verwenden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="f17e9-107">Suche \* APIs und XamlMember abgeleitete Klassen</span><span class="sxs-lookup"><span data-stu-id="f17e9-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="f17e9-108"><xref:System.Xaml.XamlMember> definiert mehrere virtuelle Member, die abgeleitete Klassen können außer Kraft gesetzt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="f17e9-109">Diese Member haben Namen, die immer mit der Zeichenfolge beginnen `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="f17e9-110">Der Rest der API benennen Verweise Sie die Eigenschaft, die die virtuelle Methode beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="f17e9-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="f17e9-111">Z. B. eine <xref:System.Xaml.XamlMember> kann abgeleiteten Klasse außer Kraft gesetzt <xref:System.Xaml.XamlMember.LookupTargetType%2A> zu beeinflussen, welche die Basis-definierte Eigenschaft <xref:System.Xaml.XamlMember.TargetType%2A> in einer abgeleiteten Klasse zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="f17e9-112">Sie können die Rückgabewerte für solche Eigenschaften in Vorhersagen <xref:System.Xaml.XamlMember> oder vorhandene abgeleitete Klassen durch Lesen der Dokumentation für das entsprechende `Lookup*` Methoden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="f17e9-113">Der Zweck der `Lookup*` Methoden wird ein XAML-Typsystem-Erweiterungsmethode angegeben, der die umfasst die <xref:System.Xaml.XamlMember> Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="f17e9-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="f17e9-114">Durch Ableiten von <xref:System.Xaml.XamlMember> und überschreiben die `Lookup` virtuelle Member Sie definieren, das Konzept des XAML-Member für ein XAML-Schema in einem XAML-Typsystem ohne auf die Einzelheiten einer Unterstützungstypsystem oder Technologie gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="f17e9-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="f17e9-115">Sie können auch verwenden, einen bereitgestellten XAML-Schemakontext bei diesem Schema und weiterhin die gewünschten Ergebnisse zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="f17e9-116">Beispielsweise sollten Sie die <xref:System.Xaml.XamlMember> Eigenschaft <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="f17e9-117">Diese Eigenschaft Aufrufer darüber informiert, dass Vorgänge wie die Verwendung einer <xref:System.Xaml.XamlWriter> für Serialisierung, einen Wert für diesen Member für ein Zielobjekt schreiben kann.</span><span class="sxs-lookup"><span data-stu-id="f17e9-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="f17e9-118">In der Standardimplementierung erfolgt die Festlegung, ob das Element schreibgeschützt ist mithilfe von Reflektionstechniken für die unterstützende CLR <xref:System.Type> und ihre Member (die <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="f17e9-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="f17e9-119">Aus diesem Grund hängt standardmäßig das XAML-Typsystem der CLR-Typsystem.</span><span class="sxs-lookup"><span data-stu-id="f17e9-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="f17e9-120">Sie können jedoch diese Abhängigkeit entfernen, für die Verwendung von XAML-Typ System Berichte von <xref:System.Xaml.XamlMember.IsWritePublic%2A> durch Überschreiben der API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="f17e9-121">In der Außerkraftsetzung können Sie andere Bestimmung, z. B. Metadaten, die spezifisch für Ihre Technologie, die eine master Nachschlagetabelle, die für ein festes XAML-Vokabular oder einer Vielzahl anderer Strategien zum bestimmen, ob ein XAML-Member in beschreibbar ist optimiert ist Ihre Verwendung von XAML-Vokabular.</span><span class="sxs-lookup"><span data-stu-id="f17e9-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="f17e9-122">Erstellen von XamlMember ohne Verwendung von XAML-Schemakontext</span><span class="sxs-lookup"><span data-stu-id="f17e9-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="f17e9-123">Die meisten Konstruktoren von <xref:System.Xaml.XamlMember> erfordern eine <xref:System.Xaml.XamlSchemaContext> als Teil der Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="f17e9-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="f17e9-124">Die <xref:System.Xaml.XamlSchemaContext> ist auch erforderlich, die für viele interne <xref:System.Xaml.XamlSchemaContext> Vorgänge, z. B. das Abrufen von Informationen, die von der Unterstützungstyp weitergeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="f17e9-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="f17e9-125">Bei der Arbeit mit der <xref:System.Xaml.XamlMember> -API, die Sie in der Regel haben eine <xref:System.Xaml.XamlSchemaContext> verfügbar ist von einem umgebenden Konstrukt wie z. B. eine <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="f17e9-126">In diesem Fall können Sie übergeben die <xref:System.Xaml.XamlSchemaContext> über einen Verweis auf alle XAML-Typ Systemaufrufe, die einen XAML-Schemakontext erfordern.</span><span class="sxs-lookup"><span data-stu-id="f17e9-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="f17e9-127">Einen bestimmten Konstruktor <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, erfordert eine <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="f17e9-128">Allerdings eine <xref:System.Xaml.XamlMember> erstellt, die mit der <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Signatur zurückgibt `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-129">Für einen Ladepfad, die umfasst <xref:System.Xaml.XamlObjectWriter>, ein Element kann nicht in einem Objektdiagramm geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="f17e9-130">Mithilfe der .NET Framework-XAML-Dienste-Implementierung der <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> aufrufen, löst eine <xref:System.Xaml.XamlObjectWriterException> Wenn die relevanten <xref:System.Xaml.XamlMember> Berichte `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-131">Sie sollten nicht erstellen eine <xref:System.Xaml.XamlMember> mit dem Wert des `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A> , wenn Ihre Implementierung die Ausnahmen von verarbeiten kann <xref:System.Xaml.XamlObjectWriter>, oder Sie über andere Möglichkeiten zum Anpassen der <xref:System.Xaml.XamlObjectWriter> Verhalten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="f17e9-132">Beispielsweise könnte eine oder mehrere der folgenden Ihrer Implementierung zutreffen:</span><span class="sxs-lookup"><span data-stu-id="f17e9-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="f17e9-133">Der XAML-Schemakontext ist später verfügbar.</span><span class="sxs-lookup"><span data-stu-id="f17e9-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="f17e9-134">Sie verwenden ein Member Invoker-Muster.</span><span class="sxs-lookup"><span data-stu-id="f17e9-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="f17e9-135">Sie absichtlich überschreiben <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in einem benutzerdefinierten XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="f17e9-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-136">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="f17e9-137">Die <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems, die den Ereignismember darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-137">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-138">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-138">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-139">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-139">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-140">Verwenden Sie diesen Konstruktor, wenn das Element ein Ereignis (Ereignis-Handler Verbindungspunkt Eigenschaft) darstellt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-140">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="f17e9-141">Die <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-141">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-142">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-142">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-143">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-143">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-144">Verwenden Sie diesen Konstruktor, wenn das Element eine Eigenschaft stellt (und insbesondere keine Ereignis-Handler Verbindung ist).</span><span class="sxs-lookup"><span data-stu-id="f17e9-144">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="f17e9-145">Die <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems, die den Ereignismember darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-145">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-146">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-146">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="f17e9-147">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Reflektionslaufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-147">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-148">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-148">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-149">Verwenden Sie diesen Konstruktor, wenn das Element ein Ereignis (oder eine Ereignishandler-Verbindungspunkt Ereigniseigenschaft) darstellt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-149">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="f17e9-150">Die <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-150">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-151">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-151">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="f17e9-152">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-152">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-153">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit Reflektions-<see cref="T:System.Reflection.PropertyInfo" /> und einem <see cref="T:System.Xaml.XamlSchemaContext" />, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-153">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-154">Verwenden Sie diesen Konstruktor, und nur dann, wenn das Element eine Eigenschaft darstellt, wenn es sich nicht um eine Ereignis-Handler-Verbindung handelt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-154">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="f17e9-155">Der Zeichenfolgenname des anfügbaren Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-155">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="f17e9-156">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für die <see langword="Add" />-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-156">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-157">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-157">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-158">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der ein anfügbares Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-158">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-159">Verwenden Sie diesen Konstruktor, wenn das Element einen anfügbaren Ereignismember darstellt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-159">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f17e9-160">Der Zeichenfolgenname des Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-160">The string name of the member.</span>
          </span>
        </param>
        <param name="declaringType">
          <span data-ttu-id="f17e9-161">Die <see cref="T:System.Xaml.XamlType" />-Informationen für den deklarierenden Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-161">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span>
          </span>
        </param>
        <param name="isAttachable">
          <span data-ttu-id="f17e9-162">
            <see langword="true" />, um anzugeben, dass der Member anfügbar ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-162">
              <see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-163">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit einem Zeichenfolgennamen und deklarierenden <see cref="T:System.Xaml.XamlType" />-Informationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-163">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span>
          </span>
          <span data-ttu-id="f17e9-164">Ein mit dieser Signatur erstellter <see cref="T:System.Xaml.XamlMember" /> weist deutliche Einschränkungen auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-164">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-165">Ein <xref:System.Xaml.XamlMember> erstellt, die mit der <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Signatur zurückgibt `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-165">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-166">Für einen Ladepfad, die umfasst <xref:System.Xaml.XamlObjectWriter>, ein Element kann nicht in einem Objektdiagramm geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-166">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="f17e9-167">Mithilfe der .NET Framework-XAML-Dienste-Implementierung der <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> löst das Aufrufen einer <xref:System.Xaml.XamlObjectWriterException> Wenn die relevanten <xref:System.Xaml.XamlMember> Berichte `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-167">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-168">Sie sollten nicht erstellen eine <xref:System.Xaml.XamlMember> mit <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` , wenn Ihre Implementierung die Ausnahmen von verarbeiten kann <xref:System.Xaml.XamlObjectWriter>, oder Sie über andere Möglichkeiten zum Anpassen der <xref:System.Xaml.XamlObjectWriter> Verhalten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-168">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="f17e9-169">Beispielsweise könnte eine oder mehrere der folgenden Ihrer Implementierung zutreffen:</span><span class="sxs-lookup"><span data-stu-id="f17e9-169">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="f17e9-170">Der XAML-Schemakontext ist später verfügbar.</span><span class="sxs-lookup"><span data-stu-id="f17e9-170">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="f17e9-171">Sie verwenden ein Member Invoker-Muster.</span><span class="sxs-lookup"><span data-stu-id="f17e9-171">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="f17e9-172">Sie absichtlich überschreiben <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in einem benutzerdefinierten XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="f17e9-172">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f17e9-173">
            <paramref name="name" /> oder <paramref name="declaringType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-173">
              <paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="f17e9-174">Der Zeichenfolgenname der anfügbaren Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-174">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="f17e9-175">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="get" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-175">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="f17e9-176">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="set" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-177">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-177">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-178">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für ein <see cref="T:System.Xaml.XamlMember" />-Objekt, das eine anfügbare Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-178">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-179">Verwenden Sie diesen Konstruktor, wenn das Element eine anfügbare Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-179">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="f17e9-180">Der Zeichenfolgenname des anfügbaren Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-180">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="f17e9-181">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für die <see langword="Add" />-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-181">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-182">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-182">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="f17e9-183">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-183">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-184">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der ein anfügbares Ereignis darstellt, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-184">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-185">Verwenden Sie diesen Konstruktor, wenn das Element einen anfügbaren Ereignismember darstellt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-185">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="f17e9-186">Der Zeichenfolgenname der anfügbaren Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-186">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="f17e9-187">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="get" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-187">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="f17e9-188">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="set" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f17e9-189">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-189">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="f17e9-190">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-190">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-191">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der eine anfügbare Eigenschaft darstellt, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-191">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-192">Verwenden Sie diesen Konstruktor, wenn der Member einen Member anfügbare Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-192">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-193">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ ab, durch den der dem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnete Member deklariert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-193">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-194">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ, durch den der dem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnete Member deklariert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-194">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-195">Dieser Wert wird in der Regel während der Initialisierung festgelegt und ist normalerweise nicht `null`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-195">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f17e9-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> Informationen können von den Konstruktoren für die Initialisierung übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="f17e9-197">Durch Aufruf direkt in Basis Konstruktoren initialisieren der <xref:System.Xaml.XamlMember> abgeleitete Klassen können weglassen, einige Wert-Überprüfungen, die in der Basisklasse vorgenommen werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-197">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="f17e9-198">Aus diesem Grund kann abgeleitete Initialisierung die Beziehungsinformationen gemeldeten Typmember von einem XAML-Member ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typsysteminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</span><span class="sxs-lookup"><span data-stu-id="f17e9-198">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="f17e9-199">Verwenden Sie für die als sicherheitskritisch Überprüfungen Typinformationen zu deklarieren stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f17e9-199">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-200">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-200">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-201">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-201">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-202">Aufrufen von <xref:System.Xaml.XamlMember.DeferringLoader%2A> ruft <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-202">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="f17e9-203">Dieses Verhalten tritt in Fällen, in denen die Reflektionslogik der anfänglichen internen nicht bereits die Informationen festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="f17e9-203">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-204">Ruft eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-204">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="f17e9-205">Von diesen werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-205">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-206">Eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-206">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-207">Aufrufen von <xref:System.Xaml.XamlMember.DependsOn%2A> ruft <xref:System.Xaml.XamlMember.LookupDependsOn%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-207">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="f17e9-208">Dieses Verhalten tritt in Fällen, in denen die Reflektionslogik der anfänglichen internen nicht bereits die Informationen festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="f17e9-208">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="f17e9-209">Die `DependsOn` Muster auf Objektmodellfälle, die absichtlich eine allgemeine XAML-Regel widersprechen angewendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="f17e9-209">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="f17e9-210">Die allgemeine XAML-Regel ist, dass Member eines Typs, die nicht als Initialisierungstext (oder eine Factorymethode in XAML 2009) übergeben werden können in beliebiger Reihenfolge zugewiesen werden müssen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-210">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="f17e9-211">Durch Anwenden einer `DependsOn` Muster auf einen Member, Sie können XAML-Writern anweisen, immer das Element verwiesen wird, vor diesem Element zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-211">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="f17e9-212">Sie können dieses Muster in Situationen anwenden, in denen der Wert des aktuellen Elements erfordert, Kontext oder andere Informationen, die nur verfügbar ist, nachdem das andere Element festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="f17e9-212">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="f17e9-213">Die `DependsOn` Muster Umsicht angewendet und für Szenarios, in denen es einen architektonischen Zweck dient, reserviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="f17e9-213">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="f17e9-214">Große Anzahl von Abhängigkeiten haben die Möglichkeit, die XAML-Verarbeitung verlangsamt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-214">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="f17e9-215">Es ist auch möglich, die ringabhängigkeiten, erzeugen in diesem Fall ist die Verwendung von XAML-Verarbeitungsverhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="f17e9-215">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="f17e9-216">Beispiel `DependsOn` Szenarien von WPF umfassen bestimmte Eigenschaften von <xref:System.Windows.Controls.ControlTemplate> und <xref:System.Windows.DataTemplate>auf <xref:System.Windows.Trigger>, und klicken Sie auf <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-216">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-217">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-217">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="f17e9-218">Das Objekt, das mit diesem Objekt verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-218">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-219">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-219">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-220">
            <see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="obj" />-Parameter ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-220">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="f17e9-221">Ein Objekt, das mit diesem Objekt verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-221">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-222">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-222">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-223">
            <see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-223">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-224">Gibt den Hashcode für dieses Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-224">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-225">Ein ganzzahliger Hashcode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-225">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-226">Gibt eine Liste von XAML-Namespaces zurück, in dem dieser XAML-Member vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-226">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-227">Eine Liste von XAML-Namespacebezeichnern als Zeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-227">A list of XAML namespace identifiers as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-228">Gibt die standardmäßige Implementierung der <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> Ergebnis von Aufrufen der <xref:System.Xaml.XamlMember.DeclaringType%2A> , die mit dieser verknüpft ist <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-228">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-229">Ruft die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung ab, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-229">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-230">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-230">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-231">Die `Invoker` Muster ist eine erweiterte Verwendung von XAML-Typsystem-Erweiterungsmethode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-231">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="f17e9-232">Die `Invoker` Muster bietet eine Möglichkeit zum Einfügen von verschiedenen Typs Zuordnung Schemaverhalten, gleichzeitiger Verwendung von XAML-System Typdefinitionen aus .NET Framework-XAML-Dienste.</span><span class="sxs-lookup"><span data-stu-id="f17e9-232">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="f17e9-233">Wenn eine <xref:System.Xaml.XamlMember.LookupInvoker%2A> überschreiben gibt `null`, oder wenn die standardmäßige Implementierung gibt `null` , da es fehlt die <xref:System.Xaml.XamlMember.UnderlyingMember%2A> für diesen <xref:System.Xaml.XamlMember>, die <xref:System.Xaml.XamlMember.Invoker%2A> -Eigenschaft gibt <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-233">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f17e9-234">Standardmäßig ist <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="f17e9-235">Dies gilt für die meisten Vorgänge, die .NET Framework-XAML-Dienste und die Verwendung von XAML-Standardschemakontext verwenden, und, bei denen keine bestimmten überschreiben `Invoker` Muster für die Konstruktion von XAML-Typsystementitäten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-235">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="f17e9-236">Aufrufen von <xref:System.Xaml.XamlMember.Invoker%2A> ruft <xref:System.Xaml.XamlMember.LookupInvoker%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-236">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-237">Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xaml.XamlMember" /> als Ambient-Eigenschaft gemeldet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-237">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-238">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-238">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-239">Aufrufen von <xref:System.Xaml.XamlMember.IsAmbient%2A> ruft <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-239">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="f17e9-240">Dieses Verhalten tritt in Implementierungen, in denen die Reflektionslogik der anfänglichen internen nicht bereits die Informationen festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="f17e9-240">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="f17e9-241">Die Überprüfung auf Umgebungseigenschaften sind normalerweise Teil der XAML-Verarbeitungslogik, stellen Sie sicher, dass Objekte und Werte, die ambient-Verwendung für benötigen, ordnungsgemäß funktionieren können.</span><span class="sxs-lookup"><span data-stu-id="f17e9-241">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="f17e9-242">Die .NET Framework-XAML-Dienste-APIs und die Verwendung von XAML-Standardschemakontext füllt diesen Wert auf namensnennung mit Basis <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-242">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="f17e9-243">Die standardmäßige Implementierung des <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> verwendet diese vorhandene <xref:System.Windows.Markup.AmbientAttribute> Technik, und es wird `true` Wenn <xref:System.Windows.Markup.AmbientAttribute> auf eine Memberdeklaration vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f17e9-243">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="f17e9-244"><xref:System.Windows.Markup.AmbientAttribute> befindet sich auf mehrere WPF-Typen, einschließlich der Mitglieder <xref:System.Windows.Application>, <xref:System.Windows.Setter>, und <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-244"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="f17e9-245">Finden sie auch auf die <xref:System.Windows.ResourceDictionary> -Typ, der suggeriert, dass alle Member, die verwendet <xref:System.Windows.ResourceDictionary> als Anwendungstyp ambient berücksichtigt werden, selbst wenn das Element nicht speziell attributiert ist.</span><span class="sxs-lookup"><span data-stu-id="f17e9-245">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-246">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein anfügbarer Member ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-246">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-247">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein anfügbarer Member ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-247">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-248">Die <xref:System.Xaml.XamlMember.IsAttachable%2A> Wert initialisiert wird, anhand welcher Konstruktor, zum Erstellen verwendet wurde einer <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-248">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-249">Ruft einen Wert ab, der angibt, ob es sich bei diesem <see cref="T:System.Xaml.XamlMember" />-Objekt um eine XAML-Direktive handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-249">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-250">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt eine XAML-Direktive ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-250">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-251">Die <xref:System.Xaml.XamlMember.IsDirective%2A> Wert initialisiert wird, anhand welcher Konstruktor, zum Erstellen verwendet wurde einer <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-251">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="f17e9-252">Die Basis <xref:System.Xaml.XamlMember> Konstruktoren initialisieren, damit <xref:System.Xaml.XamlMember.IsDirective%2A> ist `false`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-252">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="f17e9-253">Allerdings die <xref:System.Xaml.XamlDirective> Klasse (eine <xref:System.Xaml.XamlMember> abgeleitete Klasse) initialisiert, damit <xref:System.Xaml.XamlMember.IsDirective%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-253">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="f17e9-254">Wenn Sie einen Bericht erstellen möchten <xref:System.Xaml.XamlMember.IsDirective%2A> als `true` auf Aufrufer mit einer benutzerdefinierten XAML-Schemaklasse für XAML-Member, sicherstellen, dass Sie eine Ableitung von <xref:System.Xaml.XamlDirective> da dies die einzige Möglichkeit, dieses Verhalten zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="f17e9-254">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-255">Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xaml.XamlMember" /> einen Ereignismember darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-255">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-256">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein Ereignis darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-256">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-257">Aufrufen von <xref:System.Xaml.XamlMember.IsEvent%2A> ruft <xref:System.Xaml.XamlMember.LookupIsEvent%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-257">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-258">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge als <see cref="P:System.Xaml.XamlMember.Name" />-Eigenschaft initialisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-258">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-259">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge initialisiert wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-259">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-260">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibgeschützten Member darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-261">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibgeschützten Member darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-261">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-262">Aufrufen von <xref:System.Xaml.XamlMember.IsReadOnly%2A> ruft <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-262">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-263">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member mit einem aufrufbaren öffentlichen <see langword="get" />-Accessor darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-263">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-264">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen aufrufbaren öffentlichen <see langword="get" />-Accessor darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-264">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-265">Die <xref:System.Xaml.XamlMember.IsReadPublic%2A> Wert überprüft, ob die <xref:System.Xaml.XamlMember.DeclaringType%2A> ist öffentlich.</span><span class="sxs-lookup"><span data-stu-id="f17e9-265">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="f17e9-266">Wenn <xref:System.Xaml.XamlMember.DeclaringType%2A> nicht öffentlich ist, die `get` Accessor kann nicht in eine praktische Möglichkeit aufgerufen werden kann und <xref:System.Xaml.XamlMember.IsReadPublic%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-266">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="f17e9-267">Aufrufen von <xref:System.Xaml.XamlMember.IsReadPublic%2A> ruft <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-267">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f17e9-268">Die <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-268">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="f17e9-269">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</span><span class="sxs-lookup"><span data-stu-id="f17e9-269">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="f17e9-270">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f17e9-270">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-271">Ruft einen Wert ab, der angibt, ob der Member durch das für Typ- und Memberauflösung verwendete Unterstützungssystem nicht aufgelöst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-271">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-272">
            <see langword="true" />, wenn der Member nicht aufgelöst werden kann. <see langword="false" />, wenn der Member aufgelöst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-272">
              <see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-273">Ein <xref:System.Xaml.XamlMember> erstellt, die mit der <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Signatur zurückgibt `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-273">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-274">Für einen Ladepfad, bei der <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember> mit `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A> kann nicht in einem Objektdiagramm geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-274">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="f17e9-275">Unter den APIs von .NET Framework-XAML-Dienste-standardimplementierungen das <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> aufrufen, löst eine <xref:System.Xaml.XamlObjectWriterException> Wenn die relevanten <xref:System.Xaml.XamlMember> Berichte `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-275">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-276">Sie sollten nicht erstellen eine <xref:System.Xaml.XamlMember> mit dem Wert des `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A> , wenn Ihre Implementierung die Ausnahmen von verarbeiten kann <xref:System.Xaml.XamlObjectWriter>, oder Sie über andere Möglichkeiten zum Anpassen der <xref:System.Xaml.XamlObjectWriter> Verhalten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-276">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="f17e9-277">Aufrufen von <xref:System.Xaml.XamlMember.IsUnknown%2A> ruft <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-277">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-278">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-279">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-279">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-280">Aufrufen von <xref:System.Xaml.XamlMember.IsWriteOnly%2A> ruft <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-280">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-281">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member mit einem aufrufbaren öffentlichen <see langword="set" />-Accessor darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-281">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-282">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen aufrufbaren öffentlichen <see langword="set" />-Accessor darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-282">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-283">Die <xref:System.Xaml.XamlMember.IsWritePublic%2A> Wert berücksichtigt, ob die <xref:System.Xaml.XamlMember.DeclaringType%2A> ist öffentlich als Teil der Ermittlung.</span><span class="sxs-lookup"><span data-stu-id="f17e9-283">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="f17e9-284">Wenn <xref:System.Xaml.XamlMember.DeclaringType%2A> nicht öffentlich ist, die `set` Accessor kann nicht in eine praktische Möglichkeit aufgerufen werden kann und <xref:System.Xaml.XamlMember.IsWritePublic%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-284">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="f17e9-285">Aufrufen von <xref:System.Xaml.XamlMember.IsWritePublic%2A> ruft <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-285">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f17e9-286">Die <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-286">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="f17e9-287">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</span><span class="sxs-lookup"><span data-stu-id="f17e9-287">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="f17e9-288">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f17e9-288">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-289">Gibt bei der Implementierung in einer abgeleiteten Klasse eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-289">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-290">Eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-290">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-291">Überschreiben Sie diese Methode zum Bereitstellen der internen Reflektions eine alternative Möglichkeit zum Abrufen von CLR-Attributwerte an.</span><span class="sxs-lookup"><span data-stu-id="f17e9-291">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="f17e9-292">In Ermangelung einer Außerkraftsetzung der internen Reflector verwendet typische CLR Reflektionslogik, z. B. Aufrufe der <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-292">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-293">Die Standardimplementierung gibt `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="f17e9-293">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-294">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-294">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-295">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, der eine <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-295">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-296">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab der <xref:System.Xaml.XamlMember.DeferringLoader%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f17e9-296">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="f17e9-297">Überschreiben Sie diese Methode, wenn Sie möchten <xref:System.Xaml.XamlMember.DeferringLoader%2A> einen Wert, der unterscheidet sich vom Wert zurückgegeben, die durch die standardmäßige interne Reflektion, aktiviert ist und wenn Sie auch benutzerdefinierte bereitstellen <xref:System.Xaml.Schema.XamlMemberInvoker> Informationen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-297">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="f17e9-298">Die Standardimplementierung gibt ein Objekt entweder durch Lesen <xref:System.Windows.Markup.XamlDeferLoadAttribute> oder über eine <xref:System.Xaml.XamlDeferringLoader> aus der deklarierende Typ.</span><span class="sxs-lookup"><span data-stu-id="f17e9-298">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="f17e9-299">Wenn kein Objekt verfügbar ist, kann diese Methode zurück `null`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-299">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-300">Gibt eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-300">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="f17e9-301">Von Elementen in der Liste werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" /> vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-301">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-302">Eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-302">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-303">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab der <xref:System.Xaml.XamlMember.DependsOn%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f17e9-303">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="f17e9-304">Überschreiben Sie diese Methode, wenn Sie möchten <xref:System.Xaml.XamlMember.DependsOn%2A> einen Wert, der unterscheidet sich vom Wert zurückgegeben, die durch die standardmäßige interne Reflektion, aktiviert ist und wenn Sie auch benutzerdefinierte bereitstellen <xref:System.Xaml.Schema.XamlMemberInvoker> Informationen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-304">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="f17e9-305">Die WPF XAML-Reader und Writer-Implementierungen-Attribut bei diesem Fall <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-305">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="f17e9-306">Die Standardimplementierung verwendet diese vorhandene <xref:System.Windows.Markup.DependsOnAttribute> Technik.</span><span class="sxs-lookup"><span data-stu-id="f17e9-306">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="f17e9-307">Überschreiben Sie diese Methode, wenn Sie nicht arbeiten <xref:System.Windows.Markup.DependsOnAttribute> für diesen Zweck, und diese Technik zum Angeben der Eigenschaft Verarbeitungsreihenfolge von Artikeln mit Ihren eigenen Technik ersetzen möchten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-307">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="f17e9-308">Wenn Sie nicht beabsichtigen, um eine Eigenschaft Verarbeitungsreihenfolge von Artikeln zu unterstützen, können Sie die standardmäßige Implementierung verwenden, da sie keine Ergebnisse zurückgibt, was angebracht ist.</span><span class="sxs-lookup"><span data-stu-id="f17e9-308">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="f17e9-309">Die Liste ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-309">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-310">Gibt einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> zurück, der diesem <see cref="T:System.Xaml.XamlMember" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-310">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-311">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen für diesen <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-311">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-312">Diese Methode wird aufgerufen, indem Aufrufe <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-312">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="f17e9-313">Die standardmäßige Implementierung nicht erfordert, dass eine <xref:System.Xaml.XamlMember> erstellt werden, mithilfe einer der Konstruktoren, die einen ersten übergeben <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-313">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="f17e9-314">Allerdings ein <xref:System.Xaml.XamlMember.UnderlyingMember%2A> Wert muss vorhanden sein, für die <xref:System.Xaml.XamlMember>ist, andernfalls gibt die standardmäßige Implementierung `null`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-314">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="f17e9-315">Überschreiben Sie diese Methode, wenn Sie auch von ableiten <xref:System.Xaml.Schema.XamlMemberInvoker> und die abgeleitete Klasse zurückgeben möchten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-315">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="f17e9-316">Wenn Sie zurückkehren, `null`, <xref:System.Xaml.XamlMember.Invoker%2A> gibt <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> für Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="f17e9-316">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-317">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-317">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-318">
            <see langword="true" />, wenn dieser <see cref="T:System.Xaml.XamlMember" /> als Ambient-Eigenschaft gemeldet werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-318">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-319">Diese Methode wird vom internen Aufrufe aufgerufen, die ambient-XAML-Eigenschaftsinformationen überprüfen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-319">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="f17e9-320">Das Verhalten der Ambient-Eigenschaft ist in der öffentlichen API-Verhalten von XAML-Readern und XAML-Writern berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-320">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="f17e9-321">Diese internen Aufrufe, die auf verweisen <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> sind in der Regel Bestandteil des XAML-Verarbeitungslogik, um sicherzustellen, dass Objekte und Werte, die ambient-Verwendung für benötigen, ordnungsgemäß funktionieren können.</span><span class="sxs-lookup"><span data-stu-id="f17e9-321">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="f17e9-322">Die standardmäßige .NET Framework-XAML-Dienste-Implementierung verwendet zum Abrufen von Informationen von Reflektion über Unterstützungstypen Attributierung CLR.</span><span class="sxs-lookup"><span data-stu-id="f17e9-322">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="f17e9-323">Insbesondere sucht die standardmäßige Implementierung <xref:System.Windows.Markup.AmbientAttribute> und gibt `true` für <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Wenn <xref:System.Windows.Markup.AmbientAttribute> vorhanden ist, auf die Definition eines Elements.</span><span class="sxs-lookup"><span data-stu-id="f17e9-323">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="f17e9-324">Überschreiben Sie diese Methode, wenn Sie nicht arbeiten <xref:System.Windows.Markup.AmbientAttribute> für diesen Zweck, und dieser Technik zum Angeben der Verwendung von XAML-Umgebungseigenschaften mit Ihren eigenen Technik ersetzen möchten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-324">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="f17e9-325">Beispiel-APIs von WPF, die mit dem Attribut <xref:System.Windows.Markup.AmbientAttribute> sind <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> und <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-325">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-326">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-326">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-327">
            <see langword="true" />, wenn gemeldet werden soll, dass dieser <see cref="T:System.Xaml.XamlMember" /> ein Ereignis darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-327">
              <see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-328">Die standardmäßige Implementierung überprüft, ob <xref:System.Xaml.XamlMember.UnderlyingMember%2A> ist vom Typ <xref:System.Reflection.EventInfo>, und wenn dies der Fall, gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-328">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="f17e9-329">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-329">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="f17e9-330">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn spezialisierte Metadaten verfügbar interpretiert werden kann, um zu bestimmen, XAML, geben Sie System-Darstellungen pro Fall zu entscheiden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-330">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-331">Gibt zurück, ob die <see cref="T:System.Xaml.XamlMember" />-Klasse eine beabsichtigte schreibgeschützte Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-331">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-332">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als gewünschte schreibgeschützte Eigenschaft gemeldet werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-332">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-333">Gibt die standardmäßige Implementierung `true` Wenn <xref:System.Xaml.XamlMember.UnderlyingMember%2A> vorhanden ist, aber eine öffentliche `set` Accessor existiert nicht dafür, wie durch die interne Reflektion bestimmt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-333">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="f17e9-334">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-334">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="f17e9-335">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn spezialisierte Metadaten verfügbar interpretiert werden kann, um zu bestimmen, XAML, geben Sie System-Darstellungen pro Fall zu entscheiden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-335">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-336">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="get" />-Accessor verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-336">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-337">
            <see langword="true" />, wenn dieser <see cref="T:System.Xaml.XamlMember" /> eine Eigenschaft mit einem öffentlichen <see langword="get" />-Accessor darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-337">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-338">Die Standardimplementierung gibt Ergebnisse basieren auf internen Reflektion oder die Negation des <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, Verarbeitung in dieser Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="f17e9-338">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="f17e9-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Gibt zurück, ob der Member selbst öffentlich ist. Es gibt `true` für einen öffentlichen Member auf ein Nonpublic Typ deklarieren.</span><span class="sxs-lookup"><span data-stu-id="f17e9-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="f17e9-340">Verwendung <xref:System.Xaml.XamlMember.IsReadPublic%2A> stattdessen, wenn Sie auch die Sichtbarkeit des deklarierenden Typs berücksichtigen möchten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-340">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="f17e9-341">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-341">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="f17e9-342">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-342">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f17e9-343">Die <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-343">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="f17e9-344">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</span><span class="sxs-lookup"><span data-stu-id="f17e9-344">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="f17e9-345">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f17e9-345">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-346">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein Element darstellt, das vom Sicherungssystem für Typ- und Elementauflösung nicht aufgelöst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-346">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-347">
            <see langword="true" />, wenn diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein nicht auflösbares Element darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-347">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-348">Diese Methode kann aufgerufen werden, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-348">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="f17e9-349">Die Standardimplementierung gibt Ergebnisse, die basierend auf einer internen Reflektion oder bei der Überprüfung sind eine `null` Wert <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, Verarbeitung in dieser Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="f17e9-349">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="f17e9-350">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-350">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-351">Gibt zurück, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member darstellt, der über einen öffentlichen <see langword="set" />-Accessor, jedoch nicht über einen öffentlichen <see langword="get" />-Accessor verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-351">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-352">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-352">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-353">Gibt die standardmäßige Implementierung `true` Wenn ein <xref:System.Xaml.XamlMember.UnderlyingMember%2A> vorhanden ist, besitzt eine öffentliche `set` -Accessor und einen Nonpublic `get` Accessor, wie durch die interne Reflektion bestimmt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-353">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="f17e9-354">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-354">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="f17e9-355">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-355">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-356">Gibt zurück, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member darstellt, der über einen öffentlichen <see langword="set" />-Accessor verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-356">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-357">
            <see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibbaren Member darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-357">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-358">Die Standardimplementierung gibt Ergebnisse basieren, interne Reflektion oder die Negation des <xref:System.Xaml.XamlMember.IsReadOnly%2A>, Verarbeitung in dieser Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="f17e9-358">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="f17e9-359">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-359">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="f17e9-360">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-360">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f17e9-361">Die <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-361">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="f17e9-362">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</span><span class="sxs-lookup"><span data-stu-id="f17e9-362">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="f17e9-363">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="f17e9-363">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-364">Gibt die Zeichen für öffnende und schließende Klammern einer Markuperweiterung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-364">Returns the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-365">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-365">A collection containing the opening and closing bracket characters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-366">Gibt die <see cref="T:System.Xaml.XamlType" />-Klasse des Typs zurück, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-366">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-367">Der Typ, auf dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-367">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-368">Die standardmäßige Implementierung unterscheidet zwischen anfügbare und nicht anfügbare Member.</span><span class="sxs-lookup"><span data-stu-id="f17e9-368">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="f17e9-369">Für nicht anfügbare Member <xref:System.Xaml.XamlMember.LookupTargetType%2A> gibt immer <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-369">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="f17e9-370">Für anfügbare Member <xref:System.Xaml.XamlMember.LookupTargetType%2A> gibt ein Ergebnis basierend auf der Prüfung der <xref:System.Xaml.XamlMember.UnderlyingMember%2A> Accessor Parametertyp und interpretiert, dass das Typ auf XAML-Schemakontext.</span><span class="sxs-lookup"><span data-stu-id="f17e9-370">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="f17e9-371">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-371">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="f17e9-372">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-372">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-373">Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-373">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-374">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-374">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-375">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-375">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="f17e9-376">Überschreiben Sie diese Methode, wenn Sie möchten <xref:System.Xaml.XamlMember.Type%2A> einen Wert, der unterscheidet sich vom Wert zurückgegeben, die durch die standardmäßige interne Reflektion, aktiviert ist und wenn Sie auch benutzerdefinierte bereitstellen <xref:System.Xaml.Schema.XamlMemberInvoker> Informationen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-376">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="f17e9-377">Die Standardimplementierung verwendet die unterschiedlichen Codepfaden und konzeptionelle Bedeutung für das zurückgegebene <xref:System.Xaml.XamlType> , ist abhängig davon, ob dies <xref:System.Xaml.XamlMember> stellt eine Eigenschaft, eine Methode oder ein Ereignis.</span><span class="sxs-lookup"><span data-stu-id="f17e9-377">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="f17e9-378">Für eine Eigenschaft, die den zurückgegebenen <xref:System.Xaml.XamlType> ist der Typ, der die Eigenschaft oder von der Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="f17e9-378">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="f17e9-379">Für ein Ereignis, das zurückgegebene <xref:System.Xaml.XamlType> ist die erforderliche Ereignishandlertyp (ein Delegat in einer CLR-Implementierung).</span><span class="sxs-lookup"><span data-stu-id="f17e9-379">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="f17e9-380">Bei einer Methode <xref:System.Xaml.XamlType> ist der Rückgabetyp.</span><span class="sxs-lookup"><span data-stu-id="f17e9-380">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="f17e9-381">In jedem Fall wird XAML-Schemakontext verwendet, um den XAML-Typ aus den zugrunde liegenden Systemtyp auszuwerten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-381">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="f17e9-382">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-382">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="f17e9-383">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-383">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-384">Gibt eine Typkonverterimplementierung zurück, die dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-384">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-385">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-385">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-386">Die Standardimplementierung verwendet die folgende Logik und die Verarbeitungsreihenfolge von Artikeln:</span><span class="sxs-lookup"><span data-stu-id="f17e9-386">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="f17e9-387">Wenn Attributierung auf Memberebene vorhanden ist (<xref:System.ComponentModel.TypeConverterAttribute>), wird die Attributinformationen für einen Aufruf verwendet <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> für die Verwendung von XAML-Schemakontext.</span><span class="sxs-lookup"><span data-stu-id="f17e9-387">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="f17e9-388">Wenn <xref:System.Xaml.XamlMember.Type%2A> gültig ist, ein Typkonverter, der mit dem Typ verknüpft ist, wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-388">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="f17e9-389">Wenn der Member eines Ereignisses ist, wird ein ereignisspezifische Typkonverter zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-389">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="f17e9-390">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-390">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="f17e9-391">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-391">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-392">Gibt einen <see langword="get" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-392">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-393">Die <see cref="T:System.Reflection.MethodInfo" /> für den zugeordneten <see langword="get" />-Accessor oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-393">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-394">Die standardmäßige Implementierung interpretiert die <xref:System.Xaml.XamlMember.UnderlyingMember%2A> Eigenschaft als <xref:System.Reflection.PropertyInfo> und gibt den Wert der <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (mit den Parametersatz hinzu `true`), was bedeutet, dass die zurückgegebene Methode nicht öffentliche werden kann.</span><span class="sxs-lookup"><span data-stu-id="f17e9-394">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="f17e9-395">Dieses Verhalten kann dazu führen, `null` für bestimmte Fälle.</span><span class="sxs-lookup"><span data-stu-id="f17e9-395">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="f17e9-396">einschließlich der Fälle, in denen kein zugeordneter Accessor vorhanden ist oder das Element ist keine Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f17e9-396">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="f17e9-397">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab der <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> Eigenschaft eines zugeordneten <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-397">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="f17e9-398">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-398">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="f17e9-399">Achten Sie darauf, implementieren <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, und <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> , damit sie alle korrelierende Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-399">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-400">Gibt eine <see cref="T:System.Reflection.MemberInfo" /> des CLR-Typsystems zurück, die diesem <see cref="T:System.Xaml.XamlMember" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-400">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-401">Ein <see cref="T:System.Reflection.MemberInfo" />-Objekt des CLR-Typsystems, das diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-401">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-402">Die Standardimplementierung gibt die zugrunde liegende Memberinformationen, die Konstruktion basiert.</span><span class="sxs-lookup"><span data-stu-id="f17e9-402">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="f17e9-403">Wenn die <xref:System.Reflection.MemberInfo> -Objekt mit einer Signatur, die nicht über genügend Informationen, um die zugrunde liegenden Elementgruppe bietet erstellt wird, gibt diese Methode zurück `null`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-403">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="f17e9-404">Wenn ein zugrunde liegende Member während der Erstellung festgelegt wurde, müssen Sie nicht diese Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-404">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="f17e9-405">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-405">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="f17e9-406">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-406">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="f17e9-407">Achten Sie darauf, implementieren <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, und <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> , damit sie alle korrelierende Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-407">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-408">Gibt einen <see langword="set" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-408">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-409">Die <see cref="T:System.Reflection.MethodInfo" /> für den zugeordneten <see langword="set" />-Accessor oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-409">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-410">Die standardmäßige Implementierung interpretiert <xref:System.Xaml.XamlMember.UnderlyingMember%2A> als <xref:System.Reflection.PropertyInfo> und gibt den Wert der <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (mit den Parametersatz hinzu `true`), was bedeutet, dass die zurückgegebene Methode nicht öffentliche werden kann.</span><span class="sxs-lookup"><span data-stu-id="f17e9-410">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="f17e9-411">Dies kann dazu führen `null` in bestimmten Fällen, einschließlich der Fälle, in denen kein solcher Accessor vorhanden ist, oder das Element ist keine Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f17e9-411">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="f17e9-412">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> eines zugeordneten <xref:System.Xaml.Schema.XamlMemberInvoker>. Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-412">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="f17e9-413">Achten Sie darauf, implementieren <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, und <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> , damit sie alle korrelierende Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-413">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-414">Gibt eine Wertserialisierungsprogramm-Implementierung zurück, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-414">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-415">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-415">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-416">Die Standardimplementierung verwendet die folgende Logik und die Verarbeitungsreihenfolge von Artikeln:</span><span class="sxs-lookup"><span data-stu-id="f17e9-416">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="f17e9-417">Wenn Attributierung auf Memberebene vorhanden ist (<xref:System.Windows.Markup.ValueSerializerAttribute>), wird die Attributinformationen für einen Aufruf verwendet <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> für die Verwendung von XAML-Schemakontext.</span><span class="sxs-lookup"><span data-stu-id="f17e9-417">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="f17e9-418">Wenn <xref:System.Xaml.XamlMember.Type%2A> gültig ist, wird ein Wertkonverter, der mit dem Typ verknüpft wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-418">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="f17e9-419">Wenn die genannten Bedingungen nicht zutreffen, `null` wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-419">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="f17e9-420">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-420">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="f17e9-421">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <xref:System.Xaml.XamlMember> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-421">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-422">Definiert die Zeichen für öffnende und schließende Klammern einer Markuperweiterung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-422">Defines the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-423">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-423">A collection containing the opening and closing bracket characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-424">Ruft die <see langword="xamlName" />-Namenszeichenfolge ab, durch die dieses <see cref="T:System.Xaml.XamlMember" />-Objekt deklariert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-424">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-425">Die <see langword="xamlName" />-Namenszeichenfolge, durch die dieses <see cref="T:System.Xaml.XamlMember" />-Objekt deklariert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-425">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-426">Dieser Wert wird immer während der Konstruktion festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-426">This value is always set during construction.</span></span> <span data-ttu-id="f17e9-427">Die Konstruktoren, die von implementiert werden <xref:System.Xaml.XamlMember> in der Regel löst eine Ausnahme aus, wenn ein ursprünglicher Name nicht angegeben wird; daher erwarten nicht, diese Eigenschaft wird `null` oder eine leere Zeichenfolge, wenn Sie standardmäßige .NET Framework-XAML-Dienste verwenden Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-427">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="f17e9-428">[XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md) und Benennungsregeln für CLR-Typ und Member sind keine genaue Schnittmenge.</span><span class="sxs-lookup"><span data-stu-id="f17e9-428">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="f17e9-429">Es ist möglich, einen Elementnamen zu deklarieren, der unter CLR ist jedoch nicht unter Verwendung von XAML-Benennung gültig.</span><span class="sxs-lookup"><span data-stu-id="f17e9-429">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="f17e9-430">Diese Situation sollte nach Möglichkeit vermieden werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-430">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="f17e9-431">
            <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-431">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="f17e9-432">
            <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-432">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-433">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlMember" />-Objekte denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-433">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-434">
            <see langword="true" />, wenn <paramref name="xamlMember1" /> und <paramref name="xamlMember2" /> denselben Wert haben, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-434">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="f17e9-435">
            <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="f17e9-436">
            <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-436">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f17e9-437">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlMember" />-Objekte verschiedene Werte haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-437">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-438">
            <see langword="true" />, wenn der Wert von <paramref name="xamlMember1" /> vom Wert von <paramref name="xamlMember2" /> abweicht, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-438">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-439">Ruft den einzelnen XAML-Namespace-URI ab, der den primären XAML-Namespace für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt bezeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-439">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-440">Der Bezeichner für den primären XAML-Namespace für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-440">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-441">Die <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> Eigenschaft ermöglicht den gleichen Wert wie das Aufrufen <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> , und klicken Sie dann die erste Wertzeichenfolge aus der zurückgegebenen Liste abrufen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-441">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="f17e9-442">Beim Schreiben von des Elements zurück, um Text oder anderen Darstellungen bereit, die XAML-Namespaceinformationen beibehalten, sollte der bevorzugte Verwendung von XAML-Namespace verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-442">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-443">Ruft einen <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />-Wert ab, der angibt, wie der Member von einem visuellen Designer verarbeitet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-443">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-444">Ein Wert der <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />-Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-444">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="f17e9-445">Der Standardwert ist <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-445">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-446">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des Typs ab, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-446">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-447">Der Typ, auf dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-447">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-448">Der zurückgegebene Wert ist für anfügbare und nicht anfügbare Member unterschiedlich.</span><span class="sxs-lookup"><span data-stu-id="f17e9-448">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="f17e9-449">Für nicht anfügbare Member <xref:System.Xaml.XamlMember.TargetType%2A> gibt <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-449">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="f17e9-450">Für anfügbare Member <xref:System.Xaml.XamlMember.LookupTargetType%2A> ein Wert zurückgegeben, die auf diese Logik basiert:</span><span class="sxs-lookup"><span data-stu-id="f17e9-450">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="f17e9-451">Wenn Reflektion nicht, einen Sicherungsspeicher beheben kann (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), diese Methode gibt eine interne-Konstante, die ein generisches Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-451">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="f17e9-452">Wenn die vorherige Bedingung nicht gilt, <xref:System.Xaml.XamlMember.LookupTargetType%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="f17e9-452">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="f17e9-453">Die Standardimplementierung gibt ein <xref:System.Xaml.XamlType> auf Grundlage untersuchen die Methoden, implementieren die `get` und `set` Accessoren.</span><span class="sxs-lookup"><span data-stu-id="f17e9-453">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="f17e9-454">Eine Klasse möglicherweise außer Kraft gesetzt <xref:System.Xaml.XamlMember.LookupTargetType%2A> auf ein anderes Verhalten verwenden, z. B. andere Metadaten bildet, die möglicherweise Zieltypen für anfügbare Member gemeldet.</span><span class="sxs-lookup"><span data-stu-id="f17e9-454">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-455">Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlMember" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-455">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f17e9-456">Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-456">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-457">Diese Implementierung gibt <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-457">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-458">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-458">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-459">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-459">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-460">Aufrufen von <xref:System.Xaml.XamlMember.Type%2A> ruft <xref:System.Xaml.XamlMember.LookupType%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-460">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="f17e9-461">Dies tritt auf, wenn die Reflektionslogik der anfänglichen internen die Informationen noch nicht festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="f17e9-461">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="f17e9-462">Im Standardverhalten (keine <xref:System.Xaml.XamlMember.LookupType%2A> überschreiben), das zurückgegebene <xref:System.Xaml.XamlType> können verschiedene grundlegende Bedeutungen haben.</span><span class="sxs-lookup"><span data-stu-id="f17e9-462">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="f17e9-463">Welche Bedeutung gilt abhängig, ob dies <xref:System.Xaml.XamlMember> stellt eine Eigenschaft, eine Methode oder ein Ereignis, wie die folgende Liste zeigt:</span><span class="sxs-lookup"><span data-stu-id="f17e9-463">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="f17e9-464">Für eine Eigenschaft, die den zurückgegebenen <xref:System.Xaml.XamlType> ist der Typ, der die Eigenschaft oder von der Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="f17e9-464">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="f17e9-465">Für ein Ereignis, das zurückgegebene <xref:System.Xaml.XamlType> ist die erforderliche Ereignishandlertyp (ein Delegat in einer CLR-Implementierung).</span><span class="sxs-lookup"><span data-stu-id="f17e9-465">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="f17e9-466">Bei einer Methode <xref:System.Xaml.XamlType> ist der Rückgabetyp der Methode, die möglicherweise `null`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-466">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="f17e9-467">In jedem Fall wird die Verwendung von XAML-Schemakontext verwendet, um den XAML-Typ aus dem unterstützenden Typ auszuwerten.</span><span class="sxs-lookup"><span data-stu-id="f17e9-467">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-468">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für die Typkonvertierungserstellung von in XAML deklarierten Objekten verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-468">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-469">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Wert mit einer <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung für den generischen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-469">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-470">Aufrufen von <xref:System.Xaml.XamlMember.TypeConverter%2A> ruft <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-470">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="f17e9-471">Dieses Verhalten tritt auf, wenn die Reflektionslogik der anfänglichen internen die Informationen noch nicht festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="f17e9-471">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="f17e9-472">Dem Wert für Implementierungen, die eine Eigenschaft nicht Null zurückgeben <xref:System.Xaml.XamlMember.TypeConverter%2A> weisen nicht unbedingt eine funktionierende <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-472">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="f17e9-473">Im folgenden werden eine Liste der möglichen Rückgabewerte ungleich Null für <xref:System.Xaml.XamlMember.TypeConverter%2A> und was diese Werte darstellen:</span><span class="sxs-lookup"><span data-stu-id="f17e9-473">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="f17e9-474">Der Rückgabewert gibt einen Typkonverter, der speziell für dieses Element oder, üblicher, in den Zieltyp des Konverters attributiert ist.</span><span class="sxs-lookup"><span data-stu-id="f17e9-474">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="f17e9-475">Dieses Verhalten ist in der Regel welche die meisten XAML-Typsysteme und XAML-Prozessoren gesucht, um einen Typkonverter zu instanziieren und Aufrufen ihrer Methoden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-475">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="f17e9-476">Der Rückgabewert meldet einen integrierten Wertkonverter.</span><span class="sxs-lookup"><span data-stu-id="f17e9-476">The return value reports a built-in value converter.</span></span> <span data-ttu-id="f17e9-477">Dieser Konverter sind für bestimmte interne Vorgänge, die von einem XAML-Writer ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-477">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="f17e9-478">Insbesondere konvertieren diese integrierten Wertkonverter die unformatierte Zeichenfolge Attributwerte in die Verwendung von XAML-Sprachebene primitiven.</span><span class="sxs-lookup"><span data-stu-id="f17e9-478">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="f17e9-479">Für die .NET Framework-XAML-Dienste-Implementierung weiterleiten an einen Typkonverter, der in der System-Assembly definiert ist häufig diese integrierten typkonvertierungen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-479">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="f17e9-480">Z. B. eine Konvertierung für einen <xref:System.Int32> Wert verfügt über integrierte weitergeleitete Konvertierung, und daher die <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> Wert Verweise <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-480">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="f17e9-481">Der Rückgabewert meldet besonderen Fall eines uneingeschränkten Objektmodells; d. h. die <xref:System.Xaml.XamlMember> verfügt über eine <xref:System.Xaml.XamlMember.Type%2A> Wert <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-481">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="f17e9-482">In diesem Fall die <xref:System.Xaml.Schema.XamlValueConverter%601> meldet, das die <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> ist {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="f17e9-482">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="f17e9-483">Allerdings <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> ist `null` , da keine tatsächlichen Typ oder die Instanz zum Ausführen dieser Konvertierung verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f17e9-483">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="f17e9-484">Stattdessen kann das Verhalten des Objektmodells bis zur Laufzeit bestimmt werden bei der Common Language Runtime von der jeweiligen Technologie für die Behandlung von seinem Objektdiagramm bestimmt.</span><span class="sxs-lookup"><span data-stu-id="f17e9-484">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="f17e9-485">Wenn Sie eine funktionierende zugreifen können <xref:System.ComponentModel.TypeConverter> aus <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, können Sie seine Konvertierungsmethoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-485">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="f17e9-486">Dienstkontext jedoch abhängig viele Konvertierungsmethoden.</span><span class="sxs-lookup"><span data-stu-id="f17e9-486">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="f17e9-487">Wenn Sie den gleichen Dienstkontext nicht verfügen, der Typkonverter für seine typische Rolle beim Schreiben von Objekten für Objektdiagramme erwartet, können die Konvertermethoden Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="f17e9-487">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-488">Ruft die <see cref="T:System.Reflection.MemberInfo" /> des CLR-Typsystems ab, die für einen Member verfügbar ist, der von <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> oder <see cref="T:System.Reflection.EventInfo" /> erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-488">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-489">
            <see cref="T:System.Reflection.MemberInfo" />-Informationen des CLR-Typsystems entsprechend der Umwandlung von den ursprünglichen Konstruktorparametern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-489">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span>
          </span>
          <span data-ttu-id="f17e9-490">Ein <see cref="T:System.Xaml.XamlMember" />-Objekt, das mit der <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />-Signatur erstellt wird, gibt <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-490">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-491">Aufrufen von <xref:System.Xaml.XamlMember.UnderlyingMember%2A> ruft <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-491">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f17e9-492">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für die Wertserialisierung von in XAML deklarierten Objekten verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-492">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f17e9-493">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung für den generischen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f17e9-493">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f17e9-494">Aufrufen von <xref:System.Xaml.XamlMember.ValueSerializer%2A> ruft <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> oder eine bestimmte Außerkraftsetzung der Methode.</span><span class="sxs-lookup"><span data-stu-id="f17e9-494">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="f17e9-495">Dieses Verhalten tritt auf, wenn die Reflektionslogik der anfänglichen internen die Informationen noch nicht festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="f17e9-495">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="f17e9-496">Nicht alle Fälle, die eine Eigenschaft nicht Null zurückgeben Wert für <xref:System.Xaml.XamlMember.ValueSerializer%2A> sind unbedingt eine funktionierende <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-496">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="f17e9-497">Finden Sie unter <xref:System.Xaml.XamlMember.TypeConverter%2A>; die gleichen Überlegungen gelten für <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="f17e9-497">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>