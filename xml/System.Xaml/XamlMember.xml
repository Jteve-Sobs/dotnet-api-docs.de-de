<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlMember.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5284b342cd8ec18017e3ac4ac33597d46dbc3c75f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">284b342cd8ec18017e3ac4ac33597d46dbc3c75f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlMember">
          <source>Provides the XAML type system identifier for members of XAML types.</source>
          <target state="translated">Stellt den XAML-Typsystembezeichner für Member von XAML-Typen bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlMember">
          <source>The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph>) and also for general XAML type system logic.</source>
          <target state="translated">Der Bezeichner wird während der Verarbeitung von Memberknoten (wenn der XAML-Reader in einem <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> positioniert ist) von XAML-Readern und XAML-Writern sowie für die allgemeine XAML-Typsystemlogik verwendet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the <ph id="ph2">`Lookup*`</ph> API that is provided by possible <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> subclasses.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> können drei Methoden zum Zurückgeben von Informationen zu XAML-Member: standard common Language Runtime (CLR) Reflektion; eine reine Verweis Reflektion Technik Aufrufen von internen flags APIs mithilfe einer optimierten Bit; oder virtuelle Aufrufen von überschreibt die <ph id="ph2">`Lookup*`</ph> -API, die vom möglich bereitgestellt wird <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> Unterklassen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>For most uses of .NET Framework XAML Services APIs and the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> API, you use the default XAML schema context.</source>
          <target state="translated">Für die meisten Verwendungen von .NET Framework-XAML-Dienste-APIs und die <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> -API verwenden Sie die standardmäßigen XAML-Schemakontext.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</source>
          <target state="translated">Der standardmäßigen XAML-Schemakontext für .NET Framework XAML Services verwendet die CLR-Unterstützung für das Typsystem.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</source>
          <target state="translated">Dadurch wird der XAML-Readern und XAML-Writer, einen beliebigen Typ oder Member gilt, oder anderweitig verfügbar definiert ist, die CLR und seine Reflektion Methoden verwenden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>Lookup* APIs and XamlMember Derived Classes</source>
          <target state="translated">Suche * APIs und XamlMember abgeleitete Klassen</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> defines several virtual members that derived classes might override.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> definiert mehrere virtuelle Member, die abgeleitete Klassen können außer Kraft gesetzt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>These members have names that always start with the string <ph id="ph1">`Lookup`</ph>.</source>
          <target state="translated">Diese Member haben Namen, die immer mit der Zeichenfolge beginnen <ph id="ph1">`Lookup`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>The remainder of the API name then references the property that the virtual method influences.</source>
          <target state="translated">Der Rest der API benennen Verweise Sie die Eigenschaft, die die virtuelle Methode beeinflusst.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>For example, a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class might override <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> to influence what the base-defined property <ph id="ph3">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph> returns in a derived class.</source>
          <target state="translated">Z. B. eine <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> kann abgeleiteten Klasse außer Kraft gesetzt <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> zu beeinflussen, welche die Basis-definierte Eigenschaft <ph id="ph3">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph> in einer abgeleiteten Klasse zurückgibt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>You can predict return values for such properties in <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> or existing derived classes by reading the documentation for the relevant <ph id="ph2">`Lookup*`</ph> methods.</source>
          <target state="translated">Sie können die Rückgabewerte für solche Eigenschaften in Vorhersagen <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> oder vorhandene abgeleitete Klassen durch Lesen der Dokumentation für das entsprechende <ph id="ph2">`Lookup*`</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>The purpose of the <ph id="ph1">`Lookup*`</ph> methods is to provide a XAML type system extension technique that incorporates the <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> base class.</source>
          <target state="translated">Der Zweck der <ph id="ph1">`Lookup*`</ph> Methoden wird ein XAML-Typsystem-Erweiterungsmethode angegeben, der die umfasst die <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> Basisklasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>By deriving from <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> and overriding the <ph id="ph2">`Lookup`</ph> virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</source>
          <target state="translated">Durch Ableiten von <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> und überschreiben die <ph id="ph2">`Lookup`</ph> virtuelle Member Sie definieren, das Konzept des XAML-Member für ein XAML-Schema in einem XAML-Typsystem ohne auf die Einzelheiten einer Unterstützungstypsystem oder Technologie gebunden wird.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>You can also use a provided XAML schema context under this scheme and still return the results you want.</source>
          <target state="translated">Sie können auch verwenden, einen bereitgestellten XAML-Schemakontext bei diesem Schema und weiterhin die gewünschten Ergebnisse zurückgegeben.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>As an example, consider the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> property <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph>.</source>
          <target state="translated">Beispielsweise sollten Sie die <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> Eigenschaft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>This property informs callers that operations such as using a <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> for serialization can write a value for this member on a target object.</source>
          <target state="translated">Diese Eigenschaft Aufrufer darüber informiert, dass Vorgänge wie die Verwendung einer <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> für Serialisierung, einen Wert für diesen Member für ein Zielobjekt schreiben kann.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <ph id="ph1">&lt;xref:System.Type&gt;</ph> and its members (the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph>).</source>
          <target state="translated">In der Standardimplementierung erfolgt die Festlegung, ob das Element schreibgeschützt ist mithilfe von Reflektionstechniken für die unterstützende CLR <ph id="ph1">&lt;xref:System.Type&gt;</ph> und ihre Member (die <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>Therefore, by default, the XAML type system depends on the CLR type system.</source>
          <target state="translated">Aus diesem Grund hängt standardmäßig das XAML-Typsystem der CLR-Typsystem.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>However, you can remove this dependency for your XAML type system reporting of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> by overriding the API <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph>.</source>
          <target state="translated">Sie können jedoch diese Abhängigkeit entfernen, für die Verwendung von XAML-Typ System Berichte von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> durch Überschreiben der API <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</source>
          <target state="translated">In der Außerkraftsetzung können Sie andere Bestimmung, z. B. Metadaten, die spezifisch für Ihre Technologie, die eine master Nachschlagetabelle, die für ein festes XAML-Vokabular oder einer Vielzahl anderer Strategien zum bestimmen, ob ein XAML-Member in beschreibbar ist optimiert ist Ihre Verwendung von XAML-Vokabular.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>Constructing XamlMember Without XAML Schema Context</source>
          <target state="translated">Erstellen von XamlMember ohne Verwendung von XAML-Schemakontext</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>Most constructors of <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> require a <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> as part of their initialization.</source>
          <target state="translated">Die meisten Konstruktoren von <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> erfordern eine <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> als Teil der Initialisierung.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is also necessary for many internal <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> operations, such as obtaining information that is being forwarded from the backing type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> ist auch erforderlich, die für viele interne <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> Vorgänge, z. B. das Abrufen von Informationen, die von der Unterstützungstyp weitergeleitet wird.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>When you are working with the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> API, you typically have a <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> that is available from a surrounding construct such as a <ph id="ph3">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.</source>
          <target state="translated">Bei der Arbeit mit der <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> -API, die Sie in der Regel haben eine <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> verfügbar ist von einem umgebenden Konstrukt wie z. B. eine <ph id="ph3">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>In this case, you can pass the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> reference through to all XAML type system calls that require a XAML schema context.</source>
          <target state="translated">In diesem Fall können Sie übergeben die <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> über einen Verweis auf alle XAML-Typ Systemaufrufe, die einen XAML-Schemakontext erfordern.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>One specific constructor, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph>, does not require a <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph>.</source>
          <target state="translated">Einen bestimmten Konstruktor <ph id="ph1">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph>, erfordert eine <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>However, a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> that is constructed with the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> signature returns <ph id="ph3">`true`</ph> for <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Allerdings eine <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> erstellt, die mit der <ph id="ph2">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> Signatur zurückgibt <ph id="ph3">`true`</ph> für <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>For a load path that involves <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, such a member cannot be written into an object graph.</source>
          <target state="translated">Für einen Ladepfad, die umfasst <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, ein Element kann nicht in einem Objektdiagramm geschrieben werden.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>Using the .NET Framework XAML services implementation, the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> call throws a <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> reports <ph id="ph4">`true`</ph> for <ph id="ph5">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Mithilfe der .NET Framework-XAML-Dienste-Implementierung der <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> aufrufen, löst eine <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> Wenn die relevanten <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> Berichte <ph id="ph4">`true`</ph> für <ph id="ph5">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>You should not construct a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> that has a value of <ph id="ph2">`true`</ph> for <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> unless your implementation can handle the exceptions from <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior.</source>
          <target state="translated">Sie sollten nicht erstellen eine <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> mit dem Wert des <ph id="ph2">`true`</ph> für <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> , wenn Ihre Implementierung die Ausnahmen von verarbeiten kann <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, oder Sie über andere Möglichkeiten zum Anpassen der <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> Verhalten.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>For example, one or more of the  following might be true of your implementation:</source>
          <target state="translated">Beispielsweise könnte eine oder mehrere der folgenden Ihrer Implementierung zutreffen:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>The XAML schema context is available later.</source>
          <target state="translated">Der XAML-Schemakontext ist später verfügbar.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>You use a member invoker pattern.</source>
          <target state="translated">Sie verwenden ein Member Invoker-Muster.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlMember">
          <source>You deliberately override <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> in a custom XAML writer.</source>
          <target state="translated">Sie absichtlich überschreiben <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> in einem benutzerdefinierten XAML-Writer.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlMember">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> that represents the event member.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> des CLR-Typsystems, die den Ereignismember darstellt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class using CLR type system <ph id="ph2">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> and a <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse mit der <ph id="ph2">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> des CLR-Typsystems und einem <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
          <source>Use this constructor if the member represents an event (event handler connection-point property).</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn das Element ein Ereignis (Ereignis-Handler Verbindungspunkt Eigenschaft) darstellt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> that represents the property member.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class using CLR type system <ph id="ph2">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> and a <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse mit der <ph id="ph2">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> des CLR-Typsystems und einem <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
          <source>Use this constructor if the member represents a property (and specifically is not an event handler connection).</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn das Element eine Eigenschaft stellt (und insbesondere keine Ereignis-Handler Verbindung ist).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> that represents the event member.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> des CLR-Typsystems, die den Ereignismember darstellt.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> implementation that handles run-time reflection calls against the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Implementierung, die die Reflektionslaufzeitaufrufe der <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse verarbeitet.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class using CLR type system <ph id="ph2">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> and a <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, including <ph id="ph4">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse mit der <ph id="ph2">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> des CLR-Typsystems und einem <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, einschließlich von <ph id="ph4">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Informationen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Use this constructor if the member represents an event (or an event handler connection-point property).</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn das Element ein Ereignis (oder eine Ereignishandler-Verbindungspunkt Ereigniseigenschaft) darstellt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> that represents the property member.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> implementation that handles run-time invocation calls against the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Implementierung, die die Laufzeitaufrufe der <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse verarbeitet.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class using reflection <ph id="ph2">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> and a <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, including <ph id="ph4">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse mit Reflektions-<ph id="ph2">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> und einem <ph id="ph3">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, einschließlich von <ph id="ph4">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Informationen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Use this constructor only if the member represents a property and if it is not an event handler connection.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, und nur dann, wenn das Element eine Eigenschaft darstellt, wenn es sich nicht um eine Ereignis-Handler-Verbindung handelt.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>The string name of the attachable event.</source>
          <target state="translated">Der Zeichenfolgenname des anfügbaren Ereignisses.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the handler <ph id="ph2">&lt;see langword="Add" /&gt;</ph> method of the attachable member's backing implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> des CLR-Typsystems für die <ph id="ph2">&lt;see langword="Add" /&gt;</ph>-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class for a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> that represents an attachable event.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse für einen <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, der ein anfügbares Ereignis darstellt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>Use this constructor if the member represents an attachable event member.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn das Element einen anfügbaren Ereignismember darstellt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>The string name of the member.</source>
          <target state="translated">Der Zeichenfolgenname des Members.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> information for the declaring type.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Informationen für den deklarierenden Typ.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the member is attachable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um anzugeben, dass der Member anfügbar ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class using a string name and declaring <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> information.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse mit einem Zeichenfolgennamen und deklarierenden <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Informationen.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> that is constructed with this signature has significant limitations.</source>
          <target state="translated">Ein mit dieser Signatur erstellter <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> weist deutliche Einschränkungen auf.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> that is constructed with the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> signature returns <ph id="ph3">`true`</ph> for <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> erstellt, die mit der <ph id="ph2">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> Signatur zurückgibt <ph id="ph3">`true`</ph> für <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>For a load path that involves <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, such a member cannot be written into an object graph.</source>
          <target state="translated">Für einen Ladepfad, die umfasst <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, ein Element kann nicht in einem Objektdiagramm geschrieben werden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>Using the .NET Framework XAML Services implementation, the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> call throws a <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> reports <ph id="ph4">`true`</ph> for <ph id="ph5">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Mithilfe der .NET Framework-XAML-Dienste-Implementierung der <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> löst das Aufrufen einer <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> Wenn die relevanten <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> Berichte <ph id="ph4">`true`</ph> für <ph id="ph5">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>You should not construct a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> with <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph><ph id="ph3">`true`</ph> unless your implementation can handle the exceptions from <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior.</source>
          <target state="translated">Sie sollten nicht erstellen eine <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> mit <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> <ph id="ph3">`true`</ph> , wenn Ihre Implementierung die Ausnahmen von verarbeiten kann <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, oder Sie über andere Möglichkeiten zum Anpassen der <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> Verhalten.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>For example, one or more of the following might be true of your implementation:</source>
          <target state="translated">Beispielsweise könnte eine oder mehrere der folgenden Ihrer Implementierung zutreffen:</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>The XAML schema context is available later.</source>
          <target state="translated">Der XAML-Schemakontext ist später verfügbar.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>You use a member invoker pattern.</source>
          <target state="translated">Sie verwenden ein Member Invoker-Muster.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source>You deliberately override <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> in a custom XAML writer.</source>
          <target state="translated">Sie absichtlich überschreiben <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> in einem benutzerdefinierten XAML-Writer.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="declaringType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="declaringType" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>The string name of the attachable property.</source>
          <target state="translated">Der Zeichenfolgenname der anfügbaren Eigenschaft.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> des CLR-Typsystems für den <ph id="ph2">&lt;see langword="get" /&gt;</ph>-Accessor der Unterstützungsimplementierung des anfügbaren Members.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> des CLR-Typsystems für den <ph id="ph2">&lt;see langword="set" /&gt;</ph>-Accessor der Unterstützungsimplementierung des anfügbaren Members.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class for a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> that represents an attachable property.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse für ein <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt, das eine anfügbare Eigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
          <source>Use this constructor if the member represents an attachable property.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn das Element eine anfügbare Eigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The string name of the attachable event.</source>
          <target state="translated">Der Zeichenfolgenname des anfügbaren Ereignisses.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the handler <ph id="ph2">&lt;see langword="Add" /&gt;</ph> method of the attachable member's backing implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> des CLR-Typsystems für die <ph id="ph2">&lt;see langword="Add" /&gt;</ph>-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> implementation that handles run-time invocation calls against the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Implementierung, die die Laufzeitaufrufe der <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse verarbeitet.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class for a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> that represents an attachable event, including <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse für einen <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, der ein anfügbares Ereignis darstellt, einschließlich von <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Informationen.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Use this constructor if the member represents an attachable event member.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn das Element einen anfügbaren Ereignismember darstellt.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The string name of the attachable property.</source>
          <target state="translated">Der Zeichenfolgenname der anfügbaren Eigenschaft.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> des CLR-Typsystems für den <ph id="ph2">&lt;see langword="get" /&gt;</ph>-Accessor der Unterstützungsimplementierung des anfügbaren Members.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> des CLR-Typsystems für den <ph id="ph2">&lt;see langword="set" /&gt;</ph>-Accessor der Unterstützungsimplementierung des anfügbaren Members.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> context that qualifies the member.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>-Kontext, der den Member qualifiziert.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> implementation that handles run-time invocation calls against the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Implementierung, die die Laufzeitaufrufe der <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse verarbeitet.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> class for a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> that represents an attachable property, including <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse für einen <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, der eine anfügbare Eigenschaft darstellt, einschließlich von <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Informationen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
          <source>Use this constructor if the member represents an attachable property member.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn der Member einen Member anfügbare Eigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.DeclaringType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for the type that declares the member that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt für den Typ ab, durch den der dem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt zugeordnete Member deklariert wird.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeclaringType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for the type that declares the member that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt für den Typ, durch den der dem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt zugeordnete Member deklariert wird.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeclaringType">
          <source>This value is typically set during initialization and is usually not <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Dieser Wert wird in der Regel während der Initialisierung festgelegt und ist normalerweise nicht <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeclaringType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> information can be passed in by constructors for initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> Informationen können von den Konstruktoren für die Initialisierung übergeben werden.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeclaringType">
          <source>By calling directly into base constructors, initialization for <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived classes can omit some of the value-checks that are made in the base class.</source>
          <target state="translated">Durch Aufruf direkt in Basis Konstruktoren initialisieren der <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klassen können weglassen, einige Wert-Überprüfungen, die in der Basisklasse vorgenommen werden.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeclaringType">
          <source>Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</source>
          <target state="translated">Aus diesem Grund kann abgeleitete Initialisierung die Beziehungsinformationen gemeldeten Typmember von einem XAML-Member ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typsysteminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeclaringType">
          <source>For any security-critical checks of declaring type information, use the underlying CLR type instead.</source>
          <target state="translated">Verwenden Sie für die als sicherheitskritisch Überprüfungen Typinformationen zu deklarieren stattdessen den zugrunde liegenden CLR-Typ.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.DeferringLoader">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which is used for deferred loading of XAML declared objects.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt ab, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeferringLoader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph> constraint on the generic.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt mit <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph>-Einschränkung für den generischen Typ.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeferringLoader">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DeferringLoader">
          <source>This behavior occurs in cases where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dieses Verhalten tritt in Fällen, in denen die Reflektionslogik der anfänglichen internen nicht bereits die Informationen festgelegt hat.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects.</source>
          <target state="translated">Ruft eine Liste von <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekten ab.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>These report the members where dependency relationships for initialization order exist relative to this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Von diesen werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt vorhanden sind.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>A list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects.</source>
          <target state="translated">Eine Liste von <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekten.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>This behavior occurs in cases where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dieses Verhalten tritt in Fällen, in denen die Reflektionslogik der anfänglichen internen nicht bereits die Informationen festgelegt hat.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>The <ph id="ph1">`DependsOn`</ph> pattern can be applied to object model cases that deliberately contradict a general XAML rule.</source>
          <target state="translated">Die <ph id="ph1">`DependsOn`</ph> Muster auf Objektmodellfälle, die absichtlich eine allgemeine XAML-Regel widersprechen angewendet werden kann.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</source>
          <target state="translated">Die allgemeine XAML-Regel ist, dass Member eines Typs, die nicht als Initialisierungstext (oder eine Factorymethode in XAML 2009) übergeben werden können in beliebiger Reihenfolge zugewiesen werden müssen.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>By applying a <ph id="ph1">`DependsOn`</ph> pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</source>
          <target state="translated">Durch Anwenden einer <ph id="ph1">`DependsOn`</ph> Muster auf einen Member, Sie können XAML-Writern anweisen, immer das Element verwiesen wird, vor diesem Element zu verarbeiten.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</source>
          <target state="translated">Sie können dieses Muster in Situationen anwenden, in denen der Wert des aktuellen Elements erfordert, Kontext oder andere Informationen, die nur verfügbar ist, nachdem das andere Element festgelegt ist.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>The <ph id="ph1">`DependsOn`</ph> pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</source>
          <target state="translated">Die <ph id="ph1">`DependsOn`</ph> Muster Umsicht angewendet und für Szenarios, in denen es einen architektonischen Zweck dient, reserviert werden soll.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>Large numbers of dependencies have the potential to slow down XAML processing.</source>
          <target state="translated">Große Anzahl von Abhängigkeiten haben die Möglichkeit, die XAML-Verarbeitung verlangsamt.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</source>
          <target state="translated">Es ist auch möglich, die ringabhängigkeiten, erzeugen in diesem Fall ist die Verwendung von XAML-Verarbeitungsverhalten nicht definiert.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.DependsOn">
          <source>Example <ph id="ph1">`DependsOn`</ph> scenarios from WPF include certain properties on <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.DataTemplate&gt;</ph>, on <ph id="ph4">&lt;xref:System.Windows.Trigger&gt;</ph>, and on <ph id="ph5">&lt;xref:System.Windows.Setter&gt;</ph>.</source>
          <target state="translated">Beispiel <ph id="ph1">`DependsOn`</ph> Szenarien von WPF umfassen bestimmte Eigenschaften von <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> und <ph id="ph3">&lt;xref:System.Windows.DataTemplate&gt;</ph>auf <ph id="ph4">&lt;xref:System.Windows.Trigger&gt;</ph>, und klicken Sie auf <ph id="ph5">&lt;xref:System.Windows.Setter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlMember">
          <source>Indicates whether the current object is equal to another object.</source>
          <target state="translated">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.Equals(System.Object)">
          <source>The object to compare with this object.</source>
          <target state="translated">Das Objekt, das mit diesem Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.Equals(System.Object)">
          <source>Indicates whether the current object is equal to another object.</source>
          <target state="translated">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is equal to the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das aktuelle Objekt gleich dem <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>-Parameter ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
          <source>An object to compare with this object.</source>
          <target state="translated">Ein Objekt, das mit diesem Objekt verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
          <source>Indicates whether the current object is equal to another object of the same type.</source>
          <target state="translated">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is equal to the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das aktuelle Objekt gleich dem <ph id="ph2">&lt;paramref name="other" /&gt;</ph>-Parameter ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Gibt den Hashcode für dieses Objekt zurück.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.GetHashCode">
          <source>An integer hash code.</source>
          <target state="translated">Ein ganzzahliger Hashcode.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.GetXamlNamespaces">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
          <target state="translated">Gibt eine Liste von XAML-Namespaces zurück, in dem dieser XAML-Member vorhanden sein kann.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.GetXamlNamespaces">
          <source>A list of XAML namespace identifiers as strings.</source>
          <target state="translated">Eine Liste von XAML-Namespacebezeichnern als Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.GetXamlNamespaces">
          <source>The default implementation returns the <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType&gt;</ph> call result from the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> that is associated with this <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Gibt die standardmäßige Implementierung der <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType&gt;</ph> Ergebnis von Aufrufen der <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> , die mit dieser verknüpft ist <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.Invoker">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> implementation that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Implementierung ab, die diesem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Invoker">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> implementation that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Implementierung, die diesem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Invoker">
          <source>The <ph id="ph1">`Invoker`</ph> pattern is an advanced XAML type system extension technique.</source>
          <target state="translated">Die <ph id="ph1">`Invoker`</ph> Muster ist eine erweiterte Verwendung von XAML-Typsystem-Erweiterungsmethode.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Invoker">
          <source>The <ph id="ph1">`Invoker`</ph> pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</source>
          <target state="translated">Die <ph id="ph1">`Invoker`</ph> Muster bietet eine Möglichkeit zum Einfügen von verschiedenen Typs Zuordnung Schemaverhalten, gleichzeitiger Verwendung von XAML-System Typdefinitionen aus .NET Framework-XAML-Dienste.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Invoker">
          <source>If a <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</ph> override returns <ph id="ph2">`null`</ph>, or if the default implementation returns <ph id="ph3">`null`</ph> because it lacks the <ph id="ph4">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> for this <ph id="ph5">&lt;xref:System.Xaml.XamlMember&gt;</ph>, the <ph id="ph6">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> property returns <ph id="ph7">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn eine <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</ph> überschreiben gibt <ph id="ph2">`null`</ph>, oder wenn die standardmäßige Implementierung gibt <ph id="ph3">`null`</ph> , da es fehlt die <ph id="ph4">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> für diesen <ph id="ph5">&lt;xref:System.Xaml.XamlMember&gt;</ph>, die <ph id="ph6">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> -Eigenschaft gibt <ph id="ph7">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Invoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph> is the default.</source>
          <target state="translated">Standardmäßig ist <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Invoker">
          <source>This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override <ph id="ph1">`Invoker`</ph> patterns are passed for construction of XAML type system entities.</source>
          <target state="translated">Dies gilt für die meisten Vorgänge, die .NET Framework-XAML-Dienste und die Verwendung von XAML-Standardschemakontext verwenden, und, bei denen keine bestimmten überschreiben <ph id="ph1">`Invoker`</ph> Muster für die Konstruktion von XAML-Typsystementitäten übergeben werden.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Invoker">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is reported as an ambient property.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieser <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> als Ambient-Eigenschaft gemeldet wird.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is reported as an ambient property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt als Ambient-Eigenschaft gemeldet wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source>This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dieses Verhalten tritt in Implementierungen, in denen die Reflektionslogik der anfänglichen internen nicht bereits die Informationen festgelegt hat.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source>Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</source>
          <target state="translated">Die Überprüfung auf Umgebungseigenschaften sind normalerweise Teil der XAML-Verarbeitungslogik, stellen Sie sicher, dass Objekte und Werte, die ambient-Verwendung für benötigen, ordnungsgemäß funktionieren können.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source>The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph>.</source>
          <target state="translated">Die .NET Framework-XAML-Dienste-APIs und die Verwendung von XAML-Standardschemakontext füllt diesen Wert auf namensnennung mit Basis <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> uses this existing <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> technique, and it returns <ph id="ph3">`true`</ph> if <ph id="ph4">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> exists on a member declaration.</source>
          <target state="translated">Die standardmäßige Implementierung des <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> verwendet diese vorhandene <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> Technik, und es wird <ph id="ph3">`true`</ph> Wenn <ph id="ph4">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> auf eine Memberdeklaration vorhanden ist.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is found on members of several WPF types, which include <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Setter&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Style&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> befindet sich auf mehrere WPF-Typen, einschließlich der Mitglieder <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Setter&gt;</ph>, und <ph id="ph4">&lt;xref:System.Windows.Style&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAmbient">
          <source>It is also found on the <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> type, which connotes that any member that uses <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> as its type should be considered ambient even if the member is not specifically attributed.</source>
          <target state="translated">Finden sie auch auf die <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> -Typ, der suggeriert, dass alle Member, die verwendet <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> als Anwendungstyp ambient berücksichtigt werden, selbst wenn das Element nicht speziell attributiert ist.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsAttachable">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is an attachable member.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt ein anfügbarer Member ist.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAttachable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is an attachable member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt ein anfügbarer Member ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsAttachable">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> value is initialized based on which constructor was used to construct a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> Wert initialisiert wird, anhand welcher Konstruktor, zum Erstellen verwendet wurde einer <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsDirective">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is a XAML directive.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob es sich bei diesem <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt um eine XAML-Direktive handelt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsDirective">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is a XAML directive; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt eine XAML-Direktive ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsDirective">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> value is initialized based on which constructor was used to construct a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> Wert initialisiert wird, anhand welcher Konstruktor, zum Erstellen verwendet wurde einer <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsDirective">
          <source>The base <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> constructors initialize so that <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Die Basis <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> Konstruktoren initialisieren, damit <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> ist <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsDirective">
          <source>However, the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> class (a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class) initializes so that <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Allerdings die <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> Klasse (eine <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse) initialisiert, damit <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> ist <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsDirective">
          <source>If you want to report <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> as <ph id="ph2">`true`</ph> to callers of a custom XAML schema class for XAML members, make sure you derive from <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> because that is the only way to enable that behavior.</source>
          <target state="translated">Wenn Sie einen Bericht erstellen möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> als <ph id="ph2">`true`</ph> auf Aufrufer mit einer benutzerdefinierten XAML-Schemaklasse für XAML-Member, sicherstellen, dass Sie eine Ableitung von <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> da dies die einzige Möglichkeit, dieses Verhalten zu aktivieren.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsEvent">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents an event member.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieser <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> einen Ereignismember darstellt.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsEvent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents an event; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt ein Ereignis darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsEvent">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsNameValid">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is initialized with a valid <ph id="ph2">&lt;see langword="xamlName" /&gt;</ph> string as its <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.Name" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt mit einer gültigen <ph id="ph2">&lt;see langword="xamlName" /&gt;</ph>-Zeichenfolge als <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.Name" /&gt;</ph>-Eigenschaft initialisiert wird.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsNameValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is initialized with a valid <ph id="ph3">&lt;see langword="xamlName" /&gt;</ph> string; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt mit einer gültigen <ph id="ph3">&lt;see langword="xamlName" /&gt;</ph>-Zeichenfolge initialisiert wird, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsReadOnly">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a read-only member.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen schreibgeschützten Member darstellt.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a read-only member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen schreibgeschützten Member darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadOnly">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a member with a callable public <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen Member mit einem aufrufbaren öffentlichen <ph id="ph2">&lt;see langword="get" /&gt;</ph>-Accessor darstellt.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a callable public <ph id="ph3">&lt;see langword="get" /&gt;</ph> accessor; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen aufrufbaren öffentlichen <ph id="ph3">&lt;see langword="get" /&gt;</ph>-Accessor darstellt, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> value checks whether the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is public.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> Wert überprüft, ob die <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> ist öffentlich.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is nonpublic, the <ph id="ph2">`get`</ph> accessor is not callable in a practical way, and <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> nicht öffentlich ist, die <ph id="ph2">`get`</ph> Accessor kann nicht in eine praktische Möglichkeit aufgerufen werden kann und <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> gibt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> method is virtual and therefore, can be overridden.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> Methode ist virtuell und kann daher überschrieben werden.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsReadPublic">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsUnknown">
          <source>Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Member durch das für Typ- und Memberauflösung verwendete Unterstützungssystem nicht aufgelöst werden kann.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsUnknown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is not resolvable; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the member is resolvable.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Member nicht aufgelöst werden kann. <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn der Member aufgelöst werden kann.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsUnknown">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> that is constructed with the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> signature returns <ph id="ph3">`true`</ph> for <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> erstellt, die mit der <ph id="ph2">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> Signatur zurückgibt <ph id="ph3">`true`</ph> für <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsUnknown">
          <source>For a load path that involves <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> with <ph id="ph3">`true`</ph> for <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> cannot be written into an object graph.</source>
          <target state="translated">Für einen Ladepfad, bei der <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> mit <ph id="ph3">`true`</ph> für <ph id="ph4">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> kann nicht in einem Objektdiagramm geschrieben werden.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsUnknown">
          <source>Under the default implementations in .NET Framework XAML Services APIs, the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> call throws a <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> reports <ph id="ph4">`true`</ph> for <ph id="ph5">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Unter den APIs von .NET Framework-XAML-Dienste-standardimplementierungen das <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType&gt;</ph> aufrufen, löst eine <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> Wenn die relevanten <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> Berichte <ph id="ph4">`true`</ph> für <ph id="ph5">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsUnknown">
          <source>You should not construct a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> that has a value of <ph id="ph2">`true`</ph> for <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> unless your implementation can handle the exceptions from <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior.</source>
          <target state="translated">Sie sollten nicht erstellen eine <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> mit dem Wert des <ph id="ph2">`true`</ph> für <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> , wenn Ihre Implementierung die Ausnahmen von verarbeiten kann <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, oder Sie über andere Möglichkeiten zum Anpassen der <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> Verhalten.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsUnknown">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsWriteOnly">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a write-only member.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen lesegeschützten Member darstellt.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWriteOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a write-only member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen lesegeschützten Member darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWriteOnly">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a member that has a callable public <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen Member mit einem aufrufbaren öffentlichen <ph id="ph2">&lt;see langword="set" /&gt;</ph>-Accessor darstellt.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a callable public <ph id="ph3">&lt;see langword="set" /&gt;</ph> accessor; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen aufrufbaren öffentlichen <ph id="ph3">&lt;see langword="set" /&gt;</ph>-Accessor darstellt, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> value considers whether the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is public as part of the determination.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> Wert berücksichtigt, ob die <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> ist öffentlich als Teil der Ermittlung.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is nonpublic, the <ph id="ph2">`set`</ph> accessor is not callable in a practical way, and <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> nicht öffentlich ist, die <ph id="ph2">`set`</ph> Accessor kann nicht in eine praktische Möglichkeit aufgerufen werden kann und <ph id="ph3">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> gibt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> method is virtual and therefore, can be overridden.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> Methode ist virtuell und kann daher überschrieben werden.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.IsWritePublic">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
          <source>When implemented in a derived class, returns an <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Gibt bei der Implementierung in einer abgeleiteten Klasse eine <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph>-Implementierung zurück.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph>-Implementierung.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
          <source>Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</source>
          <target state="translated">Überschreiben Sie diese Methode zum Bereitstellen der internen Reflektions eine alternative Möglichkeit zum Abrufen von CLR-Attributwerte an.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
          <source>In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph>.</source>
          <target state="translated">In Ermangelung einer Außerkraftsetzung der internen Reflector verwendet typische CLR Reflektionslogik, z. B. Aufrufe der <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
          <source>The default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die Standardimplementierung gibt <ph id="ph1">`null`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupDeferringLoader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which is used for deferred loading of XAML declared objects.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt zurück, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupDeferringLoader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> that has a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph> constraint on the generic.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, der eine <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph>-Einschränkung für den generischen Typ besitzt.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDeferringLoader">
          <source>This method is invoked when a caller gets a value from the <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> property.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab der <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDeferringLoader">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> information.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> einen Wert, der unterscheidet sich vom Wert zurückgegeben, die durch die standardmäßige interne Reflektion, aktiviert ist und wenn Sie auch benutzerdefinierte bereitstellen <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> Informationen.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDeferringLoader">
          <source>The default implementation returns an object either by reading <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> or using a <ph id="ph2">&lt;xref:System.Xaml.XamlDeferringLoader&gt;</ph> from the declaring type.</source>
          <target state="translated">Die Standardimplementierung gibt ein Objekt entweder durch Lesen <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> oder über eine <ph id="ph2">&lt;xref:System.Xaml.XamlDeferringLoader&gt;</ph> aus der deklarierende Typ.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDeferringLoader">
          <source>If neither object is available, this method might return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Wenn kein Objekt verfügbar ist, kann diese Methode zurück <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects.</source>
          <target state="translated">Gibt eine Liste von <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekten zurück.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>Items in the list report the members where dependency relationships for initialization order exist relative to this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Von Elementen in der Liste werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> vorhanden sind.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>A list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects.</source>
          <target state="translated">Eine Liste von <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekten.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>This method is invoked when a caller gets a value from the <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> property.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab der <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> information.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> einen Wert, der unterscheidet sich vom Wert zurückgegeben, die durch die standardmäßige interne Reflektion, aktiviert ist und wenn Sie auch benutzerdefinierte bereitstellen <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> Informationen.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>The WPF XAML reader and writer implementations attribute this case with <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph>.</source>
          <target state="translated">Die WPF XAML-Reader und Writer-Implementierungen-Attribut bei diesem Fall <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>The default implementation uses this existing <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> technique.</source>
          <target state="translated">Die Standardimplementierung verwendet diese vorhandene <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> Technik.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>Override this method if you are not using <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie nicht arbeiten <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> für diesen Zweck, und diese Technik zum Angeben der Eigenschaft Verarbeitungsreihenfolge von Artikeln mit Ihren eigenen Technik ersetzen möchten.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</source>
          <target state="translated">Wenn Sie nicht beabsichtigen, um eine Eigenschaft Verarbeitungsreihenfolge von Artikeln zu unterstützen, können Sie die standardmäßige Implementierung verwenden, da sie keine Ergebnisse zurückgibt, was angebracht ist.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupDependsOn">
          <source>The list is read-only.</source>
          <target state="translated">Die Liste ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupInvoker">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> zurück, der diesem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupInvoker">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>-Informationen für diesen <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupInvoker">
          <source>This method is invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, indem Aufrufe <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupInvoker">
          <source>The default implementation does not require that a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> be constructed by using one of the constructors that pass an initial <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.</source>
          <target state="translated">Die standardmäßige Implementierung nicht erfordert, dass eine <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> erstellt werden, mithilfe einer der Konstruktoren, die einen ersten übergeben <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupInvoker">
          <source>However, an <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> value must exist for the <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>; otherwise, the default implementation returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Allerdings ein <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> Wert muss vorhanden sein, für die <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>ist, andernfalls gibt die standardmäßige Implementierung <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupInvoker">
          <source>Override this method if you also derive from <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> and intend to return the derived class.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie auch von ableiten <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> und die abgeleitete Klasse zurückgeben möchten.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupInvoker">
          <source>If you return <ph id="ph1">`null`</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> returns <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph> to callers.</source>
          <target state="translated">Wenn Sie zurückkehren, <ph id="ph1">`null`</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> gibt <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph> für Aufrufer.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is reported as an ambient property.</source>
          <target state="translated">Gibt zurück, ob das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt als Ambient-Eigenschaft gemeldet wird.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to report this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> as an ambient property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieser <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> als Ambient-Eigenschaft gemeldet werden soll, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>This method is invoked by internal calls that check for ambient XAML property information.</source>
          <target state="translated">Diese Methode wird vom internen Aufrufe aufgerufen, die ambient-XAML-Eigenschaftsinformationen überprüfen.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</source>
          <target state="translated">Das Verhalten der Ambient-Eigenschaft ist in der öffentlichen API-Verhalten von XAML-Readern und XAML-Writern berücksichtigt.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>The internal calls that reference <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</source>
          <target state="translated">Diese internen Aufrufe, die auf verweisen <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> sind in der Regel Bestandteil des XAML-Verarbeitungslogik, um sicherzustellen, dass Objekte und Werte, die ambient-Verwendung für benötigen, ordnungsgemäß funktionieren können.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</source>
          <target state="translated">Die standardmäßige .NET Framework-XAML-Dienste-Implementierung verwendet zum Abrufen von Informationen von Reflektion über Unterstützungstypen Attributierung CLR.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>Specifically, the default implementation checks for <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> and returns <ph id="ph2">`true`</ph> for <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> if <ph id="ph4">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> exists on a member definition.</source>
          <target state="translated">Insbesondere sucht die standardmäßige Implementierung <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> und gibt <ph id="ph2">`true`</ph> für <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> Wenn <ph id="ph4">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> vorhanden ist, auf die Definition eines Elements.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>Override this method if you are not using <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie nicht arbeiten <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> für diesen Zweck, und dieser Technik zum Angeben der Verwendung von XAML-Umgebungseigenschaften mit Ihren eigenen Technik ersetzen möchten.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsAmbient">
          <source>Example APIs from WPF that attribute with <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> are <ph id="ph2">&lt;xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Beispiel-APIs von WPF, die mit dem Attribut <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> sind <ph id="ph2">&lt;xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph3">&lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsEvent">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents an event.</source>
          <target state="translated">Gibt zurück, ob diese <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse ein Ereignis darstellt.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsEvent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to report that this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents an event; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn gemeldet werden soll, dass dieser <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> ein Ereignis darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsEvent">
          <source>The default implementation checks whether <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> is of type <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph>, and if it is, returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Die standardmäßige Implementierung überprüft, ob <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> ist vom Typ <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph>, und wenn dies der Fall, gibt <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsEvent">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsEvent">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn spezialisierte Metadaten verfügbar interpretiert werden kann, um zu bestimmen, XAML, geben Sie System-Darstellungen pro Fall zu entscheiden.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsReadOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents an intended read-only property.</source>
          <target state="translated">Gibt zurück, ob die <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse eine beabsichtigte schreibgeschützte Eigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to report this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> as an intended read-only property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt als gewünschte schreibgeschützte Eigenschaft gemeldet werden soll, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadOnly">
          <source>The default implementation returns <ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> exists, but a public <ph id="ph3">`set`</ph> accessor does not exist for it, as determined by internal reflection.</source>
          <target state="translated">Gibt die standardmäßige Implementierung <ph id="ph1">`true`</ph> Wenn <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> vorhanden ist, aber eine öffentliche <ph id="ph3">`set`</ph> Accessor existiert nicht dafür, wie durch die interne Reflektion bestimmt.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadOnly">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadOnly">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn spezialisierte Metadaten verfügbar interpretiert werden kann, um zu bestimmen, XAML, geben Sie System-Darstellungen pro Fall zu entscheiden.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a property that has a public <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Gibt zurück, ob das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <ph id="ph2">&lt;see langword="get" /&gt;</ph>-Accessor verfügt.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a property that has a public <ph id="ph3">&lt;see langword="get" /&gt;</ph> accessor; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieser <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> eine Eigenschaft mit einem öffentlichen <ph id="ph3">&lt;see langword="get" /&gt;</ph>-Accessor darstellt, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>The default implementation returns results based either on internal reflection or the negation of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph>, processing in that order.</source>
          <target state="translated">Die Standardimplementierung gibt Ergebnisse basieren auf internen Reflektion oder die Negation des <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph>, Verarbeitung in dieser Reihenfolge.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> returns whether the member itself is public; it returns <ph id="ph2">`true`</ph> for a public member on a nonpublic declaring type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> Gibt zurück, ob der Member selbst öffentlich ist. Es gibt <ph id="ph2">`true`</ph> für einen öffentlichen Member auf ein Nonpublic Typ deklarieren.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>Use <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> instead, if you also want to consider the visibility of the declaring type.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> stattdessen, wenn Sie auch die Sichtbarkeit des deklarierenden Typs berücksichtigen möchten.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> method is virtual and therefore, can be overridden.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> Methode ist virtuell und kann daher überschrieben werden.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsReadPublic">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsUnknown">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Gibt zurück, ob diese <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse ein Element darstellt, das vom Sicherungssystem für Typ- und Elementauflösung nicht aufgelöst werden kann.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsUnknown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a non-resolvable member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn diese <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse ein nicht auflösbares Element darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsUnknown">
          <source>This method may be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode kann aufgerufen werden, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsUnknown">
          <source>The default implementation returns results that are based on either internal reflection or checking for a <ph id="ph1">`null`</ph> value of <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, processing in that order.</source>
          <target state="translated">Die Standardimplementierung gibt Ergebnisse, die basierend auf einer internen Reflektion oder bei der Überprüfung sind eine <ph id="ph1">`null`</ph> Wert <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, Verarbeitung in dieser Reihenfolge.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsUnknown">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsWriteOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a member that has a public <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor but not a public <ph id="ph3">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Gibt zurück, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen Member darstellt, der über einen öffentlichen <ph id="ph2">&lt;see langword="set" /&gt;</ph>-Accessor, jedoch nicht über einen öffentlichen <ph id="ph3">&lt;see langword="get" /&gt;</ph>-Accessor verfügt.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsWriteOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a write-only member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen lesegeschützten Member darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWriteOnly">
          <source>The default implementation returns <ph id="ph1">`true`</ph> if an <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> exists that has a public <ph id="ph3">`set`</ph> accessor and a nonpublic <ph id="ph4">`get`</ph> accessor, as determined by internal reflection.</source>
          <target state="translated">Gibt die standardmäßige Implementierung <ph id="ph1">`true`</ph> Wenn ein <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> vorhanden ist, besitzt eine öffentliche <ph id="ph3">`set`</ph> -Accessor und einen Nonpublic <ph id="ph4">`get`</ph> Accessor, wie durch die interne Reflektion bestimmt.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWriteOnly">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWriteOnly">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a member that has a public <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Gibt zurück, ob dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen Member darstellt, der über einen öffentlichen <ph id="ph2">&lt;see langword="set" /&gt;</ph>-Accessor verfügt.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> represents a writable member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt einen schreibbaren Member darstellt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source>The default implementation returns results based  either internal reflection or the negation of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph>, processing in that order.</source>
          <target state="translated">Die Standardimplementierung gibt Ergebnisse basieren, interne Reflektion oder die Negation des <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph>, Verarbeitung in dieser Reihenfolge.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> method is virtual and therefore, can be overridden.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> Methode ist virtuell und kann daher überschrieben werden.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">Die Außerkraftsetzung kann (gehindert, vorsätzlich oder auf andere Weise) die gemeldeten Informationen über eine XAML-Elements ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typ Zugriff Systeminformationen von der zugrunde liegenden CLR-Deklaration entspricht.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupIsWritePublic">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Verwenden Sie für alle als sicherheitskritisch Überprüfungen aus der Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
          <source>Returns the opening and closing bracket characters for a markup extension.</source>
          <target state="translated">Gibt die Zeichen für öffnende und schließende Klammern einer Markuperweiterung zurück.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
          <source>A collection containing the opening and closing bracket characters.</source>
          <target state="translated">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupTargetType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type where the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> can exist.</source>
          <target state="translated">Gibt die <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Klasse des Typs zurück, in dem das <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt vorhanden sein kann.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupTargetType">
          <source>The type where the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> can exist.</source>
          <target state="translated">Der Typ, auf dem das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt vorhanden sein kann.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTargetType">
          <source>The default implementation distinguishes between attachable and non-attachable members.</source>
          <target state="translated">Die standardmäßige Implementierung unterscheidet zwischen anfügbare und nicht anfügbare Member.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTargetType">
          <source>For non-attachable members, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> always returns <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph>.</source>
          <target state="translated">Für nicht anfügbare Member <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> gibt immer <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTargetType">
          <source>For attachable members, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> returns a result based on examining the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> accessor parameter type and interprets that type based on XAML schema context.</source>
          <target state="translated">Für anfügbare Member <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> gibt ein Ergebnis basierend auf der Prüfung der <ph id="ph2">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> Accessor Parametertyp und interpretiert, dass das Typ auf XAML-Schemakontext.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTargetType">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTargetType">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Gibt das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt des vom Member verwendeten Typs zurück.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt des vom Member verwendeten Typs.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> information.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> einen Wert, der unterscheidet sich vom Wert zurückgegeben, die durch die standardmäßige interne Reflektion, aktiviert ist und wenn Sie auch benutzerdefinierte bereitstellen <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> Informationen.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>The default implementation uses different code paths and conceptual meanings for the returned <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> that is based on whether this <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> represents a property, method, or event.</source>
          <target state="translated">Die Standardimplementierung verwendet die unterschiedlichen Codepfaden und konzeptionelle Bedeutung für das zurückgegebene <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> , ist abhängig davon, ob dies <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> stellt eine Eigenschaft, eine Methode oder ein Ereignis.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>For a property, the returned <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is the type that sets the property or is returned by the property.</source>
          <target state="translated">Für eine Eigenschaft, die den zurückgegebenen <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> ist der Typ, der die Eigenschaft oder von der Eigenschaft zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>For an event, the returned <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is the required event handler type (a delegate in a CLR implementation).</source>
          <target state="translated">Für ein Ereignis, das zurückgegebene <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> ist die erforderliche Ereignishandlertyp (ein Delegat in einer CLR-Implementierung).</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>For a method, <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is the return type.</source>
          <target state="translated">Bei einer Methode <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> ist der Rückgabetyp.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</source>
          <target state="translated">In jedem Fall wird XAML-Schemakontext verwendet, um den XAML-Typ aus den zugrunde liegenden Systemtyp auszuwerten.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupType">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>Returns a type converter implementation that is associated with this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Gibt eine Typkonverterimplementierung zurück, die dieser <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> instance with <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Instanz mit der <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>-Einschränkung oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>The default implementation uses the following logic and processing order:</source>
          <target state="translated">Die Standardimplementierung verwendet die folgende Logik und die Verarbeitungsreihenfolge von Artikeln:</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>If attributing exists at the member level (<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>), the attribute information is used for a call to <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;</ph> against the XAML schema context.</source>
          <target state="translated">Wenn Attributierung auf Memberebene vorhanden ist (<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>), wird die Attributinformationen für einen Aufruf verwendet <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;</ph> für die Verwendung von XAML-Schemakontext.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> is valid, a type converter that is associated with the type is returned.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> gültig ist, ein Typkonverter, der mit dem Typ verknüpft ist, wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>If the member is an event, an event-specific type converter is returned.</source>
          <target state="translated">Wenn der Member eines Ereignisses ist, wird ein ereignisspezifische Typkonverter zurückgegeben.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupTypeConverter">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>Returns a <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see langword="get" /&gt;</ph>-Accessor zurück, der dieser <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the associated <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> für den zugeordneten <ph id="ph2">&lt;see langword="get" /&gt;</ph>-Accessor oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>The default implementation interprets the <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> property as <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> and returns the value of <ph id="ph3">&lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType&gt;</ph> (with the parameter set to <ph id="ph4">`true`</ph>), which means that the returned method can be nonpublic.</source>
          <target state="translated">Die standardmäßige Implementierung interpretiert die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> Eigenschaft als <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> und gibt den Wert der <ph id="ph3">&lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType&gt;</ph> (mit den Parametersatz hinzu <ph id="ph4">`true`</ph>), was bedeutet, dass die zurückgegebene Methode nicht öffentliche werden kann.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>This behavior can result in <ph id="ph1">`null`</ph> for certain cases.</source>
          <target state="translated">Dieses Verhalten kann dazu führen, <ph id="ph1">`null`</ph> für bestimmte Fälle.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>including cases where no associated accessor exists or the member is not a property.</source>
          <target state="translated">einschließlich der Fälle, in denen kein zugeordneter Accessor vorhanden ist oder das Element ist keine Eigenschaft.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>This method is invoked when a caller gets a value from the <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</ph> property on an associated <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab der <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</ph> Eigenschaft eines zugeordneten <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
          <source>Make sure to implement <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> so that they all return correlated results.</source>
          <target state="translated">Achten Sie darauf, implementieren <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> , damit sie alle korrelierende Ergebnisse zurückgeben.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>Returns a CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Gibt eine <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> des CLR-Typsystems zurück, die diesem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>A CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> object that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekt des CLR-Typsystems, das diesem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt zugeordnet ist, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>The default implementation returns the underlying member information, which is based on construction.</source>
          <target state="translated">Die Standardimplementierung gibt die zugrunde liegende Memberinformationen, die Konstruktion basiert.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> -Objekt mit einer Signatur, die nicht über genügend Informationen, um die zugrunde liegenden Elementgruppe bietet erstellt wird, gibt diese Methode zurück <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>If an underlying member was set during construction, you should not need to call this method.</source>
          <target state="translated">Wenn ein zugrunde liegende Member während der Erstellung festgelegt wurde, müssen Sie nicht diese Methode aufrufen.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingMember">
          <source>Make sure to implement <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> so that they all return correlated results.</source>
          <target state="translated">Achten Sie darauf, implementieren <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> , damit sie alle korrelierende Ergebnisse zurückgeben.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
          <source>Returns a <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see langword="set" /&gt;</ph>-Accessor zurück, der dieser <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Klasse zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the associated <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> für den zugeordneten <ph id="ph2">&lt;see langword="set" /&gt;</ph>-Accessor oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
          <source>The default implementation interprets <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> as <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> and returns the value of <ph id="ph3">&lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType&gt;</ph> (with the parameter set to <ph id="ph4">`true`</ph>), which means that the returned method can be nonpublic.</source>
          <target state="translated">Die standardmäßige Implementierung interpretiert <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> als <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> und gibt den Wert der <ph id="ph3">&lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType&gt;</ph> (mit den Parametersatz hinzu <ph id="ph4">`true`</ph>), was bedeutet, dass die zurückgegebene Methode nicht öffentliche werden kann.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
          <source>This can result in <ph id="ph1">`null`</ph> for certain cases, including cases where there is no such accessor, or the member is not a property.</source>
          <target state="translated">Dies kann dazu führen <ph id="ph1">`null`</ph> in bestimmten Fällen, einschließlich der Fälle, in denen kein solcher Accessor vorhanden ist, oder das Element ist keine Eigenschaft.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</ph> on an associated <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.Override this method if you want to report uniform results for an entire <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</ph> eines zugeordneten <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>. Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
          <source>Make sure to implement <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> so that they all return correlated results.</source>
          <target state="translated">Achten Sie darauf, implementieren <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> , damit sie alle korrelierende Ergebnisse zurückgeben.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>Returns a value serializer implementation that is associated with this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Gibt eine Wertserialisierungsprogramm-Implementierung zurück, die diesem <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> instance with <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> constraint, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Instanz mit der <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph>-Einschränkung oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>The default implementation uses the following logic and processing order:</source>
          <target state="translated">Die Standardimplementierung verwendet die folgende Logik und die Verarbeitungsreihenfolge von Artikeln:</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>If attributing exists at the member level (<ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>), the attribute information is used for a call to <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;</ph> against the XAML schema context.</source>
          <target state="translated">Wenn Attributierung auf Memberebene vorhanden ist (<ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>), wird die Attributinformationen für einen Aufruf verwendet <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;</ph> für die Verwendung von XAML-Schemakontext.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> is valid, a value converter that is associated with the type is returned.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> gültig ist, wird ein Wertkonverter, der mit dem Typ verknüpft wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>If the previous conditions do not apply, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">Wenn die genannten Bedingungen nicht zutreffen, <ph id="ph1">`null`</ph> wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>This method is invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode wird aufgerufen, wenn ein Aufrufer ruft einen Wert aus ab <ph id="ph1">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.LookupValueSerializer">
          <source>Override this method if you want to report uniform results for an entire <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte möchten <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> abgeleitete Klasse, oder wenn Sie Metadaten verfügbar sind spezielle, diese regelmäßig pro Groß-/Kleinschreibung zu bestimmen.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
          <source>Defines the opening and closing bracket characters for a markup extension.</source>
          <target state="translated">Definiert die Zeichen für öffnende und schließende Klammern einer Markuperweiterung.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
          <source>A collection containing the opening and closing bracket characters.</source>
          <target state="translated">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.Name">
          <source>Gets the <ph id="ph1">&lt;see langword="xamlName" /&gt;</ph> name string that declares this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see langword="xamlName" /&gt;</ph>-Namenszeichenfolge ab, durch die dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt deklariert wird.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Name">
          <source>The <ph id="ph1">&lt;see langword="xamlName" /&gt;</ph> name string that declares this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see langword="xamlName" /&gt;</ph>-Namenszeichenfolge, durch die dieses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt deklariert wird.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Name">
          <source>This value is always set during construction.</source>
          <target state="translated">Dieser Wert wird immer während der Konstruktion festgelegt.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Name">
          <source>The constructors that are implemented by <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be <ph id="ph2">`null`</ph> or an empty string, if you are using default .NET Framework XAML Services implementations.</source>
          <target state="translated">Die Konstruktoren, die von implementiert werden <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> in der Regel löst eine Ausnahme aus, wenn ein ursprünglicher Name nicht angegeben wird; daher erwarten nicht, diese Eigenschaft wird <ph id="ph2">`null`</ph> oder eine leere Zeichenfolge, wenn Sie standardmäßige .NET Framework-XAML-Dienste verwenden Implementierungen.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Name">
          <source><bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept> and naming rules for CLR type and members are not an exact intersect.</source>
          <target state="translated"><bpt id="p1">[</bpt>XamlName-Grammatik<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept> und Benennungsregeln für CLR-Typ und Member sind keine genaue Schnittmenge.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Name">
          <source>It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</source>
          <target state="translated">Es ist möglich, einen Elementnamen zu deklarieren, der unter CLR ist jedoch nicht unter Verwendung von XAML-Benennung gültig.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Name">
          <source>You should avoid this situation if possible.</source>
          <target state="translated">Diese Situation sollte nach Möglichkeit vermieden werden.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects have the same value.</source>
          <target state="translated">Bestimmt, ob zwei angegebene <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekte denselben Wert haben.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="xamlMember1" /&gt;</ph> is the same as the value of <ph id="ph3">&lt;paramref name="xamlMember2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="xamlMember1" /&gt;</ph> und <ph id="ph3">&lt;paramref name="xamlMember2" /&gt;</ph> denselben Wert haben, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects have different values.</source>
          <target state="translated">Bestimmt, ob zwei angegebene <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekte verschiedene Werte haben.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="xamlMember1" /&gt;</ph> differs from the value of <ph id="ph3">&lt;paramref name="xamlMember2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Wert von <ph id="ph2">&lt;paramref name="xamlMember1" /&gt;</ph> vom Wert von <ph id="ph3">&lt;paramref name="xamlMember2" /&gt;</ph> abweicht, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.PreferredXamlNamespace">
          <source>Gets the single XAML namespace URI that identifies the primary XAML namespace for this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Ruft den einzelnen XAML-Namespace-URI ab, der den primären XAML-Namespace für dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt bezeichnet.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.PreferredXamlNamespace">
          <source>The identifier for the primary XAML namespace for this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, as a string.</source>
          <target state="translated">Der Bezeichner für den primären XAML-Namespace für dieses <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt als Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.PreferredXamlNamespace">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> property provides the same value as calling <ph id="ph2">&lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt;</ph> and then getting the first value string from the returned list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> Eigenschaft ermöglicht den gleichen Wert wie das Aufrufen <ph id="ph2">&lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt;</ph> , und klicken Sie dann die erste Wertzeichenfolge aus der zurückgegebenen Liste abrufen.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.PreferredXamlNamespace">
          <source>The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</source>
          <target state="translated">Beim Schreiben von des Elements zurück, um Text oder anderen Darstellungen bereit, die XAML-Namespaceinformationen beibehalten, sollte der bevorzugte Verwendung von XAML-Namespace verwendet werden.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.SerializationVisibility">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> value, which indicates how a visual designer should process the member.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph>-Wert ab, der angibt, wie der Member von einem visuellen Designer verarbeitet werden soll.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.SerializationVisibility">
          <source>A value of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> enumeration.</source>
          <target state="translated">Ein Wert der <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph>-Enumeration.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.SerializationVisibility">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.TargetType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type where the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> can exist.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt des Typs ab, in dem das <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt vorhanden sein kann.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>The type where the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> can exist.</source>
          <target state="translated">Der Typ, auf dem das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt vorhanden sein kann.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>The returned value is different for attachable and non-attachable members.</source>
          <target state="translated">Der zurückgegebene Wert ist für anfügbare und nicht anfügbare Member unterschiedlich.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>For non-attachable members, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph>.</source>
          <target state="translated">Für nicht anfügbare Member <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph> gibt <ph id="ph2">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>For attachable members, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> returns a result that is based on this logic:</source>
          <target state="translated">Für anfügbare Member <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> ein Wert zurückgegeben, die auf diese Logik basiert:</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>If reflection cannot resolve a backing (<ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> <ph id="ph2">`true`</ph>), this method returns an internal constant that represents a generic object type.</source>
          <target state="translated">Wenn Reflektion nicht, einen Sicherungsspeicher beheben kann (<ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> <ph id="ph2">`true`</ph>), diese Methode gibt eine interne-Konstante, die ein generisches Objekt darstellt.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>If the previous condition does not apply, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> is called.</source>
          <target state="translated">Wenn die vorherige Bedingung nicht gilt, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>The default implementation returns a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> that is based on examining the methods that implement the <ph id="ph2">`get`</ph> and <ph id="ph3">`set`</ph> accessors.</source>
          <target state="translated">Die Standardimplementierung gibt ein <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> auf Grundlage untersuchen die Methoden, implementieren die <ph id="ph2">`get`</ph> und <ph id="ph3">`set`</ph> Accessoren.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TargetType">
          <source>A class might override <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> to use a different behavior such as other metadata forms that might report target types for attachable members.</source>
          <target state="translated">Eine Klasse möglicherweise außer Kraft gesetzt <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> auf ein anderes Verhalten verwenden, z. B. andere Metadaten bildet, die möglicherweise Zieltypen für anfügbare Member gemeldet.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.ToString">
          <source>Returns a string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Gibt eine Zeichenfolgendarstellung für diese <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlMember.ToString">
          <source>A string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Eine Zeichenfolgendarstellung für diese <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlMember.ToString">
          <source>This implementation returns <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
          <target state="translated">Diese Implementierung gibt <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.Type">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt des vom Member verwendeten Typs ab.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Objekt des vom Member verwendeten Typs.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>This occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dies tritt auf, wenn die Reflektionslogik der anfänglichen internen die Informationen noch nicht festgelegt wurde.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>In the default behavior (no <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;</ph> override), the returned <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> can have different conceptual meanings.</source>
          <target state="translated">Im Standardverhalten (keine <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;</ph> überschreiben), das zurückgegebene <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> können verschiedene grundlegende Bedeutungen haben.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>Which meaning applies depends on whether this <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> represents a property, method, or event, as the following list shows:</source>
          <target state="translated">Welche Bedeutung gilt abhängig, ob dies <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> stellt eine Eigenschaft, eine Methode oder ein Ereignis, wie die folgende Liste zeigt:</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>For a property, the returned <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is the type that sets the property or is returned by the property.</source>
          <target state="translated">Für eine Eigenschaft, die den zurückgegebenen <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> ist der Typ, der die Eigenschaft oder von der Eigenschaft zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>For an event, the returned <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is the required event handler type (a delegate in a CLR implementation).</source>
          <target state="translated">Für ein Ereignis, das zurückgegebene <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> ist die erforderliche Ereignishandlertyp (ein Delegat in einer CLR-Implementierung).</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>For a method, <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is the return type of that method, which may be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Bei einer Methode <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> ist der Rückgabetyp der Methode, die möglicherweise <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.Type">
          <source>In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</source>
          <target state="translated">In jedem Fall wird die Verwendung von XAML-Schemakontext verwendet, um den XAML-Typ aus dem unterstützenden Typ auszuwerten.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which can be used for type conversion construction of XAML declared objects.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt ab, das für die Typkonvertierungserstellung von in XAML deklarierten Objekten verwendet wird.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> value, with a <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint on the generic.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Wert mit einer <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>-Einschränkung für den generischen Typ.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>This behavior occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dieses Verhalten tritt auf, wenn die Reflektionslogik der anfänglichen internen die Informationen noch nicht festgelegt wurde.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>Implementations that return a non-null property value for <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> are not necessarily a working <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">Dem Wert für Implementierungen, die eine Eigenschaft nicht Null zurückgeben <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> weisen nicht unbedingt eine funktionierende <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>The following is a list of possible non-null return values for <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> and what these values represent:</source>
          <target state="translated">Im folgenden werden eine Liste der möglichen Rückgabewerte ungleich Null für <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> und was diese Werte darstellen:</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</source>
          <target state="translated">Der Rückgabewert gibt einen Typkonverter, der speziell für dieses Element oder, üblicher, in den Zieltyp des Konverters attributiert ist.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</source>
          <target state="translated">Dieses Verhalten ist in der Regel welche die meisten XAML-Typsysteme und XAML-Prozessoren gesucht, um einen Typkonverter zu instanziieren und Aufrufen ihrer Methoden.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>The return value reports a built-in value converter.</source>
          <target state="translated">Der Rückgabewert meldet einen integrierten Wertkonverter.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>These converters exist for certain internal operations that are performed by a XAML writer.</source>
          <target state="translated">Dieser Konverter sind für bestimmte interne Vorgänge, die von einem XAML-Writer ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</source>
          <target state="translated">Insbesondere konvertieren diese integrierten Wertkonverter die unformatierte Zeichenfolge Attributwerte in die Verwendung von XAML-Sprachebene primitiven.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</source>
          <target state="translated">Für die .NET Framework-XAML-Dienste-Implementierung weiterleiten an einen Typkonverter, der in der System-Assembly definiert ist häufig diese integrierten typkonvertierungen.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>For example, a conversion for an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value has built-in forwarded conversion, and therefore, the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt;</ph> value references <ph id="ph3">&lt;xref:System.ComponentModel.Int32Converter&gt;</ph>.</source>
          <target state="translated">Z. B. eine Konvertierung für einen <ph id="ph1">&lt;xref:System.Int32&gt;</ph> Wert verfügt über integrierte weitergeleitete Konvertierung, und daher die <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt;</ph> Wert Verweise <ph id="ph3">&lt;xref:System.ComponentModel.Int32Converter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>The return value reports the special case of an unconstrained object model; that is, the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> has a <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> value of <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Der Rückgabewert meldet besonderen Fall eines uneingeschränkten Objektmodells; d. h. die <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> verfügt über eine <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> Wert <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> reports that the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType&gt;</ph> is {<ph id="ph3">`Object}`</ph>.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> meldet, das die <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType&gt;</ph> ist {<ph id="ph3">`Object}`</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>However, <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> is <ph id="ph2">`null`</ph> because no actual type or instance is available to perform this conversion.</source>
          <target state="translated">Allerdings <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> ist <ph id="ph2">`null`</ph> , da keine tatsächlichen Typ oder die Instanz zum Ausführen dieser Konvertierung verfügbar ist.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</source>
          <target state="translated">Stattdessen kann das Verhalten des Objektmodells bis zur Laufzeit bestimmt werden bei der Common Language Runtime von der jeweiligen Technologie für die Behandlung von seinem Objektdiagramm bestimmt.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>If you can access a working <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> from <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>, you can invoke its conversion methods.</source>
          <target state="translated">Wenn Sie eine funktionierende zugreifen können <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> aus <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>, können Sie seine Konvertierungsmethoden aufrufen.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>However, many conversion methods rely on service context.</source>
          <target state="translated">Dienstkontext jedoch abhängig viele Konvertierungsmethoden.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.TypeConverter">
          <source>If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</source>
          <target state="translated">Wenn Sie den gleichen Dienstkontext nicht verfügen, der Typkonverter für seine typische Rolle beim Schreiben von Objekten für Objektdiagramme erwartet, können die Konvertermethoden Ausnahmen auslösen.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.UnderlyingMember">
          <source>Gets the CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that is available for a member that is constructed by <ph id="ph2">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> des CLR-Typsystems ab, die für einen Member verfügbar ist, der von <ph id="ph2">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> oder <ph id="ph4">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> erstellt wird.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.UnderlyingMember">
          <source>CLR type system <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> information, as cast from the initial constructor parameters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Informationen des CLR-Typsystems entsprechend der Umwandlung von den ursprünglichen Konstruktorparametern.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.UnderlyingMember">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> that is constructed with the <ph id="ph2">&lt;see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /&gt;</ph> signature returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>-Objekt, das mit der <ph id="ph2">&lt;see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /&gt;</ph>-Signatur erstellt wird, gibt <ph id="ph3">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.UnderlyingMember">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlMember.ValueSerializer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which is used for value serialization of XAML declared objects.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt ab, das für die Wertserialisierung von in XAML deklarierten Objekten verwendet wird.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.ValueSerializer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> constraint on the generic.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt mit <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph>-Einschränkung für den generischen Typ.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.ValueSerializer">
          <source>Calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph> ruft <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt;</ph> oder eine bestimmte Außerkraftsetzung der Methode.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.ValueSerializer">
          <source>This behavior occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dieses Verhalten tritt auf, wenn die Reflektionslogik der anfänglichen internen die Informationen noch nicht festgelegt wurde.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.ValueSerializer">
          <source>Not all cases that return a non-null property value for <ph id="ph1">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph> are necessarily a working <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">Nicht alle Fälle, die eine Eigenschaft nicht Null zurückgeben Wert für <ph id="ph1">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph> sind unbedingt eine funktionierende <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlMember.ValueSerializer">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph>; the same considerations apply to <ph id="ph2">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph>.</source>
          <target state="translated">Finden Sie unter <ph id="ph1">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph>; die gleichen Überlegungen gelten für <ph id="ph2">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>