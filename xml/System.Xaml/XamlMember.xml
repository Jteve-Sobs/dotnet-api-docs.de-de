<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8c3247d095faa010b24f0fc0d6926363fa23b5d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78685143" /></Metadata><TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="050c0-101">Stellt den XAML-Typsystembezeichner für Member von XAML-Typen bereit.</span><span class="sxs-lookup"><span data-stu-id="050c0-101">Provides the XAML type system identifier for members of XAML types.</span></span> <span data-ttu-id="050c0-102">Der Bezeichner wird während der Verarbeitung von Memberknoten (wenn der XAML-Reader in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" /> positioniert ist) von XAML-Readern und XAML-Writern sowie für die allgemeine XAML-Typsystemlogik verwendet.</span><span class="sxs-lookup"><span data-stu-id="050c0-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-103"><xref:System.Xaml.XamlMember> können drei Methoden zum Zurückgeben von Informationen zu einem XAML-Member verwenden: Standard Common Language Runtime (CLR)-Reflektion. ein Verweis basiertes Reflektionsverfahren zum Aufrufen interner APIs, die optimierte Bitflags verwenden; oder Aufrufen von virtuellen über schreibungen der `Lookup*`-API, die von möglichen <xref:System.Xaml.XamlMember> Unterklassen bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="050c0-104">Für die meisten Verwendungen von .NET Framework XAML-Dienste-APIs und der <xref:System.Xaml.XamlMember>-API verwenden Sie den standardmäßigen XAML-Schema Kontext.</span><span class="sxs-lookup"><span data-stu-id="050c0-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="050c0-105">Der standardmäßige XAML-Schema Kontext für .NET Framework XAML-Dienste verwendet die CLR-Unterstützung für das Typsystem.</span><span class="sxs-lookup"><span data-stu-id="050c0-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="050c0-106">Dadurch können XAML-Reader und XAML-Writer mit allen Typen oder Membern arbeiten, die in der CLR und den zugehörigen reflektionstechniken definiert bzw. anderweitig verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="050c0-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="050c0-107">Suche \* APIs und abgeleitete XamlMember-Klassen</span><span class="sxs-lookup"><span data-stu-id="050c0-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="050c0-108"><xref:System.Xaml.XamlMember> definiert mehrere virtuelle Member, die von abgeleiteten Klassen überschrieben werden können.</span><span class="sxs-lookup"><span data-stu-id="050c0-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="050c0-109">Diese Member haben Namen, die immer mit der Zeichenfolge `Lookup`beginnen.</span><span class="sxs-lookup"><span data-stu-id="050c0-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="050c0-110">Der Rest des API-namens verweist dann auf die Eigenschaft, die von der virtuellen Methode beeinflusst wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="050c0-111">Beispielsweise kann eine <xref:System.Xaml.XamlMember> abgeleitete Klasse <xref:System.Xaml.XamlMember.LookupTargetType%2A> überschreiben, um zu beeinflussen, was die Basis definierte Eigenschaft <xref:System.Xaml.XamlMember.TargetType%2A> in einer abgeleiteten Klasse zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="050c0-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="050c0-112">Sie können Rückgabewerte für diese Eigenschaften in <xref:System.Xaml.XamlMember> oder vorhandenen abgeleiteten Klassen Vorhersagen, indem Sie die Dokumentation für die relevanten `Lookup*` Methoden lesen.</span><span class="sxs-lookup"><span data-stu-id="050c0-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="050c0-113">Der Zweck der `Lookup*` Methoden besteht darin, eine XAML-Typsystem-Erweiterungs Technik bereitzustellen, die die <xref:System.Xaml.XamlMember>-Basisklasse enthält.</span><span class="sxs-lookup"><span data-stu-id="050c0-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="050c0-114">Wenn Sie von <xref:System.Xaml.XamlMember> ableiten und die `Lookup` virtuellen Member überschreiben, können Sie das Konzept eines XAML-Members für ein XAML-Schema in einem XAML-Typsystem definieren, ohne an die Besonderheiten eines Unterstützungs Typs System oder einer Technologie gebunden zu sein.</span><span class="sxs-lookup"><span data-stu-id="050c0-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="050c0-115">Sie können auch einen bereitgestellten XAML-Schema Kontext unter diesem Schema verwenden und trotzdem die gewünschten Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="050c0-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="050c0-116">Beachten Sie als Beispiel die <xref:System.Xaml.XamlMember>-Eigenschaft <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="050c0-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="050c0-117">Diese Eigenschaft informiert Aufrufer darüber, dass Vorgänge wie z. b. die Verwendung eines <xref:System.Xaml.XamlWriter> für die Serialisierung einen Wert für diesen Member für ein Zielobjekt schreiben können.</span><span class="sxs-lookup"><span data-stu-id="050c0-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="050c0-118">In der Standard Implementierung wird festgelegt, ob der Member beschreibbar ist, indem reflektionstechniken für das unterstützende CLR-<xref:System.Type> und seine Member (die <xref:System.Reflection.MemberInfo>) verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="050c0-119">Daher ist das XAML-Typsystem standardmäßig vom CLR-Typsystem abhängig.</span><span class="sxs-lookup"><span data-stu-id="050c0-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="050c0-120">Sie können diese Abhängigkeit jedoch für Ihre XAML-Typsystem Berichterstattung von <xref:System.Xaml.XamlMember.IsWritePublic%2A> entfernen, indem Sie die API-<xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>außer Kraft setzen.</span><span class="sxs-lookup"><span data-stu-id="050c0-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="050c0-121">Innerhalb der Überschreibung können Sie andere Determinationen verwenden, wie z. b. für Ihre technologiespezifische Metadaten, eine Master Such Tabelle, die für ein festes XAML-Vokabular optimiert ist, oder eine Vielzahl anderer Strategien, um zu bestimmen, ob ein XAML-Member in Ihrem XAML-Vokabular.</span><span class="sxs-lookup"><span data-stu-id="050c0-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="050c0-122">Erstellen von XamlMember ohne XAML-Schema Kontext</span><span class="sxs-lookup"><span data-stu-id="050c0-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="050c0-123">Die meisten Konstruktoren von <xref:System.Xaml.XamlMember> erfordern einen <xref:System.Xaml.XamlSchemaContext> als Teil der Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="050c0-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="050c0-124">Der <xref:System.Xaml.XamlSchemaContext> ist auch für viele interne <xref:System.Xaml.XamlSchemaContext> Vorgänge erforderlich, z. b. das Abrufen von Informationen, die vom Sicherungstyp weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="050c0-125">Wenn Sie mit der <xref:System.Xaml.XamlMember>-API arbeiten, verfügen Sie in der Regel über eine <xref:System.Xaml.XamlSchemaContext>, die über ein umgebendes Konstrukt wie eine <xref:System.Xaml.XamlWriter>verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="050c0-126">In diesem Fall können Sie den <xref:System.Xaml.XamlSchemaContext> Verweis über an alle XAML-Typsystem Aufrufe übergeben, die einen XAML-Schema Kontext erfordern.</span><span class="sxs-lookup"><span data-stu-id="050c0-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="050c0-127">Ein bestimmter Konstruktor (<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>) erfordert keine <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="050c0-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="050c0-128">Eine <xref:System.Xaml.XamlMember>, die mit der <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Signatur erstellt wird, gibt jedoch `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="050c0-129">Bei einem Ladepfad, der <xref:System.Xaml.XamlObjectWriter>umfasst, kann ein solcher Member nicht in ein Objekt Diagramm geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="050c0-130">Mithilfe der .NET Framework XAML-Dienst Implementierung löst der <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>-Befehl eine <xref:System.Xaml.XamlObjectWriterException> aus, wenn der relevante <xref:System.Xaml.XamlMember> für `true` <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="050c0-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="050c0-131">Sie sollten keine <xref:System.Xaml.XamlMember> erstellen, die den Wert `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A> hat, es sei denn, ihre Implementierung kann die Ausnahmen von <xref:System.Xaml.XamlObjectWriter>verarbeiten, oder Sie haben andere Möglichkeiten, das <xref:System.Xaml.XamlObjectWriter> Verhalten anzupassen.</span><span class="sxs-lookup"><span data-stu-id="050c0-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="050c0-132">Beispielsweise kann eine oder mehrere der folgenden Aktionen für Ihre Implementierung zutreffen:</span><span class="sxs-lookup"><span data-stu-id="050c0-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="050c0-133">Der XAML-Schema Kontext ist später verfügbar.</span><span class="sxs-lookup"><span data-stu-id="050c0-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="050c0-134">Sie verwenden ein Element Aufruf Muster.</span><span class="sxs-lookup"><span data-stu-id="050c0-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="050c0-135">Sie überschreiben <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> absichtlich in einem benutzerdefinierten XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="050c0-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="050c0-136">Grundlagen zu XAML-Knotenstreamstrukturen und -konzepten</span><span class="sxs-lookup"><span data-stu-id="050c0-136">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="050c0-137">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="050c0-137">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventInfo As EventInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="050c0-138">Die <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems, die den Ereignismember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-138">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-139">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-139">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="050c0-140">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-140">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-141">Verwenden Sie diesen Konstruktor, wenn der Member ein Ereignis darstellt (Ereignishandler-Verbindungspunkt Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="050c0-141">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyInfo As PropertyInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="050c0-142">Die <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-142">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-143">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-143">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="050c0-144">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-144">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-145">Verwenden Sie diesen Konstruktor, wenn der Member eine Eigenschaft darstellt (und insbesondere keine ereignishandlerverbindung ist).</span><span class="sxs-lookup"><span data-stu-id="050c0-145">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventInfo As EventInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="050c0-146">Die <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems, die den Ereignismember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-146">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-147">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-147">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="050c0-148">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Reflektionslaufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="050c0-148">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="050c0-149">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit der <see cref="T:System.Reflection.EventInfo" /> des CLR-Typsystems und einem <see cref="T:System.Xaml.XamlSchemaContext" />, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span><span class="sxs-lookup"><span data-stu-id="050c0-149">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-150">Verwenden Sie diesen Konstruktor, wenn der Member ein Ereignis (oder eine Verbindungspunkt Eigenschaft für den Ereignishandler) darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-150">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyInfo As PropertyInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="050c0-151">Die <see cref="T:System.Reflection.PropertyInfo" /> des CLR-Typsystems, die den Eigenschaftsmember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-151">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-152">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-152">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="050c0-153">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="050c0-153">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="050c0-154">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit Reflektions-<see cref="T:System.Reflection.PropertyInfo" /> und einem <see cref="T:System.Xaml.XamlSchemaContext" />, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span><span class="sxs-lookup"><span data-stu-id="050c0-154">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-155">Verwenden Sie diesen Konstruktor nur, wenn der Member eine Eigenschaft darstellt und wenn es sich nicht um eine ereignishandlerverbindung handelt.</span><span class="sxs-lookup"><span data-stu-id="050c0-155">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="050c0-156">Der Zeichenfolgenname des anfügbaren Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="050c0-156">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="050c0-157">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für die <see langword="Add" />-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</span><span class="sxs-lookup"><span data-stu-id="050c0-157">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-158">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-158">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="050c0-159">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der ein anfügbares Ereignis darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-159">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-160">Verwenden Sie diesen Konstruktor, wenn der Member einen anfügbaren Ereignismember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-160">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="050c0-161">Der Zeichenfolgenname des Members.</span><span class="sxs-lookup"><span data-stu-id="050c0-161">The string name of the member.</span></span></param>
        <param name="declaringType"><span data-ttu-id="050c0-162">Die <see cref="T:System.Xaml.XamlType" />-Informationen für den deklarierenden Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-162">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span></span></param>
        <param name="isAttachable"><span data-ttu-id="050c0-163"><see langword="true" />, um anzugeben, dass der Member anfügbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-163"><see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="050c0-164">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse mit einem Zeichenfolgennamen und deklarierenden <see cref="T:System.Xaml.XamlType" />-Informationen.</span><span class="sxs-lookup"><span data-stu-id="050c0-164">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span></span> <span data-ttu-id="050c0-165">Ein mit dieser Signatur erstellter <see cref="T:System.Xaml.XamlMember" /> weist deutliche Einschränkungen auf.</span><span class="sxs-lookup"><span data-stu-id="050c0-165">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-166">Eine <xref:System.Xaml.XamlMember>, die mit der <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Signatur erstellt wird, gibt `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-166">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="050c0-167">Bei einem Ladepfad, der <xref:System.Xaml.XamlObjectWriter>umfasst, kann ein solcher Member nicht in ein Objekt Diagramm geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-167">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="050c0-168">Mithilfe der .NET Framework XAML-Dienst Implementierung löst der <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>-Befehl eine <xref:System.Xaml.XamlObjectWriterException> aus, wenn der relevante <xref:System.Xaml.XamlMember> für `true` <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="050c0-168">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="050c0-169">Sie sollten keine <xref:System.Xaml.XamlMember> mit <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` erstellen, es sei denn, ihre Implementierung kann die Ausnahmen von <xref:System.Xaml.XamlObjectWriter>verarbeiten, oder Sie haben andere Möglichkeiten, das <xref:System.Xaml.XamlObjectWriter> Verhalten anzupassen.</span><span class="sxs-lookup"><span data-stu-id="050c0-169">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="050c0-170">Beispielsweise kann eine oder mehrere der folgenden Aktionen für Ihre Implementierung zutreffen:</span><span class="sxs-lookup"><span data-stu-id="050c0-170">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="050c0-171">Der XAML-Schema Kontext ist später verfügbar.</span><span class="sxs-lookup"><span data-stu-id="050c0-171">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="050c0-172">Sie verwenden ein Element Aufruf Muster.</span><span class="sxs-lookup"><span data-stu-id="050c0-172">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="050c0-173">Sie überschreiben <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> absichtlich in einem benutzerdefinierten XAML-Writer.</span><span class="sxs-lookup"><span data-stu-id="050c0-173">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="050c0-174"><paramref name="name" /> oder <paramref name="declaringType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-174"><paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="050c0-175">Der Zeichenfolgenname der anfügbaren Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="050c0-175">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="050c0-176">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="get" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span><span class="sxs-lookup"><span data-stu-id="050c0-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="050c0-177">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="set" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span><span class="sxs-lookup"><span data-stu-id="050c0-177">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-178">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-178">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="050c0-179">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für ein <see cref="T:System.Xaml.XamlMember" />-Objekt, das eine anfügbare Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-179">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-180">Verwenden Sie diesen Konstruktor, wenn der Member eine anfügbare Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-180">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="050c0-181">Der Zeichenfolgenname des anfügbaren Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="050c0-181">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="050c0-182">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für die <see langword="Add" />-Methode des Handlers der Unterstützungsimplementierung des anfügbaren Members.</span><span class="sxs-lookup"><span data-stu-id="050c0-182">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-183">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-183">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="050c0-184">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="050c0-184">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="050c0-185">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der ein anfügbares Ereignis darstellt, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span><span class="sxs-lookup"><span data-stu-id="050c0-185">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-186">Verwenden Sie diesen Konstruktor, wenn der Member einen anfügbaren Ereignismember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-186">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="050c0-187">Der Zeichenfolgenname der anfügbaren Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="050c0-187">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="050c0-188">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="get" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span><span class="sxs-lookup"><span data-stu-id="050c0-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="050c0-189">Die <see cref="T:System.Reflection.MethodInfo" /> des CLR-Typsystems für den <see langword="set" />-Accessor der Unterstützungsimplementierung des anfügbaren Members.</span><span class="sxs-lookup"><span data-stu-id="050c0-189">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="050c0-190">Der <see cref="T:System.Xaml.XamlSchemaContext" />-Kontext, der den Member qualifiziert.</span><span class="sxs-lookup"><span data-stu-id="050c0-190">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="050c0-191">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die die Laufzeitaufrufe der <see cref="T:System.Xaml.XamlMember" />-Klasse verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="050c0-191">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="050c0-192">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlMember" />-Klasse für einen <see cref="T:System.Xaml.XamlMember" />, der eine anfügbare Eigenschaft darstellt, einschließlich von <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen.</span><span class="sxs-lookup"><span data-stu-id="050c0-192">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-193">Verwenden Sie diesen Konstruktor, wenn der Member einen anfügbaren Eigenschaftenmember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-193">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-194">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ ab, durch den der dem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnete Member deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-194">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="050c0-195">Das <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ, durch den der dem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnete Member deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-195">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-196">Dieser Wert wird in der Regel während der Initialisierung festgelegt und ist in der Regel nicht `null`.</span><span class="sxs-lookup"><span data-stu-id="050c0-196">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="050c0-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> Informationen können von Konstruktoren für die Initialisierung übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="050c0-198">Durch Aufrufen von direkt in Basiskonstruktoren kann die Initialisierung für <xref:System.Xaml.XamlMember> abgeleiteten Klassen einige der Wert Überprüfungen, die in der Basisklasse vorgenommen werden, weglassen.</span><span class="sxs-lookup"><span data-stu-id="050c0-198">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="050c0-199">Daher kann die abgeleitete Initialisierung die gemeldeten Typmember-Beziehungs Informationen eines XAML-Members ändern, sodass Sie nicht mehr erwartungsgemäß mit den typsysteminformationen der zugrunde liegenden CLR-Deklaration ausgerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-199">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="050c0-200">Verwenden Sie für alle sicherheitskritischen Überprüfungen der Deklaration von Typinformationen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-200">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-201">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-201">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="050c0-202">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-202">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-203">Durch Aufrufen von <xref:System.Xaml.XamlMember.DeferringLoader%2A> wird <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-203">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="050c0-204">Dieses Verhalten tritt auf, wenn die anfängliche interne reflektionslogik die Informationen nicht bereits festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="050c0-204">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-205">Ruft eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten ab.</span><span class="sxs-lookup"><span data-stu-id="050c0-205">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="050c0-206">Von diesen werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="050c0-206">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="050c0-207">Eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="050c0-207">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-208">Durch Aufrufen von <xref:System.Xaml.XamlMember.DependsOn%2A> wird <xref:System.Xaml.XamlMember.LookupDependsOn%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-208">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="050c0-209">Dieses Verhalten tritt auf, wenn die anfängliche interne reflektionslogik die Informationen nicht bereits festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="050c0-209">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="050c0-210">Das `DependsOn` Muster kann auf Objektmodell Fälle angewendet werden, die absichtlich einer allgemeinen XAML-Regel widersprechen.</span><span class="sxs-lookup"><span data-stu-id="050c0-210">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="050c0-211">Die allgemeine XAML-Regel besteht darin, dass Member eines Typs, die nicht als Initialisierungs Text (oder durch eine Factorymethode in XAML 2009) übermittelt werden können, in beliebiger Reihenfolge zugewiesen werden können.</span><span class="sxs-lookup"><span data-stu-id="050c0-211">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="050c0-212">Wenn Sie ein `DependsOn` Muster auf einen Member anwenden, können Sie XAML-Writer anweisen, den referenzierten Member immer vor diesem Member zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="050c0-212">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="050c0-213">Sie können dieses Muster in Situationen anwenden, in denen der Wert des aktuellen Members Kontext oder andere Informationen erfordert, die nur verfügbar sind, nachdem der andere Member festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="050c0-213">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="050c0-214">Das `DependsOn` Muster sollte umsichtig angewendet und für Eigenschafts Szenarios reserviert werden, in denen es zu einem Architektur Zweck dient.</span><span class="sxs-lookup"><span data-stu-id="050c0-214">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="050c0-215">Eine große Anzahl von Abhängigkeiten hat die Möglichkeit, die XAML-Verarbeitung zu verlangsamen.</span><span class="sxs-lookup"><span data-stu-id="050c0-215">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="050c0-216">Außerdem ist es möglich, zirkuläre Abhängigkeiten zu verursachen. in diesem Fall ist das XAML-Verarbeitungs Verhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="050c0-216">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="050c0-217">Beispiel `DependsOn` Szenarien aus WPF enthalten bestimmte Eigenschaften auf <xref:System.Windows.Controls.ControlTemplate> und <xref:System.Windows.DataTemplate>, auf <xref:System.Windows.Trigger>und <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="050c0-217">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="050c0-218">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="050c0-218">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="050c0-219">Das Objekt, das mit diesem Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="050c0-219">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="050c0-220">Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</span><span class="sxs-lookup"><span data-stu-id="050c0-220">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="050c0-221"><see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="obj" />-Parameter ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-221"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="050c0-222">Ein Objekt, das mit diesem Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="050c0-222">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="050c0-223">Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-223">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="050c0-224"><see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-224"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-225">Gibt den Hashcode für dieses Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-225">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="050c0-226">Ein ganzzahliger Hashcode.</span><span class="sxs-lookup"><span data-stu-id="050c0-226">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-227">Gibt eine Liste von XAML-Namespaces zurück, in dem dieser XAML-Member vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-227">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="050c0-228">Eine Liste von XAML-Namespacebezeichnern als Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="050c0-228">A list of XAML namespace identifiers as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-229">Die Standard Implementierung gibt das Ergebnis des <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType>-Aufrufes von der <xref:System.Xaml.XamlMember.DeclaringType%2A> zurück, die diesem <xref:System.Xaml.XamlMember>zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-229">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-230">Ruft die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung ab, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-230">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="050c0-231">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Implementierung, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-231">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-232">Das `Invoker` Muster ist eine erweiterte XAML-Typsystem-Erweiterungs Technik.</span><span class="sxs-lookup"><span data-stu-id="050c0-232">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="050c0-233">Das `Invoker` Muster bietet eine Möglichkeit, unterschiedliche Schematyp-Mapping-Verhalten einzufügen, während XAML-typsystemdefinitionen weiterhin von .NET Framework XAML-Diensten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-233">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="050c0-234">Wenn eine <xref:System.Xaml.XamlMember.LookupInvoker%2A> Überschreibung `null`zurückgibt, oder wenn die Standard Implementierung `null` zurückgibt, weil die <xref:System.Xaml.XamlMember.UnderlyingMember%2A> für diese <xref:System.Xaml.XamlMember>fehlt, gibt die <xref:System.Xaml.XamlMember.Invoker%2A>-Eigenschaft <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-234">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="050c0-235">Standardmäßig ist <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="050c0-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="050c0-236">Dies gilt für die meisten Vorgänge, die .NET Framework XAML-Dienste und den XAML-Standardschema Kontext verwenden, und bei denen keine bestimmte Überschreibungs `Invoker` Muster für die Erstellung von XAML-typsystementitäten übergebenen werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-236">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="050c0-237">Durch Aufrufen von <xref:System.Xaml.XamlMember.Invoker%2A> wird <xref:System.Xaml.XamlMember.LookupInvoker%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-237">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-238">Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xaml.XamlMember" /> als Ambient-Eigenschaft gemeldet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-238">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <value><span data-ttu-id="050c0-239"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-239"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-240">Durch Aufrufen von <xref:System.Xaml.XamlMember.IsAmbient%2A> wird <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-240">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="050c0-241">Dieses Verhalten tritt bei Implementierungen auf, bei denen die anfängliche interne reflektionslogik die Informationen nicht bereits festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="050c0-241">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="050c0-242">Die Überprüfung auf Ambient-Eigenschaften ist in der Regel Teil der XAML-Verarbeitungslogik, um sicherzustellen, dass Objekte und Werte, die auf Umgebungs Verwendung für die typqualifizierung basieren, ordnungsgemäß funktionieren.</span><span class="sxs-lookup"><span data-stu-id="050c0-242">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="050c0-243">Der .NET Framework XAML-Dienste-APIs und der XAML-Standardschema Kontext füllen diesen Wert auf der Grundlage der Zuordnung mit <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="050c0-243">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="050c0-244">Die Standard Implementierung von <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> verwendet diese vorhandene <xref:System.Windows.Markup.AmbientAttribute> Technik und gibt `true` zurück, wenn <xref:System.Windows.Markup.AmbientAttribute> für eine Element Deklaration vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-244">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="050c0-245"><xref:System.Windows.Markup.AmbientAttribute> finden Sie unter Member mehrerer WPF-Typen, die <xref:System.Windows.Application>, <xref:System.Windows.Setter>und <xref:System.Windows.Style>enthalten.</span><span class="sxs-lookup"><span data-stu-id="050c0-245"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="050c0-246">Sie befindet sich auch auf dem <xref:System.Windows.ResourceDictionary>-Typ. Dies bedeutet, dass jedes Element, das <xref:System.Windows.ResourceDictionary> als Typ verwendet, als Ambient angesehen werden sollte, auch wenn der Member nicht explizit attributiert ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-246">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-247">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein anfügbarer Member ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-247">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span></span></summary>
        <value><span data-ttu-id="050c0-248"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein anfügbarer Member ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-248"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-249">Der <xref:System.Xaml.XamlMember.IsAttachable%2A> Wert wird basierend auf dem Konstruktor initialisiert, der verwendet wurde, um eine <xref:System.Xaml.XamlMember>zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="050c0-249">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-250">Ruft einen Wert ab, der angibt, ob es sich bei diesem <see cref="T:System.Xaml.XamlMember" />-Objekt um eine XAML-Direktive handelt.</span><span class="sxs-lookup"><span data-stu-id="050c0-250">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span></span></summary>
        <value><span data-ttu-id="050c0-251"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt eine XAML-Direktive ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-251"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-252">Der <xref:System.Xaml.XamlMember.IsDirective%2A> Wert wird basierend auf dem Konstruktor initialisiert, der verwendet wurde, um eine <xref:System.Xaml.XamlMember>zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="050c0-252">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="050c0-253">Die Basis <xref:System.Xaml.XamlMember> Konstruktoren initialisieren, sodass <xref:System.Xaml.XamlMember.IsDirective%2A> `false`ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-253">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="050c0-254">Allerdings wird die <xref:System.Xaml.XamlDirective>-Klasse (eine <xref:System.Xaml.XamlMember> abgeleitete Klasse) initialisiert, sodass <xref:System.Xaml.XamlMember.IsDirective%2A> `true`ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-254">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="050c0-255">Wenn Sie <xref:System.Xaml.XamlMember.IsDirective%2A> als `true` an Aufrufer einer benutzerdefinierten XAML-Schema Klasse für XAML-Member melden möchten, stellen Sie sicher, dass Sie von <xref:System.Xaml.XamlDirective> ableiten, da dies die einzige Möglichkeit ist, dieses Verhalten zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="050c0-255">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-256">Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xaml.XamlMember" /> einen Ereignismember darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span></span></summary>
        <value><span data-ttu-id="050c0-257"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt ein Ereignis darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-258">Durch Aufrufen von <xref:System.Xaml.XamlMember.IsEvent%2A> wird <xref:System.Xaml.XamlMember.LookupIsEvent%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-258">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-259">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge als <see cref="P:System.Xaml.XamlMember.Name" />-Eigenschaft initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-259">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span></span></summary>
        <value><span data-ttu-id="050c0-260"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge initialisiert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-260"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="050c0-261">XamlName</span><span class="sxs-lookup"><span data-stu-id="050c0-261">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-262">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibgeschützten Member darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-262">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span></span></summary>
        <value><span data-ttu-id="050c0-263"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibgeschützten Member darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-263"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-264">Durch Aufrufen von <xref:System.Xaml.XamlMember.IsReadOnly%2A> wird <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-264">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-265">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member mit einem aufrufbaren öffentlichen <see langword="get" />-Accessor darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-265">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span></span></summary>
        <value><span data-ttu-id="050c0-266"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen aufrufbaren öffentlichen <see langword="get" />-Accessor darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-266"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-267">Der <xref:System.Xaml.XamlMember.IsReadPublic%2A> Wert überprüft, ob die <xref:System.Xaml.XamlMember.DeclaringType%2A> öffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-267">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="050c0-268">Wenn <xref:System.Xaml.XamlMember.DeclaringType%2A> nicht öffentlich ist, kann der `get`-Accessor nicht auf praktische Weise aufgerufen werden, und <xref:System.Xaml.XamlMember.IsReadPublic%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-268">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="050c0-269">Durch Aufrufen von <xref:System.Xaml.XamlMember.IsReadPublic%2A> wird <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-269">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="050c0-270">Die <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>-Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-270">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="050c0-271">Die außer Kraft Setzung kann die gemeldeten Zugriffs Informationen eines XAML-Members (böswillig oder anderweitig) ändern, sodass er nicht mehr erwartungsgemäß mit den Typsystem-Zugriffs Informationen der zugrunde liegenden CLR-Deklaration ausgerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-271">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="050c0-272">Verwenden Sie für alle sicherheitskritischen Prüfungen von Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-272">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-273">Ruft einen Wert ab, der angibt, ob der Member durch das für Typ- und Memberauflösung verwendete Unterstützungssystem nicht aufgelöst werden kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-273">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <value><span data-ttu-id="050c0-274"><see langword="true" />, wenn der Member nicht aufgelöst werden kann. <see langword="false" />, wenn der Member aufgelöst werden kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-274"><see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-275">Eine <xref:System.Xaml.XamlMember>, die mit der <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Signatur erstellt wird, gibt `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A>zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-275">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="050c0-276">Bei einem Ladepfad, der <xref:System.Xaml.XamlObjectWriter>umfasst, kann ein <xref:System.Xaml.XamlMember> mit `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A> nicht in ein Objekt Diagramm geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-276">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="050c0-277">Unter den Standard Implementierungen in .NET Framework XAML-Dienste-APIs löst der <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>-Befehl eine <xref:System.Xaml.XamlObjectWriterException> aus, wenn der relevante <xref:System.Xaml.XamlMember> für `true` <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="050c0-277">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="050c0-278">Sie sollten keine <xref:System.Xaml.XamlMember> erstellen, die den Wert `true` für <xref:System.Xaml.XamlMember.IsUnknown%2A> hat, es sei denn, ihre Implementierung kann die Ausnahmen von <xref:System.Xaml.XamlObjectWriter>verarbeiten, oder Sie haben andere Möglichkeiten, das <xref:System.Xaml.XamlObjectWriter> Verhalten anzupassen.</span><span class="sxs-lookup"><span data-stu-id="050c0-278">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="050c0-279">Durch Aufrufen von <xref:System.Xaml.XamlMember.IsUnknown%2A> wird <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-279">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-280">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-280">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span></span></summary>
        <value><span data-ttu-id="050c0-281"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-281"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-282">Durch Aufrufen von <xref:System.Xaml.XamlMember.IsWriteOnly%2A> wird <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-282">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-283">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member mit einem aufrufbaren öffentlichen <see langword="set" />-Accessor darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-283">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span></span></summary>
        <value><span data-ttu-id="050c0-284"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen aufrufbaren öffentlichen <see langword="set" />-Accessor darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-284"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-285">Der <xref:System.Xaml.XamlMember.IsWritePublic%2A> Wert berücksichtigt, ob die <xref:System.Xaml.XamlMember.DeclaringType%2A> im Rahmen der Bestimmung öffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-285">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="050c0-286">Wenn <xref:System.Xaml.XamlMember.DeclaringType%2A> nicht öffentlich ist, kann der `set`-Accessor nicht auf praktische Weise aufgerufen werden, und <xref:System.Xaml.XamlMember.IsWritePublic%2A> gibt `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-286">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="050c0-287">Durch Aufrufen von <xref:System.Xaml.XamlMember.IsWritePublic%2A> wird <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-287">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="050c0-288">Die <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>-Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-288">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="050c0-289">Die außer Kraft Setzung kann die gemeldeten Zugriffs Informationen eines XAML-Members (böswillig oder anderweitig) ändern, sodass er nicht mehr erwartungsgemäß mit den Typsystem-Zugriffs Informationen der zugrunde liegenden CLR-Deklaration ausgerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-289">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="050c0-290">Verwenden Sie für alle sicherheitskritischen Prüfungen von Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-290">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-291">Gibt bei der Implementierung in einer abgeleiteten Klasse eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-291">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="050c0-292">Eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="050c0-292">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-293">Überschreiben Sie diese Methode, um die interne Reflektion mit einer alternativen Methode zum Abrufen von CLR-Attributwerten bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="050c0-293">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="050c0-294">Wenn keine außer Kraft Setzung vorhanden ist, verwendet der interne Reflektor typische CLR-reflektionslogik, z. b. Aufrufe <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="050c0-294">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="050c0-295">Die Standardimplementierung gibt `null` zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-295">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-296">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-296">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <returns><span data-ttu-id="050c0-297">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, der eine <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ besitzt.</span><span class="sxs-lookup"><span data-stu-id="050c0-297">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-298">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus der <xref:System.Xaml.XamlMember.DeferringLoader%2A>-Eigenschaft abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-298">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="050c0-299">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlMember.DeferringLoader%2A> möchten, dass ein Wert zurückgegeben wird, der von dem Wert abweicht, der von der internen Standard Reflektion aktiviert wird, und wenn Sie auch benutzerdefinierte <xref:System.Xaml.Schema.XamlMemberInvoker> Informationen bereitstellen</span><span class="sxs-lookup"><span data-stu-id="050c0-299">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="050c0-300">Die Standard Implementierung gibt ein Objekt entweder durchlesen <xref:System.Windows.Markup.XamlDeferLoadAttribute> oder mithilfe einer <xref:System.Xaml.XamlDeferringLoader> aus dem deklarierenden Typ zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-300">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="050c0-301">Wenn keines der Objekte verfügbar ist, gibt diese Methode möglicherweise `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-301">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-302">Gibt eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-302">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="050c0-303">Von Elementen in der Liste werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" /> vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="050c0-303">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-304">Eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="050c0-304">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-305">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus der <xref:System.Xaml.XamlMember.DependsOn%2A>-Eigenschaft abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-305">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="050c0-306">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlMember.DependsOn%2A> möchten, dass ein Wert zurückgegeben wird, der von dem Wert abweicht, der von der internen Standard Reflektion aktiviert wird, und wenn Sie auch benutzerdefinierte <xref:System.Xaml.Schema.XamlMemberInvoker> Informationen bereitstellen</span><span class="sxs-lookup"><span data-stu-id="050c0-306">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="050c0-307">Das WPF-XAML-Reader-und-Writer-Implementierungen Attribut in diesem Fall mit <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="050c0-307">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="050c0-308">Die Standard Implementierung verwendet diese vorhandene <xref:System.Windows.Markup.DependsOnAttribute> Technik.</span><span class="sxs-lookup"><span data-stu-id="050c0-308">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="050c0-309">Überschreiben Sie diese Methode, wenn Sie <xref:System.Windows.Markup.DependsOnAttribute> zu diesem Zweck nicht verwenden und diese Technik ersetzen möchten, um die Reihenfolge der Eigenschaften Verarbeitung mit ihrer eigenen Technik anzugeben.</span><span class="sxs-lookup"><span data-stu-id="050c0-309">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="050c0-310">Wenn Sie nicht beabsichtigen, eine Eigenschaften Verarbeitungsreihenfolge zu unterstützen, können Sie die Standard Implementierung verwenden, da Sie keine entsprechenden Ergebnisse zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="050c0-310">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="050c0-311">Die Liste ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="050c0-311">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-312">Gibt einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> zurück, der diesem <see cref="T:System.Xaml.XamlMember" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-312">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-313">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen für diesen <see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-313">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-314">Diese Methode wird von Aufrufen von <xref:System.Xaml.XamlMember.Invoker%2A>aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-314">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="050c0-315">Die Standard Implementierung erfordert nicht, dass ein <xref:System.Xaml.XamlMember> mithilfe eines Konstruktors erstellt werden kann, der eine anfängliche <xref:System.Xaml.Schema.XamlMemberInvoker>übergibt.</span><span class="sxs-lookup"><span data-stu-id="050c0-315">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="050c0-316">Für den <xref:System.Xaml.XamlMember>muss jedoch ein <xref:System.Xaml.XamlMember.UnderlyingMember%2A> Wert vorhanden sein. Andernfalls gibt die Standard Implementierung `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-316">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="050c0-317">Überschreiben Sie diese Methode, wenn Sie auch von <xref:System.Xaml.Schema.XamlMemberInvoker> ableiten und die abgeleitete Klasse zurückgeben möchten.</span><span class="sxs-lookup"><span data-stu-id="050c0-317">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="050c0-318">Wenn Sie `null`zurückgeben, gibt <xref:System.Xaml.XamlMember.Invoker%2A> <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> an Aufrufer zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-318">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-319">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-319">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="050c0-320"><see langword="true" />, wenn dieser <see cref="T:System.Xaml.XamlMember" /> als Ambient-Eigenschaft gemeldet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-320"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-321">Diese Methode wird von internen aufrufen aufgerufen, die eine Überprüfung auf Umgebungs Informationen zur XAML-Eigenschaft durchsuchen.</span><span class="sxs-lookup"><span data-stu-id="050c0-321">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="050c0-322">Das Verhalten der Ambient-Eigenschaft wird im öffentlichen API-Verhalten von XAML-Readern und XAML-Writern berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="050c0-322">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="050c0-323">Die internen Aufrufe, die auf <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> verweisen, sind in der Regel Teil der XAML-Verarbeitungslogik, um sicherzustellen, dass Objekte und Werte, die auf Umgebungs Verwendung für die typqualifizierung basieren, ordnungsgemäß funktionieren.</span><span class="sxs-lookup"><span data-stu-id="050c0-323">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="050c0-324">Die Standard-.NET Framework XAML-Dienst Implementierung verwendet CLR-Attribute, um diese Informationen von Reflektion über Unterstützungs Typen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-324">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="050c0-325">Die Standard Implementierung prüft insbesondere auf <xref:System.Windows.Markup.AmbientAttribute> und gibt `true` für <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> zurück, wenn <xref:System.Windows.Markup.AmbientAttribute> für eine Element Definition vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-325">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="050c0-326">Überschreiben Sie diese Methode, wenn Sie <xref:System.Windows.Markup.AmbientAttribute> zu diesem Zweck nicht verwenden und diese Technik ersetzen möchten, um Ambient-XAML-Eigenschaften mit ihrer eigenen Technik anzugeben.</span><span class="sxs-lookup"><span data-stu-id="050c0-326">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="050c0-327">Beispiel-APIs aus WPF, bei denen das Attribut mit <xref:System.Windows.Markup.AmbientAttribute> <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> und <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-327">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-328">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein Ereignis darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-328">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="050c0-329"><see langword="true" />, wenn gemeldet werden soll, dass dieser <see cref="T:System.Xaml.XamlMember" /> ein Ereignis darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-329"><see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-330">Die Standard Implementierung überprüft, ob <xref:System.Xaml.XamlMember.UnderlyingMember%2A> vom Typ <xref:System.Reflection.EventInfo>ist. wenn dies der Fall ist, wird `true`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="050c0-330">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="050c0-331">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.IsEvent%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-331">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="050c0-332">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, die so interpretiert werden können, dass XAML-Typsystem Darstellungen auf Einzelfallbasis bestimmt werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-332">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-333">Gibt zurück, ob die <see cref="T:System.Xaml.XamlMember" />-Klasse eine beabsichtigte schreibgeschützte Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-333">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="050c0-334"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als gewünschte schreibgeschützte Eigenschaft gemeldet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-334"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-335">Die Standard Implementierung gibt `true` zurück, wenn <xref:System.Xaml.XamlMember.UnderlyingMember%2A> vorhanden ist, aber keine öffentliche `set`-Zugriffsmethode vorhanden ist, die durch die interne Reflektion bestimmt wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-335">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="050c0-336">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.IsReadOnly%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-336">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="050c0-337">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, die so interpretiert werden können, dass XAML-Typsystem Darstellungen auf Einzelfallbasis bestimmt werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-337">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-338">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="get" />-Accessor verfügt.</span><span class="sxs-lookup"><span data-stu-id="050c0-338">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="050c0-339"><see langword="true" />, wenn dieser <see cref="T:System.Xaml.XamlMember" /> eine Eigenschaft mit einem öffentlichen <see langword="get" />-Accessor darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-339"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-340">Die Standard Implementierung gibt Ergebnisse zurück, die entweder auf der internen Reflektion oder der Negation von <xref:System.Xaml.XamlMember.IsWriteOnly%2A>basieren und in dieser Reihenfolge verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-340">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="050c0-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> gibt zurück, ob der Member selbst öffentlich ist. Er gibt `true` für einen öffentlichen Member für einen nicht öffentlichen deklarierenden Typ zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="050c0-342">Verwenden Sie stattdessen <xref:System.Xaml.XamlMember.IsReadPublic%2A>, wenn Sie auch die Sichtbarkeit des deklarierenden Typs überprüfen möchten.</span><span class="sxs-lookup"><span data-stu-id="050c0-342">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="050c0-343">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.IsReadPublic%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-343">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="050c0-344">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-344">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="050c0-345">Die <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>-Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-345">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="050c0-346">Die außer Kraft Setzung kann die gemeldeten Zugriffs Informationen eines XAML-Members (böswillig oder anderweitig) ändern, sodass er nicht mehr erwartungsgemäß mit den Typsystem-Zugriffs Informationen der zugrunde liegenden CLR-Deklaration ausgerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-346">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="050c0-347">Verwenden Sie für alle sicherheitskritischen Prüfungen von Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-347">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-348">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein Element darstellt, das vom Sicherungssystem für Typ- und Elementauflösung nicht aufgelöst werden kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-348">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="050c0-349"><see langword="true" />, wenn diese <see cref="T:System.Xaml.XamlMember" />-Klasse ein nicht auflösbares Element darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-349"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-350">Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.IsUnknown%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-350">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="050c0-351">Die Standard Implementierung gibt Ergebnisse zurück, die auf der internen Reflektion basieren, oder die Überprüfung auf einen `null` Wert <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, die Verarbeitung in dieser Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="050c0-351">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="050c0-352">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-352">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-353">Gibt zurück, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member darstellt, der über einen öffentlichen <see langword="set" />-Accessor, jedoch nicht über einen öffentlichen <see langword="get" />-Accessor verfügt.</span><span class="sxs-lookup"><span data-stu-id="050c0-353">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="050c0-354"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen lesegeschützten Member darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-354"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-355">Die Standard Implementierung gibt `true` zurück, wenn eine <xref:System.Xaml.XamlMember.UnderlyingMember%2A> vorhanden ist, die über einen öffentlichen `set`-Accessor und einen nicht öffentlichen `get` Accessor verfügt, der durch die interne Reflektion bestimmt wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-355">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="050c0-356">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.IsWriteOnly%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-356">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="050c0-357">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-357">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-358">Gibt zurück, ob dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen Member darstellt, der über einen öffentlichen <see langword="set" />-Accessor verfügt.</span><span class="sxs-lookup"><span data-stu-id="050c0-358">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="050c0-359"><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlMember" />-Objekt einen schreibbaren Member darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-359"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-360">Die Standard Implementierung gibt Ergebnisse entweder basierend auf der internen Reflektion oder der Negation der <xref:System.Xaml.XamlMember.IsReadOnly%2A>und der Verarbeitung in dieser Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-360">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="050c0-361">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.IsWritePublic%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-361">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="050c0-362">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-362">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="050c0-363">Die <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>-Methode ist virtuell und kann daher überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-363">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="050c0-364">Die außer Kraft Setzung kann die gemeldeten Zugriffs Informationen eines XAML-Members (böswillig oder anderweitig) ändern, sodass er nicht mehr erwartungsgemäß mit den Typsystem-Zugriffs Informationen der zugrunde liegenden CLR-Deklaration ausgerichtet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-364">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="050c0-365">Verwenden Sie für alle sicherheitskritischen Prüfungen von Zugriffsebenen stattdessen den zugrunde liegenden CLR-Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-365">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-366">Gibt die Zeichen für öffnende und schließende Klammern einer Markuperweiterung zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-366">Returns the opening and closing bracket characters for a markup extension.</span></span></summary>
        <returns><span data-ttu-id="050c0-367">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</span><span class="sxs-lookup"><span data-stu-id="050c0-367">A collection containing the opening and closing bracket characters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-368">Gibt die <see cref="T:System.Xaml.XamlType" />-Klasse des Typs zurück, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-368">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <returns><span data-ttu-id="050c0-369">Der Typ, auf dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-369">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-370">Die Standard Implementierung unterscheidet zwischen anfügbaren und nicht anfügbaren Membern.</span><span class="sxs-lookup"><span data-stu-id="050c0-370">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="050c0-371">Bei nicht anfügbaren Membern gibt <xref:System.Xaml.XamlMember.LookupTargetType%2A> immer <xref:System.Xaml.XamlMember.DeclaringType%2A>zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-371">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="050c0-372">Für anfügbare Member gibt <xref:System.Xaml.XamlMember.LookupTargetType%2A> ein Ergebnis zurück, das auf der Untersuchung des <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessorparametertyps basiert und diesen Typ basierend auf dem XAML-Schema Kontext interpretiert.</span><span class="sxs-lookup"><span data-stu-id="050c0-372">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="050c0-373">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.TargetType%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-373">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="050c0-374">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-374">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-375">Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-375">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="050c0-376">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</span><span class="sxs-lookup"><span data-stu-id="050c0-376">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-377">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.Type%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-377">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="050c0-378">Überschreiben Sie diese Methode, wenn Sie <xref:System.Xaml.XamlMember.Type%2A> möchten, dass ein Wert zurückgegeben wird, der von dem Wert abweicht, der von der internen Standard Reflektion aktiviert wird, und wenn Sie auch benutzerdefinierte <xref:System.Xaml.Schema.XamlMemberInvoker> Informationen bereitstellen</span><span class="sxs-lookup"><span data-stu-id="050c0-378">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="050c0-379">Die Standard Implementierung verwendet unterschiedliche Codepfade und konzeptionelle Bedeutungen für die zurückgegebene <xref:System.Xaml.XamlType>, die darauf basiert, ob diese <xref:System.Xaml.XamlMember> eine Eigenschaft, eine Methode oder ein Ereignis darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-379">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="050c0-380">Bei einer Eigenschaft ist die zurückgegebene <xref:System.Xaml.XamlType> der Typ, der die Eigenschaft festlegt oder die von der-Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-380">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="050c0-381">Bei einem Ereignis ist die zurückgegebene <xref:System.Xaml.XamlType> der erforderliche ereignishandlertyp (ein Delegat in einer CLR-Implementierung).</span><span class="sxs-lookup"><span data-stu-id="050c0-381">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="050c0-382">Bei einer-Methode ist <xref:System.Xaml.XamlType> der Rückgabetyp.</span><span class="sxs-lookup"><span data-stu-id="050c0-382">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="050c0-383">In jedem Fall wird der XAML-Schema Kontext verwendet, um den XAML-Typ aus dem zugrunde liegenden Systemtyp auszuwerten.</span><span class="sxs-lookup"><span data-stu-id="050c0-383">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="050c0-384">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.Type%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-384">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="050c0-385">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-385">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-386">Gibt eine Typkonverterimplementierung zurück, die dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-386">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-387">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-387">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-388">Die Standard Implementierung verwendet die folgende Logik und Verarbeitungsreihenfolge:</span><span class="sxs-lookup"><span data-stu-id="050c0-388">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="050c0-389">Wenn die Attributierung auf der Element Ebene (<xref:System.ComponentModel.TypeConverterAttribute>) vorhanden ist, werden die Attributinformationen für einen aufzurufenden <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> für den XAML-Schema Kontext verwendet.</span><span class="sxs-lookup"><span data-stu-id="050c0-389">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="050c0-390">Wenn <xref:System.Xaml.XamlMember.Type%2A> gültig ist, wird ein Typkonverter zurückgegeben, der dem-Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-390">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="050c0-391">Wenn der Member ein Ereignis ist, wird ein ereignisspezifischer Typkonverter zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="050c0-391">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="050c0-392">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.TypeConverter%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-392">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="050c0-393">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-393">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-394">Gibt einen <see langword="get" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-394">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-395">Die <see cref="T:System.Reflection.MethodInfo" /> für den zugeordneten <see langword="get" />-Accessor oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-395">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-396">Die Standard Implementierung interpretiert die <xref:System.Xaml.XamlMember.UnderlyingMember%2A>-Eigenschaft als <xref:System.Reflection.PropertyInfo> und gibt den Wert von <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> zurück (wobei der-Parameter auf `true`festgelegt ist). Dies bedeutet, dass die zurückgegebene Methode nicht öffentlich sein kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-396">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="050c0-397">Dieses Verhalten kann zu `null` für bestimmte Fälle führen.</span><span class="sxs-lookup"><span data-stu-id="050c0-397">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="050c0-398">Dies gilt auch für Fälle, in denen kein zugeordneter Accessor vorhanden ist oder der Member keine Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-398">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="050c0-399">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus der <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>-Eigenschaft eines zugeordneten <xref:System.Xaml.Schema.XamlMemberInvoker>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-399">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="050c0-400">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-400">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="050c0-401">Stellen Sie sicher, dass <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>und <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> implementiert werden, damit alle korrelierten Ergebnisse zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-401">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-402">Gibt eine <see cref="T:System.Reflection.MemberInfo" /> des CLR-Typsystems zurück, die diesem <see cref="T:System.Xaml.XamlMember" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-402">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-403">Ein <see cref="T:System.Reflection.MemberInfo" />-Objekt des CLR-Typsystems, das diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-403">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-404">Die Standard Implementierung gibt die zugrunde liegenden Element Informationen zurück, die auf der Erstellung basieren.</span><span class="sxs-lookup"><span data-stu-id="050c0-404">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="050c0-405">Wenn das <xref:System.Reflection.MemberInfo> Objekt mit einer Signatur erstellt wird, die nicht genügend Informationen bereitstellt, um den zugrunde liegenden Member festzulegen, gibt diese Methode `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-405">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="050c0-406">Wenn ein zugrunde liegendes Element während der Erstellung festgelegt wurde, sollte diese Methode nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-406">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="050c0-407">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.UnderlyingMember%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-407">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="050c0-408">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-408">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="050c0-409">Stellen Sie sicher, dass <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>und <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> implementiert werden, damit alle korrelierten Ergebnisse zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-409">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-410">Gibt einen <see langword="set" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlMember" />-Klasse zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-410">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-411">Die <see cref="T:System.Reflection.MethodInfo" /> für den zugeordneten <see langword="set" />-Accessor oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-411">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-412">Die Standard Implementierung interpretiert <xref:System.Xaml.XamlMember.UnderlyingMember%2A> als <xref:System.Reflection.PropertyInfo> und gibt den Wert von <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> zurück (wobei der-Parameter auf `true`festgelegt ist). Dies bedeutet, dass die zurückgegebene Methode nicht öffentlich sein kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-412">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="050c0-413">Dies kann zu `null` für bestimmte Fälle führen, einschließlich der Fälle, in denen kein solcher Accessor vorhanden ist, oder wenn der Member keine Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-413">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="050c0-414">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> auf einem zugeordneten <xref:System.Xaml.Schema.XamlMemberInvoker>abruft. Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-414">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="050c0-415">Stellen Sie sicher, dass <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>und <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> implementiert werden, damit alle korrelierten Ergebnisse zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-415">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-416">Gibt eine Wertserialisierungsprogramm-Implementierung zurück, die diesem <see cref="T:System.Xaml.XamlMember" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-416">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-417">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-417">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-418">Die Standard Implementierung verwendet die folgende Logik und Verarbeitungsreihenfolge:</span><span class="sxs-lookup"><span data-stu-id="050c0-418">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="050c0-419">Wenn die Attributierung auf der Element Ebene (<xref:System.Windows.Markup.ValueSerializerAttribute>) vorhanden ist, werden die Attributinformationen für einen aufzurufenden <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> für den XAML-Schema Kontext verwendet.</span><span class="sxs-lookup"><span data-stu-id="050c0-419">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="050c0-420">Wenn <xref:System.Xaml.XamlMember.Type%2A> gültig ist, wird ein Wert Konverter zurückgegeben, der dem-Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-420">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="050c0-421">Wenn die vorherigen Bedingungen nicht zutreffen, wird `null` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="050c0-421">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="050c0-422">Diese Methode wird aufgerufen, wenn ein Aufrufer einen Wert aus <xref:System.Xaml.XamlMember.ValueSerializer%2A>abruft.</span><span class="sxs-lookup"><span data-stu-id="050c0-422">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="050c0-423">Überschreiben Sie diese Methode, wenn Sie einheitliche Ergebnisse für eine gesamte <xref:System.Xaml.XamlMember> abgeleitete Klasse melden möchten, oder wenn spezielle Metadaten verfügbar sind, um dies für einzelne Fälle zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="050c0-423">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-424">Definiert die Zeichen für öffnende und schließende Klammern einer Markuperweiterung.</span><span class="sxs-lookup"><span data-stu-id="050c0-424">Defines the opening and closing bracket characters for a markup extension.</span></span></summary>
        <value><span data-ttu-id="050c0-425">Eine Auflistung, die die Zeichen für öffnende und schließende Klammern enthält.</span><span class="sxs-lookup"><span data-stu-id="050c0-425">A collection containing the opening and closing bracket characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-426">Ruft die <see langword="xamlName" />-Namenszeichenfolge ab, durch die dieses <see cref="T:System.Xaml.XamlMember" />-Objekt deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-426">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="050c0-427">Die <see langword="xamlName" />-Namenszeichenfolge, durch die dieses <see cref="T:System.Xaml.XamlMember" />-Objekt deklariert wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-427">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-428">Dieser Wert wird immer während der Erstellung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="050c0-428">This value is always set during construction.</span></span> <span data-ttu-id="050c0-429">Die von <xref:System.Xaml.XamlMember> implementierten Konstruktoren lösen in der Regel eine Ausnahme aus, wenn kein ursprünglicher Name angegeben ist. Daher sollten Sie nicht erwarten, dass diese Eigenschaft `null` oder eine leere Zeichenfolge ist, wenn Sie standardmäßige .NET Framework XAML-Dienst Implementierungen verwenden.</span><span class="sxs-lookup"><span data-stu-id="050c0-429">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="050c0-430">Die [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md) und die Benennungs Regeln für CLR-Typen und-Member sind keine exakte Schnittmenge.</span><span class="sxs-lookup"><span data-stu-id="050c0-430">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="050c0-431">Es ist möglich, einen Elementnamen zu deklarieren, der unter CLR zulässig ist, aber unter XAML-Benennung nicht gültig ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-431">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="050c0-432">Vermeiden Sie diese Situation, wenn möglich.</span><span class="sxs-lookup"><span data-stu-id="050c0-432">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="050c0-433">XamlName</span><span class="sxs-lookup"><span data-stu-id="050c0-433">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="050c0-434"><see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-434">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="050c0-435"><see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="050c0-436">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlMember" />-Objekte denselben Wert haben.</span><span class="sxs-lookup"><span data-stu-id="050c0-436">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="050c0-437"><see langword="true" />, wenn <paramref name="xamlMember1" /> und <paramref name="xamlMember2" /> denselben Wert haben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-437"><see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="050c0-438"><see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-438">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="050c0-439"><see cref="T:System.Xaml.XamlMember" /> oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-439">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="050c0-440">Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlMember" />-Objekte verschiedene Werte haben.</span><span class="sxs-lookup"><span data-stu-id="050c0-440">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="050c0-441"><see langword="true" />, wenn der Wert von <paramref name="xamlMember1" /> vom Wert von <paramref name="xamlMember2" /> abweicht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-441"><see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-442">Ruft den einzelnen XAML-Namespace-URI ab, der den primären XAML-Namespace für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="050c0-442">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="050c0-443">Der Bezeichner für den primären XAML-Namespace für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="050c0-443">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-444">Die <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A>-Eigenschaft liefert denselben Wert wie das Aufrufen von <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> und das anschließende Abrufen der ersten Wert Zeichenfolge aus der zurückgegebenen Liste.</span><span class="sxs-lookup"><span data-stu-id="050c0-444">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="050c0-445">Der bevorzugte XAML-Namespace sollte verwendet werden, wenn der Member zurück in Text oder andere Darstellungen geschrieben wird, die XAML-Namespace Informationen erhalten.</span><span class="sxs-lookup"><span data-stu-id="050c0-445">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-446">Ruft einen <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />-Wert ab, der angibt, wie der Member von einem visuellen Designer verarbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="050c0-446">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span></span></summary>
        <value><span data-ttu-id="050c0-447">Ein Wert der <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="050c0-447">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span></span> <span data-ttu-id="050c0-448">Der Standardwert ist <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-448">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-449">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des Typs ab, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-449">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <value><span data-ttu-id="050c0-450">Der Typ, auf dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-450">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-451">Der zurückgegebene Wert ist für anfügbare und nicht anfügbare Member unterschiedlich.</span><span class="sxs-lookup"><span data-stu-id="050c0-451">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="050c0-452">Bei nicht anfügbaren Membern gibt <xref:System.Xaml.XamlMember.TargetType%2A> <xref:System.Xaml.XamlMember.DeclaringType%2A>zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-452">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="050c0-453">Für anfügbare Member gibt <xref:System.Xaml.XamlMember.LookupTargetType%2A> ein Ergebnis zurück, das auf dieser Logik basiert:</span><span class="sxs-lookup"><span data-stu-id="050c0-453">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="050c0-454">Wenn die Reflektion keine Unterstützung (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`) auflösen kann, gibt diese Methode eine interne Konstante zurück, die einen generischen Objekttyp darstellt.</span><span class="sxs-lookup"><span data-stu-id="050c0-454">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="050c0-455">Wenn die vorherige Bedingung nicht zutrifft, wird <xref:System.Xaml.XamlMember.LookupTargetType%2A> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-455">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="050c0-456">Die Standard Implementierung gibt einen <xref:System.Xaml.XamlType> zurück, der auf der Untersuchung der Methoden basiert, die die `get`-und `set` Accessoren implementieren.</span><span class="sxs-lookup"><span data-stu-id="050c0-456">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="050c0-457">Eine Klasse kann <xref:System.Xaml.XamlMember.LookupTargetType%2A> überschreiben, um ein anderes Verhalten wie andere metadatenformulare zu verwenden, die Zieltypen für anfügbare Member melden könnten.</span><span class="sxs-lookup"><span data-stu-id="050c0-457">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050c0-458">Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlMember" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-458">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="050c0-459">Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="050c0-459">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-460">Diese Implementierung gibt <xref:System.Xaml.XamlMember.Name%2A>zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-460">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-461">Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs ab.</span><span class="sxs-lookup"><span data-stu-id="050c0-461">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <value><span data-ttu-id="050c0-462">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</span><span class="sxs-lookup"><span data-stu-id="050c0-462">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-463">Durch Aufrufen von <xref:System.Xaml.XamlMember.Type%2A> wird <xref:System.Xaml.XamlMember.LookupType%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-463">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="050c0-464">Dies tritt auf, wenn die erste interne reflektionslogik die Informationen nicht bereits festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="050c0-464">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="050c0-465">Im Standardverhalten (ohne <xref:System.Xaml.XamlMember.LookupType%2A> Überschreibung) kann die zurückgegebene <xref:System.Xaml.XamlType> eine andere konzeptionelle Bedeutung haben.</span><span class="sxs-lookup"><span data-stu-id="050c0-465">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="050c0-466">Welche Bedeutung zutrifft, hängt davon ab, ob diese <xref:System.Xaml.XamlMember> eine Eigenschaft, eine Methode oder ein Ereignis darstellt, wie in der folgenden Liste gezeigt:</span><span class="sxs-lookup"><span data-stu-id="050c0-466">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="050c0-467">Bei einer Eigenschaft ist die zurückgegebene <xref:System.Xaml.XamlType> der Typ, der die Eigenschaft festlegt oder die von der-Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-467">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="050c0-468">Bei einem Ereignis ist die zurückgegebene <xref:System.Xaml.XamlType> der erforderliche ereignishandlertyp (ein Delegat in einer CLR-Implementierung).</span><span class="sxs-lookup"><span data-stu-id="050c0-468">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="050c0-469">Bei einer-Methode ist <xref:System.Xaml.XamlType> der Rückgabetyp dieser Methode, die `null`werden kann.</span><span class="sxs-lookup"><span data-stu-id="050c0-469">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="050c0-470">In jedem Fall wird der XAML-Schema Kontext verwendet, um den XAML-Typ aus dem Unterstützungstyp auszuwerten.</span><span class="sxs-lookup"><span data-stu-id="050c0-470">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-471">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für die Typkonvertierungserstellung von in XAML deklarierten Objekten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-471">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="050c0-472">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Wert mit einer <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung für den generischen Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-472">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-473">Durch Aufrufen von <xref:System.Xaml.XamlMember.TypeConverter%2A> wird <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-473">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="050c0-474">Dieses Verhalten tritt auf, wenn die erste interne reflektionslogik die Informationen nicht bereits festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="050c0-474">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="050c0-475">Implementierungen, die für <xref:System.Xaml.XamlMember.TypeConverter%2A> einen nicht-NULL-Eigenschafts Wert zurückgeben, sind nicht notwendigerweise eine funktionierende <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="050c0-475">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="050c0-476">Im folgenden finden Sie eine Liste möglicher Rückgabewerte ungleich NULL für <xref:System.Xaml.XamlMember.TypeConverter%2A> und die Werte, die diese Werte darstellen:</span><span class="sxs-lookup"><span data-stu-id="050c0-476">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="050c0-477">Der Rückgabewert meldet einen Typkonverter, der speziell für diesen Member oder eher für den Zieltyp des Konverters zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-477">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="050c0-478">Dieses Verhalten ist in der Regel das, was die meisten XAML-Typsysteme und XAML-Prozessoren suchen, um einen Typkonverter zu instanziieren und seine Methoden aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-478">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="050c0-479">Der Rückgabewert meldet einen integrierten Wert Konverter.</span><span class="sxs-lookup"><span data-stu-id="050c0-479">The return value reports a built-in value converter.</span></span> <span data-ttu-id="050c0-480">Diese Konverter sind für bestimmte interne Vorgänge vorhanden, die von einem XAML-Writer ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="050c0-480">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="050c0-481">Insbesondere konvertieren diese integrierten Wert Konverter die Zeichen folgen Werte für unformatierte Attribute in XAML auf Sprachebene.</span><span class="sxs-lookup"><span data-stu-id="050c0-481">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="050c0-482">Für die .NET Framework XAML-Dienst Implementierung werden diese integrierten Typkonvertierungen häufig an einen Typkonverter weiterleiten, der in der Systemassembly definiert ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-482">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="050c0-483">Beispielsweise verfügt eine Konvertierung für einen <xref:System.Int32> Wert über eine integrierte weitergeleitete Konvertierung, sodass der <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> Wert auf <xref:System.ComponentModel.Int32Converter>verweist.</span><span class="sxs-lookup"><span data-stu-id="050c0-483">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="050c0-484">Der Rückgabewert meldet den Sonderfall eines nicht eingeschränkten Objektmodells. Das heißt, der <xref:System.Xaml.XamlMember> hat den <xref:System.Xaml.XamlMember.Type%2A> Wert <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="050c0-484">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="050c0-485">In diesem Fall meldet der <xref:System.Xaml.Schema.XamlValueConverter%601>, dass die <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> {`Object}`ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-485">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="050c0-486"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> ist jedoch `null`, da zum Ausführen dieser Konvertierung kein tatsächlicher Typ oder keine tatsächliche Instanz verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="050c0-486">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="050c0-487">Stattdessen kann das Objektmodell Verhalten erst zur Laufzeit bestimmt werden, wenn die Laufzeit der spezifischen Technologie die Handhabung seines Objekt Diagramms bestimmt.</span><span class="sxs-lookup"><span data-stu-id="050c0-487">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="050c0-488">Wenn Sie von <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>auf eine funktionierende <xref:System.ComponentModel.TypeConverter> zugreifen können, können Sie die zugehörigen Konvertierungs Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-488">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="050c0-489">Viele Konvertierungs Methoden basieren jedoch auf Dienst Kontext.</span><span class="sxs-lookup"><span data-stu-id="050c0-489">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="050c0-490">Wenn nicht der gleiche Dienst Kontext verfügbar ist, den der Typkonverter für die typische Rolle beim Schreiben von Objekten für Objekt Diagramme erwartet, können die konvertermethoden Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="050c0-490">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-491">Ruft die <see cref="T:System.Reflection.MemberInfo" /> des CLR-Typsystems ab, die für einen Member verfügbar ist, der von <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> oder <see cref="T:System.Reflection.EventInfo" /> erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-491">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span></span></summary>
        <value><span data-ttu-id="050c0-492"><see cref="T:System.Reflection.MemberInfo" />-Informationen des CLR-Typsystems entsprechend der Umwandlung von den ursprünglichen Konstruktorparametern.</span><span class="sxs-lookup"><span data-stu-id="050c0-492">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span></span> <span data-ttu-id="050c0-493">Ein <see cref="T:System.Xaml.XamlMember" />-Objekt, das mit der <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />-Signatur erstellt wird, gibt <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="050c0-493">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-494">Durch Aufrufen von <xref:System.Xaml.XamlMember.UnderlyingMember%2A> wird <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-494">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050c0-495">Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für die Wertserialisierung von in XAML deklarierten Objekten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="050c0-495">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="050c0-496">Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung für den generischen Typ.</span><span class="sxs-lookup"><span data-stu-id="050c0-496">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050c0-497">Durch Aufrufen von <xref:System.Xaml.XamlMember.ValueSerializer%2A> wird <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> oder eine bestimmte außer Kraft setzung dieser Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="050c0-497">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="050c0-498">Dieses Verhalten tritt auf, wenn die erste interne reflektionslogik die Informationen nicht bereits festgelegt hat.</span><span class="sxs-lookup"><span data-stu-id="050c0-498">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="050c0-499">Nicht alle Fälle, die für <xref:System.Xaml.XamlMember.ValueSerializer%2A> einen Eigenschafts Wert ungleich NULL zurückgeben, sind notwendigerweise eine funktionierende <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="050c0-499">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="050c0-500">Siehe <xref:System.Xaml.XamlMember.TypeConverter%2A>; die gleichen Überlegungen gelten für <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="050c0-500">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
