<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6713a2cb1884363c06d70a8db2a846ebfa8e3889" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86692161" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Erstellt ein Objektdiagramm aus einem Quell-XAML-Knotenstream.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Write`Mit den Methoden von <xref:System.Xaml.XamlObjectWriter> wird ein Muster implementiert, sodass von das <xref:System.Xaml.XamlObjectWriter> verwendet <xref:System.Xaml.XamlWriter> wird, das von der-Methode definiert wird <xref:System.Xaml.XamlWriter.WriteNode%2A> . <xref:System.Xaml.XamlWriter.WriteNode%2A> die Logik wechselt zwischen den `Write` Methoden, je nachdem, welcher Knotentyp sich an der aktuellen Position des Readers befindet.  
  
## <a name="scope"></a>`Scope`  
 Ein <xref:System.Xaml.XamlObjectWriter> weist ein Konzept des Bereichs auf, d. h <xref:System.Xaml.XamlObjectWriter> ., der verwaltet einen konzeptionellen Verweis Punkt in seinem Ausgabe Objekt Diagramm. Bestimmte Vorgänge können für einen bestimmten Bereich gültig oder ungültig sein oder ein Ergebnis ohne Vorgang verursachen. Wenn Sie z. b. <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> zum Schreiben von Direktiven für die Initialisierung eines Objekts, das bereits als-Instanz vorhanden ist, aufruft, wird von der Standard Implementierung eine Ausnahme ausgelöst.  
  
 Eine Möglichkeit zum Nachverfolgen des Bereichs in einem benutzerdefinierten <xref:System.Xaml.XamlObjectWriter> ist das Ausrichten der Knoten Aktionen mit einer Stapel-oder Frame Klasse. Der Stapel oder Frame kann Push und Pop für jede Ebene der Objektmodell Tiefe nachverfolgen, die eingegeben oder beendet wird, während das <xref:System.Xaml.XamlObjectWriter> Objekt Diagramm schreibt.  
  
## <a name="callbacks"></a>Rückrufe  
 Zur Unterstützung von zwischen-und erweiterten <xref:System.Xaml.XamlObjectWriter> Szenarien bietet der Mechanismus zum Schreiben eines Objekt Diagramms Rückruf Einstiegspunkte, die auftreten, wenn ein <xref:System.Xaml.XamlObjectWriter> Commit oder ein Commit für bestimmte Aktionen ausgeführt wird. Einige Rückrufe sind in den Einstellungen aktiviert und nicht spezifisch für den Objekttyp oder den Member, der geschrieben wird. Rückruf Informationen sind jedoch häufig im Kontext verfügbar oder befinden sich in den Ereignisdaten, die durch den Rückruf gesendet werden. Im folgenden finden Sie eine Liste relevanter Rückrufe:  
  
-   Der Rückruf, der von deklariert wird, <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> wird aufgerufen, wenn der Bereich in ein neues-Objekt und in der <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> Phase der Objekt Lebensdauer für jedes erstellte Objekt wechselt.  
  
-   Der Rückruf, der von deklariert wird, <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> wird aufgerufen, wenn der Bereich in ein neues-Objekt und in der <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> Phase der Objekt Lebensdauer für jedes erstellte Objekt wechselt.  
  
-   Der Rückruf, der von deklariert wird <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> , wird aufgerufen, wenn der Bereich in einem-Objekt beginnt, und tritt auf, wenn der erste <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> Aufruf dieses Objekt Bereichs durchgeführt wird, für den jedoch noch kein Commit ausgeführt wurde.  
  
-   Der Rückruf, der von deklariert wird <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> , wird aufgerufen, wenn der Bereich in einem-Objekt beginnt. Dies geschieht, wenn der <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> Aufruf dieses Objekt Bereichs erfolgt, aber noch kein Commit ausgeführt wurde.  
  
-   Der Rückruf, der von deklariert wird, <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> wird aufgerufen, wenn <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> aufgerufen wird.  
  
## <a name="writing-dictionary-keys"></a>Schreiben von Wörterbuch Schlüsseln  
 Die Standard Implementierung von <xref:System.Xaml.XamlObjectWriter> unterstützt die Typkonvertierung für die Einschränkungen von <xref:System.Collections.Generic.Dictionary%602> , bevor der Inhalt des Wörterbuchs dem Objekt Diagramm hinzugefügt wird. Auf diese Weise kann ein generisches Wörterbuch zur Laufzeit von Objekten verschlüsselt werden und mit dem relevanten generischen `Add` und Indexer-Verhalten verglichen werden. Diese Funktion ist jedoch für die Basis <xref:System.Xaml.XamlObjectWriter> Klasse nur für die Objekt Diagramm Erstellung aus der Basis <xref:System.Collections.Generic.Dictionary%602> Klasse und nicht für abgeleitete Klassen von vorhanden <xref:System.Collections.Generic.Dictionary%602> .  
  
## <a name="checks-for-disposed"></a>Prüft auf "verworfen"  
 XAML-Writer werden potenziell für verzögerte Vorgänge verwendet, oder es wird ein-Rückruf für eine XAML-Writer-Instanz durchgeführt, die in der Zwischenzeit verworfen wurde. <xref:System.Xaml.XamlObjectWriter>In diesen Fällen können verschiedene APIs von ausgelöst werden <xref:System.ObjectDisposedException> .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse mit dem XAML-Schemakontext, der von einem <see cref="T:System.Xaml.XamlReader" /> verwendet wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schemaContext" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</param>
        <param name="settings">Ein Einstellungsobjekt, durch das bestimmte Optionen für das <see cref="T:System.Xaml.XamlObjectWriter" />-Verhalten und die Ausgabe angegeben werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse mithilfe eines durch einen <see cref="T:System.Xaml.XamlReader" /> verwendeten Kontexts und der zugehörigen Einstellungen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schemaContext" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt alle möglichen Frames zurück und löscht das Objektdiagramm.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um die verwalteten Ressourcen freizugeben, andernfalls <see langword="false" />.</param>
        <summary>Gibt die von der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das im Bericht enthalten sein soll. Das Objekt wird in <see cref="T:System.Xaml.XamlObjectEventArgs" /> gepackt, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />-Methode auf, die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das im Bericht enthalten sein soll. Der Wert wird in <see cref="T:System.Xaml.XamlObjectEventArgs" /> gepackt, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />-Methode auf, die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das im Bericht enthalten sein soll. Dies wird in das <see cref="T:System.Xaml.XamlObjectEventArgs" />-Objekt gepackt, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert, der mithilfe von <see cref="T:System.Xaml.XamlObjectEventArgs" /> übergeben werden soll, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">Das Objekt, das dem Handler als Quelle gemeldet werden soll.</param>
        <param name="member">Der Name der festzulegenden Eigenschaft, die als Teil von <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> an den Handler übergeben wird.</param>
        <param name="value">Der Wert, der für die von <paramref name="property" /> benannte Eigenschaft angegeben werden soll. Der Wert wird an den Handler als Teil von <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> übergeben.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen Writer zugeordnet ist (sofern <paramref name="handled" /> in den <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />-Ereignisdaten nicht <see langword="true" /> ist).</summary>
        <returns>Ein boolescher Wert, der durch einen zugeordneten Handler festgelegt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der `SetValue` Vorgang für diesen XAML-Writer über einen zugeordneten Handler verfügt (eine <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> wird in deklariert <xref:System.Xaml.XamlObjectWriterSettings> ), erstellt diese Methode eine neue <xref:System.Windows.Markup.XamlSetValueEventArgs> und übergibt sie an den Handler. Der Rückgabewert wird festgelegt, indem der Wert gelesen wird <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> , der durch die Ereignisdaten übermittelt wird. Wenn kein Handler vorhanden ist und diese Methode aufgerufen wird, gibt der Aufruf zurück `false` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das letzte Objekt ab, das geschrieben wurde. Wird normalerweise nur aufgerufen, wenn das Ende des Knotenstreams erreicht und das Objektdiagramm abgeschlossen wurde.</summary>
        <value>Das letzte geschriebene Objekt oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die typische Verwendung von besteht darin, <xref:System.Xaml.XamlObjectWriter.Result%2A> Sie nur aufzurufen, wenn der knotenstream bekanntermaßen am Ende ist und das Objekt Diagramm abgeschlossen ist. Andernfalls ist das Objekt Diagramm wahrscheinlich unvollständig und in den meisten Platt Form Szenarios nicht nützlich.  
  
 <xref:System.Xaml.XamlObjectWriter.Result%2A> enthält in der Regel nur einen Wert ungleich NULL, wenn er unmittelbar nach einem Aufruf von aufgerufen wird <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> , und wenn der aktuelle Bereich in dem Member enthalten ist, in dem das-Objekt einen Wert bereitstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Markup.INameScope" />-Dienst ab, von dem der XAML-Namescope für den absoluten Knotenstamm des XAML-Objektwriters verwaltet wird.</summary>
        <value>Der <see cref="T:System.Windows.Markup.INameScope" />-Dienst, von dem der XAML-Namescope für den aktuellen Stamm des Objektwriters verwaltet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieser Eigenschaft kann aus dem objektwriter-Kontext stammen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktiven XAML-Schemakontext ab.</summary>
        <value>Der XAML-Schemakontext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der XAML-Schema Kontext ist eine erforderliche Informationsquelle für die meisten praktischen Szenarios zum Schreiben von Objekten. Der XAML-Schema Kontext wirkt sich auf die Suche nach Typen aus und enthält Informationen über die Assemblys, in denen Unterstützungs Typen vorhanden sind. Der XAML-Standardschema Kontext basiert auf CLR-Typmapping-Regeln. Frameworks stellen in der Regel ihren eigenen XAML-Schema Kontext bereit, um sicherzustellen, dass die Methoden zum Laden von Assemblys mit den Programmier Modellen des Frameworks AMD-Anwendungs  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">Die Zeilennummer vom Reader.</param>
        <param name="linePosition">Die Zeilenposition vom Reader.</param>
        <summary>Implementiert <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> und stellt Zeileninformationen für Ausnahmen bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Dienst Methode ist nicht dafür vorgesehen, direkt aus Ihrem Code aufgerufen zu werden. Wenn Sie jedoch eine abgeleitete Klasse von erstellen <xref:System.Xaml.XamlObjectWriter> und davon ausgehen, dass Sie einen Kontext melden, in dem Zeilennummern nicht verfügbar oder nicht nützlich sind, kann diese Methode aufgerufen werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob von einem Zeileninformationsdienst Werte bereitgestellt werden sollen und ob dementsprechend die <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />-Methode aufgerufen werden soll, wenn diese relevant ist.</summary>
        <value><see langword="true" />, wenn vom Writer Zeileninformationen verwendet werden, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung gibt immer `true` zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den aktuellen Memberbereich und schreibt möglicherweise den Wert des Memberbereichs beim Schließen. Der neue Bereich wird der übergeordnete Objektbereich des Members.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Fehler beim Erstellen von Memberwerten aus einem Wertknoten, der zwischen diesem Aufruf und einem vorherigen <see langword="StartMember" /> gefunden wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den aktuellen Objektbereich im Writer. Der neue Objektbereich wird der übergeordnete Bereich des Members.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn dieser `EndObject` Positions Bereich das Stamm Objekt schließt, wird der neue Objektbereich zum Stamm Bereich.  
  
 Der-aufrufswert <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> hat das Objekt möglicherweise noch nicht erstellt, da ein Objektmember ein erforderlicher Initialisierungs Pfad sein kann, z. b. Initialisierungs Text oder Initialisierungs Parameter. In diesen Fällen schreibt der-Befehl, um <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> das Objekt tatsächlich zu schreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt das konzeptionelle <see langword="StartObject" />-Objekt in das Objektdiagramm, wenn das angegebene Objekt ein Standardwert oder ein impliziter Wert der übergeordneten Eigenschaft ist. Der implizite Wert stammt aus Informationen, die aus dem XAML-Schemakontext und Sicherungstypinformationen abgerufen und nicht als Objektwert in der eingegebenen XAML-Knotengruppe angegeben werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Unterschied zwischen dem Schreiben mit <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> und dem Schreiben mit <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> kann im resultierenden Objekt Diagramm angezeigt werden. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> erstellt keine Instanz eines-Typs, da die <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API keine Informationen enthält, um das Objekt Diagramm über die zu erstellenden Informationen zu informieren. Stattdessen wurde das Objekt erstellt, als die übergeordnete Eigenschaft initialisiert wurde. daher <xref:System.Xaml.XamlObjectWriter> ist es nicht erforderlich, es zu erstellen. Im Gegensatz dazu <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> gibt an, dass eine Instanz dieses Typs erstellt und in das Objekt Diagramm eingefügt werden soll.  
  
 Wenn Sie den XAML-knotenstream als eine Reihe von Frames betrachten, <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> wird ein mit einem-Befehl ausgeglichen <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> . Daher sollte die Anzahl von <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> Plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> aufrufen gleich der Anzahl von <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> aufrufen im Rahmen einer vollständigen Objekt Schreib Auswertung des XAML-knotenstreams sein.  
  
 Die konzeptionelle `StartObject` Position für ein implizites Objekt im Objekt Diagramm ist erforderlich, da der Objektwert selbst ein impliziter Standardwert ist, aber dieses Objekt kann weiterhin Member aufweisen, die auf der Grundlage des XAML-knotenstreams geschrieben werden müssen. Ein typisches Szenario, in dem dieses Problem auftritt, ist das <xref:System.Xaml.XamlObjectWriter> Schreiben von Elementknoten für eine Auflistungs Eigenschaft, und die Auflistungs Initialisierung ist implizit zum Erstellen des Objekts, das Besitzer der Sammlungs Eigenschaft ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNamespace (namespaceDeclaration As NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Die zu schreibende Namespacedeklaration.</param>
        <summary>Definiert eine Namespacedeklaration, die für den nächsten Objekt- oder Memberbereich übernommen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Namespace Deklaration kann geschrieben werden, wenn der aktuelle Bereich ein Stamm Bereich, ein Objektbereich oder ein Element Bereich ist. Kann jedoch <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> nur unmittelbar vor einem Aufruf eines der folgenden aufgerufen werden: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> , <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> oder <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> . Der aufeinanderfolgende <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> Fall ist das Schreiben mehrerer Namespace Deklarationen in denselben Knoten. Schließlich muss entweder <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> oder <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> aufgerufen werden.  
  
 <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>verwendet keine `Start` / `End` Metapher. Obwohl ein XAML-Namespace Member im CLR-Darstellungs Sinn hat, sind die Member bekannt und müssen nicht als spezieller Typ von <xref:System.Xaml.XamlMember> für die Erweiterbarkeit dargestellt werden. Um auf die Werte einer zuzugreifen <xref:System.Xaml.NamespaceDeclaration> , greifen Sie auf die-Eigenschaft und die-Eigenschaft zu <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> .  
  
 Eine Namespace Deklaration kann einen <xref:System.String.Empty?displayProperty=nameWithType> Wert für das Präfix aufweisen. Ein <xref:System.String.Empty?displayProperty=nameWithType> Präfix stellt eine Deklaration des standardmäßigen XAML-Namespace dar. Versuchen Sie nicht, NULL zu verwenden, um das Standard Präfix darzustellen.  in dieser API wird eine Ausnahme ausgelöst. Weitere Informationen finden Sie unter <xref:System.Xaml.NamespaceDeclaration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="namespaceDeclaration" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Eine Komponenten von <paramref name="namespaceDeclaration" /> lautet <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">Versucht, einen XAML-Namespace-Knoten in einen ungültigen Bereich zu schreiben.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Die zu schreibende XAML-Eigenschaft. In der Regel wird dieser Wert aus einem XAML-Reader über den dazwischen liegenden XAML-Knotenstream abgerufen.</param>
        <summary>Schreibt einen neuen Memberknoten in den aktuellen Objektbereich, und der Bereich wird ein neuer Memberbereich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Achten Sie auf einen <xref:System.Xaml.XamlDuplicateMemberException> , der auftritt, wenn dieselbe XAML-Eigenschaft in der XAML-Eingabe zweimal festgelegt wird. In einfachen Fällen, z. b. wenn die gleiche Eigenschaft sowohl in der Attribut Syntax als auch in der Eigenschafts Element Syntax festgelegt ist, können Sie diese Ausnahme im Eingabe Markup leicht erkennen. Allerdings können kleinere Fälle auftreten, die schwieriger zu erkennen sind. Diese Ausnahme kann z. b. auftreten, wenn Sie eine XAML-Inhalts Eigenschaft festlegen, wenn Sie XAML-Ambient-Eigenschaften einschließen und eine Eigenschaft eine anfügbare Verwendung und eine instanzverwendung ermöglicht. In den debugsphasen der Entwicklung können Sie diese Ausnahme häufig ermitteln, indem Sie die XAML-Basis Knoten Darstellung anzeigen, die den Markup Lesevorgang und den Schreibvorgang des Objekt Diagramms verbindet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">In <paramref name="property" /> ist <see cref="P:System.Xaml.XamlMember.IsUnknown" /> auf <see langword="true" /> festgelegt.  
  
- oder - 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> wurde übergeben, was darauf hinweist, dass der XAML-Knotenstream Inhalt für ein Objekt enthalten hat, das keinen Inhalt unterstützt.  
  
- oder - 
Versucht, einen Startmember in einen ungültigen Bereich zu schreiben.</exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException"><paramref name="property" /> gibt eine Eigenschaft an, die bereits im übergeordneten Objektbereich explizit festgelegt ist.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (xamlType As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Der zu schreibende Typ. In der Regel wird dieser Wert von einem XAML-Reader abgerufen.</param>
        <summary>Schreibt einen Objektknoten in den aktuellen Objektbereich und legt den Bereich auf einen neuen Objektbereich fest.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Die Verarbeitung eines Objekts vom Typ <see cref="P:System.Xaml.XamlType.IsUnknown" /> und kann kein Objekt erstellen.  
  
- oder - 
Versucht, ein Startobjekt in einen ungültigen Bereich zu schreiben.</exception>
        <exception cref="T:System.Xaml.XamlParseException">Versucht, ein Stammobjekt zu schreiben, wenn bereits ein Stammobjekt in den Einstellungen bereitgestellt wurde.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlType" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Wenn sich der aktuelle Bereich in einer Auflistung, einem Wörterbuch oder einem Array befindet, sollte die neue Instanz mithilfe der- <see langword="Add" /> Methode des entsprechenden Typs der Auflistung, dem Wörterbuch oder dem Array hinzugefügt werden. Andernfalls sollte der Member der neuen Instanz zugewiesen werden.</para></block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <summary>Schreibt einen Wert in den aktuellen Memberbereich. Wenn sich der aktuelle Bereich in einer Auflistung, einem Wörterbuch oder einem Arrayobjekt befindet, sollte der Wert der Auflistung, dem Wörterbuch oder dem Array hinzugefügt werden.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Versucht, einen Wert in einen ungültigen Bereich zu schreiben.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
