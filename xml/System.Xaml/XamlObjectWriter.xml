<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlObjectWriter.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ca402de94a9fb4c2404a3eb885b3a1fc9d0fc4b6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca402de94a9fb4c2404a3eb885b3a1fc9d0fc4b6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriter">
          <source>Creates an object graph from a source XAML node stream.</source>
          <target state="translated">Erstellt ein Objektdiagramm aus einem Quell-XAML-Knotenstream.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The <ph id="ph1">`Write`</ph> methods of <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> implement a pattern so that the <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> uses the <ph id="ph4">&lt;xref:System.Xaml.XamlWriter&gt;</ph> that is defined by the <ph id="ph5">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">`Write`</ph> Methoden der <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> ein Muster implementiert wird, damit die <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> verwendet die <ph id="ph4">&lt;xref:System.Xaml.XamlWriter&gt;</ph> von definiert die <ph id="ph5">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> logic switches between the <ph id="ph2">`Write`</ph> methods, depending on which node type is at the current position in the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> Logik wechselt zwischen den <ph id="ph2">`Write`</ph> Methoden, abhängig von der Knoten an der aktuellen Position im Reader ist.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>Scope</source>
          <target state="translated">Bereich</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> has a concept of scope; that is, the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> maintains a conceptual point of reference in its output object graph.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> verfügt über ein Konzept von Bereich; ist die <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> einen konzeptionellen des Verweises in seinem Ausgabeobjektdiagramm beibehält.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>For a particular scope, certain operations might be valid or invalid, or produce a no-operation result.</source>
          <target state="translated">Für einen bestimmten Bereich möglicherweise bestimmte Vorgänge gültig oder ungültig sein oder Erzeugen eines Resultsets nicht-Vorgangs.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.</source>
          <target state="translated">Angenommen, Sie rufen <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> zum Schreiben von Richtlinien für die Initialisierung eines Objekts, die bereits als eine Instanz vorhanden ist die Standardimplementierung löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>A possible technique for tracking scope in a custom <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> is to align the node actions with a stack or frame class.</source>
          <target state="translated">Eine mögliche Methode zum Nachverfolgen von Bereich in einem benutzerdefinierten <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> wird zum Ausrichten der Knotenaktionen mit einem Stapel oder den Frame-Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> writes the object graph.</source>
          <target state="translated">Der Stapel oder den Frame des nachvollziehen Push und Pop für jede Ebene des Objektmodells Tiefe, die eingegeben oder beendet wird während der <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> schreibt Objektdiagramm enthalten sind.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>Callbacks</source>
          <target state="translated">Rückrufe</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>To support intermediate and advanced <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> commits or is about to commit certain actions.</source>
          <target state="translated">Zwischen- und erweiterte Unterstützung <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> Szenarien der Mechanismus zum Schreiben von Objektdiagramm bieten Rückruf Einstiegspunkte, die auftreten, wenn eine <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> ein Commit oder ein Begriff, bestimmte Aktionen commit ist.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback.</source>
          <target state="translated">Einige Rückrufe, die in den Einstellungen aktiviert sind und sind nicht spezifisch für den Objekttyp oder das Element geschrieben wird; Allerdings Rückrufinformationen ist häufig im Kontext oder in der ereignismeldung Daten, die durch den Rückruf gesendet wird.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The following is a list of relevant callbacks:</source>
          <target state="translated">Im folgenden finden eine Liste der entsprechenden Rückrufe:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The callback that is declared by <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A&gt;</ph> is invoked when the scope goes to a new object and at the <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize.BeginInit%2A&gt;</ph> phase of object lifetime for each created object.</source>
          <target state="translated">Der Rückruf, der deklariert wird <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A&gt;</ph> wird aufgerufen, wenn der Bereich, um ein neues Objekt sowie in wechselt den <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize.BeginInit%2A&gt;</ph> Phase der Objektlebensdauer für jedes erstellte Objekt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The callback that is declared by <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A&gt;</ph> is invoked when the scope goes to a new object and at the <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize.EndInit%2A&gt;</ph> phase of object lifetime for each created object.</source>
          <target state="translated">Der Rückruf, der deklariert wird <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A&gt;</ph> wird aufgerufen, wenn der Bereich, um ein neues Objekt sowie in wechselt den <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize.EndInit%2A&gt;</ph> Phase der Objektlebensdauer für jedes erstellte Objekt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The callback that is declared by <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A&gt;</ph> is invoked when the scope starts in an object, and occurs when the first <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> call to that object scope is made but not yet committed.</source>
          <target state="translated">Der Rückruf, der deklariert wird <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A&gt;</ph> wird aufgerufen, wenn der Bereich in einem Objekt startet, und tritt auf, wenn die erste <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> -Aufruf für den betreffenden Objektbereich ist, aber noch nicht gespeichert.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The callback that is declared by <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A&gt;</ph> is invoked when the scope starts in an object, and happens when the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> call to that object scope is made but not yet committed.</source>
          <target state="translated">Der Rückruf, der deklariert wird <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A&gt;</ph> wird aufgerufen, wenn der Bereich in einem Objekt startet, und geschieht, wenn die <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> -Aufruf für den betreffenden Objektbereich ist, aber noch nicht gespeichert.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The callback that is declared by <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A&gt;</ph> is invoked when <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.OnSetValue%2A&gt;</ph> is called.</source>
          <target state="translated">Der Rückruf, der deklariert wird <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A&gt;</ph> wird aufgerufen, wenn <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.OnSetValue%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>Writing Dictionary Keys</source>
          <target state="translated">Schreiben von Wörterbuchschlüssel</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> supports type conversion on the constraints of a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before the dictionary contents are added to the object graph.</source>
          <target state="translated">Die standardmäßige Implementierung des <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> unterstützt die typkonvertierung auf die Einschränkungen der einem <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Inhalt wird vor dem Wörterbuch zur Objektdiagramm hinzugefügt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic <ph id="ph1">`Add`</ph> and indexer behavior.</source>
          <target state="translated">Auf diese Weise ein generisches Wörterbuch von Objekten zur Laufzeit sortiert werden können, und kann mit den relevanten generischen übereinstimmen <ph id="ph1">`Add`</ph> und Indexerverhalten.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>However, as implemented for the base <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, this capability exists only for object graph creation from the base <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class and not for derived classes of <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Allerdings als für die Basis implementierten <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, diese Funktion ist nur für die Graph-objekterstellung, von der Basisklasse vorhanden <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Klasse und nicht für die abgeleiteten Klassen von <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>Checks for Disposed</source>
          <target state="translated">Sucht nach verworfen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim.</source>
          <target state="translated">XAML-Writern dienen potenziell für verzögerte Vorgänge oder, in einen Aufruf für eine Verwendung von XAML-Writer-Instanz ausgeführt wird, die in der Zwischenzeit verworfen wurde.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriter">
          <source>Various APIs of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> might throw <ph id="ph2">&lt;xref:System.ObjectDisposedException&gt;</ph> in these cases.</source>
          <target state="translated">Verschiedene APIs von <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> lösen möglicherweise <ph id="ph2">&lt;xref:System.ObjectDisposedException&gt;</ph> in diesen Fällen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
          <source>A XAML schema context that is shared with the XAML reader that provides nodes for writing.</source>
          <target state="translated">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> class using  the XAML schema context that is used by a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>-Klasse mit dem XAML-Schemakontext, der von einem <ph id="ph2">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
          <source>A XAML schema context that is shared with the XAML reader that provides nodes for writing.</source>
          <target state="translated">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
          <source>A settings object that specifies certain options for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> behavior and output.</source>
          <target state="translated">Ein Einstellungsobjekt, durch das bestimmte Optionen für das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>-Verhalten und die Ausgabe angegeben werden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> class using the context that is used by a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> and its settings.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>-Klasse mithilfe eines durch einen <ph id="ph2">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> verwendeten Kontexts und der zugehörigen Einstellungen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.Clear">
          <source>Resets all possible frames and clears the object graph.</source>
          <target state="translated">Setzt alle möglichen Frames zurück und löscht das Objektdiagramm.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release the managed resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um die verwalteten Ressourcen freizugeben, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>, and optionally, releases the managed resources.</source>
          <target state="translated">Gibt die von der <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>-Klasse verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
          <source>The object to report on.</source>
          <target state="translated">Das Objekt, das im Bericht enthalten sein soll.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
          <source>The object is packaged into <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph> when the handler is invoked.</source>
          <target state="translated">Das Objekt wird in <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph> gepackt, wenn der Handler aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
          <source>Invokes any <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /&gt;</ph> method that is associated with <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">Ruft eine beliebige <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /&gt;</ph>-Methode auf, die <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> für diesen <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
          <source>The object to report on.</source>
          <target state="translated">Das Objekt, das im Bericht enthalten sein soll.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
          <source>The value  is packaged into <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph> when the handler is invoked.</source>
          <target state="translated">Der Wert wird in <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph> gepackt, wenn der Handler aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
          <source>Invokes any <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /&gt;</ph> method that is associated with <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">Ruft eine beliebige <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /&gt;</ph>-Methode auf, die <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> für diesen <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
          <source>The object to report on.</source>
          <target state="translated">Das Objekt, das im Bericht enthalten sein soll.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
          <source>This is packaged into <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph> when the handler is invoked.</source>
          <target state="translated">Dies wird in das <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph>-Objekt gepackt, wenn der Handler aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
          <source>Invokes any <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /&gt;</ph> referenced method that is associated with <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">Ruft eine beliebige <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /&gt;</ph>-Methode auf, auf die verwiesen wird und die <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> für diesen <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
          <source>The value to pass through <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph> when the handler is invoked.</source>
          <target state="translated">Der Wert, der mithilfe von <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectEventArgs" /&gt;</ph> übergeben werden soll, wenn der Handler aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
          <source>Invokes any <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /&gt;</ph> referenced method that is associated with <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">Ruft eine beliebige <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /&gt;</ph>-Methode auf, auf die verwiesen wird und die <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> für diesen <ph id="ph3">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>The object to report as the source to the handler.</source>
          <target state="translated">Das Objekt, das dem Handler als Quelle gemeldet werden soll.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>The name of the property to set, which is passed to the handler as part of <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /&gt;</ph>.</source>
          <target state="translated">Der Name der festzulegenden Eigenschaft, die als Teil von <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /&gt;</ph> an den Handler übergeben wird.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>The value to provide for the property that is named by <bpt id="p1">&lt;c&gt;</bpt>property<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Wert, der für die von <bpt id="p1">&lt;c&gt;</bpt>property<ept id="p1">&lt;/c&gt;</ept> benannte Eigenschaft angegeben werden soll.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>The value is passed to the handler as part of <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /&gt;</ph>.</source>
          <target state="translated">Der Wert wird an den Handler als Teil von <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /&gt;</ph> übergeben.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>Invokes any <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /&gt;</ph> referenced method that is associated with <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> for this writer, as long as <ph id="ph3">&lt;paramref name="handled" /&gt;</ph> in <ph id="ph4">&lt;see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /&gt;</ph> event data is not <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Ruft eine beliebige <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /&gt;</ph>-Methode auf, auf die verwiesen wird und die <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> für diesen Writer zugeordnet ist (sofern <ph id="ph3">&lt;paramref name="handled" /&gt;</ph> in den <ph id="ph4">&lt;see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /&gt;</ph>-Ereignisdaten nicht <ph id="ph5">&lt;see langword="true" /&gt;</ph> ist).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>A Boolean value that is set by any associated handler; otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ein boolescher Wert, der durch einen zugeordneten Handler festgelegt wird, andernfalls <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>If the <ph id="ph1">`SetValue`</ph> operation for this XAML writer has an associated handler (a <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A&gt;</ph> is declared in <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>), this method creates new <ph id="ph4">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> and passes them to the handler.</source>
          <target state="translated">Wenn die <ph id="ph1">`SetValue`</ph> Vorgang für diese XAML-Writer verfügt über einen zugeordneten Handler (eine <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A&gt;</ph> in deklariert <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>), erstellt diese Methode neuen <ph id="ph4">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> und übergibt sie an den Handler.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>The return value is set by reading the <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A&gt;</ph> value that is passed through the event data.</source>
          <target state="translated">Der Rückgabewert wird festgelegt, durch Lesen der <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A&gt;</ph> -Wert, der über die Ereignisdaten übergeben wird.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
          <source>If no handler exists and this method is invoked, the call returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wenn kein Handler vorhanden ist, und diese Methode wird aufgerufen, gibt der Aufruf <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriter.Result">
          <source>Gets the last object that was written.</source>
          <target state="translated">Ruft das letzte Objekt ab, das geschrieben wurde.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriter.Result">
          <source>Typically only called when the node stream is at its end and the object graph is complete.</source>
          <target state="translated">Wird normalerweise nur aufgerufen, wenn das Ende des Knotenstreams erreicht und das Objektdiagramm abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.Result">
          <source>The last object written, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das letzte geschriebene Objekt oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.Result">
          <source>The most typical usage of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.Result%2A&gt;</ph> is to call it only when the node stream is known to be at its end, and the object graph is complete.</source>
          <target state="translated">Die häufigste Verwendung von <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.Result%2A&gt;</ph> besteht im Aufrufen es nur, wenn der Knotenstream bekannt ist, dass am Ende und das Objektdiagramm abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.Result">
          <source>Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.</source>
          <target state="translated">Andernfalls Objektdiagramm ist es wahrscheinlich, dass möglicherweise unvollständig und ist nicht für die meisten Plattformszenarien nützlich.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.Result">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.Result%2A&gt;</ph> typically only contains a non-null value if it is called immediately after a call to <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, and if the current scope is in the member where the object provides a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.Result%2A&gt;</ph> einen Wert ungleich Null in der Regel nur enthält, wenn er, sofort nach einem Aufruf von aufgerufen wird <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, und wenn der aktuelle Bereich im Element ist, an dem das Objekt einen Wert bereitstellt.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriter.RootNameScope">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> service that maintains the XAML namescope for the absolute node root of the XAML object writer.</source>
          <target state="translated">Ruft den <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph>-Dienst ab, von dem der XAML-Namescope für den absoluten Knotenstamm des XAML-Objektwriters verwaltet wird.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.RootNameScope">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> service that maintains the XAML namescope for the current root of the object writer.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph>-Dienst, von dem der XAML-Namescope für den aktuellen Stamm des Objektwriters verwaltet wird.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.RootNameScope">
          <source>The value of this property may come from the object writer context.</source>
          <target state="translated">Der Wert dieser Eigenschaft stammen möglicherweise aus dem Objekt-Writer-Kontext.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriter.SchemaContext">
          <source>Gets the active XAML schema context.</source>
          <target state="translated">Ruft den aktiven XAML-Schemakontext ab.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.SchemaContext">
          <source>The XAML schema context.</source>
          <target state="translated">Der XAML-Schemakontext.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.SchemaContext">
          <source>XAML schema context is a necessary information source for most practical object-writing scenarios.</source>
          <target state="translated">XAML-Schemakontext ist die notwendigen Informationen, die Quelle für die zweckmäßigste Objekt-schreiben-Szenarien.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.SchemaContext">
          <source>The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist.</source>
          <target state="translated">Der XAML-Schemakontext beeinflusst die Typsuche für Unterstützungstypen und enthält Informationen zu den Assemblys, auf dem Unterstützungstypen vorhanden sind.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.SchemaContext">
          <source>The default XAML schema context is based on CLR type-mapping rules.</source>
          <target state="translated">Die Verwendung von XAML-Standardschemakontext basiert auf Regeln der CLR-Typzuordnung.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.SchemaContext">
          <source>Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.</source>
          <target state="translated">Frameworks stellen in der Regel ihre eigenen XAML-Schemakontext, um sicherzustellen, dass die Mechanismen für das Laden von Assemblys die Framework Programmierung Amd-Anwendungsmodelle übereinstimmen.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
          <source>The line number from the reader.</source>
          <target state="translated">Die Zeilennummer vom Reader.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
          <source>The line position from the reader.</source>
          <target state="translated">Die Zeilenposition vom Reader.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
          <source>Implements <ph id="ph1">&lt;see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /&gt;</ph> and provides line information for exceptions.</source>
          <target state="translated">Implementiert <ph id="ph1">&lt;see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /&gt;</ph> und stellt Zeileninformationen für Ausnahmen bereit.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
          <source>This service method is not intended to be called directly from your code.</source>
          <target state="translated">Diese Methode sollte nicht direkt aus Ihrem Code aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
          <source>However, if you are creating a derived class from <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> and expect to report a context where line numbers are unavailable or not useful, this method may be called.</source>
          <target state="translated">Jedoch, wenn Sie eine abgeleitete Klasse von erstellen <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> und erwarten einen Kontext zu melden, in dem Zeilennummern nicht verfügbar sind oder nicht sinnvoll, diese Methode kann aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
          <source>Gets a value that reports whether a line information service should provide values and therefore, should also call the <ph id="ph1">&lt;see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /&gt;</ph> method when it is relevant.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob von einem Zeileninformationsdienst Werte bereitgestellt werden sollen und ob dementsprechend die <ph id="ph1">&lt;see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /&gt;</ph>-Methode aufgerufen werden soll, wenn diese relevant ist.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if line information is used by the writer; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn vom Writer Zeileninformationen verwendet werden, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
          <source>This implementation always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Diese Implementierung gibt immer <ph id="ph1">`true`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteEndMember">
          <source>Closes the current member scope, and may write the value of the member scope while it closes.</source>
          <target state="translated">Schließt den aktuellen Memberbereich und schreibt möglicherweise den Wert des Memberbereichs beim Schließen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteEndMember">
          <source>The new scope becomes the parent object scope of the member.</source>
          <target state="translated">Der neue Bereich wird der übergeordnete Objektbereich des Members.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteEndMember">
          <source>Failed to create member value from a value node that is encountered between this call and a previous <ph id="ph1">&lt;see langword="StartMember" /&gt;</ph>.</source>
          <target state="translated">Fehler beim Erstellen von Memberwerten aus einem Wertknoten, der zwischen diesem Aufruf und einem vorherigen <ph id="ph1">&lt;see langword="StartMember" /&gt;</ph> gefunden wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteEndObject">
          <source>Closes the current object scope in the writer.</source>
          <target state="translated">Schließt den aktuellen Objektbereich im Writer.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteEndObject">
          <source>The new object scope becomes the parent member scope.</source>
          <target state="translated">Der neue Objektbereich wird der übergeordnete Bereich des Members.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteEndObject">
          <source>If this <ph id="ph1">`EndObject`</ph> position scope is closing the root object, the new object scope becomes the root scope.</source>
          <target state="translated">Wenn diese <ph id="ph1">`EndObject`</ph> das Stammobjekt schließt, wird der neue Objektbereich als Stammbereich.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteEndObject">
          <source>The call to <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters.</source>
          <target state="translated">Der Aufruf von <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> möglicherweise noch nicht erstellt das Objekt möglicherweise ein Objektelement einen erforderliche Initialisierung Weg, z. B. Initialisierungstext oder Initialisierungsparameter.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteEndObject">
          <source>For these cases, the call to <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> actually writes the object.</source>
          <target state="translated">In diesen Fällen, den Aufruf von <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> tatsächlich schreibt das Objekt.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>Writes the conceptual <ph id="ph1">&lt;see langword="StartObject" /&gt;</ph> into the object graph when the specified object is a default or implicit value of the parent property.</source>
          <target state="translated">Schreibt das konzeptionelle <ph id="ph1">&lt;see langword="StartObject" /&gt;</ph>-Objekt in das Objektdiagramm, wenn das angegebene Objekt ein Standardwert oder ein impliziter Wert der übergeordneten Eigenschaft ist.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.</source>
          <target state="translated">Der implizite Wert stammt aus Informationen, die aus dem XAML-Schemakontext und Sicherungstypinformationen abgerufen und nicht als Objektwert in der eingegebenen XAML-Knotengruppe angegeben werden.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>The difference between writing with <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> and writing with <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> can be seen in the resulting object graph.</source>
          <target state="translated">Der Unterschied zwischen dem Schreiben mit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> und das Schreiben von mit <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> in der sich ergebende Objektdiagramm angezeigt werden können.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> does not construct an instance of a type because the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> API has no information to inform the object graph of what to construct.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> Erstellen eine Instanz eines Typs nicht, da die <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> -API verfügt über keine Daten, die das Objektdiagramm, was erstellt zu informieren.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>Instead, the object was created when the parent property was initialized; so a <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> does not need to construct it.</source>
          <target state="translated">Stattdessen wurde das Objekt erstellt, wenn die übergeordnete Eigenschaft initialisiert wurde; Damit eine <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> muss nicht zur Erstellung.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> specifies that an instance of that type should be constructed and inserted into the object graph.</source>
          <target state="translated">Im Gegensatz dazu <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> gibt an, dass eine Instanz dieses Typs erstellt und in dem Objektdiagramm eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>If you think of the XAML node stream as a series of frames, a <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> is balanced to a <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> call.</source>
          <target state="translated">Wenn Sie die Verwendung von XAML-Knotenstream als eine Reihe von Frames vorstellen eine <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> ist ausgeglichen. um eine <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>Therefore, the number of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> plus <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> calls should equal the number of <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> calls as part of a complete object-writing evaluation of the XAML node stream.</source>
          <target state="translated">Aus diesem Grund wird die Anzahl der <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> plus <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> Aufrufe müssen gleich der Anzahl der <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> als Teil einer Bewertung Objekt zum Schreiben von XAML-Knotenstream aufruft.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>The conceptual <ph id="ph1">`StartObject`</ph> position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream.</source>
          <target state="translated">Konzeptionelle <ph id="ph1">`StartObject`</ph> für ein implizites Objekt im Objektdiagramm erforderlich, ist da Sie zwar der Objektwert selbst ein impliziter Standard ist, dieses Objekt noch Mitglieder verfügen kann, geschrieben werden basierend auf der XAML-Knotenstream müssen, zu positionieren.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteGetObject">
          <source>A typical scenario where this occurs is when <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.</source>
          <target state="translated">Ein typisches Szenario, in diesem Fall, ist, wenn <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> Schreibvorgänge Memberknoten für eine Auflistungseigenschaft und die Initialisierung der Auflistung wird implizit für die beim Erstellen des Objekts, das die Auflistungseigenschaft besitzt.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The namespace declaration to write.</source>
          <target state="translated">Die zu schreibende Namespacedeklaration.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Defines a namespace declaration that applies to the next object scope or member scope.</source>
          <target state="translated">Definiert eine Namespacedeklaration, die für den nächsten Objekt- oder Memberbereich übernommen wird.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>A namespace declaration can be written if the current scope is a root scope, object scope, or member scope.</source>
          <target state="translated">Eine Namespacedeklaration kann geschrieben werden, wenn im aktuelle Bereich einen Stammgültigkeitsbereich, Objektbereich oder Memberbereich ist.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>However, <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> can only be called immediately before a call to one of the following: <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph>.</source>
          <target state="translated">Allerdings <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> kann nur unmittelbar vor dem Aufrufen einer der folgenden aufgerufen werden: <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph>, oder <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The consecutive <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> case is for writing multiple namespace declarations to the same node.</source>
          <target state="translated">Die aufeinander folgenden <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> wird zum Schreiben von mehreren Namespacedeklarationen zum selben Knoten.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Eventually, either <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> must be called.</source>
          <target state="translated">Schließlich <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> muss aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> does not use a <ph id="ph2">`Start`</ph><ph id="ph3">/</ph><ph id="ph4">`End`</ph> metaphor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> verwendet keine <ph id="ph2">`Start`</ph> <ph id="ph3">/</ph> <ph id="ph4">`End`</ph> Metapher.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> for extensibility.</source>
          <target state="translated">Obwohl ein XAML-Namespace in den CLR-Darstellungssinn als Member enthält, die Elemente bezeichnet werden und müssen nicht als eine besondere Art von dargestellt werden <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> für Erweiterbarkeit.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>To access the values of a <ph id="ph1">&lt;xref:System.Xaml.NamespaceDeclaration&gt;</ph>, you access its <ph id="ph2">&lt;xref:System.Xaml.NamespaceDeclaration.Namespace%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xaml.NamespaceDeclaration.Prefix%2A&gt;</ph> properties.</source>
          <target state="translated">Die Werte der Zugriff auf eine <ph id="ph1">&lt;xref:System.Xaml.NamespaceDeclaration&gt;</ph>, Sie Zugriff auf seine <ph id="ph2">&lt;xref:System.Xaml.NamespaceDeclaration.Namespace%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Xaml.NamespaceDeclaration.Prefix%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>A namespace declaration may have a <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> value for the prefix.</source>
          <target state="translated">Eine Namespacedeklaration möglicherweise eine <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> Wert für das Präfix.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>A <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> prefix represents a declaration of the default XAML namespace.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> Präfix stellt eine Deklaration des XAML-Standardnamespace.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Do not attempt to use null to represent the default prefix;  it throws an exception in this API.</source>
          <target state="translated">Versuchen Sie nicht mit null, wenn das Standardpräfix darstellen;  Sie löst eine Ausnahme in dieser API.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.NamespaceDeclaration&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.Xaml.NamespaceDeclaration&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The <ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>A component of <ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine Komponenten von <ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> lautet <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Tried to write a XAML namespace node in an invalid scope.</source>
          <target state="translated">Versucht, einen XAML-Namespace-Knoten in einen ungültigen Bereich zu schreiben.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The XAML property to write.</source>
          <target state="translated">Die zu schreibende XAML-Eigenschaft.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Typically you obtain this value from a XAML reader through the XAML node stream intermediate.</source>
          <target state="translated">In der Regel wird dieser Wert aus einem XAML-Reader über den dazwischen liegenden XAML-Knotenstream abgerufen.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Writes a new member node into the current object scope, and the scope becomes a new member scope.</source>
          <target state="translated">Schreibt einen neuen Memberknoten in den aktuellen Objektbereich, und der Bereich wird ein neuer Memberbereich.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Watch for a <ph id="ph1">&lt;xref:System.Xaml.XamlDuplicateMemberException&gt;</ph>, which occurs when the same XAML property is set twice in the XAML input.</source>
          <target state="translated">Achten Sie bei einem <ph id="ph1">&lt;xref:System.Xaml.XamlDuplicateMemberException&gt;</ph>, der auftritt, wenn die gleiche XAML-Eigenschaft zweimal in der XAML-Eingabe festgelegt ist.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup.</source>
          <target state="translated">In einfachen Fällen, z. B. wenn die gleiche Eigenschaft, in der Attributsyntax und Eigenschaftenelementsyntax festgelegt ist, können Sie diese Ausnahme in der Eingabe Markup leicht erkennen.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>However, more subtle cases can occur that are more difficult to spot.</source>
          <target state="translated">Allerdings können feinere Fälle auftreten, die schwieriger zu erkennen sind.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage.</source>
          <target state="translated">Diese Ausnahme kann beispielsweise auftreten, wenn Sie eine XAML-Inhaltseigenschaft festlegen, wenn Sie XAML-Umgebungseigenschaften umfassen, und wenn eine Eigenschaft sowohl für eine anfügbare Verwendung als auch für die Instanzverwendung einer ermöglicht.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.</source>
          <target state="translated">In den debugging Phasen der Entwicklung können Sie häufig diese Ausnahme suchen, indem Sie die Darstellung von intermediate XAML-Knoten, die das Markup, das Lesen und Schreiben der Objekt-Diagramm verbindet anzeigen.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> has <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">In <ph id="ph1">&lt;paramref name="property" /&gt;</ph> ist <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> auf <ph id="ph3">&lt;see langword="true" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;see cref="P:System.Xaml.XamlLanguage.UnknownContent" /&gt;</ph> passed, which indicates that the XAML node stream contained content for an object that does not support content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xaml.XamlLanguage.UnknownContent" /&gt;</ph> wurde übergeben, was darauf hinweist, dass der XAML-Knotenstream Inhalt für ein Objekt enthalten hat, das keinen Inhalt unterstützt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Attempted to write a start member in an invalid scope.</source>
          <target state="translated">Versucht, einen Startmember in einen ungültigen Bereich zu schreiben.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> specifies a property that is already explicitly set in the parent object scope.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> gibt eine Eigenschaft an, die bereits im übergeordneten Objektbereich explizit festgelegt ist.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The type to write.</source>
          <target state="translated">Der zu schreibende Typ.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Typically you obtain this value from a XAML reader.</source>
          <target state="translated">In der Regel wird dieser Wert von einem XAML-Reader abgerufen.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Writes an object node into the current scope, and sets the scope to a new object scope.</source>
          <target state="translated">Schreibt einen Objektknoten in den aktuellen Objektbereich und legt den Bereich auf einen neuen Objektbereich fest.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Processing an <ph id="ph1">&lt;see cref="P:System.Xaml.XamlType.IsUnknown" /&gt;</ph> type and cannot create an object.</source>
          <target state="translated">Die Verarbeitung eines Objekts vom Typ <ph id="ph1">&lt;see cref="P:System.Xaml.XamlType.IsUnknown" /&gt;</ph> und kann kein Objekt erstellen.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Attempted to write a start object in an invalid scope.</source>
          <target state="translated">Versucht, ein Startobjekt in einen ungültigen Bereich zu schreiben.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Attempted to write a root object when the root object was already provided in the settings.</source>
          <target state="translated">Versucht, ein Stammobjekt zu schreiben, wenn bereits ein Stammobjekt in den Einstellungen bereitgestellt wurde.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>If the current scope is inside a collection, dictionary, or array, the new instance should be added to the collection, dictionary, or array by using the <ph id="ph1">&lt;see langword="Add" /&gt;</ph> method of the relevant type.</source>
          <target state="translated">Wenn der aktuelle Bereich in einer Auflistung, einem Wörterbuch oder einem Array ist, sollte die neue Instanz der Auflistung, Wörterbuch oder Array hinzugefügt werden, mithilfe der <ph id="ph1">&lt;see langword="Add" /&gt;</ph> -Methode des entsprechenden Typs.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Otherwise, the member should be assigned to the new instance.</source>
          <target state="translated">Andernfalls sollten das Element mit der neuen Instanz zugewiesen werden.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
          <source>The value to write.</source>
          <target state="translated">Der zu schreibende Wert.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
          <source>Writes a value to the current member scope.</source>
          <target state="translated">Schreibt einen Wert in den aktuellen Memberbereich.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
          <source>If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.</source>
          <target state="translated">Wenn sich der aktuelle Bereich in einer Auflistung, einem Wörterbuch oder einem Arrayobjekt befindet, sollte der Wert der Auflistung, dem Wörterbuch oder dem Array hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
          <source>Attempted to write a value in an invalid scope.</source>
          <target state="translated">Versucht, einen Wert in einen ungültigen Bereich zu schreiben.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>