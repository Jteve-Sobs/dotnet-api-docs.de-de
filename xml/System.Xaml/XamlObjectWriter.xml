<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d67227721dd773132217fd6c463e5161f2b6ad4a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39845136" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Erstellt ein Objektdiagramm aus einem Quell-XAML-Knotenstream.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Write` Methoden <xref:System.Xaml.XamlObjectWriter> ein Muster zu implementieren, damit die <xref:System.Xaml.XamlObjectWriter> verwendet die <xref:System.Xaml.XamlWriter> von definiert die <xref:System.Xaml.XamlWriter.WriteNode%2A> Methode. <xref:System.Xaml.XamlWriter.WriteNode%2A> Logik wechselt zwischen den `Write` Methoden, abhängig von der Knoten an der aktuellen Position im Reader ist.  
  
## <a name="scope"></a>Bereich  
 Ein <xref:System.Xaml.XamlObjectWriter> verfügt über ein Konzept der Bereich, der die <xref:System.Xaml.XamlObjectWriter> einen konzeptionellen-Verweises im Ausgabeobjektdiagramm beibehält. Für einen bestimmten Bereich oder möglicherweise bestimmte Vorgänge gültig oder ungültig sein oder nicht-Vorgangs Ergebnis erzeugt. Wenn Sie aufrufen, z. B. <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> zum Schreiben von Anweisungen für die Initialisierung eines Objekts, die bereits als eine Instanz vorhanden ist die Standardimplementierung löst eine Ausnahme aus.  
  
 Eine mögliche Methode zum Verfolgen eines Bereichs in einem benutzerdefinierten <xref:System.Xaml.XamlObjectWriter> besteht darin, die Knotenaktionen mit einer Klasse Stack oder der Zielframe, ausrichten. Das Stack oder den Frame des nachvollziehen per Push und Pop für jede Ebene des Objektmodells Tiefe, der angetroffene oder verlassene wird während der <xref:System.Xaml.XamlObjectWriter> schreibt das Objektdiagramm.  
  
## <a name="callbacks"></a>Rückrufe  
 Zur Unterstützung von mittleren und fortgeschrittenen <xref:System.Xaml.XamlObjectWriter> Szenarien ist der Mechanismus zum Schreiben eines Objektdiagramms bietet Rückruf Einstiegspunkte, die auftreten, wenn eine <xref:System.Xaml.XamlObjectWriter> ein Commit oder bestimmte Aktionen Commit ausgeführt wird. Einige Rückrufe, die in den Einstellungen aktiviert werden und sind nicht spezifisch für den Objekttyp oder den Member, die geschrieben werden; Allerdings Rückrufinformationen ist häufig im Kontext oder im Ereignis Daten, die über den Rückruf gesendet werden. Im folgenden finden eine Liste der relevanten Rückrufe:  
  
-   Der Rückruf, der durch deklarierten <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> wird aufgerufen, wenn der Bereich, um ein neues Objekt sowie in wechselt der <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> Phase der Objektlebensdauer für jedes erstellte Objekt.  
  
-   Der Rückruf, der durch deklarierten <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> wird aufgerufen, wenn der Bereich, um ein neues Objekt sowie in wechselt der <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> Phase der Objektlebensdauer für jedes erstellte Objekt.  
  
-   Der Rückruf, der vom deklariert wird <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> wird aufgerufen, wenn der Bereich in einem Objekt beginnt und tritt auf, wenn die erste <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> -Aufruf, Objektbereich, aber noch nicht übergeben wird.  
  
-   Der Rückruf, der vom deklariert wird <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> wird aufgerufen, wenn der Bereich in einem Objekt beginnt und geschieht, wenn die <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> -Aufruf, Objektbereich, aber noch nicht übergeben wird.  
  
-   Der Rückruf, der durch deklarierten <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> wird aufgerufen, wenn <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> aufgerufen wird.  
  
## <a name="writing-dictionary-keys"></a>Wörterbuchschlüssel für das Schreiben von  
 Die standardmäßige Implementierung des <xref:System.Xaml.XamlObjectWriter> unterstützt die typkonvertierung in den Einschränkungen des eine <xref:System.Collections.Generic.Dictionary%602> vor dem Wörterbuch Inhalt am Objektdiagramm hinzugefügt werden. Auf diese Weise kann ein generisches Wörterbuch von Objekten zur Laufzeit eingegeben werden können, und kann mit den relevanten generischen übereinstimmen `Add` und das Indexerverhalten. Wie für die Basis implementiert jedoch <xref:System.Xaml.XamlObjectWriter>, diese Funktion ist nur für die Graph-objekterstellung, von der Basisklasse vorhanden <xref:System.Collections.Generic.Dictionary%602> Klasse und nicht für die abgeleiteten Klassen von <xref:System.Collections.Generic.Dictionary%602>.  
  
## <a name="checks-for-disposed"></a>Sucht nach verworfen.  
 XAML-Writer werden möglicherweise verwendet, für die verzögerten Vorgänge oder, in dem Aufruf für eine XAML-Writer-Instanz ausgeführt wird, die in der Zwischenzeit freigegeben wurde. Verschiedene APIs von <xref:System.Xaml.XamlObjectWriter> löst möglicherweise <xref:System.ObjectDisposedException> in diesen Fällen.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse mit dem XAML-Schemakontext, der von einem <see cref="T:System.Xaml.XamlReader" /> verwendet wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Ein XAML-Schemakontext, der für den XAML-Reader freigegeben ist, von dem Knoten für Schreibvorgänge bereitgestellt werden.</param>
        <param name="settings">Ein Einstellungsobjekt, durch das bestimmte Optionen für das <see cref="T:System.Xaml.XamlObjectWriter" />-Verhalten und die Ausgabe angegeben werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse mithilfe eines durch einen <see cref="T:System.Xaml.XamlReader" /> verwendeten Kontexts und der zugehörigen Einstellungen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaContext" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt alle möglichen Frames zurück und löscht das Objektdiagramm.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um die verwalteten Ressourcen freizugeben, andernfalls <see langword="false" />.</param>
        <summary>Gibt die von der <see cref="T:System.Xaml.XamlObjectWriter" />-Klasse verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das im Bericht enthalten sein soll. Das Objekt wird in <see cref="T:System.Xaml.XamlObjectEventArgs" /> gepackt, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />-Methode auf, die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das im Bericht enthalten sein soll. Der Wert wird in <see cref="T:System.Xaml.XamlObjectEventArgs" /> gepackt, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />-Methode auf, die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das im Bericht enthalten sein soll. Dies wird in das <see cref="T:System.Xaml.XamlObjectEventArgs" />-Objekt gepackt, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert, der mithilfe von <see cref="T:System.Xaml.XamlObjectEventArgs" /> übergeben werden soll, wenn der Handler aufgerufen wird.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen <see cref="T:System.Xaml.XamlObjectWriter" /> zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">Das Objekt, das dem Handler als Quelle gemeldet werden soll.</param>
        <param name="member">Der Name der festzulegenden Eigenschaft, die als Teil von <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> an den Handler übergeben wird.</param>
        <param name="value">Der Wert, der für die von <c>property</c> benannte Eigenschaft angegeben werden soll. Der Wert wird an den Handler als Teil von <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> übergeben.</param>
        <summary>Ruft eine beliebige <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />-Methode auf, auf die verwiesen wird und die <see cref="T:System.Xaml.XamlObjectWriterSettings" /> für diesen Writer zugeordnet ist (sofern <paramref name="handled" /> in den <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />-Ereignisdaten nicht <see langword="true" /> ist).</summary>
        <returns>Ein boolescher Wert, der durch einen zugeordneten Handler festgelegt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `SetValue` Vorgang für diesen XAML-Writer verfügt über einen zugehörigen Handler (eine <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> in deklariert ist <xref:System.Xaml.XamlObjectWriterSettings>), diese Methode erstellt neue <xref:System.Windows.Markup.XamlSetValueEventArgs> und übergibt sie an den Handler. Der zurückgegebene Wert wird festgelegt, durch Lesen der <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> Wert, der die Ereignisdaten übergeben wird. Wenn kein Handler vorhanden ist, und diese Methode wird aufgerufen, gibt der Aufruf `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das letzte Objekt ab, das geschrieben wurde. Wird normalerweise nur aufgerufen, wenn das Ende des Knotenstreams erreicht und das Objektdiagramm abgeschlossen wurde.</summary>
        <value>Das letzte geschriebene Objekt oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die häufigste Verwendung von <xref:System.Xaml.XamlObjectWriter.Result%2A> besteht darin, aufzurufen, wenn der Knotenstream wird am Ende werden bezeichnet, und das Objektdiagramm abgeschlossen ist. Andernfalls, das Objektdiagramm ist wahrscheinlich unvollständig, und ist nicht für die meisten Szenarien nützlich.  
  
 <xref:System.Xaml.XamlObjectWriter.Result%2A> einen Wert ungleich Null in der Regel nur enthält, wenn er, sofort nach einem Aufruf von aufgerufen wird <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, und wenn der aktuelle Bereich in das Element ist, in dem das Objekt stellt einen Wert bereit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Markup.INameScope" />-Dienst ab, von dem der XAML-Namescope für den absoluten Knotenstamm des XAML-Objektwriters verwaltet wird.</summary>
        <value>Der <see cref="T:System.Windows.Markup.INameScope" />-Dienst, von dem der XAML-Namescope für den aktuellen Stamm des Objektwriters verwaltet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieser Eigenschaft stammen möglicherweise aus dem Kontext der Objekt-Writer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktiven XAML-Schemakontext ab.</summary>
        <value>Der XAML-Schemakontext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML-Schemakontext ist eine notwendige Informationsquelle für die meisten praktischen Objekt beim Schreiben von Szenarien. Der XAML-Schemakontext wirkt sich auf die Typsuche für Unterstützungstypen und enthält Informationen zu den Assemblys, in denen Unterstützungstypen vorhanden sind. Der Standard-XAML-Schemakontext basiert auf CLR-Typzuordnung-Regeln. Frameworks stellen in der Regel ihre eigenen XAML-Schemakontext, um sicherzustellen, dass die Mechanismen für das Laden von Assemblys der Framework Programmierung Amd-Anwendungsmodelle übereinstimmen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">Die Zeilennummer vom Reader.</param>
        <param name="linePosition">Die Zeilenposition vom Reader.</param>
        <summary>Implementiert <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> und stellt Zeileninformationen für Ausnahmen bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nicht vorgesehen, direkt aus Ihrem Code aufgerufen werden. Allerdings bei der Erstellung einer abgeleiteten Klasse von <xref:System.Xaml.XamlObjectWriter> und erwarten einen Kontext zu melden, in dem Zeilennummern nicht verfügbar sind oder nicht sinnvoll, diese Methode kann aufgerufen werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob von einem Zeileninformationsdienst Werte bereitgestellt werden sollen und ob dementsprechend die <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />-Methode aufgerufen werden soll, wenn diese relevant ist.</summary>
        <value>
          <see langword="true" />, wenn vom Writer Zeileninformationen verwendet werden, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung gibt immer `true` zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den aktuellen Memberbereich und schreibt möglicherweise den Wert des Memberbereichs beim Schließen. Der neue Bereich wird der übergeordnete Objektbereich des Members.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Fehler beim Erstellen von Memberwerten aus einem Wertknoten, der zwischen diesem Aufruf und einem vorherigen <see langword="StartMember" /> gefunden wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den aktuellen Objektbereich im Writer. Der neue Objektbereich wird der übergeordnete Bereich des Members.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese `EndObject` schließt das Stammobjekt, das der neue Objektbereich wird der Stammbereich.  
  
 Der Aufruf von <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> möglicherweise noch nicht erstellt das Objekt da ein Objektmember auf eine erforderliche Initialisierung-Pfad, z. B. Initialisierungstext oder Initialisierungsparameter sein könnten. In diesen Fällen den Aufruf von <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> tatsächlich schreibt das Objekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt das konzeptionelle <see langword="StartObject" />-Objekt in das Objektdiagramm, wenn das angegebene Objekt ein Standardwert oder ein impliziter Wert der übergeordneten Eigenschaft ist. Der implizite Wert stammt aus Informationen, die aus dem XAML-Schemakontext und Sicherungstypinformationen abgerufen und nicht als Objektwert in der eingegebenen XAML-Knotengruppe angegeben werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Unterschied zwischen dem Schreiben mit <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> und das Schreiben von mit <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> finden Sie in das resultierende Objektdiagramm. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> eine Instanz eines Typs wird nicht erstellt werden, da die <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> -API verfügt über keine Informationen, um das Objektdiagramm, was Sie erstellen darüber zu informieren. Stattdessen wurde das Objekt erstellt, als die übergeordnete Eigenschaft initialisiert wurde. Damit eine <xref:System.Xaml.XamlObjectWriter> muss sich nicht um sie zu erstellen. Im Gegensatz dazu <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> gibt an, dass eine Instanz dieses Typs erstellt und in dem Objektdiagramm eingefügt werden soll.  
  
 Wenn Sie den XAML-Knotenstream als eine Reihe von Frames, vorstellen eine <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> ist ausgeglichen. um eine <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> aufrufen. Daher ist die Anzahl der <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> aufrufen sollte gleich der Anzahl der <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> als Teil einer Bewertung Objekt zum Schreiben des XAML-Knotenstreams aufruft.  
  
 Die konzeptionelle `StartObject` für ein implizite Objekt im Objektdiagramm erforderlich ist, da Obwohl der Wert des Objekts selbst impliziter Standard ist, dieses Objekt immer noch Mitglieder verfügen kann, die zu schreibenden basierend auf der XAML-Knotenstream zu positionieren. Ein typisches Szenario, in diesem Fall, ist, wenn <xref:System.Xaml.XamlObjectWriter> Schreibvorgänge Memberknoten für eine Auflistungseigenschaft und die Initialisierung der Sammlung wird implizit für das Objekt, das die auflistungsnavigationseigenschaft für besitzt, erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Die zu schreibende Namespacedeklaration.</param>
        <summary>Definiert eine Namespacedeklaration, die für den nächsten Objekt- oder Memberbereich übernommen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Namespacedeklaration kann geschrieben werden, wenn der aktuelle Bereich ein Stammbereich, Objekt- oder Memberbereich ist. Allerdings <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> kann nur unmittelbar vor dem Aufrufen einer der folgenden aufgerufen werden: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, oder <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. Die aufeinander folgenden <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> Fall ist, für das Schreiben von mehreren Namespacedeklarationen auf denselben Knoten. Schließlich entweder <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> oder <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> muss aufgerufen werden.  
  
 <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> verwendet keine `Start` / `End` Metapher. Obwohl ein XAML-Namespace Member in der CLR-Darstellungssinn verfügt, die Elemente sind bekannt und müssen nicht als eine besondere Art von dargestellt werden <xref:System.Xaml.XamlMember> für die Erweiterbarkeit. Die Werte der Zugriff auf eine <xref:System.Xaml.NamespaceDeclaration>, Sie Zugriff auf seine <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> und <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> Eigenschaften.  
  
 Eine Namespacedeklaration ist möglicherweise eine <xref:System.String.Empty?displayProperty=nameWithType> Wert für das Präfix. Ein <xref:System.String.Empty?displayProperty=nameWithType> Präfix stellt eine Deklaration des XAML-Standardnamespace dar. Versuchen Sie nicht mit null, wenn das Standardpräfix darstellen;  Sie löst eine Ausnahme in dieser API. Weitere Informationen finden Sie unter <xref:System.Xaml.NamespaceDeclaration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceDeclaration" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Eine Komponenten von <paramref name="namespaceDeclaration" /> lautet <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">Versucht, einen XAML-Namespace-Knoten in einen ungültigen Bereich zu schreiben.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Die zu schreibende XAML-Eigenschaft. In der Regel wird dieser Wert aus einem XAML-Reader über den dazwischen liegenden XAML-Knotenstream abgerufen.</param>
        <summary>Schreibt einen neuen Memberknoten in den aktuellen Objektbereich, und der Bereich wird ein neuer Memberbereich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Sehen Sie sich für eine <xref:System.Xaml.XamlDuplicateMemberException>, der auftritt, wenn die gleiche XAML-Eigenschaft zweimal in der XAML-Eingabe festgelegt ist. In einfachen Fällen, z. B. wenn die gleiche Eigenschaft, in der Attributsyntax und Eigenschaftensyntax-Element festgelegt ist, können Sie diese Ausnahme im Eingabe-Markup leicht erkennen. Allerdings können feinere Fälle auftreten, die schwieriger zu erkennen sind. Diese Ausnahme kann beispielsweise auftreten, wenn Sie eine XAML-Inhaltseigenschaft festlegen, wenn Sie XAML-Ambiente-Eigenschaften enthalten, und wenn eine Eigenschaft sowohl für eine anfügbare Verwendung als auch für die Verwendung einer Azure-Instanzen ermöglicht. In den debugging-Phasen der Entwicklung können Sie diese Ausnahme häufig suchen anhand der XAML-Knoten zwischendarstellung, die das Markup lesen und Schreiben Sie Object Graph stellt eine Verbindung her.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">In <paramref name="property" /> ist <see cref="P:System.Xaml.XamlMember.IsUnknown" /> auf <see langword="true" /> festgelegt.  
  
- oder -  
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> wurde übergeben, was darauf hinweist, dass der XAML-Knotenstream Inhalt für ein Objekt enthalten hat, das keinen Inhalt unterstützt.  
  
- oder -  
Versucht, einen Startmember in einen ungültigen Bereich zu schreiben.</exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException">
          <paramref name="property" /> gibt eine Eigenschaft an, die bereits im übergeordneten Objektbereich explizit festgelegt ist.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Der zu schreibende Typ. In der Regel wird dieser Wert von einem XAML-Reader abgerufen.</param>
        <summary>Schreibt einen Objektknoten in den aktuellen Objektbereich und legt den Bereich auf einen neuen Objektbereich fest.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Die Verarbeitung eines Objekts vom Typ <see cref="P:System.Xaml.XamlType.IsUnknown" /> und kann kein Objekt erstellen.  
  
- oder -  
Versucht, ein Startobjekt in einen ungültigen Bereich zu schreiben.</exception>
        <exception cref="T:System.Xaml.XamlParseException">Versucht, ein Stammobjekt zu schreiben, wenn bereits ein Stammobjekt in den Einstellungen bereitgestellt wurde.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlType" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Wenn der aktuelle Bereich innerhalb einer Auflistung, Wörterbuch oder ein Array ist, sollte die neue Instanz der Auflistung, Wörterbuch oder Array hinzugefügt werden, mithilfe der <see langword="Add" /> Methode des entsprechenden Typs. Andernfalls sollte der Member der neuen Instanz zugewiesen werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der zu schreibende Wert.</param>
        <summary>Schreibt einen Wert in den aktuellen Memberbereich. Wenn sich der aktuelle Bereich in einer Auflistung, einem Wörterbuch oder einem Arrayobjekt befindet, sollte der Wert der Auflistung, dem Wörterbuch oder dem Array hinzugefügt werden.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Versucht, einen Wert in einen ungültigen Bereich zu schreiben.</exception>
      </Docs>
    </Member>
  </Members>
</Type>