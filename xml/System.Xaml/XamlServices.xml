<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e1f1d48af20e3873a75e26dc3e1e7ba760293b7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720594" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Dienste auf höherer Ebene (statische Methoden) für die allgemeinen XAML-Aufgaben Lesen von XAML und Schreiben eines Objektdiagramms bzw. Lesen von Objektdiagrammen und Schreiben von XAML-Dateiausgaben zu Serialisierungszwecken bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modi des der <xref:System.Xaml.XamlServices> Klasse, die verwendet werden, die am häufigsten verwendeten XAML-Datei lesen und Schreiben von Szenarien zum Erstellen von Instanzen des XAML-Readern und XAML-Writer basieren. Diese Reader und Writer sind spezielle jedoch interne Implementierungen der öffentlichen Klassen, z. B. <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>, und <xref:System.Xaml.XamlObjectWriter>. Mit <xref:System.Xaml.XamlServices> in den meisten Szenarien können Sie basieren auf den internen standardimplementierungen, die Ergebnisse zu erhalten, die Sie möchten. Für spezialisierter Szenarien möglicherweise Sie Readern und Writern selbst definieren, und übergeben Sie sie als Argumente für Überladungen der der <xref:System.Xaml.XamlServices> Methoden.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> nicht empfohlene Verwendung von XAML-Lesen oder XAML-schreibt-API festgelegt werden, wenn Sie WPF-Typen verarbeiten oder Typen auf Grundlage von WPF. Für [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Verwendung "," Verwendung <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> zum Lesen oder Laden von XAML (oder BAML) und <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> für das Rückschreiben von XAML. Diese Klassen verwenden .NET Framework-XAML-Dienste-APIs und die XAML-Readern und XAML-Writern intern in ihrer Implementierung. Allerdings bieten auch Unterstützung und spezielle XAML-Schemakontext für WPF-spezifische Konzepte, wie z. B. Optimierungen für Abhängigkeitseigenschaften und bekannte WPF-Typen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die Quelle für einen XAML-Reader und schreibt dessen Ausgabe als Objektdiagramm.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Der Datenstrom, der als Eingabe geladen werden soll.</param>
        <summary>Lädt eine <see cref="T:System.IO.Stream" />-Quelle für einen XAML-Reader und schreibt dessen Ausgabe als Objektdiagramm.</summary>
        <returns>Das Objektdiagramm, das als Ausgabe geschrieben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Andere Signaturen für die <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> Methode geben Sie verschiedene Arten von Eingaben für die XAML-Quelle. Die <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> interne Implementierung erstellt zunächst eine <xref:System.Xml.XmlReader> durch Aufrufen von <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> und erstellt dann eine neue Instanz der ein spezieller <xref:System.Xaml.XamlReader> , die die Eingabe verarbeitet.  
  
 In der Reihenfolge für die <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> aufrufen, um ein Objektdiagramm erfolgreich zu erstellen, muss Folgendes zutreffen:  
  
-   Die Quelle ist wohlgeformt und gültiges XML.  
  
-   Die Quelle ist gültiges XAML auf Sprachebene.  
  
-   Die Verwendung von XAML-Typen, die in der Quelle angegebenen Identitätsspaltenwerte muss-XAML-Unterstützungstypen in die entsprechende XAML-Namespaces auflösen. XAML-Typen für WPF-Namespaces können z. B. eine WPF-XAML-Namespace entsprechend den Angaben in der XAML beheben; die WPF-Assemblys müssen im Projekt enthalten oder zur Laufzeit verfügbar sein; Und so weiter.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> ist nicht die empfohlene Verwendung von XAML-Lesen oder XAML-API schreiben festgelegt wird, bei der Verarbeitung [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Typen oder Typen, die basierend auf [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Für [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Verwendung "," Verwendung <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> zum Lesen oder Laden von XAML; und <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> für das Rückschreiben von XAML. Diese Klassen verwenden <xref:System.Xaml> APIs intern in ihrer Implementierung; allerdings auch angebotenen Unterstützung für WPF-spezifische Konzepte, die die Art der XAML-Lesen und schreiben, z. B. Optimierungen für Abhängigkeitseigenschaften auswirken.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">Der <see cref="T:System.IO.TextReader" />, der als Basis für den erstellten <see cref="T:System.Xml.XmlReader" /> verwendet werden soll.</param>
        <summary>Erstellt einen XAML-Reader aus einem <see cref="T:System.IO.TextReader" /> und gibt ein Objektdiagramm zurück.</summary>
        <returns>Das Objektdiagramm, das zurückgegeben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Zurückgeben des Objektdiagramms der `textReader` Eingabe mithilfe der entsprechenden Eingabe erstellt werden soll. Beispielsweise sollten sie übergeben ein <xref:System.IO.StringReader> , die erstellt wird, verwenden eine gültige XAML-als-Zeichenfolgeneingabe für die <xref:System.IO.StringReader.%23ctor%28System.String%29> Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textReader" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Dateiname, der geladen und als Quelle verwendet werden soll.</param>
        <summary>Lädt eine <see cref="T:System.IO.Stream" />-Quelle für einen XAML-Reader und gibt ein Objektdiagramm zurück.</summary>
        <returns>Das Objektdiagramm, das zurückgegeben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Andere Signaturen für die <xref:System.Xaml.XamlServices.Load%2A> Methode geben Sie verschiedene Arten von Eingaben für die XAML-Quelle. Die <xref:System.Xaml.XamlServices.Load%2A> interne Implementierung erstellt zunächst eine <xref:System.Xml.XmlReader> durch Aufrufen von <xref:System.Xml.XmlReader.Create%28System.String%29> und erstellt dann eine neue Instanz der ein spezieller <xref:System.Xaml.XamlReader> , die die Eingabe verarbeitet.  
  
 In der Reihenfolge für die <xref:System.Xaml.XamlServices.Load%28System.String%29> aufrufen, um ein Objektdiagramm erfolgreich zu erstellen, muss Folgendes zutreffen:  
  
-   Die Quelle ist wohlgeformt und gültiges XML.  
  
-   Die Quelle ist gültiges XAML auf Sprachebene.  
  
-   Die Verwendung von XAML-Typen, die in der Quelle angegebenen Identitätsspaltenwerte muss-XAML-Unterstützungstypen in die entsprechende XAML-Namespaces auflösen. XAML-Typen für WPF-Namespaces können z. B. eine WPF-XAML-Namespace entsprechend den Angaben in der XAML beheben; die WPF-Assemblys im Projekt enthalten sein müssen oder zur Laufzeit verfügbar sein. Und so weiter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Die XAML-Readerimplementierung, die als Reader für diesen <see langword="Load" />-Vorgang verwendet werden soll.</param>
        <summary>Lädt eine bestimmte XAML-Readerimplementierung und gibt ein Objektdiagramm zurück.</summary>
        <returns>Das Objektdiagramm, das zurückgegeben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sollten diese Signatur in der Regel nur in den folgenden Fällen verwenden:  
  
-   Sie definiert eine eigene Implementierung von einem <xref:System.Xaml.XamlReader>.  
  
-   Einstellungen für die Angabe einer <xref:System.Xaml.XamlReader> , die von den Standardeinstellungen abweichen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlReader" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Die <see cref="T:System.Xml.XmlReader" />-Implementierung, die als Reader für den <see langword="Load" />-Vorgang verwendet werden soll.</param>
        <summary>Lädt eine bestimmte XML-Readerimplementierung und gibt ein Objektdiagramm zurück.</summary>
        <returns>Das Ausgabeobjektdiagramm.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sollten in der Regel verwenden Sie diese Signatur nur, wenn Sie eine eigene Implementierung von definiert eine <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlReader" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml">Die zu analysierende XAML-Zeichenfolgeneingabe.</param>
        <summary>Liest XAML als Zeichenfolgenausgabe und gibt ein Objektdiagramm zurück.</summary>
        <returns>Das Objektdiagramm, das zurückgegeben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Reihenfolge für die <xref:System.Xaml.XamlServices.Parse%2A> aufrufen, um die eine Objektstruktur erfolgreich zu erstellen, muss Folgendes zutreffen:  
  
-   Die `xaml` Eingabe wohlgeformt ist und gültiges XML.  
  
-   Die `xaml` Eingabe ist ungültig XAML auf Sprachebene.  
  
-   Die XAML-Typen, die im angegebenen die `xaml` Eingabe muss in Unterstützungstypen in die entsprechende XAML-Namespaces aufgelöst werden. XAML-Typen für ein WPF-Namespace können z. B. eine WPF-XAML-Namespace entsprechend den Angaben in der XAML beheben; die WPF-Assemblys im Projekt enthalten sein müssen oder zur Laufzeit verfügbar sein. Und so weiter.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> ist nicht die empfohlene Verwendung von XAML-Lesen oder XAML-API schreiben festgelegt wird, bei der Verarbeitung [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Typen oder Typen, die basierend auf [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Für [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Verwendung "," Verwendung <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> zum Lesen oder Laden von XAML-Code und <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> für das Rückschreiben von XAML. Diese Klassen verwenden <xref:System.Xaml> APIs intern in ihrer Implementierung; allerdings auch angebotenen Unterstützung für WPF-spezifische Konzepte, die die Art der XAML-Lesen und schreiben, z. B. Optimierungen für Abhängigkeitseigenschaften auswirken.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xaml" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und anschließend zu einem Ausgabeformat für die Serialisierung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
        <summary>Verarbeitet eine bereitgestellte Objektstruktur in einer XAML-Knotendarstellung und gibt eine Zeichenfolgendarstellung der Ausgabe-XAML zurück.</summary>
        <returns>Die XAML-Markupausgabe als Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ausgabe aus dieser Methode ist die `ToString` Ergebnis ein <xref:System.Xml.XmlWriter> , das vom Aufruf Methode erstellt wird. Dass <xref:System.Xml.XmlWriter> wird mit den folgenden Einstellungen erstellt: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> ist `true`; und <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> ist `true`.  
  
 Die zurückgegebene Zeichenfolge kann geladen werden, als gültigen XML-Code über die <xref:System.Xml.XmlReader.Create%2A> Methode, wenn Sie die Zeichenfolge in einen Stream oder in einen genauer gesagt dedizierte Reader für XAML verarbeitet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">Der Zieldatenstrom.</param>
        <param name="instance">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
        <summary>Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und anschließend zu einem Ausgabedatenstrom für die Serialisierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> ist nicht die empfohlene Verwendung von XAML-Lesen oder XAML-API schreiben festgelegt wird, bei der Verarbeitung [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Typen oder Typen, die basierend auf [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Für [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Verwendung "," Verwendung <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> zum Lesen oder Laden von XAML; und <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> für das Rückschreiben von XAML. Diese Klassen verwenden <xref:System.Xaml> APIs intern in ihrer Implementierung; allerdings auch angebotenen Unterstützung für WPF-spezifische Konzepte, die die Art der XAML-Lesen und schreiben, z. B. Optimierungen für Abhängigkeitseigenschaften auswirken.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.IO.TextWriter" />, von dem die Ausgabe geschrieben wird.</param>
        <param name="instance">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
        <summary>Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und anschließend zu einer Ausgabe, die der bereitgestellten <see cref="T:System.IO.TextWriter" />-Klasse zugeordnet wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">Der Name und Speicherort der Datei, in die die Ausgabe geschrieben werden soll.</param>
        <param name="instance">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
        <summary>Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und schreibt sie anschließend am angegebenen Speicherort in eine Ausgabedatei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `fileName` Parameterwert dient als die `outputFileName` Eingabe für einen Aufruf von <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, erstellt eine <xref:System.Xml.XmlWriter> als Teil des Methodenaufrufs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Die zu verwendende <see cref="T:System.Xaml.XamlWriter" />-Implementierung.</param>
        <param name="instance">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
        <summary>Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und schreibt sie anschließend in einen bereitgestellten XAML-Writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sollten diese Signatur in der Regel nur in den folgenden Fällen verwenden:  
  
-   Sie definiert eine eigene Implementierung von einem <xref:System.Xaml.XamlWriter>.  
  
-   Einstellungen für die Angabe der <xref:System.Xaml.XamlWriter> , die von den Standardeinstellungen abweichen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Die zu verwendende <see cref="T:System.Xml.XmlWriter" />-Implementierung.</param>
        <param name="instance">Das Stammverzeichnis des zu verarbeitenden Objektdiagramms.</param>
        <summary>Verarbeitet ein bereitgestelltes Objektdiagramm zu einer XAML-Knotendarstellung und schreibt sie anschließend in die bereitgestellte <see cref="T:System.Xml.XmlWriter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" />-Eingabe ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verbindet ein <see cref="T:System.Xaml.XamlReader" />-Element und ein <see cref="T:System.Xaml.XamlWriter" />-Element, um einen allgemeinen XAML-Knotengruppenvermittler zu verwenden. Transformiert potenziell den Inhalt, abhängig davon, welche Typen von Readern und Writern bereitgestellt wurden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Die zu verwendende <see cref="T:System.Xaml.XamlReader" />-Implementierung.</param>
        <param name="xamlWriter">Der zu verwendende <see cref="T:System.Xaml.XamlWriter" />.</param>
        <summary>Verbindet ein <see cref="T:System.Xaml.XamlReader" />-Element und ein <see cref="T:System.Xaml.XamlWriter" />-Element, um einen allgemeinen XAML-Knotengruppenvermittler zu verwenden. Transformiert potenziell den Inhalt, abhängig davon, welche Typen von Readern und Writern bereitgestellt wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist ein Wrapper um <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, wobei `closeWriter` angegeben ist, als `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlReader" />- oder <paramref name="xamlWriter" />-Eingabe ist <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">Der XAML-Schemakontext passt nicht zwischen die bereitgestellten <paramref name="xamlReader" /> und <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Die zu verwendende <see cref="T:System.Xaml.XamlReader" />-Implementierung.</param>
        <param name="xamlWriter">Der zu verwendende <see cref="T:System.Xaml.XamlWriter" />.</param>
        <param name="closeWriter">
          <see langword="true" />, um den Writer zu schließen, nachdem der Aufruf abgeschlossen wurde, <see langword="false" />, um den Writer an der letzten geschriebenen Position in aktivem Zustand zu belassen.</param>
        <summary>Verbindet ein <see cref="T:System.Xaml.XamlReader" />-Element und ein <see cref="T:System.Xaml.XamlWriter" />-Element, um einen allgemeinen XAML-Knotengruppenvermittler zu verwenden. Transformiert potenziell den Inhalt, abhängig davon, welche Typen von Readern und Writern bereitgestellt wurden. Stellt einen Parameter bereit, mit dem angegeben wird, ob der Writer nach Abschluss des Aufrufs geschlossen werden soll.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xamlReader" />- oder <paramref name="xamlWriter" />-Eingabe ist <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">Der XAML-Schemakontext passt nicht zwischen die bereitgestellten <paramref name="xamlReader" /> und <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>