<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6562211350b2243064b85af76256b7c16e3b651" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444442" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="18d0d-101">Stellt den XAML-Typsystembezeichner für einen Member bereit, wenn der Member auch eine XAML-Direktive ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18d0d-101">Provides the XAML type system identifier for a member if the member is also a XAML directive.</span>
      </span>
      <span data-ttu-id="18d0d-102">XAML-Reader und XAML-Writer verwenden während Verarbeitung von Memberknoten den <see cref="T:System.Xaml.XamlDirective" />-Bezeichner.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18d0d-102">XAML readers and XAML writers use the <see cref="T:System.Xaml.XamlDirective" /> identifier during processing of member nodes.</span>
      </span>
      <span data-ttu-id="18d0d-103">Der Bezeichner wird verwendet, wenn sich der XAML-Reader in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" /> befindet und <see cref="P:System.Xaml.XamlMember.IsDirective" /> gleich <see langword="true" /> ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18d0d-103">The identifier is used when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" /> and <see cref="P:System.Xaml.XamlMember.IsDirective" /> is <see langword="true" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-104"><xref:System.Xaml.XamlDirective> erwartete Werte bietet für die Verwendung von XAML-Typsystem, wenn das Element eine XAML-Direktive ist.</span><span class="sxs-lookup"><span data-stu-id="18d0d-104"><xref:System.Xaml.XamlDirective> provides expected values for the XAML type system when the member is a XAML directive.</span></span> <span data-ttu-id="18d0d-105">Definitionsgemäß verfügt eine XAML-Direktive, die stets die gleichen Ergebnisse für eine Teilmenge der Merkmale der <xref:System.Xaml.XamlMember> Eigenschaften und die gleichen Systeminformationen für die Verwendung von XAML-Typ wird für alle möglichen XAML-Direktiven gemeldet.</span><span class="sxs-lookup"><span data-stu-id="18d0d-105">By definition, a XAML directive has characteristics that always return the same results for a subset of the <xref:System.Xaml.XamlMember> properties, and the same XAML type system information is reported for all possible XAML directives.</span></span> <span data-ttu-id="18d0d-106">Die Berichterstattung für die Verwendung von XAML-Typ den Systemmerkmalen, die spezifisch für Direktiven sind erfolgt durch interne Verhalten oder außer Kraft von <xref:System.Xaml.XamlMember> `Lookup*` virtuelle Member in der <xref:System.Xaml.XamlDirective> Klasse.</span><span class="sxs-lookup"><span data-stu-id="18d0d-106">The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <xref:System.Xaml.XamlMember> `Lookup*` virtual members in the <xref:System.Xaml.XamlDirective> class.</span></span>  
  
 <span data-ttu-id="18d0d-107">Die folgende Liste zeigt die zurückgegebenen Ergebnisse einer XAML-Direktive für <xref:System.Xaml.XamlMember> Wenn das Element ist tatsächlich eine <xref:System.Xaml.XamlDirective>:</span><span class="sxs-lookup"><span data-stu-id="18d0d-107">The following list shows the returned results of a XAML directive for <xref:System.Xaml.XamlMember> when the member is actually a <xref:System.Xaml.XamlDirective>:</span></span>  
  
-   <span data-ttu-id="18d0d-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> ist immer `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="18d0d-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> ist immer `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="18d0d-110"><xref:System.Xaml.XamlMember.DependsOn%2A> ist immer `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-110"><xref:System.Xaml.XamlMember.DependsOn%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="18d0d-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> ist immer `false`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="18d0d-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> ist immer `false`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="18d0d-113"><xref:System.Xaml.XamlMember.IsDirective%2A> ist immer `true`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-113"><xref:System.Xaml.XamlMember.IsDirective%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="18d0d-114"><xref:System.Xaml.XamlMember.IsEvent%2A> ist immer `false`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-114"><xref:System.Xaml.XamlMember.IsEvent%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="18d0d-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> ist immer `false`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="18d0d-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> ist immer `true`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="18d0d-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> ist immer `true`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> is always `true`.</span></span>  
  
 <span data-ttu-id="18d0d-118">Darüber hinaus die interne Unterstützung für <xref:System.Xaml.XamlMember.DeclaringType%2A> nicht festgelegt und gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-118">Also, the internal backing for <xref:System.Xaml.XamlMember.DeclaringType%2A> remains unset and returns `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="18d0d-119"><xref:System.Xaml.XamlDirective> ist eine <xref:System.Xaml.XamlMember> Unterklasse.</span><span class="sxs-lookup"><span data-stu-id="18d0d-119"><xref:System.Xaml.XamlDirective> is a <xref:System.Xaml.XamlMember> subclass.</span></span> <span data-ttu-id="18d0d-120">Wie bei <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> sicherheitsüberlegungen hinsichtlich wie XAML-Typsystem Access-Berichte verfügt.</span><span class="sxs-lookup"><span data-stu-id="18d0d-120">As with <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> has security considerations regarding how the XAML type system reports access.</span></span> <span data-ttu-id="18d0d-121">Siehe <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-121">See <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-122">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-122">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="18d0d-123">Der primäre XAML-Namespace, in dem die <see cref="T:System.Xaml.XamlDirective" />-Klasse vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-123">The primary XAML namespace where this <see cref="T:System.Xaml.XamlDirective" /> can exist.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="18d0d-124">Der kennzeichnende Name der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-124">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d0d-125">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse und gibt Werte für einen Namen und einen einzelnen XAML-Namespace an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-125">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for a name and a single XAML namespace.</span>
          </span>
          <span data-ttu-id="18d0d-126">Verwenden Sie diese Signatur nur, wenn Sie möchten oder erwarten, dass von <see cref="P:System.Xaml.XamlMember.IsUnknown" /> für die Direktive <see langword="true" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-126">Use this signature only when you want or expect <see cref="P:System.Xaml.XamlMember.IsUnknown" /> to report <see langword="true" /> for the directive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="18d0d-127">Diese Signatur des Konstruktors generiert immer einen Bezeichner für die Richtlinie, auf dem <xref:System.Xaml.XamlMember.IsUnknown%2A> Berichte `true` für die XAML-Typsystem.</span><span class="sxs-lookup"><span data-stu-id="18d0d-127">This signature of the constructor always generates an identifier for the directive where <xref:System.Xaml.XamlMember.IsUnknown%2A> reports `true` for the XAML type system.</span></span> <span data-ttu-id="18d0d-128">Wenn die erforderlichen Informationen verfügbar ist (der Unterstützungstyp und ein Informationselement des Text-Syntax für die Konvertierung) und Sie möchten einen Bezeichner, der Anwenden der Richtlinie, verwenden, kann die <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> Konstruktorsignatur stattdessen.</span><span class="sxs-lookup"><span data-stu-id="18d0d-128">If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> constructor signature instead.</span></span>  
  
 <span data-ttu-id="18d0d-129">Wenn Sie die folgende Signatur verwenden die <xref:System.Xaml.XamlDirective.AllowedLocation%2A> Wert für die Instanz <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; und die <xref:System.Xaml.XamlMember.Type%2A> Wert und <xref:System.Xaml.XamlMember.TypeConverter%2A> Wert sind beide `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-129">If you use this signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; and the <xref:System.Xaml.XamlMember.Type%2A> value and <xref:System.Xaml.XamlMember.TypeConverter%2A> value are both `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces">
          <span data-ttu-id="18d0d-130">Ein Satz von XAML-Namespaces, für die diese <see cref="T:System.Xaml.XamlDirective" /> vorhanden sein kann, übergeben als aufzählbarer Satz der Bezeichnerzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-130">A set of XAML namespaces where this <see cref="T:System.Xaml.XamlDirective" /> can exist, passed as an enumerable set of the identifier strings.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="18d0d-131">Der kennzeichnende Name der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-131">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <param name="xamlType">
          <span data-ttu-id="18d0d-132">Der XAML-Typ, der die <see cref="T:System.Xaml.XamlDirective" />-Klasse unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-132">The XAML type that backs the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <param name="typeConverter">
          <span data-ttu-id="18d0d-133">Der Typkonverter, der von dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse für die Textsyntaxkonvertierung verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-133">The type converter that this <see cref="T:System.Xaml.XamlDirective" /> uses for text syntax conversion.</span>
          </span>
        </param>
        <param name="allowedLocation">
          <span data-ttu-id="18d0d-134">Ein Wert der <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />-Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-134">A value of the <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18d0d-135">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse und gibt Werte für jeden fallbezogenen Wert einer <see cref="T:System.Xaml.XamlDirective" />-Klasse an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-135">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for each per-case value of a <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-136">Verwenden Sie diesen Konstruktor zum Generieren einer <xref:System.Xaml.XamlDirective> , die gibt keine Auskunft über <xref:System.Xaml.XamlMember.IsUnknown%2A> als `true`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-136">You must use this constructor to generate a <xref:System.Xaml.XamlDirective> that does not report <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18d0d-137">Der <paramref name="xamlType" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-137">The <paramref name="xamlType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-138">Ruft einen Wert ab, durch den die XAML-Knotentypen angegeben werden, in denen die Direktive angegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-138">Gets a value that specifies the XAML node types where the directive can be specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18d0d-139">Ein Wert aus der Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-139">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="18d0d-140">Der Standardwert ist der Enumerationsstandard (<see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-140">The default is the enumeration default, which is <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-141">Sie können diesen Wert festlegen, der <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> Konstruktorsignatur.</span><span class="sxs-lookup"><span data-stu-id="18d0d-141">You can set this value in the <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> constructor signature.</span></span> <span data-ttu-id="18d0d-142">Wenn Sie mit Erstellen der <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> die Signatur des Konstruktors, der <xref:System.Xaml.XamlDirective.AllowedLocation%2A> Wert für die Instanz <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-142">If you construct by using the <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> constructor signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span></span> <span data-ttu-id="18d0d-143">Die Instanz jedoch immer meldet <xref:System.Xaml.XamlMember.IsUnknown%2A> als `true`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-143">However, the instance always reports <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span> <span data-ttu-id="18d0d-144">Dieses Verhalten wirkt sich in der Regel auf versuchen, Schreiben Objekt Diagramme bereit und wirkt sich auch auf anderen praktischen Verwendungsmöglichkeiten von einem <xref:System.Xaml.XamlMember> Wert.</span><span class="sxs-lookup"><span data-stu-id="18d0d-144">This behavior typically affects attempts to write object graphs and also affects other practical uses of a <xref:System.Xaml.XamlMember> value.</span></span>  
  
 <span data-ttu-id="18d0d-145">Sie in der Regel würde nicht erstellen Sie eine XAML-Direktive Groß-/Kleinschreibung, in denen <xref:System.Xaml.XamlDirective.AllowedLocation%2A> ist <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-145">You typically would not construct a XAML directive case where <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-146">Gibt den Hashcode für dieses Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-146">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-147">Ein ganzzahliger Hashcode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-147">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-148">Gibt eine Liste von XAML-Namespaces zurück, in dem dieser XAML-Member vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-148">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-149">Eine Liste von XAML-Namespacebezeichnern als Zeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-149">A list of XAML namespace identifiers, as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-150">Die Verwendung von XAML-Namespacebezeichner sind Zeichenfolgen, die in der Regel in Form einer Zeichenfolge Uniform Resource Identifier (URI) entsprechend den üblichen Konventionen für XAML- und XML-Namespaces angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="18d0d-150">The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</span></span> <span data-ttu-id="18d0d-151">Wenn die Liste mehrere Elemente enthält, das erste Element im Satz wird in der Regel der relevanten primäre Verwendung von XAML-Namespace für Verarbeitungszwecke und anderen Elemente sind Alternativen.</span><span class="sxs-lookup"><span data-stu-id="18d0d-151">If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</span></span> <span data-ttu-id="18d0d-152"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> mit dieser Anordnung verwendet.</span><span class="sxs-lookup"><span data-stu-id="18d0d-152"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> relies on this ordering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-153">Gibt eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-153">Returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
          <span data-ttu-id="18d0d-154">Diese Implementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-154">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-155">Gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-155">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-156">Da eine XAML-Direktive benutzerdefinierte Attribute enthalten kann, gibt diese Implementierung immer `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-156">Because a XAML directive cannot have custom attributes, this implementation always returns `null`.</span></span> <span data-ttu-id="18d0d-157"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-157"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-158">Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das während des verzögerten Ladens von in XAML deklarierten Objekten verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-158">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used during deferred loading of XAML-declared objects.</span>
          </span>
          <span data-ttu-id="18d0d-159">Diese Implementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-159">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-160">Gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-160">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-161">Da eine Direktive Laden verzögert haben kann, gibt diese Implementierung immer `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-161">Because a directive cannot have deferred loading, this implementation always returns `null`.</span></span> <span data-ttu-id="18d0d-162"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-162"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-163">Gibt eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-163">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="18d0d-164">Von der Liste werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-164">The list reports the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="18d0d-165">Diese Implementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-165">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-166">Gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-166">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-167">Da eine XAML-Direktive Initialisierungsreihenfolge aufweisen kann, gibt diese Implementierung immer `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-167">Because a XAML directive cannot have initialization order, this implementation always returns `null`.</span></span> <span data-ttu-id="18d0d-168"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-168"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-169">Gibt den <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> zurück, der einer <see cref="T:System.Xaml.XamlDirective" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-169">Returns the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with a <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-170">Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-170">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-171">Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-171">This method may be invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="18d0d-172">Diese Implementierung gibt eine interne statische <xref:System.Xaml.Schema.XamlMemberInvoker> Wert, der in das XAML-Typsystem für Direktiven spezifisch ist.</span><span class="sxs-lookup"><span data-stu-id="18d0d-172">This implementation returns an internal static <xref:System.Xaml.Schema.XamlMemberInvoker> value that is specific to directives in the XAML type system.</span></span> <span data-ttu-id="18d0d-173"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-173"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-174">Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-174">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-175">Gibt immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-175">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-176">Da eine XAML-Direktive ein Umgebungstyp sein kann, gibt diese Implementierung immer `false`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-176">Because a XAML directive cannot be an ambient type, this implementation always returns `false`.</span></span> <span data-ttu-id="18d0d-177"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-177"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-178">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-178">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-179">Gibt immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-179">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-180"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-180"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-181">Gibt zurück, ob die <see cref="T:System.Xaml.XamlDirective" />-Klasse eine beabsichtigte schreibgeschützte Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-181">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-182">Gibt immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-182">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-183">Definitionsgemäß können Direktiven festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="18d0d-183">By definition, directives are settable.</span></span> <span data-ttu-id="18d0d-184"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-184"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-185">Gibt zurück, ob das <see cref="T:System.Xaml.XamlDirective" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="get" />-Accessor verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-185">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-186">Gibt immer <see langword="true" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-186">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-187"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-187"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-188">Gibt zurück, ob diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein Element darstellt, das vom Sicherungssystem für Typ- und Elementauflösung nicht aufgelöst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-188">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-189">
            <see langword="true" />, wenn diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein nicht auflösbares Element darstellt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-189">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlDirective" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-190">Die <xref:System.Xaml.XamlDirective> Implementierung nur Basisklasse aufruft und mehr wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="18d0d-190">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="18d0d-191">Die grundlegende Implementierung gibt die Ergebnisse zurück, in der folgenden Reihenfolge: die Ergebnisse basieren auf internen Reflektion; oder die Ergebnisse basieren auf die Überprüfung auf einen null-Wert von der <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-191">The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="18d0d-192">Die <xref:System.Xaml.XamlDirective> Implementierung versiegelt dieses virtuellen Member; daher alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-192">The <xref:System.Xaml.XamlDirective> implementation seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-193">Gibt zurück, ob die <see cref="T:System.Xaml.XamlDirective" />-Klasse eine beabsichtigte lesegeschützte Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-193">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended write-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-194">Gibt immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-194">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-195"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-195"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-196">Gibt zurück, ob das <see cref="T:System.Xaml.XamlDirective" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="set" />-Accessor verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-196">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-197">Gibt immer <see langword="true" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-197">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-198"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-198"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-199">Gibt die <see cref="T:System.Xaml.XamlType" />-Klasse des Typs zurück, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-199">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
          <span data-ttu-id="18d0d-200">Diese Implementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-200">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-201">Gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-201">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-202">Zieltypen sind nicht relevant für Direktiven; aus diesem Grund diese Implementierung gibt immer `null`.</span><span class="sxs-lookup"><span data-stu-id="18d0d-202">Target types are not relevant for directives; therefore, this implementation always returns `null`.</span></span> <span data-ttu-id="18d0d-203"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-203"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-204">Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-204">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-205">Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-205">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-206">Die <xref:System.Xaml.XamlDirective> Implementierung nur Basisklasse aufruft und mehr wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="18d0d-206">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="18d0d-207">Die grundlegende Implementierung gibt Ergebnisse basiert entweder auf interne Reflektion oder die Überprüfung auf einen null-Wert von <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, Verarbeitung in dieser Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="18d0d-207">The base implementation returns results based either on internal reflection, or checking for a null value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span> <span data-ttu-id="18d0d-208"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-208"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 <span data-ttu-id="18d0d-209">Finden Sie unter "Hinweise" in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> Weitere Informationen darüber, welche Informationen <xref:System.Xaml.XamlMember.Type%2A> führt.</span><span class="sxs-lookup"><span data-stu-id="18d0d-209">See Remarks in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> for more information about what information <xref:System.Xaml.XamlMember.Type%2A> carries.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-210">Gibt eine Typkonverterimplementierung zurück, die dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-210">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-211">Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-211">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance that has <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-212">Die <xref:System.Xaml.XamlDirective> Implementierung nur Basisklasse aufruft und mehr wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="18d0d-212">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="18d0d-213">Siehe <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-213">See <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="18d0d-214"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-214"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-215">Gibt einen <see langword="get" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-215">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="18d0d-216">Diese Implementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-216">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-217">Gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-217">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-218"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-218"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-219">Gibt eine <see cref="T:System.Reflection.MemberInfo" />-Klasse für CLR-Reflektion zurück, die dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-219">Returns a CLR reflection <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="18d0d-220">Diese Implementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-220">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-221">Gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-221">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-222"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-222"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-223">Gibt einen <see langword="set" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-223">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="18d0d-224">Diese Implementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-224">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-225">Gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-225">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-226"><xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member; aus diesem Grund alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven verwenden, dieses Verhalten.</span><span class="sxs-lookup"><span data-stu-id="18d0d-226"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18d0d-227">Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlDirective" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-227">Returns a string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18d0d-228">Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlDirective" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18d0d-228">A string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18d0d-229">Wenn XAML-Namespaceinformationen verfügbar ist, gibt diese Implementierung eine Zeichenfolgenkombination aus <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> und <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-229">If XAML namespace information is available, this implementation returns a string combination of <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> and <xref:System.Xaml.XamlMember.Name%2A>.</span></span> <span data-ttu-id="18d0d-230">Wenn XAML-Namespaceinformationen nicht verfügbar ist, gibt diese Implementierung <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="18d0d-230">If XAML namespace information is unavailable, this implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>