<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39ceed92ff517ac9ff4dbcd201588d055d34a687" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86606621" /></Metadata><TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt den XAML-Typsystembezeichner für einen Member bereit, wenn der Member auch eine XAML-Direktive ist. XAML-Reader und XAML-Writer verwenden während Verarbeitung von Memberknoten den <see cref="T:System.Xaml.XamlDirective" />-Bezeichner. Der Bezeichner wird verwendet, wenn sich der XAML-Reader in einem <see cref="F:System.Xaml.XamlNodeType.StartMember" /> befindet und <see cref="P:System.Xaml.XamlMember.IsDirective" /> gleich <see langword="true" /> ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> bietet erwartete Werte für das XAML-Typsystem, wenn der Member eine XAML-Direktive ist. Definitionsgemäß hat eine XAML-Direktive Merkmale, die für eine Teilmenge der Eigenschaften immer die gleichen Ergebnisse zurückgeben <xref:System.Xaml.XamlMember> , und die gleichen XAML-typsysteminformationen werden für alle möglichen XAML-Direktiven gemeldet. Die Berichterstellung von XAML-typsystemmerkmalen, die für-Direktiven spezifisch sind, wird durch das interne Verhalten oder durch über schreibungen von virtuellen Membern <xref:System.Xaml.XamlMember> `Lookup*` in der- <xref:System.Xaml.XamlDirective> Klasse erreicht.  
  
 Die folgende Liste zeigt die zurückgegebenen Ergebnisse einer XAML-Direktive für den Fall, dass <xref:System.Xaml.XamlMember> der Member tatsächlich eine ist <xref:System.Xaml.XamlDirective> :  
  
-   <xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> ist immer `null` .  
  
-   <xref:System.Xaml.XamlMember.DeferringLoader%2A> ist immer `null` .  
  
-   <xref:System.Xaml.XamlMember.DependsOn%2A> ist immer `null` .  
  
-   <xref:System.Xaml.XamlMember.IsAmbient%2A> ist immer `false` .  
  
-   <xref:System.Xaml.XamlMember.IsAttachable%2A> ist immer `false` .  
  
-   <xref:System.Xaml.XamlMember.IsDirective%2A> ist immer `true` .  
  
-   <xref:System.Xaml.XamlMember.IsEvent%2A> ist immer `false` .  
  
-   <xref:System.Xaml.XamlMember.IsReadOnly%2A> ist immer `false` .  
  
-   <xref:System.Xaml.XamlMember.IsReadPublic%2A> ist immer `true` .  
  
-   <xref:System.Xaml.XamlMember.IsWritePublic%2A> ist immer `true` .  
  
 Außerdem bleibt die interne Unterstützung für unverändert <xref:System.Xaml.XamlMember.DeclaringType%2A> und gibt zurück `null` .  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlDirective> ist eine <xref:System.Xaml.XamlMember>-Unterklasse. Wie bei <xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlDirective> bietet Sicherheitsüberlegungen hinsichtlich der Art und Weise, wie das XAML-Typsystem den Zugriff meldet. Siehe <xref:System.Xaml.XamlMember>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">Grundlagen zu XAML-Knotenstreamstrukturen und -konzepten</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">Der primäre XAML-Namespace, in dem die <see cref="T:System.Xaml.XamlDirective" />-Klasse vorhanden sein kann.</param>
        <param name="name">Der kennzeichnende Name der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse und gibt Werte für einen Namen und einen einzelnen XAML-Namespace an. Verwenden Sie diese Signatur nur, wenn Sie möchten oder erwarten, dass von <see cref="P:System.Xaml.XamlMember.IsUnknown" /> für die Direktive <see langword="true" /> angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Diese Signatur des Konstruktors generiert immer einen Bezeichner für die Direktive, bei der <xref:System.Xaml.XamlMember.IsUnknown%2A> Berichte `true` für das XAML-Typsystem erstellt werden. Wenn die erforderlichen Informationen verfügbar sind (der Unterstützungstyp und ein Text Syntax Informationselement für die Konvertierung) und Sie einen Bezeichner verwenden möchten, der die-Direktive anwenden kann, verwenden Sie <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> stattdessen die Konstruktorsignatur.  
  
 Wenn Sie diese Signatur verwenden, <xref:System.Xaml.XamlDirective.AllowedLocation%2A> ist der Wert für die-Instanz, <xref:System.Xaml.Schema.AllowedMemberLocations.Any> und der <xref:System.Xaml.XamlMember.Type%2A> Wert und der <xref:System.Xaml.XamlMember.TypeConverter%2A> Wert sind beide `null` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespaces As IEnumerable(Of String), name As String, xamlType As XamlType, typeConverter As XamlValueConverter(Of TypeConverter), allowedLocation As AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces">Ein Satz von XAML-Namespaces, für die diese <see cref="T:System.Xaml.XamlDirective" /> vorhanden sein kann, übergeben als aufzählbarer Satz der Bezeichnerzeichenfolgen.</param>
        <param name="name">Der kennzeichnende Name der <see cref="T:System.Xaml.XamlDirective" />-Klasse.</param>
        <param name="xamlType">Der XAML-Typ, der die <see cref="T:System.Xaml.XamlDirective" />-Klasse unterstützt.</param>
        <param name="typeConverter">Der Typkonverter, der von dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse für die Textsyntaxkonvertierung verwendet wird.</param>
        <param name="allowedLocation">Ein Wert der <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />-Enumeration.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlDirective" />-Klasse und gibt Werte für jeden fallbezogenen Wert einer <see cref="T:System.Xaml.XamlDirective" />-Klasse an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen diesen Konstruktor verwenden, um einen zu generieren <xref:System.Xaml.XamlDirective> , der nicht als gemeldet wird <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="xamlType" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, durch den die XAML-Knotentypen angegeben werden, in denen die Direktive angegeben werden kann.</summary>
        <value>Ein Wert aus der Enumeration. Der Standardwert ist der Enumerationsstandard (<see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diesen Wert in der <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> Konstruktorsignatur festlegen. Wenn Sie mit der <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> Konstruktorsignatur erstellen, ist der <xref:System.Xaml.XamlDirective.AllowedLocation%2A> Wert für die-Instanz <xref:System.Xaml.Schema.AllowedMemberLocations.Any> . Die-Instanz meldet jedoch immer <xref:System.Xaml.XamlMember.IsUnknown%2A> als `true` . Dieses Verhalten wirkt sich normalerweise auf Versuche zum Schreiben von Objekt Diagrammen aus und wirkt sich auch auf andere praktische Verwendungsmöglichkeiten eines <xref:System.Xaml.XamlMember> Werts aus.  
  
 In der Regel würden Sie keinen XAML-direktivenfall erstellen, wenn <xref:System.Xaml.XamlDirective.AllowedLocation%2A> ist <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für dieses Objekt zurück.</summary>
        <returns>Ein ganzzahliger Hashcode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Liste von XAML-Namespaces zurück, in dem dieser XAML-Member vorhanden sein kann.</summary>
        <returns>Eine Liste von XAML-Namespacebezeichnern als Zeichenfolgen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die XAML-Namespace Bezeichner sind Zeichen folgen, die in der Regel im Zeichen folgen Format Uniform Resource Identifier (URI) gemäß den üblichen Konventionen für XAML-und XML-Namespaces angezeigt werden. Wenn die Liste mehr als ein Element enthält, ist das erste Element im Satz in der Regel der relevante primäre XAML-Namespace für Verarbeitungszwecke, und die anderen Elemente sind Alternativen. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> basiert auf dieser Reihenfolge.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da eine XAML-Direktive keine benutzerdefinierten Attribute aufweisen kann, gibt diese Implementierung immer zurück `null` . <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das während des verzögerten Ladens von in XAML deklarierten Objekten verwendet wird. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da eine-Direktive kein verzögertes Laden aufweisen kann, gibt diese Implementierung immer zurück `null` . <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Liste von <see cref="T:System.Xaml.XamlMember" />-Objekten zurück. Von der Liste werden die Member gemeldet, in denen Abhängigkeitsbeziehungen für die Initialisierungsreihenfolge relativ zu diesem <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sind. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da eine XAML-Direktive keine Initialisierungs Reihenfolge aufweisen kann, gibt diese Implementierung immer zurück `null` . <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> zurück, der einer <see cref="T:System.Xaml.XamlDirective" /> zugeordnet ist.</summary>
        <returns>Die <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Informationen für dieses <see cref="T:System.Xaml.XamlMember" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann durch Aufrufe von aufgerufen werden <xref:System.Xaml.XamlMember.Invoker%2A> .  
  
 Diese Implementierung gibt einen internen statischen <xref:System.Xaml.Schema.XamlMemberInvoker> Wert zurück, der für Direktiven im XAML-Typsystem spezifisch ist. <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob das <see cref="T:System.Xaml.XamlMember" />-Objekt als Ambient-Eigenschaft gemeldet wird.</summary>
        <returns>Gibt immer <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da eine XAML-Direktive kein Ambient-Typ sein kann, gibt diese Implementierung immer zurück `false` . <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein Ereignis darstellt.</summary>
        <returns>Gibt immer <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob die <see cref="T:System.Xaml.XamlDirective" />-Klasse eine beabsichtigte schreibgeschützte Eigenschaft darstellt.</summary>
        <returns>Gibt immer <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definitionsgemäß sind Direktiven feststellbar. <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob das <see cref="T:System.Xaml.XamlDirective" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="get" />-Accessor verfügt.</summary>
        <returns>Gibt immer <see langword="true" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein Element darstellt, das vom Sicherungssystem für Typ- und Elementauflösung nicht aufgelöst werden kann.</summary>
        <returns><see langword="true" />, wenn diese <see cref="T:System.Xaml.XamlDirective" />-Klasse ein nicht auflösbares Element darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xaml.XamlDirective> -Implementierung ruft nur Base auf und führt nichts weiter aus. Die Basis Implementierung gibt die Ergebnisse in dieser Reihenfolge zurück: die Ergebnisse basieren auf der internen Reflektion. oder die Ergebnisse basieren auf dem Überprüfen auf einen NULL-Wert von <xref:System.Xaml.XamlMember.UnderlyingMember%2A> . Die <xref:System.Xaml.XamlDirective> -Implementierung versiegelt diesen virtuellen Member <xref:System.Xaml.XamlDirective> . Daher müssen alle Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob die <see cref="T:System.Xaml.XamlDirective" />-Klasse eine beabsichtigte lesegeschützte Eigenschaft darstellt.</summary>
        <returns>Gibt immer <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob das <see cref="T:System.Xaml.XamlDirective" />-Objekt eine Eigenschaft darstellt, die über einen öffentlichen <see langword="set" />-Accessor verfügt.</summary>
        <returns>Gibt immer <see langword="true" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die <see cref="T:System.Xaml.XamlType" />-Klasse des Typs zurück, in dem das <see cref="T:System.Xaml.XamlMember" />-Objekt vorhanden sein kann. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zieltypen sind für Direktiven nicht relevant. Daher gibt diese Implementierung immer zurück `null` . <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs zurück.</summary>
        <returns>Das <see cref="T:System.Xaml.XamlType" />-Objekt des vom Member verwendeten Typs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xaml.XamlDirective> -Implementierung ruft nur Base auf und führt nichts weiter aus. Die Basis Implementierung gibt Ergebnisse zurück, die entweder auf interner Reflektion basieren, oder auf einen NULL-Wert <xref:System.Xaml.XamlMember.UnderlyingMember%2A> , der in dieser Reihenfolge verarbeitet wird. <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 Weitere Informationen zu den von Ihnen verwendeten Informationen finden Sie unter Hinweise in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> <xref:System.Xaml.XamlMember.Type%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Typkonverterimplementierung zurück, die dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist.</summary>
        <returns>Eine <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Instanz mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung oder <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xaml.XamlDirective> -Implementierung ruft nur Base auf und führt nichts weiter aus. Siehe <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>. <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen <see langword="get" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Reflection.MemberInfo" />-Klasse für CLR-Reflektion zurück, die dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen <see langword="set" />-Accessor zurück, der dieser <see cref="T:System.Xaml.XamlDirective" />-Klasse zugeordnet ist. Diese Implementierung gibt immer <see langword="null" /> zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> versiegelt diesen virtuellen Member. Daher müssen alle <xref:System.Xaml.XamlDirective> Typen und alle vordefinierten XAML-Direktiven dieses Verhalten verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlDirective" /> zurück.</summary>
        <returns>Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlDirective" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn XAML-Namespace Informationen verfügbar sind, gibt diese Implementierung eine Zeichen folgen Kombination von <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> und zurück <xref:System.Xaml.XamlMember.Name%2A> . Wenn XAML-Namespace Informationen nicht verfügbar sind, gibt diese Implementierung zurück <xref:System.Xaml.XamlMember.Name%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
