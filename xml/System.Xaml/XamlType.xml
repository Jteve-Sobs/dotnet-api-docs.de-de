<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f660970c55af6a8e8be700e1df5ac2c266d1596" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52254547" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Meldet Informationen zu XAML-Typen als Teil des gesamten XAML-Systems, das in .NET Framework-XAML-Diensten implementiert wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viele APIs in der <xref:System.Xaml.XamlType> -Klasse enthalten Informationen zur XAML-Typen, die, in denen das Konzept, das sie melden sich auf bestimmte Bereiche der XAML-Spezifikation [MS-XAML] entspricht.  
  
 <xref:System.Xaml.XamlType> wird häufig in der .NET Framework XAML Services-API zum Melden von Informationen über einen XAML-Typ verwendet. <xref:System.Xaml.XamlType> Gibt die Informationen, die Sie kennen, über einen XAML-Typ für die Arbeit mit einer Instanz oder von einem XAML-Knotenstream oder eine ähnliche XAML-Darstellung auf seine Member zugreifen müssen. Die berichterstellung ist ähnlich wie die <xref:System.Type> Geben Sie in der CLR System zusammen mit Reflektionsklassen ein, z. B. <xref:System.Reflection.MemberInfo>, geben Sie Informationen zu einem CLR-Typ und dessen Verwendung.  
  
 Um das XAML-Typsystem erweitern, können Sie eine Ableitung von <xref:System.Xaml.XamlType>. Um dies effektiv zu tun, müssen Sie möglicherweise auch implementieren eine <xref:System.Xaml.Schema.XamlTypeInvoker>. Die <xref:System.Xaml.Schema.XamlTypeInvoker> ermöglicht das generalisierte XAML-Typsystem zum Arbeiten mit das Typensystem sichern, dass Sie als Teil des Verhaltens des Aufrufs angeben. Die spezifische benutzerdefinierte <xref:System.Xaml.Schema.XamlTypeInvoker> bietet eine Möglichkeit, die Abhängigkeiten von der CLR-Typsystems, reduziert werden, die den standardmäßig verwendeten <xref:System.Xaml.XamlType> Verhalten.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Das zugrunde liegende <see cref="T:System.Type" />-Objekt der CLR für den zu erstellenden XAML-Typ.</param>
        <param name="schemaContext">XAML-Schemakontext für XAML-Reader oder XAML-Writer.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage der zugrunde liegenden CLR-Typinformationen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder mehrere <paramref name="underlyingType" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name des zu erstellenden Typs.</param>
        <param name="typeArguments">Die Typargumente für einen <see cref="T:System.Xaml.XamlType" />, der einen generischen Typ darstellt. Kann <see langword="null" /> sein (dies ist häufig der Fall). Damit wird angegeben, dass der dargestellte Typ kein generischer Typ ist.</param>
        <param name="schemaContext">XAML-Schemakontext für XAML-Reader und XAML-Writer.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage eines Zeichenfolgennamens für den Typ.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein geschützter Konstruktor. Keine aktuelle Öffentliche abgeleiteten Klassen vorhanden, die diesen bestimmten Pfad für die Konstruktion zu verwenden. Als Nutzer des vorhandenen <xref:System.Xaml.XamlType>, müssen Sie die anderen Konstruktorsignaturen verwenden (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, oder <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) zum Initialisieren einer <xref:System.Xaml.XamlType> Objekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder mehrere <paramref name="typeName" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Der zugrunde liegende Typ für den zu erstellenden XAML-Typ.</param>
        <param name="schemaContext">Der XML-Schemakontext für den XAML-Reader.</param>
        <param name="invoker">Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung, die die Reflektionslaufzeitaufrufe der <see cref="T:System.Xaml.XamlType" />-Klasse verarbeitet.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage der zugrunde liegenden Typinformationen und einer <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder mehrere <paramref name="underlyingType" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">Der XAML-Namespace für den Typ (als Zeichenfolge).</param>
        <param name="unknownTypeName">Der Name des Typs im angegebenen <paramref name="unknownTypeNamespace" />-XAML-Namespace.</param>
        <param name="typeArguments">Die Typargumente für einen <see cref="T:System.Xaml.XamlType" />, der einen generischen Typ darstellt. Kann <see langword="null" /> sein (dies ist häufig der Fall). Damit wird angegeben, dass der dargestellte Typ kein generischer Typ ist.</param>
        <param name="schemaContext">XAML-Schemakontext für XAML-Reader oder XAML-Writer.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse auf Grundlage des XAML-Namespaces und eines Zeichenfolgennamens für den Typ. Dieser Konstruktor dient ausschließlich der Analyse und der XAML-Knoten-Aufzeichnung von Typverwendungen, von denen bekannt ist, dass sie keine Unterstützung im unterstützenden Typsystem und XAML-Schemakontext besitzen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor nur für "Unbekannt"-Typen, in denen ein XAML-Typ, der auf einen zugrunde liegenden Typsystem ordnet steht. Dieser Konstruktor kann kein Ergebnis erzeugt, in denen <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> ist `true`. Stattdessen meldet die Standardlogik von Reflector den zugrunde liegende Typ als <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>. Dieses Verhalten kann jedoch ändern, da die <xref:System.Xaml.XamlType.LookupIsUnknown%2A> außer Kraft setzen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder mehrere <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> oder <paramref name="schemaContext" /> sind <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine schreibgeschützte Auflistung der Typen ab, die als <see cref="P:System.Xaml.XamlType.ContentProperty" />-Wert für dieses <see cref="T:System.Xaml.XamlType" />-Objekt verwendbar sind.</summary>
        <value>Eine schreibgeschützte Auflistung möglicher Inhaltstypen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typen, die zugewiesen werden können ein bestimmten Inhaltstyp (z. B. ein Basistyp, der ein zulässiger Inhaltstyp zugewiesen werden) werden nicht als mehrere Typen zum Zweck der <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs ab. Die Ermittlung dieses Werts basiert auf dem zugrunde liegenden Typ des <see cref="T:System.Xaml.XamlType" />-Objekts und des Schemakontexts.</summary>
        <value>Das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupBaseType%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupBaseType%2A> für diesen Typ. Standardmäßig <xref:System.Xaml.XamlType.BaseType%2A> gibt eine interne-Konstante, steht ein <xref:System.Object> Wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> ist `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob die zu böswilligen Zwecken verwenden oder auf andere Weise) der gemeldeten Informationen über einen XAML-Typ zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit den Typinformationen System, von dem zugrunde liegenden CLR-Typ entspricht. Verwenden Sie für alle als sicherheitskritisch Überprüfungen von Zuweisungsvorgängen und Zugriff auf stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Der Typ, der anhand des aktuellen <see cref="T:System.Xaml.XamlType" /> überprüft werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob eine Instanz der <see cref="T:System.Xaml.XamlType" />-Klasse die angegebene <see cref="T:System.Xaml.XamlType" />-Klasse in der Liste zuweisbarer Typen enthält.</summary>
        <returns><see langword="true" />, wenn <paramref name="xamlType" /> in der Liste der zuweisbaren Typen enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auch wenn der Typ zugewiesen werden nicht alle Funktionen des Verweistyps verfügt, können Sie es für die Zuweisung. Zuweisung können Sie z. B. um Typ übereinstimmt, für die Werte einer Eigenschaft zu machen. Das Konzept der zuweisbaren Typen in XAML ähnelt dem Konzept der Umwandlung in die CLR-Typsystems. Unter einem CLR-Typsystem, beispielsweise jeder Typ weist eine <xref:System.Object> in der Liste zugewiesen werden.  
  
 Wenn eine der beiden <xref:System.Xaml.XamlType> -Instanzen, die verwendet werden, für Vergleich hat <xref:System.Xaml.XamlType.IsUnknown%2A> gleich `true`, hat diese Methode einen besonderen Unbekannten Modus, der zurückgibt `true` Wenn die beiden <xref:System.Xaml.XamlType> -Instanzen äquivalent sind.  
  
 Die Standardimplementierung verwendet die CLR <xref:System.Type> aus <xref:System.Xaml.XamlType.UnderlyingType%2A> für diesen <xref:System.Xaml.XamlType> und die Eingabe <xref:System.Xaml.XamlType>, und ruft <xref:System.Type.IsAssignableFrom%2A>. Überschreiben Sie diese Methode, wenn Sie eine andere Bestimmung der zuweisbaren Typen möchten.  
  
 Übergeben eines Nullschlüssels `xamlType` löst keine Ausnahme aus, und gibt immer `false`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.CanAssignTo%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob die zu böswilligen Zwecken verwenden oder auf andere Weise) die zuweisungsprüfung eines XAML-Typs zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit dem Typumwandlung Verhalten auf, von dem zugrunde liegenden CLR-Typ entspricht. Verwenden Sie für alle als sicherheitskritisch Überprüfungen von Zuweisungsvorgängen und Zugriff auf stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Argumente (generische Einschränkungen für <see langword="x:TypeArguments" />, Initialisierungstext oder andere XAML-Techniken) aufweisen muss, um eine gültige Instanz des Typs zu erstellen.</summary>
        <value><see langword="true" />, wenn die Erstellung einer Instanz einen Argumentwert erfordert, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts ab.</summary>
        <value><see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts. Kann <see langword="null" /> sein, wenn keine Inhaltseigenschaft vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Bindung oder des CLR-Typsystems sichern, kann die XAML-Inhaltseigenschaft für einen Typ angegeben werden, durch Anwenden von <xref:System.Windows.Markup.ContentPropertyAttribute> an die Typdefinition.  
  
 Diese Eigenschaft werden die auf die `[content property]` Informationselement in der Spezifikation [MS-XAML].  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupContentProperty%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupContentProperty%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Typen ab, mit denen Inhalt für eine Inhaltseigenschaft umschlossen wird, wenn es sich nicht um eine strenge Typübereinstimmung handelt, z. B. Zeichenfolgen in einer stark typisierten <see langword="Collection&lt;T&gt;" />.</summary>
        <value>Eine schreibgeschützte Auflistung möglicher Inhaltswrappertypen, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn keine Wrapper um hinsichtlich der typübereinstimmung lockern zu berücksichtigen sind, wird diese Eigenschaft ist `null`.  
  
 Typen, die sich, als ergeben <xref:System.Xaml.XamlType.CanAssignTo%2A> für einen bestimmten Inhaltstyp gelten nicht als mehrere Typen zum Zweck der <xref:System.Xaml.XamlType.ContentWrappers%2A>.  
  
 In der CLR-Bindung für <xref:System.Xaml> und <xref:System.Xaml.XamlType>, der Typ der XAML-Inhalt Wrapper kann angegeben werden, auf einen Typ als eine <xref:System.Windows.Markup.ContentWrapperAttribute>.  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupContentWrappers%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupContentWrappers%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt ab, das für diesen Typ das Konvertierungsverhalten für verzögertes Laden darstellt.</summary>
        <value>Der <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> mit <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung, der für diesen Typ das Verhalten für verzögertes Laden darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML-Template-Verhalten in WPF ist ein Beispiel für Verhalten für verzögertes Laden.  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt, das mit diesem Objekt verglichen werden soll.</param>
        <summary>Gibt an, ob das aktuelle Objekt einem anderen Objekt entspricht.</summary>
        <returns><see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="obj" />-Parameter ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">Ein Objekt, das mit diesem Objekt verglichen werden soll.</param>
        <summary>Gibt an, ob das aktuelle Objekt gleich einem anderen Objekt des gleichen Typs ist.</summary>
        <returns><see langword="true" />, wenn das aktuelle Objekt gleich dem <paramref name="other" />-Parameter ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Die Direktive, für die der mit einem Alias versehene Member gesucht werden soll.</param>
        <summary>Gibt den XAML-Member zurück, der durch die <see cref="T:System.Xaml.XamlType" />-Klasse mit einem Alias für die XAML-Direktive versehen ist.</summary>
        <returns>Der mit einem Alias versehene Member, sofern gefunden, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Methode können Aufrufen <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> Außerkraftsetzungen auf <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung zurück, die alle anfügbaren Eigenschaften enthält, die von dieser <see cref="T:System.Xaml.XamlType" />-Klasse verfügbar gemacht werden.</summary>
        <returns>Eine Auflistung, die null oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede <xref:System.Xaml.XamlMember> in der zurückgegebenen Auflistung sollte enthalten Werte, die das Konzept zu unterstützen, die die <xref:System.Xaml.XamlMember> ein anfügbarer Member ist. Beispielsweise Mitglieder zurückgeben sollte `true` für <xref:System.Xaml.XamlMember.IsAttachable%2A>, einen Typ für <xref:System.Xaml.XamlMember.TargetType%2A>und so weiter.  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Methode können Aufrufen <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> Außerkraftsetzungen auf <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung zurück, die alle Member enthält, die von dieser <see cref="T:System.Xaml.XamlType" />-Klasse verfügbar gemacht wurden.</summary>
        <returns>Eine Auflistung, die null oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufe dieser Methode können Aufrufen <xref:System.Xaml.XamlType.LookupAllMembers%2A> auf überschreibt <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des abzurufenden, anfügbaren Members in der Form <c>ownerTypeName.MemberName</c>.</param>
        <summary>Gibt einen <see cref="T:System.Xaml.XamlMember" /> zurück, der einen bestimmten benannten Member von diesem <see cref="T:System.Xaml.XamlType" /> darstellt, der anfügbar ist.</summary>
        <returns>Ein <see cref="T:System.Xaml.XamlMember" />-Objekt für den angeforderten anfügbaren Member; andernfalls <see langword="null" />, wenn kein anfügbarer Member dieses Namens existiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufe dieser Methode können Aufrufen <xref:System.Xaml.XamlType.LookupAttachableMember%2A> auf überschreibt <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob für böswillige Zwecke oder anderweitig), die gemeldete Elemente eines XAML-Typs zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit Ausrichten der <xref:System.ComponentModel.TypeDescriptor> `Get*` Informationen zu den zugrunde liegenden CLR-Typ. Verwenden Sie für die als sicherheitskritisch Überprüfungen des Members, berichterstellung stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für dieses Objekt zurück.</summary>
        <returns>Ein ganzzahliger Hashcode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des abzurufenden Members (als Zeichenfolge).</param>
        <summary>Gibt einen <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
        <returns>Die <see cref="T:System.Xaml.XamlMember" />-Informationen für den Member, wenn ein derartiger Member gefunden wurde, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert für `name` unqualifiziert sein soll. Typ qualifizierte Namen, die angeben, ein angefügtes Member geschäftsfallstudie einzureichen <xref:System.Xaml.XamlType.GetAttachableMember%2A> stattdessen. Mit dem Präfix Member, auf den Namen nicht verwendet werden soll; ein Präfix für eine Verwendung situationsbedingt ist und das XAML-Typsystem nicht wissen, den Kontext, der eine solche Nutzung und wie das Präfix zugeordnet ist.  
  
 Aufrufe dieser Methode können Aufrufen <xref:System.Xaml.XamlType.LookupMember%2A> auf überschreibt <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob für böswillige Zwecke oder anderweitig), die gemeldete Elemente eines XAML-Typs zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit Ausrichten der <xref:System.ComponentModel.TypeDescriptor> `Get*` Informationen zu den zugrunde liegenden CLR-Typ. Verwenden Sie für die als sicherheitskritisch Überprüfungen des Members, berichterstellung stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Die Anzahl (Stelligkeit) des bestimmten Syntax- oder Konstruktormodus, zu dem Sie Informationen anzeigen möchten.</param>
        <summary>Für Markuperweiterungstypen werden die Typen der Positionsparameter zurückgegeben, die bei einer bestimmten Verwendung der Markuperweiterung für diesen <see cref="T:System.Xaml.XamlType" /> unterstützt werden.</summary>
        <returns>Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, wobei jeder <see cref="T:System.Xaml.XamlType" /> der Typ für diese Position in der Syntax ist. Beim Angeben von Markupeingaben für die Markuperweiterung müssen die Typen in der gleichen Reihenfolge angegeben werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese API ist nur relevant, wenn dieser <xref:System.Xaml.XamlType> -Objekt eine Markuperweiterung darstellt (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> ist `true`).  
  
 Die Eingabe `parameterCount` ist nicht für den Typ eines bestimmten mit Feldern fester Breite Parameters anfordern. Es ist für die Angabe der arität des eine Markuperweiterungsverwendung. Verwendung der Markuperweiterung häufig verfügt über mehrere "Signaturen", und verwendet verschiedene Parameter Stelligkeit (Anzahl) von Positionsparametern, um zu unterscheiden. Allerdings können Sie einen Schemakontext, um doppelte Stelligkeiten zuzulassen und Typen der Positionsparameter für Differenzierung konfigurieren. Weitere Informationen finden Sie unter <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. Für eine bestimmte Stelligkeit (Anzahl) können die Parameterpositionen und Typen variieren. Um den mit Feldern fester Breite Typ einer bestimmten Stelligkeit Markuperweiterungsverwendung zu erhalten, rufen Sie zuerst <xref:System.Xaml.XamlType.GetPositionalParameters%2A> , die die Anzahl der arität angibt. Rufen Sie anschließend das Element an dieser Position aus der zurückgegebenen Auflistung ein.  
  
 Aufrufe dieser Methode können Aufrufen <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> auf überschreibt <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Liste von Zeichenfolgenbezeichnern für XAML-Namespaces zurück, in denen der Typ enthalten ist.</summary>
        <returns>Eine Liste von Zeichenfolgenwerten, in der jede Zeichenfolge der URI-Bezeichner für einen XAML-Namespace ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typische XAML-Namespacebezeichner sind Zeichenfolgen im URI-Format.  
  
 Die standardmäßige Implementierung überprüft nacheinander die folgenden: der XAML-Namespace, der zur Erstellung bereitgestellt wird (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> Signatur nur); und die Namespaces, die von der Schemakontext verfügbar sind. Wenn diese jede `null`, eine neue Liste generiert, die eine einzelne leere Zeichenfolge enthält. Sie können diese Methode, um die Lookup-Methodik zu ändern, überschreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung ab, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt zugeordnet ist.</summary>
        <value>Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Implementierung, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, wird beim Aufruf <xref:System.Xaml.XamlType.Invoker%2A> können entweder Aufrufen <xref:System.Xaml.XamlType.LookupInvoker%2A> oder eine bestimmte Außerkraftsetzung der Methode. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupInvoker%2A> für diesen Typ.  
  
 Wenn eine <xref:System.Xaml.XamlType.LookupInvoker%2A> außer Kraft setzen gibt `null`, oder wenn die Standardimplementierung gibt `null` aufgrund mangelnder <xref:System.Xaml.XamlType.UnderlyingType%2A> für diesen <xref:System.Xaml.XamlType>, klicken Sie dann <xref:System.Xaml.XamlType.Invoker%2A> gibt <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp gemäß XAML-Definition darstellt.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsAmbient%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupIsAmbient%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Array darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Array darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupCollectionKind%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupCollectionKind%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Auflistung darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Auflistung darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupCollectionKind%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupCollectionKind%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ gemäß XAML-Definition darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft werden die auf die `[is default constructible]` Informationselement in der Spezifikation [MS-XAML].  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsConstructible%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupIsConstructible%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch gemäß XAML-Definition darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft werden die auf die `[is dictionary]` Informationselement in der Spezifikation [MS-XAML].  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupCollectionKind%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupCollectionKind%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen generischen Typ darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen generischen Typ darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist eine Helper-Eigenschaft, die prüft, ob ein null-Wert des <xref:System.Xaml.XamlType.TypeArguments%2A>. Es gibt keine spezielle `Lookup` Methode im Zusammenhang mit <xref:System.Xaml.XamlType.IsGeneric%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezüglich XAML-Spezifikation ist dieser Typ zugewiesen werden muss `x:MarkupExtension` um zurückzugeben `true` für <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope gemäß XAML-Definition darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein XAML-Namescope erzwingt die Eindeutigkeit der Namen der Eigenschaft oder Eigenschaften für die `x:Name`  /  `[name property]`. Wenn <xref:System.Xaml.XamlType.IsNameScope%2A> ist `true`, ein Mechanismus zum Erzwingen der Eindeutigkeit muss vorhanden sein und auswerten, die aus der Perspektive dieses Typs, die einen XAML-Namescope besitzt. Der XAML-Namescope wird dann auf den Inhalt des Typs erweitert, bis eine andere XAML-Namescope besitzenden Typs gefunden wird.  
  
 Diese Eigenschaft werden die auf die `[is name scope]` Informationselement in der Spezifikation [MS-XAML].  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsNameScope%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge als <see cref="P:System.Xaml.XamlType.Name" />-Eigenschaft initialisiert wird.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einer gültigen <see langword="xamlName" />-Zeichenfolge initialisiert wird, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ gemäß XAML-Definition darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft werden die auf die `[is nullable]` Informationselement in der Spezifikation [MS-XAML].  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsNullable%2A> Außerkraftsetzungen auf <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ im relevanten Typsystem darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsPublic%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob die zu böswilligen Zwecken verwenden oder auf andere Weise) um die gemeldeten Informationen über einen XAML-Typ zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit den Typinformationen System- und den Zugriff von dem zugrunde liegenden CLR-Typ entspricht. Verwenden Sie für alle als sicherheitskritisch Überprüfungen von Zuweisungsvorgängen und Zugriff auf stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der nicht im zugrunde liegenden Typsystem aufgelöst werden kann.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen nicht auflösbaren Typ darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsUnknown%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen.  
  
 Für einen Ladepfad, bei der <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlType> , bei dem `true` für <xref:System.Xaml.XamlType.IsUnknown%2A> kann nicht in ein Objektdiagramm geschrieben werden. Unter den standardimplementierungen in <xref:System.Xaml> , wird die <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> aufrufen, löst eine <xref:System.Xaml.XamlObjectWriterException> beim entsprechenden <xref:System.Xaml.XamlType> Berichte `true` für <xref:System.Xaml.XamlType.IsUnknown%2A>. Sollten Sie nicht übergeben eine <xref:System.Xaml.XamlType> , bei dem <xref:System.Xaml.XamlType.IsUnknown%2A> als `true` , wenn Sie auf die Behandlung von Ausnahmen von vorbereitet sind <xref:System.Xaml.XamlObjectWriter>, oder Sie über andere Möglichkeiten zum Anpassen der <xref:System.Xaml.XamlObjectWriter> Verhalten oder der XAML-Knotenstream vor dem Schreiben des Objekts Diagramm.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von oben nach unten ist eine Metapher, die XAML-Prozessor-Verhalten entspricht, bei der Erstellung des Objektdiagramms. Wenn von oben nach unten erstellt wird, ein Typ instanziiert wird, an das übergeordnete Element angefügt, und klicken Sie dann seine Eigenschaften festgelegt. Top-Down-Konstruktion wird vermieden, durch geänderte Eigenschaften ausgelöste Handler mehrmals aufgerufen werden. Diese Behandlung des Objektdiagramms stört und aus diesem Grund, sich wegen der mehrere Handler und bietet eine leistungsoptimierung für den Start des Objektdiagramms.  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung gemäß der XML-Definition darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt XML-<see langword="XDATA" /> gemäß XAML-Definition darstellt.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt <see langword="XDATA" /> darstellt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft werden die auf die `[is xdata]` Informationselement in der Spezifikation [MS-XAML].  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsXData%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupIsXData%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Typinformationen für die <see langword="Items" />-Eigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält.</summary>
        <value>Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ der Elemente in der Auflistung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt keine Auflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nur relevant, wenn dieser <xref:System.Xaml.XamlType> stellt eine Auflistung (<xref:System.Xaml.XamlType.IsCollection%2A> ist `true`). Die `Items` -Eigenschaft ist die Eigenschaft, die Elemente in dieser Art von Auflistung oder ein Array enthält.  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupItemType%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupItemType%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Typinformationen für die Schlüsseleigenschaft von diesem <see cref="T:System.Xaml.XamlType" />-Objekt enthält, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt.</summary>
        <value>Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ des Schlüssels für die Wörterbuchverwendung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein Wörterbuch darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nur relevant, wenn dieser <xref:System.Xaml.XamlType> stellt ein Wörterbuch dar (<xref:System.Xaml.XamlType.IsDictionary%2A> ist `true`).  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupKeyType%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupKeyType%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Die Direktive, für die der mit einem Alias versehene Member gesucht werden soll.</param>
        <summary>Gibt den XAML-Member zurück, der durch die <see cref="T:System.Xaml.XamlType" />-Klasse mit einem Alias für die XAML-Direktive versehen ist.</summary>
        <returns>Der mit einem Alias versehene Member, sofern gefunden, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.  
  
 Die standardmäßige Implementierung kann die Ergebnisse für die folgenden XAML-Direktiven: `Key`; `Name`; `Uid`; und `xml:lang`. Werte für diese zugrunde liegenden Reflektion abhängig und können immer noch zurückgeben `null` , wenn keine Eigenschaft mit einem Alias versehen gefunden wird.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder die Schemainformationen eines Typs verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen aufzählbaren Satz zurück, der alle anfügbaren, von diesem <see cref="T:System.Xaml.XamlType" /> verfügbar gemachten Eigenschaften enthält.</summary>
        <returns>Ein aufzählbarer Satz, der 0 (null) oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.  
  
 Obwohl <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> eine generische Auflistung gibt dies `Lookup` Methode gibt einen generischen aufzählbaren Satz zurück.  
  
 Die Standardimplementierung verwendet die interne CLR-Reflektion. Wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> ist `null`, können Sie die standardmäßige Implementierung <xref:System.Xaml.XamlType.BaseType%2A>, sofern diese verfügbar ist. Dieses Verhalten ruft <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> rekursiv versucht, einen gültigen Basistyp und gibt finden `null` Wenn kein gültiger Basistyp vorhanden ist.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden. Eine null zurückgeben sollten nur verwendet werden, in denen Informationen aufgrund mangelnder typunterstützung System- oder Reflektion nicht bestimmt werden kann. Wenn ein Typ ungültig ist und Reflektion oder andere Techniken zur Verfügung stehen, aber ein Typ verfügt nicht über die anfügbare Member, sollten Sie stattdessen ein leeres zurückgeben <xref:System.Collections.Generic.IEnumerable%601> festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen aufzählbaren Satz zurück, der alle Member enthält, die von diesem <see cref="T:System.Xaml.XamlType" /> verfügbar gemacht werden.</summary>
        <returns>Ein aufzählbarer Satz, der 0 (null) oder mehr <see cref="T:System.Xaml.XamlMember" />-Werte enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.GetAllMembers%2A>.  
  
 Obwohl <xref:System.Xaml.XamlType.GetAllMembers%2A> eine generische Auflistung gibt dies `Lookup` Methode gibt einen generischen aufzählbaren Satz zurück.  
  
 Die Standardimplementierung verwendet die interne CLR-Reflektion. Für Fälle, in denen <xref:System.Xaml.XamlType.UnderlyingType%2A> ist `null`, können Sie die standardmäßige Implementierung <xref:System.Xaml.XamlType.BaseType%2A>, sofern diese verfügbar ist. Dieses Verhalten ruft <xref:System.Xaml.XamlType.LookupAllMembers%2A> rekursiv versucht, einen gültigen Basistyp, und gibt finden `null` Wenn kein gültiger Basistyp vorhanden ist.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden. Eine null zurückgeben sollten nur verwendet werden, in denen Informationen aufgrund mangelnder typunterstützung System- oder Reflektion nicht bestimmt werden kann. Wenn ein Typ gültig ist, sind die Reflektion oder andere Techniken verfügbar. Wenn ein Typ keine Member besitzt, sollten Sie stattdessen ein leeres zurückgeben <xref:System.Collections.Generic.IEnumerable%601> festgelegt.  
  
 Rückgabewerte für <xref:System.Xaml.XamlType.LookupAllMembers%2A> und <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> sollten sich gegenseitig ausschließende sein. Wenn Sie eine Situation haben, in denen eine Sicherung System Typeigenschaft eine Verwendung der standard-Instanz als auch für eine anfügbare Verwendung unterstützen kann, sollten diesen Member als zwei verschiedene gemeldet werden <xref:System.Xaml.XamlMember> Werte mit einem Wert in der der anfügbaren Liste und eine andere in der Liste der Standard-Member.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Liste der Typen zurück, die als <see cref="P:System.Xaml.XamlType.ContentProperty" />-Wert für dieses <see cref="T:System.Xaml.XamlType" />-Objekt verwendbar sind.</summary>
        <returns>Eine Liste möglicher Inhaltstypen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Typen, die sich, als ergeben <xref:System.Xaml.XamlType.CanAssignTo%2A> für einen bestimmten Inhaltstyp gelten nicht als mehrere Typen zum Zweck der <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Die standardmäßige Implementierung können andere Eigenschaften des <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, oder <xref:System.Xaml.XamlType.ItemType%2A>) um ein Ergebnis zu erhalten. Die `Lookup` Außerkraftsetzungen für die vorherigen Liste ebenfalls in diese Entscheidung aufgerufen werden kann.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des abzurufenden, anfügbaren Members in der Form <c>ownerTypeName.MemberName</c>.</param>
        <summary>Gibt einen <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten anfügbaren Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
        <returns>Ein <see cref="T:System.Xaml.XamlMember" />-Objekt für den angeforderten anfügbaren Member; andernfalls <see langword="null" />, wenn kein anfügbarer Member dieses Namens existiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.GetAttachableMember%2A>.  
  
 Die Standardimplementierung verwendet die interne CLR-Reflektion. Wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> ist `null`, können Sie die standardmäßige Implementierung <xref:System.Xaml.XamlType.BaseType%2A>, sofern diese verfügbar ist. Dieses Verhalten ruft <xref:System.Xaml.XamlType.LookupAttachableMember%2A> rekursiv versucht, einen gültigen Basistyp und gibt finden `null` Wenn kein gültiger Basistyp vorhanden ist.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob für böswillige Zwecke oder anderweitig), die gemeldete Elemente eines XAML-Typs zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit Ausrichten der <xref:System.ComponentModel.TypeDescriptor> `Get*` Informationen zu den zugrunde liegenden CLR-Typ. Verwenden Sie für die als sicherheitskritisch Überprüfungen des Members, berichterstellung stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs zurück. Die Ermittlung dieses Werts basiert auf dem zugrunde liegenden Typ des <see cref="T:System.Xaml.XamlType" />-Objekts und des Schemakontexts.</summary>
        <returns>Das <see cref="T:System.Xaml.XamlType" />-Objekt für den unmittelbaren Basistyp dieses XAML-Typs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.BaseType%2A>.  
  
 Die standardmäßige Implementierung kann eine internen Konstante zurückgeben der <xref:System.Object> Wenn <xref:System.Xaml.XamlType.UnderlyingType%2A> ist `null`.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob die zu böswilligen Zwecken verwenden oder auf andere Weise) der gemeldeten Informationen über einen XAML-Typ zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit den Typinformationen System, von dem zugrunde liegenden CLR-Typ entspricht. Verwenden Sie für alle als sicherheitskritisch Überprüfungen von Zuweisungsvorgängen und Zugriff auf stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert der <see cref="T:System.Xaml.Schema.XamlCollectionKind" />-Enumeration zurück, durch den deklariert wird, welcher bestimmte Auflistungstyp von diesem <see cref="T:System.Xaml.XamlType" />-Objekt verwendet wird.</summary>
        <returns>Ein Wert der <see cref="T:System.Xaml.Schema.XamlCollectionKind" />-Enumeration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem eine private interne Methode (keine öffentliche `CollectionKind` oder `GetCollectionKind` API vorhanden ist, auf <xref:System.Xaml.XamlType>).  
  
 Die Standardimplementierung verwendet die interne CLR-Reflektion. Für Fälle, in denen <xref:System.Xaml.XamlType.UnderlyingType%2A> ist `null`, können Sie die standardmäßige Implementierung <xref:System.Xaml.XamlType.BaseType%2A>, sofern diese verfügbar ist. Dieses Verhalten ruft indirekt <xref:System.Xaml.XamlType.LookupCollectionKind%2A> rekursiv versucht, einen gültige Basistyp finden gibt <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> Wenn kein gültiger Basistyp vorhanden ist. Im Allgemeinen versucht die standardmäßige Implementierung finden Sie die `Add` -Methode des zugrunde liegenden Typs durch Reflektion. Wenn gefunden, die <xref:System.Reflection.MethodInfo> von der `Add` Methode sind genügend Informationen zum Ermitteln, welche <xref:System.Xaml.Schema.XamlCollectionKind> Wert zurückgegeben werden sollen. Andernfalls wird <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> zurückgegeben.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Argumente (generische Einschränkungen für <see langword="x:TypeArguments" />, Initialisierungstext oder andere XAML-Techniken) aufweisen muss, um eine gültige Instanz des Typs zu erstellen.</summary>
        <returns><see langword="true" />, wenn die Erstellung einer Instanz einen Argumentwert erfordert, andernfalls false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.  
  
 Die Standardimplementierung gibt `false` für Typen, die als Werttypen in der CLR-Typsystem. Für andere als Werttypen, CLR-Reflektion <xref:System.Reflection.ConstructorInfo> wird verwendet, um zu bestimmen, ob ein Standardkonstruktor vorhanden ist.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt <see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts zurück.</summary>
        <returns><see cref="T:System.Xaml.XamlMember" />-Informationen für die Inhaltseigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts. Kann <see langword="null" /> sein.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.ContentProperty%2A>.  
  
 Die standardmäßige Implementierung überprüft <xref:System.Windows.Markup.ContentPropertyAttribute> der Typdefinition. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Die Standardimplementierung gibt zurück, wenn diese Überprüfungen einen Inhaltstyp nicht ermittelt werden, `null`.  
  
 Überschreiben Sie diese Methode, wenn Sie nicht auf interne Standard-CLR-Reflektion verlassen und Metadaten oder andere Techniken für die berichterstellung, die XAML-Typsysteminformationen oder Schemainformationen eines Typs verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten ab, die die Inhaltswrapper für dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellen.</summary>
        <returns>Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, die die Inhaltswrapper für dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inhaltswrapper ist eine Klasse, die den Typ der Content-Auflistung darstellt, wenn die Typen, die in dieser Sammlung verwendet werden, nicht zusammenhängende zum Typsystem sind. Die Typen der Auflistungselemente für den Inhalt Wrapper auf irgendeine Weise über eingeschränkt werden sollen <xref:System.Object> oder eine neutrale Objekt entspricht. Diese Einschränkung wird jedoch nur erzwungen, durch den Entwurf oder den Zweck der Eigenschaften, die diesen Typ zu verwenden und nicht vom Typsystem. Mehr als eine Content-Wrapper kann für einen Typ vorhanden sein.  
  
 Eine Beispielklasse und jedes Szenario aus der WPF XAML-Implementierung finden Sie unter <xref:System.Windows.Documents.InlineCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt bei der Implementierung in einer abgeleiteten Klasse eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung zurück.</summary>
        <returns>Eine <see cref="T:System.Reflection.ICustomAttributeProvider" />-Implementierung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie diese Methode zum Bereitstellen der internen Reflektions eine alternative Möglichkeit zum Abrufen von CLR-Attributwerte. Bei einem Nichtvorhandensein einer Außerkraftsetzung verwendet die internen Reflector typische CLR-Reflektion-Logik.  
  
 Die Standardimplementierung gibt `null` zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt zurück, das für verzögertes Laden von in XAML deklarierten Objekten verwendet wird.</summary>
        <returns>Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, der eine <see cref="T:System.Xaml.XamlDeferringLoader" />-Einschränkung für den generischen Typ besitzt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, wenn ein Aufrufer einen Wert aus erhält <xref:System.Xaml.XamlType.DeferringLoader%2A>. Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.DeferringLoader%2A> auf einen anderen Wert zurück, als durch die interne Reflektion standardmäßig aktiviert ist und auch die benutzerdefinierten <xref:System.Xaml.Schema.XamlTypeInvoker> Informationen.  
  
 Die Standardimplementierung gibt ein Objekt auf der Grundlage lesen <xref:System.Windows.Markup.XamlDeferLoadAttribute>. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Wenn ein Wert nicht verfügbar ist, gibt diese Methode `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> zurück, der diesem <see cref="T:System.Xaml.XamlType" /> zugeordnet ist.</summary>
        <returns>Die <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Informationen für diesen <see cref="T:System.Xaml.XamlType" />, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.Invoker%2A>.  
  
 Die Standardimplementierung ist nicht erforderlich, eine <xref:System.Xaml.XamlType> erstellt werden, mithilfe einer der Konstruktoren verwenden, die einen anfänglichen übergeben <xref:System.Xaml.Schema.XamlTypeInvoker>. Allerdings eine <xref:System.Xaml.XamlType.UnderlyingType%2A> Wert muss vorhanden sein, für die <xref:System.Xaml.XamlType>ist, andernfalls gibt die standardmäßige Implementierung `null`.  
  
 Diese Methode überschreiben, wenn Sie sich auch um eine abgeleitete Klasse von erstellen <xref:System.Xaml.Schema.XamlTypeInvoker> und die abgeleitete Klasse zurückgeben möchten. Wenn Sie zurückkehren `null`, <xref:System.Xaml.XamlType.Invoker%2A> gibt <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> Aufrufern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen Umgebungstyp gemäß XAML-Definition darstellt.</summary>
        <returns><see langword="true" />, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt einen Umgebungstyp darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
 Die Standardimplementierung verwendet die CLR-Reflektion auf die <xref:System.Xaml.XamlType.UnderlyingType%2A> und sehen die Basistypen. Diese Implementierung überprüft die <xref:System.Windows.Markup.AmbientAttribute> , die auf den relevanten Typ Definition auf Klassenebene angewendet wird, und gibt `true` in diesem Fall. Zurückgeben von allen anderen Fällen `false`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsAmbient%2A> auf einen anderen Wert zurück, als durch die interne Reflektion standardmäßig aktiviert ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen erstellbaren Typ gemäß XAML-Definition darstellt.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen erstellbaren Typ darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsConstructible%2A>.  
  
 Die Standardimplementierung verwendet die CLR-Reflektion auf die <xref:System.Xaml.XamlType.UnderlyingType%2A>. Der Typ muss es sich um konkrete, unverschachtelt und geschlossen sein. Die standardmäßige Implementierung überprüft, ob der Typ ein Werttyp und der Rückgabetyp der <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>. NULL <xref:System.Xaml.XamlType.UnderlyingType%2A>, gibt diese Methode `true`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsConstructible%2A> auf einen anderen Wert zurück, als durch die interne Reflektion standardmäßig aktiviert ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine Markuperweiterung darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 Die standardmäßige Implementierung besteht nur aus dieser Aufruf:  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsMarkupExtension%2A> eine unterschiedliche Logik verwenden.  
  
 Bezüglich XAML-Spezifikation ist dieser Typ zugewiesen werden muss `x:MarkupExtension` um zurückzugeben `true` für <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen XAML-Namescope gemäß XAML-Definition darstellt.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen XAML-Namescope darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsNameScope%2A>.  
  
 Die Standardimplementierung stellt eine <xref:System.Xaml.XamlType.CanAssignTo%2A> indirekt aufrufen, mit dem Typ <xref:System.Windows.Markup.INameScope>. <xref:System.Windows.Markup.INameScope> ist eine Schnittstelle, die in der Assembly "WindowsBase.dll" definiert ist. Dieses Verfahren für die Identifikation der XAML-Namescope wird verwendet, sowohl von WPF und Windows Workflow Foundation-Implementierungen von XAML.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsNameScope%2A> eine unterschiedliche Logik verwenden.  
  
 Ein XAML-Namescope erzwingt die Eindeutigkeit der Namen der Eigenschaft oder Eigenschaften, die verwendet werden, für die `x:Name`  /  `[name property]`. Wenn <xref:System.Xaml.XamlType.IsNameScope%2A> ist `true`, und klicken Sie dann ein Mechanismus zum Erzwingen der Eindeutigkeit vorhanden sein muss und auswerten, die aus der Perspektive dieses Typs, die einen XAML-Namescope besitzt. Der XAML-Namescope wird dann auf den Inhalt des Typs erweitert, bis eine andere XAML-Namescope besitzenden Typs gefunden wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieser <see cref="T:System.Xaml.XamlType" /> einen Nullable-Typ gemäß XAML-Definition darstellt.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Nullable-Typ darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsNullable%2A>.  
  
 Die Standardimplementierung stellt eine Entscheidung treffen, die basierend auf der CLR-Bibliothek auf NULL festlegbare Kernkonzept, anwendungsvorgangs <xref:System.Xaml.XamlType.UnderlyingType%2A>. NULL <xref:System.Xaml.XamlType.UnderlyingType%2A>, gibt `true`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsNullable%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ im relevanten Typsystem darstellt.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen öffentlichen Typ darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsPublic%2A>.  
  
 Die Standardimplementierung verwendet die CLR-Reflektion ein Wert ungleich Null <xref:System.Xaml.XamlType.UnderlyingType%2A>. NULL <xref:System.Xaml.XamlType.UnderlyingType%2A>, gibt `true`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsPublic%2A> eine unterschiedliche Logik verwenden.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob die zu böswilligen Zwecken verwenden oder auf andere Weise) um die gemeldeten Informationen über einen XAML-Typ zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit den Typinformationen System- oder Zugriff von dem zugrunde liegenden CLR-Typ entspricht. Verwenden Sie für alle als sicherheitskritisch Überprüfungen von Zuweisungsvorgängen und Zugriff auf stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der nicht im zugrunde liegenden Typsystem aufgelöst werden kann.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen nicht auflösbaren Typ darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsUnknown%2A>.  
  
 Die standardmäßige Implementierung kann CLR-Reflektion verwenden. NULL <xref:System.Xaml.XamlType.UnderlyingType%2A>, gibt `true`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsUnknown%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung gemäß der XML-Definition darstellt.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt eine leerraumsignifikante Auflistung darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.  
  
 Die Standardimplementierung gibt einen Wert basierend darauf lesen zurück <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>. Sie können auch überprüfen, die <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Wenn ein Wert nicht verfügbar ist, gibt es `false`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt XML-<see langword="XDATA" /> gemäß XAML-Definition darstellt.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt <see langword="XDATA" /> darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsXData%2A>.  
  
 Die Standardimplementierung stellt eine <xref:System.Xaml.XamlType.CanAssignTo%2A> indirekt aufrufen, mit dem Typ <xref:System.Xml.Serialization.IXmlSerializable>.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsXData%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der die Typinformationen für die <see langword="Items" />-Eigenschaft dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält.</summary>
        <returns>Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ der Elemente in der Auflistung, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt keine Auflistung darstellt</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.ItemType%2A>.  
  
 Die standardmäßige Implementierung können CLR-Reflektion-Konzepten, z. B. für die Überprüfung einer `Add` Methode, indem Sie <xref:System.Reflection.MethodInfo> und Verwenden der <xref:System.Reflection.ParameterInfo>; überprüfen <xref:System.Xaml.XamlType.IsArray%2A>; und die Überprüfung <xref:System.Xaml.XamlType.BaseType%2A> und versuchen Sie es auf die gleiche Logik.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.ItemType%2A> eine unterschiedliche Logik verwenden. Fälle, in denen <xref:System.Xaml.XamlType.LookupCollectionKind%2A> gibt <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> sollte zurückgeben `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der die Typinformationen für die Schlüsseleigenschaft von diesem <see cref="T:System.Xaml.XamlType" />-Objekt enthält, wenn das <see cref="T:System.Xaml.XamlType" />-Objekt ein Wörterbuch darstellt.</summary>
        <returns>Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Typ des Schlüssels für die Wörterbuchverwendung oder <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein Wörterbuch darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.KeyType%2A>.  
  
 Die standardmäßige Implementierung können CLR-Reflektion-Konzepten, z. B. für die Überprüfung einer `Add` Methode, indem Sie <xref:System.Reflection.MethodInfo> und Verwenden der <xref:System.Reflection.ParameterInfo>; und die Überprüfung <xref:System.Xaml.XamlType.BaseType%2A> und versuchen Sie es auf die gleiche Logik.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.KeyType%2A> eine unterschiedliche Logik verwenden. Fälle, in denen <xref:System.Xaml.XamlType.LookupCollectionKind%2A> keinen zurückgibt <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> sollte zurückgeben `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der die Typinformationen für das zurückgegebene <see langword="ProvideValue" />-Objekt dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält, wenn es eine Markuperweiterung darstellt.</summary>
        <returns>Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Rückgabetyp für die Verwendung der Markuperweiterung, andernfalls <see langword="null" />, wenn dieser <see cref="T:System.Xaml.XamlType" /> keine Markuperweiterung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.  
  
 Die Standardimplementierung gibt eine <xref:System.Xaml.XamlType> auf der Grundlage lesen <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Wenn ein Wert nicht verfügbar ist, gibt es `null`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des abzurufenden Members (als Zeichenfolge).</param>
        <param name="skipReadOnlyCheck"><see langword="true" />, um einen Member zurückzugeben, auch wenn dieser Member den Wert <see langword="true" /> für <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> aufweist. <see langword="false" />, wenn kein <see cref="P:System.Xaml.XamlMember.IsReadOnly" />-Member zurückgegeben werden soll. Der Standardwert ist <see langword="false" />.</param>
        <summary>Gibt den <see cref="T:System.Xaml.XamlMember" /> für einen bestimmten benannten Member aus diesem <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
        <returns>Die <see cref="T:System.Xaml.XamlMember" />-Informationen für den Member, wenn ein Member gefunden wurde, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.GetMember%2A>.  
  
 Die Standardimplementierung gibt eine <xref:System.Xaml.XamlType> basierend auf interne CLR-Reflektion und Auswertung anhand der Schemakontext.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.GetMember%2A> eine unterschiedliche Logik verwenden.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> ist virtuell und kann daher überschrieben werden. Die Überschreibung hat das Potenzial (angibt, ob für böswillige Zwecke oder anderweitig), die gemeldete Elemente eines XAML-Typs zu ändern, sodass sie nicht mehr auf eine erwartete Weise mit Ausrichten der <xref:System.ComponentModel.TypeDescriptor> `Get*` Informationen zu den zugrunde liegenden CLR-Typ. Verwenden Sie für die als sicherheitskritisch Überprüfungen des Members, berichterstellung stattdessen den zugrunde liegenden CLR-Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Die Anzahl (Stelligkeit) des bestimmten Syntax- oder Konstruktormodus, zu dem Sie Informationen anzeigen möchten.</param>
        <summary>Für Markuperweiterungstypen werden die Typen der Positionsparameter zurückgegeben, die bei einer bestimmten Verwendung der Markuperweiterung für diesen <see cref="T:System.Xaml.XamlType" /> unterstützt werden.</summary>
        <returns>Eine Liste von <see cref="T:System.Xaml.XamlType" />-Werten, wobei jedes derartige <see cref="T:System.Xaml.XamlType" />-Objekt der Typ für diese Position in der Syntax ist. Beim Angeben von Markupeingaben für die Markuperweiterung müssen diese Typen in der gleichen Reihenfolge angegeben werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.  
  
 Die Standardimplementierung verwendet interne Reflektionsinformationen basierend auf Konstruktoren zu suchen und überprüfen die arität. Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.GetPositionalParameters%2A> eine unterschiedliche Logik verwenden.  
  
 Diese API ist nur relevant, wenn dieser <xref:System.Xaml.XamlType> -Objekt eine Markuperweiterung darstellt (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> ist `true`).  
  
 Die Eingabe `parameterCount` ist nicht für den Typ eines bestimmten mit Feldern fester Breite Parameters anfordern. Es ist für die Angabe der arität des eine Markuperweiterungsverwendung. Verwendung der Markuperweiterung häufig verfügt über mehrere Signaturen und verwendet verschiedene Parameter Stelligkeit (Anzahl) von Positionsparametern, um zu unterscheiden. Allerdings können Sie einen Schemakontext, um doppelte Stelligkeiten zuzulassen und Typen der Positionsparameter für Differenzierung konfigurieren. Weitere Informationen finden Sie unter <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. Für eine bestimmte Stelligkeitsanzahl verwenden können die Parameterpositionen und Typen variieren. Um den mit Feldern fester Breite Typ einer bestimmten Stelligkeit Markuperweiterungsverwendung zu erhalten, rufen Sie zuerst <xref:System.Xaml.XamlType.GetPositionalParameters%2A> mit der Stelligkeitsanzahl. Rufen Sie anschließend das Element an dieser Position aus der zurückgegebenen Auflistung ein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Handlerrückruf zurück, der für set-Vorgänge von Markuperweiterungen verwendet werden soll.</summary>
        <returns>Ein Handlerrückruf, der für set-Vorgänge von Markuperweiterungen verwendet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung gibt einen Wert basierend darauf lesen zurück <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Wenn ein Wert nicht verfügbar ist, gibt es `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Handler zurück, der in Fällen von Typkonverterfestlegung verwendet werden soll.</summary>
        <returns>Ein Handler, der in Fällen von Typkonverterfestlegung verwendet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung gibt einen Wert basierend darauf lesen zurück <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Wenn ein Wert nicht verfügbar ist, gibt es `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einem Modus serialisiert werden soll, in dem umgebender Leerraum abgeschnitten wird.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt mit einem Modus serialisiert werden soll, in dem umgebender Leerraum abgeschnitten wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.  
  
 Die Standardimplementierung gibt einen Wert basierend darauf lesen zurück <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Wenn ein Wert nicht verfügbar ist, gibt es `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit einer <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung zurück, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
        <returns>Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung zurück, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.TypeConverter%2A>.  
  
 Die Standardimplementierung gibt einen Wert basierend darauf lesen zurück <xref:System.ComponentModel.TypeConverterAttribute>. Überprüfen Sie die standardmäßige Implementierung kann auch <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Es enthält auch spezielle Logik für die standardkonvertierung von allgemeinen Werttypen, Enumerationen und Generika. Wenn ein Wert nicht verfügbar ist, gibt es `null`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.TypeConverter%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das <see cref="T:System.Type" />-Objekt der CLR zurück, das diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt.</summary>
        <returns>Das <see cref="T:System.Type" />-Objekt der CLR, das diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.UnderlyingType%2A>.  
  
 Die Standardimplementierung gibt ein internes Feld zurück. Dieses Feld wird in der Regel während der Erstellung initialisiert, und der Wert hängt von der Konstruktor aufgerufen wurde und die Informationen, die Sie angegeben haben.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.UnderlyingType%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird.</summary>
        <returns><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt während der XAML-Initialisierung von oben nach unten erstellt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von oben nach unten ist eine Metapher, die XAML-Prozessor-Verhalten entspricht, wenn es sich um das Objektdiagramm erstellt. Beim Erstellen von oben nach unten, ein Typ instanziiert wird, an das übergeordnete Element angefügt, und seine Eigenschaften festgelegt. Top-Down-Konstruktion wird vermieden, durch geänderte Eigenschaften ausgelöste Handler mehrmals aufgerufen werden. Diese Behandlung des Objektdiagramms stört und aus diesem Grund, sich wegen der mehrere Handler und bietet eine leistungsoptimierung für den Start des Objektdiagramms.  
  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.  
  
 Die Standardimplementierung gibt einen Wert basierend darauf lesen zurück <xref:System.Windows.Markup.UsableDuringInitializationAttribute>. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Wenn ein Wert nicht verfügbar ist, gibt es `false`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit einer <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung zurück, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
        <returns>Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann aufgerufen werden, durch Aufrufe von <xref:System.Xaml.XamlType.ValueSerializer%2A>.  
  
 Die Standardimplementierung gibt einen Wert basierend darauf lesen zurück <xref:System.Windows.Markup.ValueSerializerAttribute>. Sie können auch überprüfen <xref:System.Xaml.XamlType.BaseType%2A> für das Attribut, wenn kein Attribut für den unmittelbaren zugrunde liegenden Typ gefunden wird. Es enthält auch spezielle Logik für die Standardserialisierung Enumerationen, Generika oder allgemeine Typen von Werten. Wenn ein Wert nicht verfügbar ist, gibt es `null`.  
  
 Diese Methode überschreiben, wenn Sie möchten <xref:System.Xaml.XamlType.ValueSerializer%2A> eine unterschiedliche Logik verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Typinformationen für das zurückgegebene <see langword="ProvideValue" />-Objekt dieses <see cref="T:System.Xaml.XamlType" />-Objekts enthält, wenn es eine Markuperweiterung darstellt.</summary>
        <value>Ein <see cref="T:System.Xaml.XamlType" />-Objekt für den Rückgabetyp für die Verwendung der Markuperweiterung, andernfalls <see langword="null" />, wenn dieser <see cref="T:System.Xaml.XamlType" /> keine Markuperweiterung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nur relevant, wenn dieser <xref:System.Xaml.XamlType> -Objekt eine Markuperweiterung darstellt (`x:MarkupExtension` ist in der Liste zuweisbarer Typen).  
  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichenfolgennamen des Typs ab, den dieses <see cref="T:System.Xaml.XamlType" />-Objekt darstellt.</summary>
        <value>Der Zeichenfolgenname dieses XAML-Typs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ruft den Schema erstellten Namen in der Regel ab (pro der <xref:System.Xaml.XamlType.%23ctor%2A> Signatur), oder der Name der <xref:System.Type>, wenn es erstellt wird, wird mit dem entsprechenden Konstruktor von CLR-Typsystem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
        <param name="xamlType2"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
        <summary>Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlType" />-Objekte denselben Wert haben.</summary>
        <returns><see langword="true" />, wenn <paramref name="xamlType1" /> und <paramref name="xamlType2" /> denselben Wert haben, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
        <param name="xamlType2"><see cref="T:System.Xaml.XamlType" /> oder <see langword="null" />.</param>
        <summary>Bestimmt, ob zwei angegebene <see cref="T:System.Xaml.XamlType" />-Objekte verschiedene Werte haben.</summary>
        <returns><see langword="true" />, wenn der Wert von <paramref name="xamlType1" /> vom Wert von <paramref name="xamlType2" /> verschieden ist; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den einzelnen XAML-Namespace ab, der der primäre XAML-Namespace für diesen <see cref="T:System.Xaml.XamlType" /> ist.</summary>
        <value>Der Bezeichner für den primären XAML-Namespace für diesen XAML-Typ als Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung bietet den gleichen Wert wie das Aufrufen <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> und klicken Sie dann die erste Wertzeichenfolge aus der zurückgegebenen aufzählbaren Satz abgerufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das aktive <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt zum Verarbeiten dieses <see cref="T:System.Xaml.XamlType" />-Objekt ab.</summary>
        <value>Das aktive <see cref="T:System.Xaml.XamlSchemaContext" />-Objekt zum Verarbeiten dieses <see cref="T:System.Xaml.XamlType" />-Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlSchemaContext> ist ein erforderlicher Parameter beim Erstellen einer <xref:System.Xaml.XamlType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlType" /> zurück.</summary>
        <returns>Eine Zeichenfolgendarstellung für diese <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xaml.XamlType> Implementierung <xref:System.Object.ToString%2A> gibt die <xref:System.Xaml.XamlType.Name%2A> Eigenschaft der <xref:System.Xaml.XamlType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Xaml.XamlType" />-Objekt Leerraumbehandlungsverhalten für die Serialisierung aufweist, bei dem umgebender Leerraum in seinem Inhalt abgeschnitten wird.</summary>
        <value><see langword="true" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt einen Typ darstellt, der Leerraumeinschränkung verwendet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von Typargumenten für Fälle ab, in denen dieses <see cref="T:System.Xaml.XamlType" />-Objekt ein generisches Objekt darstellt.</summary>
        <value>Eine Liste von Typargumenttypen, andernfalls <see langword="null" />, wenn dieses <see cref="T:System.Xaml.XamlType" />-Objekt kein generisches Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es gibt bestimmte Szenarios für einen <xref:System.Xaml.XamlType> bei Aufrufen der <xref:System.Xaml.XamlType.TypeArguments%2A> Parameter gibt eine Liste zurück, in denen die Typen, die noch geöffnet sind. In diesem Fall ein oder mehrere der zurückgegebenen <xref:System.Xaml.XamlType> -Werte müssen Platzhalterwerte für <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, z. B. `T`, um darzustellen, dass die generische noch geöffnet ist. Dieses Szenario kann auftreten, wenn Sie erhalten eine <xref:System.Xaml.XamlType> von einem Aufruf von <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, anstatt aus einer XAML-readerimplementierung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung ab, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
        <value>Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.ComponentModel.TypeConverter" />-Einschränkung, das das Typkonvertierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupTypeConverter%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupTypeConverter%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Type" />-Objekt der CLR ab, die diesem <see cref="T:System.Xaml.XamlType" />-Objekt unterliegt.</summary>
        <value>Der CLR-<see cref="T:System.Type" />, der diesem <see cref="T:System.Xaml.XamlType" /> zugrunde liegt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung ab, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt.</summary>
        <value>Ein <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />-Objekt mit der <see cref="T:System.Windows.Markup.ValueSerializer" />-Einschränkung, das das Wertserialisierungsverhalten für Werte dieses <see cref="T:System.Xaml.XamlType" />-Objekts darstellt, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht die interne Standard CLR Reflektionsverfahren für verwenden eine <xref:System.Xaml.XamlType>, Aufrufe dieser Eigenschaft können Aufrufen <xref:System.Xaml.XamlType.LookupValueSerializer%2A> auf Außerkraftsetzungen <xref:System.Xaml.XamlType> abgeleiteten Klassen. Weitere Informationen über Rückgabewerte und andere Verhalten, finden Sie unter der Dokumentation für <xref:System.Xaml.XamlType.LookupValueSerializer%2A> für diesen Typ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>